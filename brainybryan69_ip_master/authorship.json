[{"path":"data/lebron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"T|0|new task after corruption","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"E|1|tuition|12pm|2pm","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"D|0|homework|2025-08-25T18:00:00","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false}],"authorContributionMap":{"brainybryan69":3}},{"path":"src/main/java/data/lebron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"D|0|homework|2025-08-25T18:00:00","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"E|0|team meeting|2025-08-25T14:00:00|2025-08-25T16:00:00","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"E|0|multi-day conference|2025-08-24T09:00:00|2025-08-26T17:00:00","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"T|0|test tasklist","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"D|0|test deadline|2025-08-25T18:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"E|0|test event|2025-08-25T14:00:00|2025-08-25T16:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"D|0|test|2025-08-25T18:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"E|0|test|2025-08-25T14:00:00|2025-08-25T16:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"T|0|test refactored code","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"D|0|final test|2025-08-30T21:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"E|0|celebration|2025-08-30T19:00:00|2025-08-30T22:00:00","lastModifiedDate":"2025-08-24T16:04:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"T|0|test packages","lastModifiedDate":"2025-08-24T16:20:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"D|0|final multi-package test|2025-08-31T15:00:00","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"E|0|package party|2025-08-31T18:00:00|2025-08-31T21:00:00","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false}],"authorContributionMap":{"brainybryan69":14}},{"path":"src/main/java/lebron/LeBron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron;","lastModifiedDate":"2025-08-24T16:20:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:20:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * A personal task manager that helps you keep track of your todos, deadlines, and events.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" * You can add tasks, mark them as done, delete them, and list everything you need to do.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":" * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":" * Just type commands like \"todo read book\" or \"deadline submit report /by Friday\"","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":" * and LeBron will help you stay organized!","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"public class LeBron {","lastModifiedDate":"2025-08-17T16:56:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"     * Starts the LeBron task manager.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"     * Creates a TaskManager instance and runs the application.","lastModifiedDate":"2025-08-24T16:02:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"        new TaskManager().run();","lastModifiedDate":"2025-08-24T16:02:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"brainybryan69":19,"-":2}},{"path":"src/main/java/lebron/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron;","lastModifiedDate":"2025-08-24T16:20:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Parser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.Storage;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.command.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" * Main orchestrator for the LeBron task manager application.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":" * Coordinates all components and handles the main program loop.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"public class TaskManager {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new TaskManager with default components.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    public TaskManager() {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Starts the task manager application.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * Loads existing tasks, shows welcome message, and enters main loop.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public void run() {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        loadTasks();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        while (isRunning) {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"            try {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"                ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"                if (input.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"                    ui.showError(\"\");","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"                    continue;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"                ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"                Command command \u003d parseCommand(input);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"                isRunning \u003d command.execute(taskList, ui, storage.getFileManager());","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"                ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"            } catch (LeBronException e) {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"        scanner.close();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     * Loads existing tasks from storage.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"     * Shows error message if loading fails but continues execution.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"    private void loadTasks() {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"            ui.showLoadError();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"     * Parses user input and creates the appropriate command object.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input string","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"     * @return the Command object representing the user\u0027s intent","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the command is invalid or malformed","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"    private Command parseCommand(String input) throws LeBronException {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"        lebron.common.CommandType commandType \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"        switch (commandType) {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"        case BYE:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"        case LIST:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"        case MARK:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"            int markTaskNumber \u003d Parser.parseTaskNumber(input, 5);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"            return new MarkCommand(markTaskNumber);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"        case UNMARK:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"            int unmarkTaskNumber \u003d Parser.parseTaskNumber(input, 7);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"            return new UnmarkCommand(unmarkTaskNumber);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"        case DELETE:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"            int deleteTaskNumber \u003d Parser.parseTaskNumber(input, 7);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"            return new DeleteCommand(deleteTaskNumber);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"        case TODO:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"            String todoDescription \u003d Parser.parseTodoDescription(input);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"            return new AddTodoCommand(todoDescription);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"            String[] deadlineData \u003d Parser.parseDeadlineCommand(input);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"            return new AddDeadlineCommand(deadlineData[0], deadlineData[1]);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"        case EVENT:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"            String[] eventData \u003d Parser.parseEventCommand(input);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"            return new AddEventCommand(eventData[0], eventData[1], eventData[2]);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brainybryan69"},"content":"        case ON:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brainybryan69"},"content":"            String dateString \u003d Parser.parseOnCommand(input);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brainybryan69"},"content":"            return new FindCommand(dateString);","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brainybryan69"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brainybryan69"},"content":"        default:","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false}],"authorContributionMap":{"brainybryan69":113}},{"path":"src/main/java/lebron/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Abstract base class for commands that add tasks to the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Provides common functionality for adding tasks and updating storage.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * Adds a task to the task list and saves to storage.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Template method that calls createTask() to get the specific task type.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to add to","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for showing confirmation","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component for saving","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if task creation or storage fails","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"        Task task \u003d createTask();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"        ui.showTaskAdded(task, taskList.size());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"        saveToStorage(taskList, storage, ui);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     * Creates the specific task type for this add command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     * Implemented by concrete subclasses.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"     * @return the created task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if task creation fails","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"    protected abstract Task createTask() throws LeBronException;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"     * Saves the task list to storage and handles any errors.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to save","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for error messages","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    private void saveToStorage(TaskList taskList, FileManager storage, Ui ui) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"            ui.showSaveError();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":57}},{"path":"src/main/java/lebron/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to add a new deadline task to the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Creates a Deadline task with the specified description and due date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private String description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    private String by;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new add deadline command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param by the deadline date/time string","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new Deadline task with the specified description and due date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @return the created Deadline task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date format is invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    protected Task createTask() throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":38}},{"path":"src/main/java/lebron/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to add a new event task to the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Creates an Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private String description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    private String from;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    private String to;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new add event command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * @param from the start date/time string","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * @param to the end date/time string","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new Event task with the specified description and time range.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * @return the created Event task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date formats are invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"    protected Task createTask() throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":41}},{"path":"src/main/java/lebron/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to add a new todo task to the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Creates a ToDo task with the specified description.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private String description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new add todo command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new ToDo task with the specified description.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @return the created ToDo task","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    protected Task createTask() {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"        return new ToDo(description);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":34}},{"path":"src/main/java/lebron/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Abstract base class for all commands in the LeBron task manager.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Defines the common interface that all command types must implement.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * Executes the command with the given task list, UI, and storage components.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Each concrete command implements its specific logic in this method.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to operate on","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for user interaction","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component for saving/loading","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * @return true if the program should continue running, false to exit","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if there\u0027s an error executing the command","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    public abstract boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * Checks if this command will cause the program to exit.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @return true if this is an exit command, false otherwise","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"        return false;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":35}},{"path":"src/main/java/lebron/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Removes the specified task and saves changes to storage.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private int taskIndex;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new delete command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param taskNumber the task number to delete (1-based)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * Executes the delete command by removing the specified task.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to delete from","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for showing confirmation","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the task number is invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        ui.showTaskDeleted(deletedTask, taskList.size());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"            ui.showSaveError();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":51}},{"path":"src/main/java/lebron/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to exit the LeBron program.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Shows goodbye message and signals the program to terminate.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * Executes the exit command by showing goodbye message.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list (not used for exit)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for displaying goodbye message","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component (not used for exit)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @return false to indicate the program should exit","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"        return false;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * Indicates this command will cause program exit.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @return true since this is an exit command","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":38}},{"path":"src/main/java/lebron/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" * Command to find and display tasks occurring on a specific date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":" * Shows all deadlines and events that match the target date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    private String dateString;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new find command for the specified date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param dateString the date string to search for","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    public FindCommand(String dateString) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * Executes the find command by searching for tasks on the specified date.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to search in","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for displaying results","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component (not used for searching)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date format is invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        LocalDate targetDate \u003d DateTimeParser.parseDate(dateString);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        TaskList matchingTasks \u003d taskList.getTasksOnDate(targetDate);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        ui.showTasksOnDate(matchingTasks, targetDate);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":43}},{"path":"src/main/java/lebron/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to display all tasks in the task list.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Shows numbered list of all tasks with their status and details.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * Executes the list command by displaying all tasks.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to display","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for displaying the tasks","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component (not used for listing)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":28}},{"path":"src/main/java/lebron/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Updates the task\u0027s status and saves changes to storage.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private int taskIndex;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new mark command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param taskNumber the task number to mark (1-based)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * Executes the mark command by marking the specified task as done.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list containing the task to mark","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for showing confirmation","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the task number is invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        taskList.markTask(taskIndex);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        ui.showTaskMarked(task);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"            ui.showSaveError();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":52}},{"path":"src/main/java/lebron/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.command;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.storage.FileManager;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Command to unmark a task (mark as not completed).","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Updates the task\u0027s status and saves changes to storage.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private int taskIndex;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new unmark command.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param taskNumber the task number to unmark (1-based)","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.taskIndex \u003d taskNumber - 1; // Convert to 0-based index","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * Executes the unmark command by marking the specified task as not done.","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list containing the task to unmark","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * @param ui the UI component for showing confirmation","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @param storage the storage component for saving changes","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @return true to continue program execution","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the task number is invalid","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public boolean execute(TaskList taskList, Ui ui, FileManager storage) throws LeBronException {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        taskList.unmarkTask(taskIndex);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        Task task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        ui.showTaskUnmarked(task);","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"            ui.showSaveError();","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"        return true;","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:54:42","isFullCredit":false}],"authorContributionMap":{"brainybryan69":52}},{"path":"src/main/java/lebron/common/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.common;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":" * All the different commands that users can type.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * Helps figure out what the user wants to do based on their input.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"public enum CommandType {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"    /** Exit the program */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"    BYE,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"    /** Show all tasks */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    LIST,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    /** Mark a task as done */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    MARK,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    /** Mark a task as not done */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    UNMARK,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /** Remove a task completely */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    DELETE,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    /** Add a simple todo task */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    TODO,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    /** Add a task with a deadline */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    DEADLINE,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    /** Add a task with start and end times */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    EVENT,","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    /** Show tasks occurring on a specific date */","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ON,","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /** Command we don\u0027t recognize */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    UNKNOWN;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * Figures out what command the user typed.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * Looks at the beginning of their input to determine the command type.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @param input what the user typed","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * @return the type of command they want to run","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            return BYE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"            return LIST;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"            return MARK;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"            return UNMARK;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"            return DELETE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.equals(\"todo\") || input.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"            return TODO;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.equals(\"deadline\") || input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"            return DEADLINE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.equals(\"event\") || input.startsWith(\"event \")) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"            return EVENT;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"        } else if (input.equals(\"on\") || input.startsWith(\"on \")) {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"            return ON;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"        } else {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false}],"authorContributionMap":{"brainybryan69":58}},{"path":"src/main/java/lebron/common/ErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.common;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":" * All the different error messages the app can show.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * Keeps all error text in one place so it\u0027s easy to change.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"public enum ErrorType {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"    /** When user types \"todo\" but forgets to say what to do */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"    EMPTY_TODO(\"The description of a todo cannot be empty.\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"    /** When user types \"deadline\" but forgets to say what to do */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    EMPTY_DEADLINE(\"The description of a deadline cannot be empty.\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    /** When user types \"event\" but forgets to say what to do */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    EMPTY_EVENT(\"The description of an event cannot be empty.\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    /** When user tries to mark/unmark/delete a task that doesn\u0027t exist */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    INVALID_TASK_NUMBER(\"Invalid task number.\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /** When user creates a deadline but forgets the /by part */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    MISSING_DEADLINE_FORMAT(\"Please specify a deadline with /by\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    /** When user creates an event but forgets the /from and /to parts */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    MISSING_EVENT_FORMAT(\"Please specify event time with /from and /to\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    /** When user types something we don\u0027t understand */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    UNKNOWN_COMMAND(\"Sorry! I don\u0027t know what that means :(\");","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    private final String message;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     * Creates an error type with its message.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * @param message what to tell the user when this error happens","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    ErrorType(String message) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * Gets the error message to show the user.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     * @return the helpful error message","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"    public String getMessage() {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        return message;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false}],"authorContributionMap":{"brainybryan69":41}},{"path":"src/main/java/lebron/common/LeBronException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.common;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":" * Something went wrong with the user\u0027s input or a task operation.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * This exception gets thrown when we need to show the user an error message.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"public class LeBronException extends Exception {","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new exception with an error message.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"     * @param message what went wrong (gets shown to the user)","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    public LeBronException(String message) {","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"        super(message);","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false}],"authorContributionMap":{"brainybryan69":16}},{"path":"src/main/java/lebron/common/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.common;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":" * Whether a task has been completed or not.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * Shows up as different checkbox symbols in the task list.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"public enum TaskStatus {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"    /** Task is completed - shows as [X] */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"    DONE(\"[X]\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"    /** Task is not yet completed - shows as [ ] */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    NOT_DONE(\"[ ]\");","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    private final String icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"     * Creates a task status with its checkbox icon.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * @param icon the checkbox symbol to display","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    TaskStatus(String icon) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     * Gets the checkbox icon for this status.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * @return \"[X]\" for done or \"[ ]\" for not done","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    public String getIcon() {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"        return icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false}],"authorContributionMap":{"brainybryan69":31}},{"path":"src/main/java/lebron/common/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.common;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":" * The different types of tasks you can create.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":" * Each type has its own icon for easy identification.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"    /** Simple tasks without any time constraints */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"    TODO(\"[T]\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"    /** Tasks that need to be done by a specific time */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    DEADLINE(\"[D]\"),","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    /** Tasks that happen during a specific time period */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    EVENT(\"[E]\");","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private final String icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a task type with its display icon.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param icon the bracket symbol to show for this type","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    TaskType(String icon) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * Gets the display icon for this task type.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @return the icon like \"[T]\", \"[D]\", or \"[E]\"","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    public String getIcon() {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"        return icon;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false}],"authorContributionMap":{"brainybryan69":33}},{"path":"src/main/java/lebron/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.storage;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.LeBronException;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.io.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"import java.io.*;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":" * Handles saving and loading tasks to/from the hard disk.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":" * Keeps your tasks safe by automatically storing them in a file.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"public class FileManager {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    private static final String DATA_DIR \u003d \"data\";","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    private static final String FILE_NAME \u003d \"lebron.txt\";","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new file manager.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     * Sets up the path to store tasks using OS-independent file separators.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    public FileManager() {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"        this.filePath \u003d DATA_DIR + File.separator + FILE_NAME;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * Saves all tasks to the hard disk.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Creates the data folder if it doesn\u0027t exist.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     * @throws IOException if something goes wrong with file writing","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        // Create data directory if it doesn\u0027t exist","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        File dataDir \u003d new File(DATA_DIR);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"            dataDir.mkdirs();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"                writer.println(taskToString(task));","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"     * Loads all tasks from the hard disk.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"     * Returns an empty list if the file doesn\u0027t exist.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"     * Skips corrupted lines and continues loading valid tasks.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"     * @return the list of saved tasks","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"     * @throws IOException if something goes wrong with file reading","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"        // Return empty list if file doesn\u0027t exist","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"            return tasks;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"        int lineNumber \u003d 0;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"        int corruptedLines \u003d 0;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"            String line;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"                lineNumber++;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"                line \u003d line.trim();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"                ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"                // Skip empty lines","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"                    continue;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"                ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"                Task task \u003d stringToTask(line, lineNumber);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"                } else {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"                    corruptedLines++;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"        // Inform user if some data was corrupted","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"        if (corruptedLines \u003e 0) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: \" + corruptedLines + \" corrupted task(s) were skipped while loading.\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"        return tasks;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"     * Converts a task to a string format for saving.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"     * Format: TYPE|STATUS|DESCRIPTION|EXTRA_INFO","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task to convert","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"     * @return the string representation","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brainybryan69"},"content":"    private String taskToString(Task task) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brainybryan69"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brainybryan69"},"content":"        // Add type","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brainybryan69"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brainybryan69"},"content":"            sb.append(\"T\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brainybryan69"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brainybryan69"},"content":"            sb.append(\"D\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brainybryan69"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brainybryan69"},"content":"            sb.append(\"E\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brainybryan69"},"content":"        sb.append(\"|\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brainybryan69"},"content":"        // Add status","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brainybryan69"},"content":"        sb.append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brainybryan69"},"content":"        sb.append(\"|\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brainybryan69"},"content":"        // Add description","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brainybryan69"},"content":"        sb.append(task.getDescription());","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brainybryan69"},"content":"        // Add extra info for deadlines and events","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brainybryan69"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brainybryan69"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brainybryan69"},"content":"            sb.append(\"|\").append(DateTimeParser.formatForStorage(deadline.getBy()));","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brainybryan69"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brainybryan69"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brainybryan69"},"content":"            sb.append(\"|\").append(DateTimeParser.formatForStorage(event.getFrom())).append(\"|\").append(DateTimeParser.formatForStorage(event.getTo()));","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brainybryan69"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"brainybryan69"},"content":"     * Converts a string back to a task.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"brainybryan69"},"content":"     * Parses the saved format and creates the right type of task.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"brainybryan69"},"content":"     * Provides detailed validation and error reporting for corrupted data.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"brainybryan69"},"content":"     * @param line the string representation of the task","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"brainybryan69"},"content":"     * @param lineNumber the line number in the file (for error reporting)","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"brainybryan69"},"content":"     * @return the recreated task, or null if format is invalid","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"brainybryan69"},"content":"    private Task stringToTask(String line, int lineNumber) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"brainybryan69"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"brainybryan69"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"brainybryan69"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: Line \" + lineNumber + \" has too few fields - expected at least 3, got \" + parts.length);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"brainybryan69"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"brainybryan69"},"content":"        String statusStr \u003d parts[1];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"brainybryan69"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"brainybryan69"},"content":"        // Validate task type","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"brainybryan69"},"content":"        if (!isValidTaskType(type)) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: Line \" + lineNumber + \" has invalid task type \u0027\" + type + \"\u0027 - expected T, D, or E\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"brainybryan69"},"content":"        // Validate status","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"brainybryan69"},"content":"        if (!isValidStatus(statusStr)) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: Line \" + lineNumber + \" has invalid status \u0027\" + statusStr + \"\u0027 - expected 0 or 1\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"brainybryan69"},"content":"        // Validate description","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"brainybryan69"},"content":"        if (description.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: Line \" + lineNumber + \" has empty description\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"brainybryan69"},"content":"        boolean isDone \u003d statusStr.equals(\"1\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"brainybryan69"},"content":"        Task task \u003d null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"brainybryan69"},"content":"            switch (type) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"brainybryan69"},"content":"            case \"T\":","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"brainybryan69"},"content":"                if (parts.length !\u003d 3) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Todo tasks should have exactly 3 fields, got \" + parts.length);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"brainybryan69"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"brainybryan69"},"content":"                break;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"brainybryan69"},"content":"            case \"D\":","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"brainybryan69"},"content":"                if (parts.length !\u003d 4) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Deadline tasks should have exactly 4 fields, got \" + parts.length);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"brainybryan69"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"brainybryan69"},"content":"                if (by.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Deadline has empty \u0027by\u0027 field\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"brainybryan69"},"content":"                try {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"brainybryan69"},"content":"                    LocalDateTime dateTime \u003d DateTimeParser.parseFromStorage(by);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"brainybryan69"},"content":"                    task \u003d new Deadline(description, dateTime);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"brainybryan69"},"content":"                } catch (LeBronException e) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Invalid date format in deadline: \" + e.getMessage());","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"brainybryan69"},"content":"                break;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"brainybryan69"},"content":"            case \"E\":","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"brainybryan69"},"content":"                if (parts.length !\u003d 5) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Event tasks should have exactly 5 fields, got \" + parts.length);","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"brainybryan69"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"brainybryan69"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"brainybryan69"},"content":"                if (from.trim().isEmpty() || to.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Event has empty time fields\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"brainybryan69"},"content":"                try {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"brainybryan69"},"content":"                    LocalDateTime fromDateTime \u003d DateTimeParser.parseFromStorage(from);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"brainybryan69"},"content":"                    LocalDateTime toDateTime \u003d DateTimeParser.parseFromStorage(to);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"brainybryan69"},"content":"                    task \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"brainybryan69"},"content":"                } catch (LeBronException e) {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"brainybryan69"},"content":"                    System.out.println(\"Warning: Line \" + lineNumber + \" - Invalid date format in event: \" + e.getMessage());","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"brainybryan69"},"content":"                    return null;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"brainybryan69"},"content":"                break;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"brainybryan69"},"content":"            ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"brainybryan69"},"content":"            // Set the completion status","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"brainybryan69"},"content":"            if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"brainybryan69"},"content":"                task.markAsDone();","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"brainybryan69"},"content":"            ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"brainybryan69"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Warning: Line \" + lineNumber + \" - Error creating task: \" + e.getMessage());","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"brainybryan69"},"content":"            return null;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"brainybryan69"},"content":"        return task;","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"brainybryan69"},"content":"     * Checks if the task type character is valid.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"brainybryan69"},"content":"     * @param type the type character to validate","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"brainybryan69"},"content":"     * @return true if valid (T, D, or E), false otherwise","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"brainybryan69"},"content":"    private boolean isValidTaskType(String type) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"brainybryan69"},"content":"        return type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"brainybryan69"},"content":"     * Checks if the status string is valid.","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"brainybryan69"},"content":"     * @param status the status string to validate","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"brainybryan69"},"content":"     * @return true if valid (0 or 1), false otherwise","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"brainybryan69"},"content":"    private boolean isValidStatus(String status) {","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"brainybryan69"},"content":"        return status.equals(\"0\") || status.equals(\"1\");","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T10:31:24","isFullCredit":false}],"authorContributionMap":{"brainybryan69":266}},{"path":"src/main/java/lebron/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.storage;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.LeBronException;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.io.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":" * Handles data persistence for the task manager.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":" * Provides a clean interface for saving and loading tasks from storage.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"public class Storage {","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    private FileManager fileManager;","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new Storage instance using the default FileManager.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    public Storage() {","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"        this.fileManager \u003d new FileManager();","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new Storage instance with a custom FileManager.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * @param fileManager the file manager to use for storage operations","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    public Storage(FileManager fileManager) {","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     * Loads tasks from storage.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"     * @return ArrayList of tasks loaded from storage","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"     * @throws IOException if loading fails","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        return fileManager.loadTasks();","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     * Saves tasks to storage.","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"     * @throws IOException if saving fails","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"        fileManager.saveTasks(tasks);","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"     * Gets the underlying FileManager for backward compatibility.","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"     * @return the FileManager instance","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"    public FileManager getFileManager() {","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"        return fileManager;","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:59:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:56:09","isFullCredit":false}],"authorContributionMap":{"brainybryan69":63}},{"path":"src/main/java/lebron/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.task;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskType;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskStatus;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.LeBronException;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * A task that needs to be completed by a specific time or date.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Perfect for assignments, appointments, or anything with a due date.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new deadline task with a date/time string.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param description what needs to be done","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param byString when it needs to be done by (format: yyyy-mm-dd HHmm)","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date format is invalid","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    public Deadline(String description, String byString) throws LeBronException {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"        this.by \u003d DateTimeParser.parseDateTime(byString);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new deadline task with a LocalDateTime.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * Used internally for loading from file storage.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @param description what needs to be done","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * @param by when it needs to be done by","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"     * Gets the full description including the deadline.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"     * Shows when this task needs to be completed in readable format.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"     * @return description with deadline like \"submit report (by: Dec 02 2019 6:00PM)\"","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"    public String getFullDescription() {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        return description + \" (by: \" + DateTimeParser.formatForDisplay(by) + \")\";","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"     * Gets the deadline as LocalDateTime.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"     * Used by FileManager for serialization.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"     * @return the deadline date and time","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"        return by;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false}],"authorContributionMap":{"brainybryan69":60}},{"path":"src/main/java/lebron/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.task;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskType;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskStatus;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.LeBronException;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * A task that happens during a specific time period.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Great for meetings, classes, or any activity with a start and end time.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new event task with date/time strings.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     * @param description what the event is about","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * @param fromString when the event starts (format: yyyy-mm-dd HHmm)","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * @param toString when the event ends (format: yyyy-mm-dd HHmm)","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date formats are invalid","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    public Event(String description, String fromString, String toString) throws LeBronException {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"        this.from \u003d DateTimeParser.parseDateTime(fromString);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        this.to \u003d DateTimeParser.parseDateTime(toString);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new event task with LocalDateTime objects.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * Used internally for loading from file storage.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     * @param description what the event is about","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"     * @param from when the event starts","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"     * @param to when the event ends","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     * Gets the full description including the time period.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"     * Shows when this event starts and ends in readable format.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"     * @return description with timing like \"team meeting (from: Dec 02 2019 2:00PM to: Dec 02 2019 4:00PM)\"","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"    public String getFullDescription() {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"        return description + \" (from: \" + DateTimeParser.formatForDisplay(from) + \" to: \" + DateTimeParser.formatForDisplay(to) + \")\";","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"     * Gets the start time as LocalDateTime.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"     * Used by FileManager for serialization and ON command filtering.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"     * @return the event start date and time","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"        return from;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"     * Gets the end time as LocalDateTime.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"     * Used by FileManager for serialization.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"     * @return the event end date and time","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"        return to;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false}],"authorContributionMap":{"brainybryan69":75}},{"path":"src/main/java/lebron/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.task;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskType;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskStatus;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":" * A task that can be tracked and completed.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":" * This is the parent class for all types of tasks like todos, deadlines, and events.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    protected String description;","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    protected TaskStatus status;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    protected TaskType type;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new task with the given description.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * The task starts as not done.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     * @param description what the task is about","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"     * @param type the kind of task (todo, deadline, or event)","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"        this.status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * Gets what this task is about.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * @return the task description","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"        return description;","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"     * Checks if this task has been completed.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        return status \u003d\u003d TaskStatus.DONE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"        status \u003d TaskStatus.DONE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"     * Marks this task as not completed yet.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"        status \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"     * Gets the icon showing if this task is done or not.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"     * @return \"[X]\" if done, \"[ ]\" if not done","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"        return status.getIcon();","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"     * Gets the icon showing what type of task this is.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"     * @return \"[T]\", \"[D]\", or \"[E]\" depending on task type","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"        return type.getIcon();","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"     * Gets the complete description with any extra details.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"     * Each task type adds its own formatting.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"     * @return the full task description","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"    public abstract String getFullDescription();","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-17T20:50:45","isFullCredit":false}],"authorContributionMap":{"brainybryan69":84}},{"path":"src/main/java/lebron/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.task;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskType;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskStatus;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":" * Manages a collection of tasks with operations like add, delete, mark, and filter.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Encapsulates the task storage and provides clean methods for task management.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"public class TaskList {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new empty task list.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * Creates a task list with existing tasks.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task to add","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"     * @param index the index of the task to remove (0-based)","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"     * @return the removed task","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"     * @throws IndexOutOfBoundsException if index is invalid","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"     * Gets a task at the specified index.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"     * @param index the index of the task (0-based)","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"     * @return the task at the index","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"     * @throws IndexOutOfBoundsException if index is invalid","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     * Marks a task as done.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"     * @param index the index of the task to mark (0-based)","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"     * @throws IndexOutOfBoundsException if index is invalid","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"     * Marks a task as not done.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"     * @param index the index of the task to unmark (0-based)","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"     * @throws IndexOutOfBoundsException if index is invalid","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"        tasks.get(index).markAsNotDone();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"    public int size() {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"     * @return true if there are no tasks, false otherwise","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"     * Gets all tasks in the list.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"     * @return a copy of the task list","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brainybryan69"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brainybryan69"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brainybryan69"},"content":"     * Finds all tasks that occur on a specific date.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brainybryan69"},"content":"     * Includes deadlines due on that date and events that span that date.","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brainybryan69"},"content":"     * @param targetDate the date to search for","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brainybryan69"},"content":"     * @return a new TaskList containing matching tasks","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brainybryan69"},"content":"    public TaskList getTasksOnDate(LocalDate targetDate) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brainybryan69"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brainybryan69"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brainybryan69"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brainybryan69"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brainybryan69"},"content":"                if (deadline.getBy().toLocalDate().equals(targetDate)) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brainybryan69"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brainybryan69"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brainybryan69"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brainybryan69"},"content":"                LocalDate eventStartDate \u003d event.getFrom().toLocalDate();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brainybryan69"},"content":"                LocalDate eventEndDate \u003d event.getTo().toLocalDate();","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brainybryan69"},"content":"                // Include event if target date falls within or on the event\u0027s date range","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brainybryan69"},"content":"                if (!targetDate.isBefore(eventStartDate) \u0026\u0026 !targetDate.isAfter(eventEndDate)) {","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brainybryan69"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brainybryan69"},"content":"                }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brainybryan69"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:21:57","isFullCredit":false}],"authorContributionMap":{"brainybryan69":138}},{"path":"src/main/java/lebron/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.task;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskType;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.TaskStatus;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":" * A simple task without any deadlines or time constraints.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":" * Just something you need to get done whenever you have time.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"     * Creates a new todo task.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"     * @param description what you need to do","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2025-08-18T09:18:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"     * Gets the description of this todo.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"     * Since todos are simple, this just returns the basic description.","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     * @return the task description","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-20T17:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    @Override","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    public String getFullDescription() {","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        return description;","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-17T21:22:30","isFullCredit":false}],"authorContributionMap":{"brainybryan69":30}},{"path":"src/main/java/lebron/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":" * Handles parsing of user input commands and extracting relevant information.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":" * Converts raw user input into structured data for command execution.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"public class Parser {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"     * Parses user input to determine the command type.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"     * @param input the raw user input","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * @return the CommandType representing the user\u0027s intent","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    public static CommandType parseCommand(String input) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"        return CommandType.parseCommand(input);","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"     * Extracts task number from mark/unmark/delete commands.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input (e.g., \"mark 1\", \"delete 3\")","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"     * @param commandLength the length of the command word","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * @return the task number (1-based)","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the task number is invalid","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    public static int parseTaskNumber(String input, int commandLength) throws LeBronException {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"            String numberStr \u003d input.substring(commandLength).trim();","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"            int taskNumber \u003d Integer.parseInt(numberStr);","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"                throw new LeBronException(ErrorType.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"            return taskNumber;","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"     * Extracts the description from a todo command.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input (e.g., \"todo read book\")","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"     * @return the task description","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the description is empty","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"    public static String parseTodoDescription(String input) throws LeBronException {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"        String description \u003d input.length() \u003e 4 ? input.substring(5).trim() : \"\";","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.EMPTY_TODO.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"        return description;","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"     * Extracts description and deadline from a deadline command.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input (e.g., \"deadline submit report /by 2025-12-02 1800\")","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     * @return array containing [description, deadline] ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if format is invalid or components are missing","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"    public static String[] parseDeadlineCommand(String input) throws LeBronException {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"        String remaining \u003d input.length() \u003e 8 ? input.substring(9) : \"\";","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"        if (remaining.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.EMPTY_DEADLINE.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"        int byIndex \u003d remaining.indexOf(\" /by \");","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.MISSING_DEADLINE_FORMAT.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"        String description \u003d remaining.substring(0, byIndex).trim();","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.EMPTY_DEADLINE.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"        String by \u003d remaining.substring(byIndex + 5);","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"        return new String[]{description, by};","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"     * Extracts description, start time, and end time from an event command.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input (e.g., \"event meeting /from 2025-12-02 1400 /to 2025-12-02 1600\")","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"     * @return array containing [description, from, to]","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if format is invalid or components are missing","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"    public static String[] parseEventCommand(String input) throws LeBronException {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"        String remaining \u003d input.length() \u003e 5 ? input.substring(6) : \"\";","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"        if (remaining.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.EMPTY_EVENT.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"        int fromIndex \u003d remaining.indexOf(\" /from \");","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"        int toIndex \u003d remaining.indexOf(\" /to \");","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.MISSING_EVENT_FORMAT.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brainybryan69"},"content":"        String description \u003d remaining.substring(0, fromIndex).trim();","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brainybryan69"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(ErrorType.EMPTY_EVENT.getMessage());","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brainybryan69"},"content":"        String from \u003d remaining.substring(fromIndex + 7, toIndex);","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brainybryan69"},"content":"        String to \u003d remaining.substring(toIndex + 5);","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brainybryan69"},"content":"        return new String[]{description, from, to};","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brainybryan69"},"content":"     * Extracts date from an \"on\" command.","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brainybryan69"},"content":"     * @param input the user input (e.g., \"on 2025-12-02\")","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brainybryan69"},"content":"     * @return the date string","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the date is missing","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brainybryan69"},"content":"    public static String parseOnCommand(String input) throws LeBronException {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brainybryan69"},"content":"        String dateString \u003d input.length() \u003e 2 ? input.substring(3).trim() : \"\";","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brainybryan69"},"content":"        if (dateString.isEmpty()) {","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Please specify a date. Use: on yyyy-mm-dd (e.g., on 2019-12-02)\");","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brainybryan69"},"content":"        return dateString;","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:38:20","isFullCredit":false}],"authorContributionMap":{"brainybryan69":131}},{"path":"src/main/java/lebron/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.ui;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.task.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.*;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import lebron.util.DateTimeParser;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Handles all user interface interactions including input/output formatting.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Centralizes all user-facing messages and display logic.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class Ui {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    private static final String NAME \u003d \"LeBron\";","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"     * Shows the welcome message when the program starts.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME);","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"     * Shows the goodbye message when the program exits.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"        if (!message.isEmpty()) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(message);","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"     * Shows all tasks in the task list.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the task list to display","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"No tasks found.\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"        } else {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"                System.out.println((i + 1) + \".\" + task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getFullDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"     * Shows confirmation message when a task is added.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     * @param taskCount the total number of tasks after adding","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getFullDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"     * Shows confirmation message when a task is marked as done.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task that was marked","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"     * Shows confirmation message when a task is unmarked.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"     * Shows confirmation message when a task is deleted.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"     * @param remainingCount the number of tasks remaining after deletion","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"    public void showTaskDeleted(Task task, int remainingCount) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Noted. I\u0027ve removed the task:\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getFullDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Now you have \" + remainingCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"     * Shows tasks that occur on a specific date.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"brainybryan69"},"content":"     * @param taskList the filtered task list containing matching tasks","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"brainybryan69"},"content":"     * @param targetDate the date that was searched for","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"brainybryan69"},"content":"    public void showTasksOnDate(TaskList taskList, LocalDate targetDate) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"brainybryan69"},"content":"        String dateStr \u003d DateTimeParser.formatForDisplay(targetDate.atStartOfDay()).substring(0, 11);","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"brainybryan69"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"No tasks found on \" + dateStr + \".\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"brainybryan69"},"content":"        } else {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"brainybryan69"},"content":"            System.out.println(\"Tasks on \" + dateStr + \":\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"brainybryan69"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"brainybryan69"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"brainybryan69"},"content":"                System.out.println((i + 1) + \".\" + task.getTypeIcon() + task.getStatusIcon() + \" \" + task.getFullDescription());","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"brainybryan69"},"content":"            }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"brainybryan69"},"content":"     * Shows a message when tasks cannot be loaded from file.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"brainybryan69"},"content":"    public void showLoadError() {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Could not load saved tasks.\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"brainybryan69"},"content":"     * Shows a message when tasks cannot be saved to file.","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"brainybryan69"},"content":"    public void showSaveError() {","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"brainybryan69"},"content":"        System.out.println(\"Could not save tasks to file.\");","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T15:48:54","isFullCredit":false}],"authorContributionMap":{"brainybryan69":136}},{"path":"src/main/java/lebron/util/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"package lebron.util;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"import lebron.common.LeBronException;","lastModifiedDate":"2025-08-24T16:37:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"/**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":" * Handles parsing and formatting of dates and times for LeBron.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":" * Understands various input formats and converts them to a standard display format.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":" */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"    // Input format: yyyy-mm-dd HHmm (e.g., 2019-12-02 1800)","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"    // Display format: MMM dd yyyy h:mma (e.g., Dec 02 2019 6:00PM)","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"    // Storage format: ISO format for file storage","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"    private static final DateTimeFormatter STORAGE_FORMAT \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"brainybryan69"},"content":"    // Date only format: yyyy-mm-dd (for ON command)","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"brainybryan69"},"content":"    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"brainybryan69"},"content":"     * Parses a date/time string into a LocalDateTime object.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"brainybryan69"},"content":"     * Accepts format: yyyy-mm-dd HHmm (e.g., \"2019-12-02 1800\")","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"brainybryan69"},"content":"     * @param dateTimeString the date/time string to parse","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"brainybryan69"},"content":"     * @return the parsed LocalDateTime","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the format is invalid","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"brainybryan69"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws LeBronException {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"brainybryan69"},"content":"        if (dateTimeString \u003d\u003d null || dateTimeString.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Date and time cannot be empty\");","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"brainybryan69"},"content":"            return LocalDateTime.parse(dateTimeString.trim(), INPUT_FORMAT);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"brainybryan69"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Invalid date format. Use yyyy-mm-dd HHmm (e.g., 2019-12-02 1800)\");","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"brainybryan69"},"content":"     * Formats a LocalDateTime for display to the user.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"brainybryan69"},"content":"     * Output format: MMM dd yyyy h:mma (e.g., \"Dec 02 2019 6:00PM\")","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"brainybryan69"},"content":"     * @param dateTime the LocalDateTime to format","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"brainybryan69"},"content":"     * @return the formatted date/time string","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"brainybryan69"},"content":"    public static String formatForDisplay(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"brainybryan69"},"content":"        return dateTime.format(DISPLAY_FORMAT);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"brainybryan69"},"content":"     * Formats a LocalDateTime for storage in files.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"brainybryan69"},"content":"     * Uses ISO format for consistency and parseability.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"brainybryan69"},"content":"     * @param dateTime the LocalDateTime to format","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"brainybryan69"},"content":"     * @return the formatted date/time string for storage","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"brainybryan69"},"content":"    public static String formatForStorage(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"brainybryan69"},"content":"        return dateTime.format(STORAGE_FORMAT);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"brainybryan69"},"content":"     * Parses a stored date/time string back into LocalDateTime.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"brainybryan69"},"content":"     * Used when loading from file storage.","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"brainybryan69"},"content":"     * @param storedDateTime the stored date/time string","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"brainybryan69"},"content":"     * @return the parsed LocalDateTime","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if parsing fails","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"brainybryan69"},"content":"    public static LocalDateTime parseFromStorage(String storedDateTime) throws LeBronException {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"brainybryan69"},"content":"            return LocalDateTime.parse(storedDateTime, STORAGE_FORMAT);","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"brainybryan69"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Corrupted date/time data in storage\");","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"brainybryan69"},"content":"    ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"brainybryan69"},"content":"    /**","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"brainybryan69"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"brainybryan69"},"content":"     * Accepts format: yyyy-mm-dd (e.g., \"2019-12-02\")","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"brainybryan69"},"content":"     * ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"brainybryan69"},"content":"     * @param dateString the date string to parse","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"brainybryan69"},"content":"     * @return the parsed LocalDate","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"brainybryan69"},"content":"     * @throws LeBronException if the format is invalid","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"brainybryan69"},"content":"     */","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"brainybryan69"},"content":"    public static LocalDate parseDate(String dateString) throws LeBronException {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"brainybryan69"},"content":"        if (dateString \u003d\u003d null || dateString.trim().isEmpty()) {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Date cannot be empty\");","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"brainybryan69"},"content":"        ","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"brainybryan69"},"content":"        try {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"brainybryan69"},"content":"            return LocalDate.parse(dateString.trim(), DATE_FORMAT);","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"brainybryan69"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"brainybryan69"},"content":"            throw new LeBronException(\"Invalid date format. Use yyyy-mm-dd (e.g., 2019-12-02)\");","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"brainybryan69"},"content":"        }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"brainybryan69"},"content":"    }","lastModifiedDate":"2025-08-24T13:52:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"brainybryan69"},"content":"}","lastModifiedDate":"2025-08-24T13:17:00","isFullCredit":false}],"authorContributionMap":{"brainybryan69":104}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"brainybryan69"},"content":"todo borrow book","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"brainybryan69"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"brainybryan69"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"brainybryan69"},"content":"mark 2","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"brainybryan69"},"content":"list","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"brainybryan69"},"content":"todo","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"brainybryan69"},"content":"mark -1","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"brainybryan69"},"content":"delete -1","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"brainybryan69"},"content":"delete 5","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"brainybryan69"},"content":"delete 1","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"brainybryan69"},"content":"list","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"brainybryan69"},"content":"","lastModifiedDate":"2025-08-18T09:01:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"bye","lastModifiedDate":"2025-08-18T08:48:57","isFullCredit":false}],"authorContributionMap":{"brainybryan69":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"brainybryan69"},"content":"java -classpath ../bin LeBron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-18T07:57:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"brainybryan69":1,"-":37}}]
