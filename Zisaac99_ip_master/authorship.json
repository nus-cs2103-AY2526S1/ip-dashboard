[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-27T02:08:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"    mainClass.set(\"zell.Zell\")","lastModifiedDate":"2025-08-27T02:08:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"    archiveBaseName \u003d \"zell\"","lastModifiedDate":"2025-08-27T02:08:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-08-27T02:08:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Zisaac99":4,"-":39}},{"path":"src/main/java/zell/ChatLoop.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.storage.Storage;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.task.TaskList;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"import zell.ui.Ui;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":" * Deals with the chat loop of the Zell chatbot","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"public class ChatLoop {","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    /** The TaskList object used to store tasks */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"    /** The Parser object used to parse inputs */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    private final Parser parser;","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    /** The Storage object used for local storage of tasks */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"    /** The Ui object used to display messages to the user */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"    public ChatLoop(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-08-25T19:33:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-25T19:33:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"     * Starts up the chat loop for the Zell chatbot.","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     * Here we have a local variable {@code endProgram} used by the while loop to check whether","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"     * we should terminate the loop and end the program.","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"     * We use {@link zell.ui.Ui} to read the user input and display the welcome message and each","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"     * message related to the user\u0027s input/command.","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"     * We use {@link zell.Parser} to parse the user\u0027s input and execute the commands.","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:07:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"    public void run() {","lastModifiedDate":"2025-08-17T22:46:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"        boolean endProgram \u003d false;","lastModifiedDate":"2025-08-19T12:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T22:46:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"        ui.showMessage(ZellMessage.WELCOME_MESSAGE.message());","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:12:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"        while (!endProgram) {","lastModifiedDate":"2025-08-19T12:49:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"            String userInput \u003d ui.readInput();","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T18:48:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"            String output;","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"            try {","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"                output \u003d parser.parseInput(userInput, taskList, storage);","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"            } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"                output \u003d ze.toString();","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-18T03:12:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T23:18:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"            ui.showMessage(output);","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"            endProgram \u003d parser.getEndProgram();","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T00:01:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-17T22:37:31","isFullCredit":false}],"authorContributionMap":{"Zisaac99":64}},{"path":"src/main/java/zell/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.storage.Storage;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.task.Task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"import zell.task.TaskList;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import zell.task.ToDo;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"import zell.task.Deadline;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import zell.task.Event;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":" * Deals with the parsing of the user\u0027s input and executes","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":" * the relevant commands.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":" * It also returns the message to print based on the user\u0027s","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":" * input and command executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":" * It also keeps track of whether the chatbot should terminate.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"public class Parser {","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    /** Indicates if the chatbot should terminate */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    private boolean endProgram;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    public Parser() {","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"        endProgram \u003d false;","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    public boolean getEndProgram() {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        return endProgram;","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"     * Processes user input and extracts the command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"     * It also calls the method to execute the command.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"     * @param storage The {@link zell.storage.Storage} object which deals with local storage.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"     * @return The message to be printed based on the input and command executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If an invalid command is provided (wrong format or command does not exist).","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"     * @see #executeCommand(String, String, TaskList, Storage)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"    public String parseInput(String userInput, TaskList taskList, Storage storage) throws ZellException {","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"        String command \u003d firstSpaceIndex !\u003d -1 ? userInput.substring(0, firstSpaceIndex) : userInput;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"        return executeCommand(userInput, command, taskList, storage);","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"     * Executes the user command using the command extracted and the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"     * It executes the command using a switch case and calling the relevant method to deal","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"     * with the command.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"     * @param storage The {@link zell.storage.Storage} object which deals with local storage.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"     * @return The message to be printed based on the input and command executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If an invalid command is provided (wrong format or command does not exist).","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"    public String executeCommand(String userInput, String command, TaskList taskList,","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"            Storage storage) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"        int firstSpaceIndex \u003d userInput.indexOf(\" \");","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"        String output;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"        switch (command) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleBye(firstSpaceIndex, command);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"        case \"list\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleList(firstSpaceIndex, command, taskList);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"            // Fallthrough","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleMarkOrUnMark(command, userInput, firstSpaceIndex, taskList);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"            // Fallthrough","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"            // Fallthrough","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"        case \"event\":","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleTaskCommands(userInput, command, firstSpaceIndex, taskList, storage);","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleDelete(userInput, command, firstSpaceIndex, taskList, storage);","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"        case \"find\":","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"            output \u003d handleFind(userInput, command, firstSpaceIndex, taskList);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"            break;","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"        default:","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(command + ZellMessage.UNKNOWN_COMMAND.message());","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zisaac99"},"content":"        return output;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zisaac99"},"content":"     * Deals with the Task command (ToDo, Deadline, Event).","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zisaac99"},"content":"     * Here the relevant task is created using createTask,","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zisaac99"},"content":"     * added to the TaskList, and stored in local storage.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zisaac99"},"content":"     * @param storage The {@link zell.storage.Storage} object which deals with local storage.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zisaac99"},"content":"     * @return The task messages to be printed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the task commands format is invalid.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zisaac99"},"content":"     * @see #createTask(String, String, int).","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zisaac99"},"content":"    public String handleTaskCommands(String userInput, String command, int firstSpaceIndex,","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zisaac99"},"content":"            TaskList taskList, Storage storage) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(ZellMessage.TASK_ADDED.message());","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zisaac99"},"content":"        Task task \u003d createTask(userInput, command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zisaac99"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zisaac99"},"content":"        storage.storeTask(task);","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(task);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(taskList);","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Zisaac99"},"content":"     * Deals with the delete command. Here a task is deleted if it is valid.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Zisaac99"},"content":"     * Exceptions are checked using checkNoSpacesInCommand","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Zisaac99"},"content":"     * @param storage The {@link zell.storage.Storage} object which deals with local storage.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Zisaac99"},"content":"     * @return The delete messages to be printed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the delete command format is invalid or the task to be deleted does not exist.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkNoSpacesInCommand(String, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Zisaac99"},"content":"    public String handleDelete(String userInput, String command, int firstSpaceIndex,","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Zisaac99"},"content":"            TaskList taskList, Storage storage) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(ZellMessage.TASK_REMOVED.message());","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Zisaac99"},"content":"        checkNoSpacesInCommand(command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Zisaac99"},"content":"        int index \u003d parseIndex(command, userInput, firstSpaceIndex, taskList);","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(taskList.getTask(index));","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Zisaac99"},"content":"        taskList.removeTask(index);","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Zisaac99"},"content":"        storage.updateTasks(taskList.getAllTasksInString());","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:33:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(taskList);","lastModifiedDate":"2025-08-19T15:31:56","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Zisaac99"},"content":"     * Deals with creating a task. Here a task is created by checking the command if it is","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Zisaac99"},"content":"     * (ToDo, Deadline, Event). We then pass in the appropriate parameters to the constructor of each","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Zisaac99"},"content":"     * command\u0027s class.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e\u003c/p\u003e","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Zisaac99"},"content":"     * Exceptions are checked using checkNoSpacesInCommand, checkForDeadlineExceptions, checkForEventExceptions.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Zisaac99"},"content":"     * @return The task that is created","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the task command format is invalid such as missing parameters or invalid dates","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkNoSpacesInCommand(String, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkForDeadlineExceptions(String, String, String, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkForEventExceptions(String, String, String, int, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Zisaac99"},"content":"    public Task createTask(String userInput, String command, int firstSpaceIndex)","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Zisaac99"},"content":"            throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Zisaac99"},"content":"        checkNoSpacesInCommand(command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Zisaac99"},"content":"        String userInputSecondHalf \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Zisaac99"},"content":"        Task task;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Zisaac99"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Zisaac99"},"content":"            task \u003d new ToDo(userInputSecondHalf);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Zisaac99"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Zisaac99"},"content":"            String splitBy \u003d \" /by \";","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Zisaac99"},"content":"            int firstByIndex \u003d userInputSecondHalf.indexOf(splitBy); // Handle exception if missing; -1","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Zisaac99"},"content":"            checkForDeadlineExceptions(command, userInput, splitBy, firstByIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Zisaac99"},"content":"            String name \u003d userInputSecondHalf.substring(0, firstByIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Zisaac99"},"content":"            String dueBy \u003d userInputSecondHalf.substring(firstByIndex + splitBy.length());","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Zisaac99"},"content":"            task \u003d new Deadline(name, dueBy);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Zisaac99"},"content":"        } else { // Event","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Zisaac99"},"content":"            String splitFrom \u003d \" /from \";","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Zisaac99"},"content":"            String splitTo \u003d \" /to \";","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Zisaac99"},"content":"            int firstFromIndex \u003d userInputSecondHalf.indexOf(splitFrom);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Zisaac99"},"content":"            int firstToIndex \u003d userInputSecondHalf.indexOf(splitTo);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Zisaac99"},"content":"            checkForEventExceptions(command, userInput, splitFrom, firstFromIndex, firstToIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Zisaac99"},"content":"            String name \u003d userInputSecondHalf.substring(0, firstFromIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Zisaac99"},"content":"            String start \u003d userInputSecondHalf.substring(firstFromIndex + splitFrom.length(), firstToIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Zisaac99"},"content":"            String end \u003d userInputSecondHalf.substring(firstToIndex + splitTo.length());","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Zisaac99"},"content":"            task \u003d new Event(name, start, end);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Zisaac99"},"content":"        return task;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Zisaac99"},"content":"     * Deals with the bye command.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Zisaac99"},"content":"     * Here the instance variable {@link #endProgram} is set to true to indicate we should terminate the program","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Zisaac99"},"content":"     * Exceptions are checked using checkIfCommandHasSpaces","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Zisaac99"},"content":"     * @return The goodbye message","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If bye command format is invalid","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkIfCommandHasSpaces(String, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Zisaac99"},"content":"    public String handleBye(int firstSpaceIndex, String command) throws ZellException {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Zisaac99"},"content":"        checkIfCommandHasSpaces(command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Zisaac99"},"content":"        endProgram \u003d true;","lastModifiedDate":"2025-08-26T23:58:51","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Zisaac99"},"content":"        return ZellMessage.GOODBYE.message();","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Zisaac99"},"content":"     * Deals with the list command. Here we get all the tasks in the string format.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Zisaac99"},"content":"     * Exceptions are checked using checkIfCommandHasSpaces","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Zisaac99"},"content":"     * @return The messages for the list command","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the list command format is invalid such as missing parameters.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkIfCommandHasSpaces(String, int)","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Zisaac99"},"content":"    public String handleList(int firstSpaceIndex, String command, TaskList taskList) throws ZellException {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Zisaac99"},"content":"        checkIfCommandHasSpaces(command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(ZellMessage.LIST.message());","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(taskList.listAllTasks());","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Zisaac99"},"content":"     * Deals with the mark/unmark command. We use an if else to determine which command to execute.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Zisaac99"},"content":"     * Here we get the task if it is valid and mark/unmark it.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Zisaac99"},"content":"     * @return The task messages to be printed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the mark/unmark commands format is invalid.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Zisaac99"},"content":"    public String handleMarkOrUnMark(String command, String userInput,","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Zisaac99"},"content":"            int firstSpaceIndex, TaskList taskList) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Zisaac99"},"content":"        int index \u003d parseIndex(command, userInput, firstSpaceIndex, taskList);","lastModifiedDate":"2025-08-19T15:29:28","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Zisaac99"},"content":"        Task currentTask \u003d taskList.getTask(index);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Zisaac99"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Zisaac99"},"content":"            taskList.markTaskAsDone(index);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Zisaac99"},"content":"            stringBuilder.append(ZellMessage.TASK_MARKED.message());","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Zisaac99"},"content":"        } else {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Zisaac99"},"content":"            taskList.markTaskAsNotDone(index);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Zisaac99"},"content":"            stringBuilder.append(ZellMessage.TASK_UNMARKED.message());","lastModifiedDate":"2025-08-19T21:27:01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(currentTask);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Zisaac99"},"content":"    public String handleFind(String userInput, String command, int firstSpaceIndex,","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Zisaac99"},"content":"            TaskList taskList) throws ZellException {","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(ZellMessage.TASK_FOUND.message());","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Zisaac99"},"content":"        checkNoSpacesInCommand(command, firstSpaceIndex);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Zisaac99"},"content":"        String word \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Zisaac99"},"content":"        stringBuilder.append(taskList.listAllTasksContainingWord(word));","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Zisaac99"},"content":"     * Extracts the index of the task from the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Zisaac99"},"content":"     * Exceptions are checked using checkForInvalidTaskNumber","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:07:59","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Zisaac99"},"content":"     * @return The index of the task from the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If a non-number was provided for the index","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Zisaac99"},"content":"     * @see #checkForInvalidTaskNumber","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Zisaac99"},"content":"    public int parseIndex(String command, String userInput, int firstSpaceIndex,","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Zisaac99"},"content":"            TaskList taskList) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Zisaac99"},"content":"        checkNoSpacesInCommand(command, firstSpaceIndex);","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Zisaac99"},"content":"        String indexInStringForm \u003d userInput.substring(firstSpaceIndex + 1);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Zisaac99"},"content":"        int index;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Zisaac99"},"content":"        // Throw exception if a non-number was provided","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Zisaac99"},"content":"            index \u003d Integer.parseInt(indexInStringForm);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Zisaac99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s is not a number, you should indicate a number from \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Zisaac99"},"content":"                    + \"the list to %s.\" + \"\\nFor example:\\n%s 2\", indexInStringForm, command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Zisaac99"},"content":"        checkForInvalidTaskNumber(index, taskList);","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Zisaac99"},"content":"        return index;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Zisaac99"},"content":"     * Checks if a command contains a space.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Zisaac99"},"content":"     * Since for certain commands like bye and list it should not have anything after it.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the command is invalid by containing spaces.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Zisaac99"},"content":"    public void checkIfCommandHasSpaces(String command, int firstSpaceIndex) throws ZellException {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Zisaac99"},"content":"        if (firstSpaceIndex !\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should not have anything after.\\nFor example:\\n%s\",","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Zisaac99"},"content":"                    command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Zisaac99"},"content":"     * Checks if a command does not contain a space.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Zisaac99"},"content":"     * Since for certain commands like ToDo, Deadline, Event it should have some parameters after it.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Zisaac99"},"content":"     * @param firstSpaceIndex The index of the first space in the user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the command is invalid by not containing spaces.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Zisaac99"},"content":"    public void checkNoSpacesInCommand(String command, int firstSpaceIndex) throws ZellException {","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Zisaac99"},"content":"        if (firstSpaceIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage;","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Zisaac99"},"content":"            switch (command) {","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Zisaac99"},"content":"            case \"todo\":","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Zisaac99"},"content":"                formatMessage \u003d String.format(\"%s should include a thing to do.\\nFor example:\\n%s read books\",","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Zisaac99"},"content":"                        command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Zisaac99"},"content":"                break;","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Zisaac99"},"content":"            case \"deadline\":","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Zisaac99"},"content":"                formatMessage \u003d String.format(\"%s should include a thing to do.\\nFor example:\\n%s books \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Zisaac99"},"content":"                        + \"/by  Sunday\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Zisaac99"},"content":"                break;","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Zisaac99"},"content":"            case \"event\":","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Zisaac99"},"content":"                formatMessage \u003d String.format(\"%s should include a thing to do.\\nFor example:\\n%s \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Zisaac99"},"content":"                        + \"books /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Zisaac99"},"content":"                break;","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Zisaac99"},"content":"            case \"find\":","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Zisaac99"},"content":"                formatMessage \u003d String.format(\"%s should include a thing to search for.\\nFor example:\\n%s \"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Zisaac99"},"content":"                        + \"book\", command, command);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Zisaac99"},"content":"                break;","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Zisaac99"},"content":"            default:","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Zisaac99"},"content":"                formatMessage \u003d String.format(\"%s should have a number to indicate which one to %s.\"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Zisaac99"},"content":"                        + \"\\nFor example:\\n%s 2\", command, command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Zisaac99"},"content":"                break;","lastModifiedDate":"2025-08-19T15:32:55","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Zisaac99"},"content":"     * Checks if the task number provided is valid","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Zisaac99"},"content":"     * @param index The task number.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"Zisaac99"},"content":"     * @param taskList The {@link zell.task.TaskList} object which stores tasks.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If an invalid task number is provided.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"Zisaac99"},"content":"    public void checkForInvalidTaskNumber(int index, TaskList taskList) throws ZellException {","lastModifiedDate":"2025-08-19T21:25:35","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"Zisaac99"},"content":"        if (!taskList.checkIfTaskExists(index)) {","lastModifiedDate":"2025-08-19T15:25:20","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"Task %d does not exist, please indicate a \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"Zisaac99"},"content":"                    + \"task number from 1 to %d\", index, taskList.getNumberOfTask());","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T15:25:20","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T15:25:20","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T15:25:20","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:25:20","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"Zisaac99"},"content":"     * Checks if the deadline command format is invalid.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"Zisaac99"},"content":"     * Such cases occur when:","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"Zisaac99"},"content":"     * 1) The name of the deadline is missing.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"Zisaac99"},"content":"     * 2) The deadline of the task is missing.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Zisaac99"},"content":"     * @param splitBy The string we use to indicate the datetime we provide.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"Zisaac99"},"content":"     * @param firstByIndex The first index of \" /by \".","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the deadline command format is invalid","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"Zisaac99"},"content":"    public void checkForDeadlineExceptions(String command, String userInput, String splitBy,","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"Zisaac99"},"content":"            int firstByIndex) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"Zisaac99"},"content":"        // Handle missing deadline name","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"Zisaac99"},"content":"        if (userInput.contains(splitBy) \u0026\u0026 firstByIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should include a name.\\nFor example:\\n\" + \"%s project \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"Zisaac99"},"content":"                    + \"meeting /by Mon 2pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"Zisaac99"},"content":"        if (firstByIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should include a dateline by using /by.\\nFor \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"Zisaac99"},"content":"                    + \"example:\\n\" + \"%s read books /by Sunday\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"Zisaac99"},"content":"     * Checks if the event command format is invalid.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"Zisaac99"},"content":"     * Such cases occur when:","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"Zisaac99"},"content":"     * 1) The name of the event is missing.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"Zisaac99"},"content":"     * 2) The start of the event is missing.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"Zisaac99"},"content":"     * 3) The end of the event is missing","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"Zisaac99"},"content":"     * 4) The end of the event come before the start of the event.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"Zisaac99"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"Zisaac99"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"Zisaac99"},"content":"     * @param splitFrom The string we use to indicate the starting datetime we provide.","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"Zisaac99"},"content":"     * @param firstFromIndex The first index of \" /from \".","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"Zisaac99"},"content":"     * @param firstToIndex The first index of \" /to \".","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the event command format is invalid","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T18:11:51","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"Zisaac99"},"content":"    public void checkForEventExceptions(String command, String userInput, String splitFrom,","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"Zisaac99"},"content":"            int firstFromIndex, int firstToIndex) throws ZellException {","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"Zisaac99"},"content":"        // Handle if no name for event was provided. event /from today /to tmr","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"Zisaac99"},"content":"        if (userInput.contains(splitFrom) \u0026\u0026 firstFromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should include a name.\\nFor example:\\n\" + \"%s project \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"Zisaac99"},"content":"                    + \"meeting /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"Zisaac99"},"content":"        if (firstFromIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should include a start by using /from.\\nFor \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"Zisaac99"},"content":"                    + \"example:\\n\" + \"%s project meeting /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"Zisaac99"},"content":"        if (firstToIndex \u003d\u003d -1) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"%s should include a end by using /to.\\nFor \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"Zisaac99"},"content":"                    + \"example:\\n\" + \"%s project meeting /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"Zisaac99"},"content":"        // Handle exception if /to comes before /from","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Zisaac99"},"content":"        if (firstFromIndex \u003e firstToIndex) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"For %s /from should come before /to.\\nFor \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"Zisaac99"},"content":"                    + \"example:\\n\" + \"%s project meeting /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"Zisaac99"},"content":"        if (firstFromIndex + splitFrom.length() \u003e firstToIndex) {","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"Zisaac99"},"content":"            String formatMessage \u003d String.format(\"For %s please include a start date/time using \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"Zisaac99"},"content":"                    + \"/from.\\nFor example:\\n\" + \"%s project meeting /from Mon 2pm /to 4pm\", command, command);","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(formatMessage);","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-19T12:38:38","isFullCredit":false}],"authorContributionMap":{"Zisaac99":485}},{"path":"src/main/java/zell/Zell.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.storage.Storage;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.ui.Ui;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"import zell.task.TaskList;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T18:11:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":" * Represents the Zell chatbot.","lastModifiedDate":"2025-08-27T18:11:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T18:11:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"public class Zell {","lastModifiedDate":"2025-08-17T01:57:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    /** Path to the local storage file */","lastModifiedDate":"2025-08-27T18:11:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"    private static final String FILE_PATH \u003d \"./data/Zell.txt\";","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"        Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T00:01:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"        TaskList taskList;","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"            ui.showMessage(ze.toString());","lastModifiedDate":"2025-08-27T02:09:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"        ChatLoop chatLoop \u003d new ChatLoop(taskList , storage, ui);","lastModifiedDate":"2025-08-27T00:01:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"        chatLoop.run();","lastModifiedDate":"2025-08-17T22:48:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:34:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"Zisaac99":30,"-":3}},{"path":"src/main/java/zell/ZellMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T18:11:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":" * Represents an Enum which contains all the default Zell messages","lastModifiedDate":"2025-08-27T18:11:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T18:11:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"public enum ZellMessage {","lastModifiedDate":"2025-08-19T15:41:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"    WELCOME_MESSAGE(\"Hello! My name is Zell\\n How can I help you?\"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"    UNKNOWN_COMMAND(\" is an unknown command. Please try again with a valid command\"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"    TASK_ADDED(\"Noted. The following task has been added:\\n \"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    TASK_REMOVED(\"Noted. The following task has been removed:\\n \"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"    GOODBYE(\"Goodbye. Hope to see you again soon!\"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    LIST(\"Currently you have added this tasks to your list:\\n\"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    TASK_MARKED(\"Nice! I\u0027ve marked this task as done:\\n \"),","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    TASK_UNMARKED(\"OK, I\u0027ve marked this task as not done yet:\\n \"),","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"    TASK_FOUND(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:41:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"    /** The default message for the scenario  */","lastModifiedDate":"2025-08-27T18:11:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    private String message;","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    ZellMessage(String message) {","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"    public String message() {","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"        return this.message;","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T21:23:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-19T15:41:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":27}},{"path":"src/main/java/zell/exception/ZellException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.exception;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":" * Represents exceptions for the Zell chatbot","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"public class ZellException extends Exception{","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"    public ZellException(String message) {","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"        super(message);","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the default toString","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"     * Displays the exception message with an additional {@code An error occured: } infront.","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString format of the ZellException","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:08:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"        return \"An error occurred: \" + getMessage();","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-19T01:35:55","isFullCredit":false}],"authorContributionMap":{"Zisaac99":22}},{"path":"src/main/java/zell/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.storage;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.task.Task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"import java.io.File;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"import java.util.List;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":" * Represents the class used for local storage of tasks for the Zell chatbot","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"public class Storage {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    /** The file path of where the local storage is stored at */","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"     * Loads all task from the local storage by converting each task in each string format back to the original","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"     * task.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003eIf the /data folder does not exist it will be created\u003c/p\u003e","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003eIf the file does not exist it will also be created\u003c/p\u003e","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"     * @return A list of all the task stored in local storage","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException if the file does not exist and cannot be created.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"    public List\u003cTask\u003e loadTasks() throws ZellException{","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"        // Create /data folder if it does not exist","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"        try (Scanner scanner \u003d new Scanner(file)){","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"                tasks.add(Task.stringToTask(scanner.nextLine()));","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"        } catch (FileNotFoundException fe) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"            try {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"                FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"                fileWriter.close();","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"            } catch (IOException ie) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"                throw new ZellException(\"Failed to store task to local storage because of: \"","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"                        + ie.getMessage());","lastModifiedDate":"2025-08-26T23:57:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"        return tasks;","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"     * Stores a task in local storage. This is done by appending the task\u0027s string format to the end of","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"     * the local storage file.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"     * @param task The task to be stored in local storage.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException if we encounter some issue when storing the file","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"    public void storeTask(Task task) throws ZellException {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"            fileWriter.write(task.taskToString() + \"\\n\");","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"            fileWriter.close();","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(\"Failed to store task to local storage because of: \" + e.getMessage());","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"     * Updates all the tasks in local storage.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003eWe have to store every task in the task list since if a task is removed we cannot just remove one","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"     * line from the local storage file since there will be a gap. We have to shift all the task after the","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"     * removed one which will incur O(n).","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003eSo storing all the task when a task is added or removed is still the same","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"     * time complexity of O(n) but makes it easier to implement.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"     * @param tasks The list of tasks to be stored in local storage.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException if we encounter some issue when storing the tasks in the file.","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:08:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"    public void updateTasks(List\u003cString\u003e tasks) throws ZellException {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"            for (String task: tasks) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"                fileWriter.write(task + \"\\n\");","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zisaac99"},"content":"            fileWriter.close();","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zisaac99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(\"Failed to store task to local storage because of: \" + e.getMessage());","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-25T19:24:14","isFullCredit":false}],"authorContributionMap":{"Zisaac99":101}},{"path":"src/main/java/zell/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.util.DateOrTime;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":" * Represents a Deadline task for the Zell chatbot","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    /** A DateOrTime which stores when this deadline is due */","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"    private final DateOrTime dueBy;","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    public Deadline(String name, String dueBy) throws ZellException {","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"        super(name);","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"        this.dueBy \u003d new DateOrTime(dueBy);","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"     * Overloads the constructor which we primarily use for creating a Deadline task from the local storage","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"     * @param name The name of the Deadline task","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"     * @param dueBy The string representation of the date or datetime","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"     * @param isDone Indicates if a Deadline task is done","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"    public Deadline(String name, String dueBy, boolean isDone) throws ZellException {","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"        this(name, dueBy);","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        setDone(isDone);","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"     * Converts a Deadline task to a string to be stored for local storage.","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     * @return The string representation of the Deadline task to be stored.","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"    public String taskToString() {","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"%s | %b | %s | %s\", \"D\", getDone(), getName(), this.dueBy.originalFormat());","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:19:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the parent\u0027s (Task) toString","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString of the Deadline task","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"[%s]%s (by: %s)\", \"D\", super.toString(), this.dueBy.toString());","lastModifiedDate":"2025-08-25T21:46:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":50}},{"path":"src/main/java/zell/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.util.DateOrTime;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"    /** A DateOrTime which stores when this event starts */","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"    private final DateOrTime start;","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"    /** A DateOrTime which stores when this event ends */","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    private final DateOrTime end;","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    public Event(String name, String start, String end) throws ZellException {","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"        super(name);","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"        this.start \u003d new DateOrTime(start);","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"        this.end \u003d new DateOrTime(end);","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"     * Overloads the constructor which we primarily use for creating an Event task from the local storage","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"     * @param name The name of the Event task","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"     * @param start The string representation of the date or datetime of the starting","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"     * @param end The string representation of the date or datetime of the ending","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"     * @param isDone Indicates if a Event task is done","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    public Event(String name, String start, String end, boolean isDone) throws ZellException {","lastModifiedDate":"2025-08-25T21:47:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        this(name, start, end);","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"        setDone(isDone);","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"     * Converts an Event task to a string to be stored for local storage.","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"     * @return The string representation of the Event task to be stored.","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"    public String taskToString() {","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"%s | %b | %s | %s | %s\", \"E\", getDone(), getName(),","lastModifiedDate":"2025-08-26T23:57:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"                this.start.originalFormat(), this.end.originalFormat());","lastModifiedDate":"2025-08-26T23:57:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:21:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the parent\u0027s (Task) toString","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString of the Event task","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"[%s]%s (from: %s to: %s)\", \"E\", super.toString(),","lastModifiedDate":"2025-08-26T23:57:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"                this.start.toString(), this.end.toString());","lastModifiedDate":"2025-08-26T23:57:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:41:41","isFullCredit":false}],"authorContributionMap":{"Zisaac99":53}},{"path":"src/main/java/zell/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.storage.Storage;","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":" * Represents a task for the Zell chatbot","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-25T19:09:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    /** The name of the task */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"    private final String name;","lastModifiedDate":"2025-08-18T03:30:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    /** Indicates whether a task is completed */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-18T02:29:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-18T02:29:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"     * Converts a string stored in local storage to a task. Is a static method since it does not make sense to","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"     * create an object does for doing this.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"     * We split the string into different components by \"|\". The task is identified by the first component","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"     * we should be either (T, D ,E). We also check based on the task is the number of components is correct.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"     * @param stringTask The string stored in local storage to be converted back to a task.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"     * @return The correct Task based on the task string.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If an invalid task string is provided (wrong format).","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"    public static Task stringToTask(String stringTask) throws ZellException{","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"        String[] components \u003d stringTask.split(\" \\\\| \");","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"        if (components.length \u003c 1) {","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(\"Invalid task string provided! Certain parameters are missing.\");","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"        switch (components[0]) {","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"        case \"T\":","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"            if (components.length !\u003d 3) {","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"                throw new ZellException(\"Invalid task string provided! Certain parameters are missing.\");","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"            return new ToDo(components[2], Boolean.parseBoolean(components[1]));","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"        case \"D\":","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"            if (components.length !\u003d 4) {","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"                throw new ZellException(\"Invalid task string provided! Certain parameters are missing.\");","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"            return new Deadline(components[2], components[3], Boolean.parseBoolean(components[1]));","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"        case \"E\":","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"            if (components.length !\u003d 5) {","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"                throw new ZellException(\"Invalid task string provided! Certain parameters are missing.\");","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:04:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"            return new Event(components[2], components[3], components[4], Boolean.parseBoolean(components[1]));","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"        default:","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"            throw new ZellException(\"Unknown task type encountered when converting tasks\");","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:13:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:36:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:36:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"     * Represents an abstract method to convert a task to a string to be stored for local storage. Will","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"     * be implemented by subclasses that inherit task","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"     * @return The string representation of the task to be stored.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"    public abstract String taskToString();","lastModifiedDate":"2025-08-25T19:10:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:10:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:10:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2025-08-25T19:10:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-25T19:10:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:29:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:34:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"    public String getName() {","lastModifiedDate":"2025-08-25T19:14:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"        return this.name;","lastModifiedDate":"2025-08-25T19:14:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:14:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:14:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"    public boolean getDone() {","lastModifiedDate":"2025-08-25T19:14:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-18T02:34:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:34:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:34:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the default toString","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"     * Displays the task properly formatted with a checkbox which indicates if a task is completed. Used for","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"     * display of the task to the user.","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString format of the Task","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"        String checked \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-18T03:05:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"[%s] %s\", checked, this.name);","lastModifiedDate":"2025-08-18T03:05:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-17T23:25:13","isFullCredit":false}],"authorContributionMap":{"Zisaac99":96}},{"path":"src/main/java/zell/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import java.util.List;","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"public class TaskList {","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:34:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-18T21:29:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-18T21:29:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T23:34:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-17T23:37:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"        this.tasks.get(index - 1).setDone(true);","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        this.tasks.get(index - 1).setDone(false);","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:41:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-18T02:59:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2025-08-18T02:59:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T02:59:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T02:59:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2025-08-19T14:42:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2025-08-19T14:42:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T14:42:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T14:42:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"    public String listAllTasks() {","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-08-17T23:37:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2025-08-18T02:38:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"            stringBuilder.append(formatTask(i, currentTask));","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-17T23:37:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-18T00:00:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-17T23:37:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T22:30:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"    public String listAllTasksContainingWord(String word) {","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"            String taskToString \u003d currentTask.toString();","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"            if (taskToString.contains(word)) {","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"                stringBuilder.append(formatTask(count, currentTask));","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"                count++;","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"    public String formatTask(int num, Task task) {","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\" %d. %s\\n\", num + 1, task);","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T21:11:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"    public List\u003cString\u003e getAllTasksInString() {","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"            tasks.add(task.taskToString());","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"        return tasks;","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:23:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"    public boolean checkIfTaskExists(int index) {","lastModifiedDate":"2025-08-19T15:18:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d getNumberOfTask();","lastModifiedDate":"2025-08-19T15:18:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T15:18:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:18:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2025-08-19T14:39:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-18T22:30:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T22:30:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-19T15:19:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T15:19:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"\\nThere are currently %d task in the list.\", getNumberOfTask());","lastModifiedDate":"2025-08-19T15:19:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-19T15:19:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-17T23:33:36","isFullCredit":false}],"authorContributionMap":{"Zisaac99":93}},{"path":"src/main/java/zell/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":" * Represents a ToDo task for the Zell chatbot","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"public class ToDo extends Task{","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"        super(name);","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"     * Overloads the constructor which we primarily use for creating a ToDo task from the local storage","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"     * @param name The name of the ToDo task","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"     * @param isDone Indicates if a ToDo task is done","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"        this(name);","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"        setDone(isDone);","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"     * Converts a ToDo task to a string to be stored for local storage.","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"     * @return The string representation of the ToDo task to be stored.","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"    public String taskToString() {","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"%s | %b | %s\", \"T\", getDone(), getName());","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T19:18:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the parent\u0027s (Task) toString","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"     *","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString of the Todo task","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:09:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"        return String.format(\"[%s]%s\", \"T\", super.toString());","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T03:40:44","isFullCredit":false}],"authorContributionMap":{"Zisaac99":42}},{"path":"src/main/java/zell/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.ui;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-27T19:32:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"    public Ui() {","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"    public String readInput() {","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"        System.out.println(formatMessage(message));","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    private static String formatMessage(String message) {","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"        return \"________________________________________\" +","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"                \"__________________________________________________\\n\" +","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"                message +","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"                \"\\n__________________________________\" +","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"                \"________________________________________________________\\n\\n\";","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-27T00:00:41","isFullCredit":false}],"authorContributionMap":{"Zisaac99":27}},{"path":"src/main/java/zell/util/DateOrTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.util;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"/**","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":" * Wraps a LocalDate or LocalDateTime depending on what the user chooses.","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":" * This class basically allows a user to store either a LocalDate or LocalDateTime","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":" */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"public class DateOrTime {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"    /** The LocalDate object */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"    private LocalDate date;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    /** The LocalDateTime object */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"     * Constructs the constructor for DateOrTime","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"     * It converts and stores the date/datetime in the DateOrTime class in the respective LocalDate or","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"     * LocalDateTime object.","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"     * @param dateOrTimeString The date or datetime string in the format {@code yyyy-MM-dd} or","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"     * {@code yyyy-MM-dd HH:mm} respectively.","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"     * @throws ZellException If the date or datetime string is invalid","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"    public DateOrTime(String dateOrTimeString) throws ZellException {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateOrTimeString, dateTimeFormatter);","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"            try {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"                this.date \u003d LocalDate.parse(dateOrTimeString, dateFormatter);","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"            } catch (DateTimeParseException de) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"                throw new ZellException(\"Date or DateTime should be in the respective formats \" +","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"                        \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\");","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"            }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"     * Converts the LocalDate or LocalDateTime object to a String to be stored for Storage","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"     * It converts and stores the date/datetime in the DateOrTime class in the respective LocalDate or","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"     * LocalDateTime object.","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"     * @return The string format of the current date or datetime","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"    public String originalFormat() {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"        String original \u003d \"\";","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"            original \u003d this.date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"        } else if (this.dateTime !\u003d null) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"            original \u003d this.dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"        return original;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"    /**","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"     * Overrides the default toString","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"     * Displays the LocalDate or LocalDateTime in the format {@code MMM d yyyy} or {@code MMM d yyyy hh:mm a}","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"     * respectively.","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"     * @return The toString format of the DateOrTime object","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"     */","lastModifiedDate":"2025-08-27T19:10:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"    @Override","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"    public String toString() {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"        String formatted \u003d \"\";","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"        if (this.date !\u003d null) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"            formatted \u003d this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"        } else if (this.dateTime !\u003d null) {","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"            formatted \u003d this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"        return formatted;","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-25T21:45:57","isFullCredit":false}],"authorContributionMap":{"Zisaac99":88}},{"path":"src/test/java/zell/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.task;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.task.Task;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_validTodo_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"        Task task \u003d Task.stringToTask(\"T | false | some stuff\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[T][ ] some stuff\", task.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"        Task task2 \u003d Task.stringToTask(\"T | true | some stuff\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[T][X] some stuff\", task2.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_invalidTodo_exceptionThrown() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"T | false\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"T\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_validDeadline_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"        Task task \u003d Task.stringToTask(\"D | false | read book | 2025-08-31\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[D][ ] read book (by: Aug 31 2025)\", task.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"        Task task2 \u003d Task.stringToTask(\"D | true | read book | 2025-08-31\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[D][X] read book (by: Aug 31 2025)\", task2.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_invalidDeadline_exceptionThrown() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false | read book | 08-2025-31\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false | read book | 08-31-2025\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false | read book | aaaa\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false | read book | \");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false | read book\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D | false\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"D\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_validEvent_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zisaac99"},"content":"        Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 2025-08-27 14:00 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[E][ ] go to bookstore (from: Aug 27 2025 02:00 pm to: Aug 29 2025 03:00 pm)\", task.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zisaac99"},"content":"        Task task2 \u003d Task.stringToTask(\"E | true | go to bookstore | 2025-08-27 14:00 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"[E][X] go to bookstore (from: Aug 27 2025 02:00 pm to: Aug 29 2025 03:00 pm)\", task2.toString());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_invalidEvent_exceptionThrown() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 08-2025-27 14:00 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 08-27-2025 14:00 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 08-27-2025 14:0 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 08-27-2025 30:14 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Zisaac99"},"content":"                            + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore | 2025-03-13 17:14\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false | go to bookstore\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E | false\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"E\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Invalid task string provided! Certain parameters are missing.\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Zisaac99"},"content":"    public void stringToTask_invalidTaskType_exceptionThrown() throws ZellException {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"A | false | go to bookstore | 08-2025-27 14:00 | 2025-08-29 15:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Unknown task type encountered when converting tasks\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"B | false | go to bookstore | 08-2025-27 14:00\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Unknown task type encountered when converting tasks\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"C | false | go to bookstore\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Unknown task type encountered when converting tasks\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Zisaac99"},"content":"            Task task \u003d Task.stringToTask(\"\");","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Unknown task type encountered when converting tasks\",","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-27T04:06:54","isFullCredit":false}],"authorContributionMap":{"Zisaac99":226}},{"path":"src/test/java/zell/util/DateOrTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"package zell.util;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"import zell.exception.ZellException;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"import zell.util.DateOrTime;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"public class DateOrTimeTest {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"    public void constructor_validDate_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"        DateOrTime date \u003d assertDoesNotThrow(() -\u003e new DateOrTime(\"2025-08-09\"));","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"Aug 9 2025\", date.toString());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"    public void constructor_validDateTime_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"        DateOrTime dateTime \u003d assertDoesNotThrow(() -\u003e new DateOrTime(\"2025-08-10 07:30\"));","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(\"Aug 10 2025 07:30 am\", dateTime.toString());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"    public void constructor_invalidDate_exceptionThrown() {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"09-07-2025\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"09-2025-07\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"avava\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zisaac99"},"content":"    public void constructor_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"09-07-2025 19:30\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"09-2025-07 19:30\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"09-07-2025 19:30\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"2025-08-10 30:07\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"2025-08-10 30:a\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zisaac99"},"content":"        try {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zisaac99"},"content":"            DateOrTime date \u003d new DateOrTime(\"avava\");","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zisaac99"},"content":"            fail();","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zisaac99"},"content":"        } catch (ZellException ze) {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zisaac99"},"content":"            assertEquals(\"Date or DateTime should be in the respective formats \"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zisaac99"},"content":"                    + \"yyyy-MM-dd or yyyy-MM-dd HH:mm.\\nFor example: 2019-12-01 or 2019-12-01 18:30\",","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zisaac99"},"content":"                    ze.getMessage());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zisaac99"},"content":"        }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zisaac99"},"content":"    public void originalFormat_validDate_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zisaac99"},"content":"        String dateString \u003d \"2025-08-09\";","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zisaac99"},"content":"        DateOrTime date \u003d assertDoesNotThrow(() -\u003e new DateOrTime(dateString));","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(dateString, date.originalFormat());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zisaac99"},"content":"    @Test","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zisaac99"},"content":"    public void originalFormat_validDateTime_success() throws ZellException {","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zisaac99"},"content":"        String dateTimeString \u003d \"2025-08-10 07:30\";","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zisaac99"},"content":"        DateOrTime dateTime \u003d assertDoesNotThrow(() -\u003e new DateOrTime(dateTimeString));","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zisaac99"},"content":"        assertEquals(dateTimeString, dateTime.originalFormat());","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zisaac99"},"content":"    }","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zisaac99"},"content":"}","lastModifiedDate":"2025-08-27T04:07:42","isFullCredit":false}],"authorContributionMap":{"Zisaac99":125}},{"path":"text-ui-test/input_bye.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-18T23:59:24","isFullCredit":false}],"authorContributionMap":{"Zisaac99":1}},{"path":"text-ui-test/input_deadline.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"deadline return book /by 2025-08-02","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"deadline read book /by 2025-08-31","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"deadline buy book /by 2025-08-14","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"deadline throw book /by 2025-09-02","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":9}},{"path":"text-ui-test/input_deadline2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-31","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:17:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":7}},{"path":"text-ui-test/input_deadline_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"deadline do stuff /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"deadline","lastModifiedDate":"2025-08-19T14:19:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"deadlines","lastModifiedDate":"2025-08-19T14:19:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"deadline do stuff","lastModifiedDate":"2025-08-19T14:19:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"deadline /by","lastModifiedDate":"2025-08-19T14:19:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"deadline /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:19:20","isFullCredit":false}],"authorContributionMap":{"Zisaac99":7}},{"path":"text-ui-test/input_event.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"event meet team for project meeting /from 2025-08-11 00:30 /to 2025-08-11 18:30","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"event play game /from 2025-08-11 /to 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"event travel to school /from 2025-08-10 /to 2025-08-10 10:00","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false}],"authorContributionMap":{"Zisaac99":7}},{"path":"text-ui-test/input_event2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"event NUS Year 2 Semester 1 /from 2025-08-11 /to 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"event Study /from 2025-08-11 /to 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:17:45","isFullCredit":false}],"authorContributionMap":{"Zisaac99":5}},{"path":"text-ui-test/input_event_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"event do stuff /from 2025-08-11 /to 2025-08-12","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"event","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"events","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"event do stuff","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"event do stuff /from 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"event do stuff /to 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"event do stuff /to 2025-08-11 /from 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"event /from /to s","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:24:15","isFullCredit":false}],"authorContributionMap":{"Zisaac99":10}},{"path":"text-ui-test/input_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-29","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-30","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:20:08","isFullCredit":false}],"authorContributionMap":{"Zisaac99":15}},{"path":"text-ui-test/input_list_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"lista","lastModifiedDate":"2025-08-19T14:11:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list 2","lastModifiedDate":"2025-08-19T14:11:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"list list","lastModifiedDate":"2025-08-19T14:11:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:11:08","isFullCredit":false}],"authorContributionMap":{"Zisaac99":4}},{"path":"text-ui-test/input_mark.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark 2","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"mark 3","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"mark 4","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false}],"authorContributionMap":{"Zisaac99":19}},{"path":"text-ui-test/input_mark2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:22:36","isFullCredit":false}],"authorContributionMap":{"Zisaac99":19}},{"path":"text-ui-test/input_mark_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo study","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-13","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"event go school /from 2025-08-13 14:00 /to 2025-08-13 17:00","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"marks","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"mark a","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"mark 100","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"mark 0","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:32:20","isFullCredit":false}],"authorContributionMap":{"Zisaac99":11}},{"path":"text-ui-test/input_todo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":7}},{"path":"text-ui-test/input_todo2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo play game","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"todo buy game","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"todo find game","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"todo borrow game","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:15:09","isFullCredit":false}],"authorContributionMap":{"Zisaac99":9}},{"path":"text-ui-test/input_todo_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo 2","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"todo","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"todos","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"todo a","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"todo todo","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"todo 9999","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:13:55","isFullCredit":false}],"authorContributionMap":{"Zisaac99":7}},{"path":"text-ui-test/input_unmark.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark 2","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"unmark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"mark 3","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-22","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"mark 4","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-16","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"unmark 4","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false}],"authorContributionMap":{"Zisaac99":23}},{"path":"text-ui-test/input_unmark2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo read book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"todo buy book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark 2","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"todo find book","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"unmark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"mark 3","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"deadline play game /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"deadline read game manual /by 2025-08-19","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zisaac99"},"content":"deadline buy game /by 2025-08-22","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zisaac99"},"content":"mark 4","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zisaac99"},"content":"deadline test game /by 2025-08-16","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"unmark 3","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zisaac99"},"content":"unmark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"unmark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zisaac99"},"content":"unmark 1","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T01:27:25","isFullCredit":false}],"authorContributionMap":{"Zisaac99":29}},{"path":"text-ui-test/input_unmark_err.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zisaac99"},"content":"todo study","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zisaac99"},"content":"deadline do homework /by 2025-08-11","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zisaac99"},"content":"event go school /from 2025-08-11 14:00 /to 2025-08-11 17:00","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zisaac99"},"content":"mark 1","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"mark 2","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"mark 3","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zisaac99"},"content":"unmark 2","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"list","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zisaac99"},"content":"unmarks","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zisaac99"},"content":"unmark a","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"unmark 100","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zisaac99"},"content":"unmark 0","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zisaac99"},"content":"bye","lastModifiedDate":"2025-08-19T14:35:01","isFullCredit":false}],"authorContributionMap":{"Zisaac99":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zisaac99"},"content":"REM Solution below to pass in argument to .bat file adapted from: https://stackoverflow.com/questions/26551/how-can-i-pass-arguments-to-a-batch-file","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zisaac99"},"content":"set fileName\u003d%1","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zisaac99"},"content":"if exist ACTUAL_%fileName%.TXT del ACTUAL_%fileName%.TXT","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zisaac99"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\zell\\*.java","lastModifiedDate":"2025-08-27T00:27:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zisaac99"},"content":"java -classpath ..\\bin Zell \u003c input_%fileName%.txt \u003e ACTUAL_%fileName%.TXT","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zisaac99"},"content":"FC ACTUAL_%fileName%.TXT EXPECTED_%fileName%.TXT","lastModifiedDate":"2025-08-18T23:52:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zisaac99"},"content":"","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zisaac99"},"content":"rmdir /s /q data","lastModifiedDate":"2025-08-27T00:03:02","isFullCredit":false}],"authorContributionMap":{"Zisaac99":9,"-":17}}]
