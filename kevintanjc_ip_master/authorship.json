[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"# JavaBot","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"JavaBot is a simple command-line task manager written in Java. It supports creating, managing, and persisting different types of tasks such as **To-Dos**, **Deadlines**, and **Events**. The project is built with Gradle, tested with JUnit 5 + Mockito, and packaged with the Shadow plugin.","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"---","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"## Features","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"- **Task Management**","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"    - Add different types of tasks:","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"        - ToDos (`todo \u003cdescription\u003e`)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"        - Deadlines (`deadline \u003cdescription\u003e /by \u003cdate\u003e`)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"        - Events (`event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"    - Mark/unmark tasks as done","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"    - Delete tasks by index","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"    - List all tasks in your checklist","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"- **Persistence**","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"    - Tasks are automatically saved to disk via `SavingService`","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"    - Tasks are reloaded at startup with `LoadingService`","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"- **Robust Error Handling**","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    - Friendly messages for invalid input, missing indices, or bad date formats","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"    - Custom parsing with `DateTimeUtil` to handle date/time input","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"- **Testing**","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"    - Unit tests with JUnit 5","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"    - Mockito for mocking dependencies and verifying behavior","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"    - Coverage for services, storage, and core task logic","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"---","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"## Prerequisites","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"- **JDK 17**","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"- **Gradle 7+** (the wrapper is included)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"- Recommended IDE: IntelliJ IDEA (latest version)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"---","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"## Getting Started","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"### Run with Gradle","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"```bash","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"./gradlew run","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T11:44:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"### Build a fat JAR (Shadow plugin)","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"```bash","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"./gradlew shadowJar","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"### The runnable JAR will be in build/libs/javabot.jar:","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"```bash","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"java -jar build/libs/javabot.jar","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"```","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false}],"authorContributionMap":{"kevintanjc":49,"-":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-core\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2025-08-27T00:23:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"    testImplementation group: \u0027org.mockito\u0027, name: \u0027mockito-inline\u0027, version: \u00275.2.0\u0027","lastModifiedDate":"2025-08-27T00:23:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"    mainClass.set(\"JavaBot\")","lastModifiedDate":"2025-08-27T00:23:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"    archiveBaseName \u003d \"javabot\"","lastModifiedDate":"2025-08-27T00:23:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"kevintanjc":4,"-":39}},{"path":"src/main/java/app/JavaBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package app;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.services.BotService;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":" * This serves as the entry point for the JavaBot application.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":" * This class initializes the BotService which handles the core functionality of the bot.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"public class JavaBot {","lastModifiedDate":"2025-08-20T11:44:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-20T11:44:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"        try {","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T11:44:38","isFullCredit":false}],"authorContributionMap":{"kevintanjc":19}},{"path":"src/main/java/resources/util/constants/BotConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.constants;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":" * Contains constant values used throughout the bot application.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":" * The {@code BotConstants} class provides a centralized location for defining","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":" * constant values such as command keywords, file paths, and formatting strings.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":" * This helps maintain consistency and makes it easier to manage these values","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":" * across the application.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"public abstract class BotConstants {","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"    public static final String LINE_SEPARATOR \u003d \"_________________________________________\";","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2025-08-27T02:52:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:52:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"    public static final String TODO_TASK_TYPE \u003d \"[T]\";","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"    public static final String DEADLINE_TASK_TYPE \u003d \"[D]\";","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"    public static final String EVENT_TASK_TYPE \u003d \"[E]\";","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"    public static final String TODO_TASK_DESCRIPTION \u003d \"todo\";","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"    public static final String DEADLINE_TASK_DESCRIPTION \u003d \"deadline\";","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"    public static final String EVENT_TASK_DESCRIPTION \u003d \"event\";","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"    public static final String NO_DATE_GIVEN \u003d \"I DUNNO \u003e.\u003c\";","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    public static final String FILE_PATH \u003d \"src/data/checklist.txt\";","lastModifiedDate":"2025-08-26T15:05:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"    public enum Symbol {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"        COMPLETED(\"[X]\"),","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"        INCOMPLETE(\"[ ]\");","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"        private final String symbol;","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"        Symbol(String symbol) {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"            this.symbol \u003d symbol;","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"        @Override","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"        public String toString() {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"            return symbol;","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T16:20:12","isFullCredit":false}],"authorContributionMap":{"kevintanjc":62}},{"path":"src/main/java/resources/util/datastorage/CheckList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.datastorage;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.Task;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import java.util.List;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.INDENT;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * Represents a checklist that manages a list of tasks.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":" * The {@link CheckList} class provides methods to handle and manipulate a list of {@link Task} objects.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"public class CheckList {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"    private List\u003cTask\u003e checkList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"    public CheckList() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"        this.checkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"     * Adds a task to the checklist.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"     * @param task The {@link Task} to be added to the checklist.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"        checkList.add(task);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"     * Removes a task from the checklist by its index.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"     * @param index The index of the task to be removed (0-indexed).","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"    public void removeTaskByIndex(int index) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"        if (index \u003c 0 || index \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task number! Please provide a valid task number to delete.\");","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"        Task removedTask \u003d checkList.remove(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(INDENT + \"Roger. The following task is removed:\\n\"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"                + INDENT + removedTask.toString() + \"\\n\" + INDENT + \"You now have \" + this.getSize() + \" tasks in your list.\");","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"     * Retrieves a task from the checklist by its index.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"     * @param index The index of the task to be retrieved (0-indexed).","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"     * @return The {@link Task} at the specified index.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"        return checkList.get(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"     * Checks if the checklist is empty.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code true} if the checklist is empty, {@code false} otherwise.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"        return checkList.isEmpty();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"     * Gets the number of tasks in the checklist.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"     * @return The size of the checklist.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"        return checkList.size();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"     * Prints all tasks in the checklist with their respective indices.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"     * If the checklist is empty, it notifies the user accordingly.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"    public void printTasks() {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"        if (checkList.isEmpty()) {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Uh oh...You currently have no tasks in your list! Add some tasks to get started!\");","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(INDENT + \"Certainly! Here are your inputs thus far:\");","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"        for (int i \u003d 0; i \u003c checkList.size(); i++) {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + (i + 1) + \". \" + checkList.get(i).toString());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"        System.out.printf(INDENT + \"You currently have %d items in your list!%n\", this.getSize());","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kevintanjc"},"content":"     * Marks the task at the specified index as completed.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kevintanjc"},"content":"     * @param index The index of the task to be marked as completed (0-based).","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kevintanjc"},"content":"    public void markTask(int index) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kevintanjc"},"content":"        Task task \u003d checkList.get(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kevintanjc"},"content":"        if (task.isCompleted()) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"The following task has already been marked as done: \" + task.getDescription());","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kevintanjc"},"content":"            task.setCompleted();","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Well done! I\u0027ll mark it as done for you.\\n\" + INDENT","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kevintanjc"},"content":"                    + task);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kevintanjc"},"content":"     * Marks the task at the specified index as not completed.","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kevintanjc"},"content":"     * @param index The index of the task to be marked as not completed (0-based).","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T10:47:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kevintanjc"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kevintanjc"},"content":"        Task task \u003d checkList.get(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kevintanjc"},"content":"        if (!task.isCompleted()) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"The following task has already been marked as not done: \" + task.getDescription());","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kevintanjc"},"content":"            task.setCompleted();","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Okay! I\u0027ll mark it as not done for you.\\n\" + INDENT","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kevintanjc"},"content":"                    + task);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kevintanjc"},"content":"     * Searches for tasks containing the specified keyword and prints them.","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kevintanjc"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kevintanjc"},"content":"     * @return","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kevintanjc"},"content":"    public void searchAndPrintTasks(String keyword) {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kevintanjc"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kevintanjc"},"content":"        for (Task task : checkList) {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kevintanjc"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kevintanjc"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kevintanjc"},"content":"        if (matchedTasks.isEmpty()) {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"No matching tasks found for the keyword: \" + keyword);","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kevintanjc"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kevintanjc"},"content":"                System.out.println(INDENT + (i + 1) + \". \" + matchedTasks.get(i).toString());","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false}],"authorContributionMap":{"kevintanjc":148}},{"path":"src/main/java/resources/util/parsers/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.parsers;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":" * Utility class for converting between String representations of dates and LocalDateTime objects.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" * The {@link DateTimeUtil} class provides static methods to convert date strings in specific formats","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":" * to {@link LocalDateTime} objects and vice versa. It also handles formatting and parsing exceptions.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" * Supported formats:","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":" *     \u003cli\u003eInput format: \"dd/MM/yyyy HHmm\" (e.g., \"01/01/1990 1800\")\u003c/li\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":" *     \u003cli\u003eOutput format: \"MMM dd yyyy, h:mm a\" (e.g., \"Jan 01 1990, 6:00 PM\")\u003c/li\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"public class DateTimeUtil {","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"     * Converts a date string in the format \"dd/MM/yyyy HHmm\" to a {@link LocalDateTime} object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"     * @param dateStr the date string to convert.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code LocalDateTime} — the corresponding LocalDateTime object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"     * @throws DateTimeParseException if the input string is not in the expected format.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"    public static LocalDateTime convertStringToLocalDate(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"        String[] parts \u003d dateStr.split(\" \");","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"        String time \u003d parts[1].substring(0,2) + \":\" + parts[1].substring(2,4);","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"        return LocalDateTime.parse(parts[0] + \" \" + time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"     * Converts a {@link LocalDateTime} object to a formatted date string in the format \"MMM dd yyyy, h:mm a\".","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"     * @param date the LocalDateTime object to convert.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — the formatted date string.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"    public static String convertLocalDateToFormattedString(LocalDateTime date) {","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\"));","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"     * Converts a formatted date string in the format \"MMM dd yyyy, h:mm a\" to a {@link LocalDateTime} object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"     * If the input string is null or equals \"No date given\", the method returns null.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"     * @param dateStr the formatted date string to convert.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code LocalDateTime} — the corresponding LocalDateTime object, or null if input is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"     * @throws DateTimeParseException if the input string is not in the expected format.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"    public static LocalDateTime convertFormattedStringDateToLocalDate(String dateStr) throws DateTimeParseException {","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"        if (isNull(dateStr) || dateStr.equals(\"No date given\")) {","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"            return null;","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"        return LocalDateTime.parse(dateStr, DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\"));","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"    private DateTimeUtil() {}","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-26T18:43:01","isFullCredit":false}],"authorContributionMap":{"kevintanjc":66}},{"path":"src/main/java/resources/util/services/BotService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.services;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.datastorage.CheckList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import resources.util.parsers.DateTimeUtil;","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.DeadlineTask;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.EventTask;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.Task;","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.ToDosTask;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.DEADLINE_TASK_DESCRIPTION;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.DELETE_COMMAND;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.EVENT_TASK_DESCRIPTION;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.EXIT_COMMAND;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.FIND_COMMAND;","lastModifiedDate":"2025-08-27T02:52:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.INDENT;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.LINE_SEPARATOR;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.LIST_COMMAND;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.MARK_COMMAND;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.TODO_TASK_DESCRIPTION;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.UNMARK_COMMAND;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":" * Represents the main service of the bot application.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":" * The BotService class extends {@link Service} class and provides implementations for starting and ending","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":" * the service. It handles user input, processes commands, and manages a checklist of tasks.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"public class BotService extends Service {","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"    private CheckList checkList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"     * Executes the main service loop, handling user input and processing commands.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"     * The method continuously reads user input from the console, processes commands such as adding tasks,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"     * marking tasks as completed, unmarking tasks, deleting tasks, and listing all tasks. The loop continues","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"     * until the user inputs the exit command.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalStateException    if an invalid task type is provided.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"     * @throws NullPointerException     if task creation fails due to null values.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"     * @throws IndexOutOfBoundsException if an invalid task index is provided for marking or unmarking.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException              if an I/O error occurs during service execution.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"    protected void executeService() throws IllegalStateException, NullPointerException,","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"            IndexOutOfBoundsException, IOException {","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"        while (true) {","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"            int taskType \u003d getTask(input.split(\" \")[0]);","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"            if (command.equals(EXIT_COMMAND)) {","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"                break;","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"            } else if (command.equals(LIST_COMMAND)) {","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"                checkList.printTasks();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"            } else if (input.length() \u003e\u003d 6 \u0026\u0026 command.equals(MARK_COMMAND)) {","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"                try {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"                    Integer index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"                    if (index \u003c input.length()) {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"                        checkList.markTask(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"                    } else {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"                        System.out.println(INDENT + \"Please provide a valid task number to mark.\");","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"                    }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"                    throw new NumberFormatException(\"Invalid task number format! Unable to parse as an integer.\");","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"                }","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"            } else if (input.length() \u003e\u003d 8 \u0026\u0026 command.equals(UNMARK_COMMAND)) {","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"                try {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"                    Integer index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"                    if (index \u003c input.length()) {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"                        checkList.unmarkTask(index);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"                    } else {","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"                        System.out.println(INDENT + \"Please provide a valid task number to unmark.\");","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"                    }","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"                    throw new NumberFormatException(\"Invalid task number format! Unable to parse as an integer.\");","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"                }","lastModifiedDate":"2025-08-21T00:24:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"            } else if (command.equals(DELETE_COMMAND)) {","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"                checkList.removeTaskByIndex(Integer.parseInt(input.split(\" \")[1]) - 1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"            } else if (command.equals(FIND_COMMAND)) {","lastModifiedDate":"2025-08-27T02:52:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"                checkList.searchAndPrintTasks(input.split(\" \")[1]);","lastModifiedDate":"2025-08-27T03:20:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kevintanjc"},"content":"            } else {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kevintanjc"},"content":"                insertTaskIntoChecklist(taskType, input, checkList);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kevintanjc"},"content":"        scanner.close();","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kevintanjc"},"content":"        endService();","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kevintanjc"},"content":"        new SavingService(checkList);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kevintanjc"},"content":"     * Determines the type of {@link Task} based on the input string.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kevintanjc"},"content":"     * @param str the input String representing the task command.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code Integer} - 1 for To-Do, 2 for Deadline, 3 for Event, -1 for invalid task type.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kevintanjc"},"content":"    private Integer getTask(String str) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kevintanjc"},"content":"        if (str.length() \u003e\u003d 4) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kevintanjc"},"content":"            if (str.equals(TODO_TASK_DESCRIPTION)) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kevintanjc"},"content":"                return 1;","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kevintanjc"},"content":"            } else if (str.equals(DEADLINE_TASK_DESCRIPTION)) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kevintanjc"},"content":"                return 2;","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kevintanjc"},"content":"            } else if (str.equals(EVENT_TASK_DESCRIPTION)) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kevintanjc"},"content":"                return 3;","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kevintanjc"},"content":"            } else {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kevintanjc"},"content":"                return -1;","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kevintanjc"},"content":"        return -1;","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kevintanjc"},"content":"     * Inserts {@link EventTask}, {@link ToDosTask} or {@link DeadlineTask} into the checklist","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kevintanjc"},"content":"     * based on certain conditions.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kevintanjc"},"content":"     * @param taskFlag  an Integer representing the type of task (1 for To-Do, 2 for Deadline, 3 for Event).","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kevintanjc"},"content":"     * @param inputString the input String containing the task details.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kevintanjc"},"content":"     * @param checkList the Checklist object to which the task will be added.","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalStateException    if an invalid task type is provided.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kevintanjc"},"content":"     * @throws NullPointerException     if task creation fails due to null values.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kevintanjc"},"content":"     * @return","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kevintanjc"},"content":"    private void insertTaskIntoChecklist(Integer taskFlag, String inputString, CheckList checkList)","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kevintanjc"},"content":"            throws IllegalStateException, NullPointerException {","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kevintanjc"},"content":"        if (taskFlag \u003d\u003d -1) {","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"Invalid task type! Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kevintanjc"},"content":"        if (taskFlag \u003d\u003d 1) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kevintanjc"},"content":"            checkList.addTask(initializeToDoTask(inputString));","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kevintanjc"},"content":"        } else if (taskFlag \u003d\u003d 2) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kevintanjc"},"content":"            checkList.addTask(initializeDeadlineTask(inputString));","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kevintanjc"},"content":"        } else if (taskFlag \u003d\u003d 3) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kevintanjc"},"content":"            checkList.addTask(initializeEventTask(inputString));","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kevintanjc"},"content":"            throw new NullPointerException(\"Task creation failed! Please check your input.\");","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kevintanjc"},"content":"     * Initializes a {@link ToDosTask} from an input String.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kevintanjc"},"content":"     * @param inputStr the input String containing the task details.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code ToDosTask} - the initialized ToDosTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalStateException if the task description is empty.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kevintanjc"},"content":"    private ToDosTask initializeToDoTask(String inputStr) throws IllegalStateException {","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kevintanjc"},"content":"        String description \u003d inputStr.substring(5);","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kevintanjc"},"content":"        ToDosTask task \u003d new ToDosTask(description);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kevintanjc"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"To-Do task description cannot be empty!\");","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(INDENT + \"Thanks for letting me know! I have added:\\n\"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kevintanjc"},"content":"                + INDENT + task.toString());","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kevintanjc"},"content":"        return task;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kevintanjc"},"content":"     * Initializes a {@link DeadlineTask} from an input String.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kevintanjc"},"content":"     * @param inputStr the input String containing the task details.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code DeadlineTask} - the initialized DeadlineTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalStateException    if the task description is empty or format is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kevintanjc"},"content":"     * @throws DateTimeParseException if the date format is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kevintanjc"},"content":"    private DeadlineTask initializeDeadlineTask(String inputStr) throws IllegalStateException, DateTimeParseException {","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kevintanjc"},"content":"        String[] parts \u003d inputStr.substring(9).split(\" /by \");","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kevintanjc"},"content":"        for (String str : parts) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kevintanjc"},"content":"            if (str.contains(\"/by\")) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kevintanjc"},"content":"                throw new IllegalStateException(\"Invalid format for Deadline task!\"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kevintanjc"},"content":"                        + \"Use \u0027deadline \u003cdescription\u003e /by \u003cdate\u003e\u0027.\");","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kevintanjc"},"content":"        if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"Deadline task description cannot be empty!\");","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kevintanjc"},"content":"        } else if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kevintanjc"},"content":"            DeadlineTask task \u003d new DeadlineTask(parts[0], null);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Thanks for letting me know! I have added:\\n\"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kevintanjc"},"content":"                    + INDENT + task);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kevintanjc"},"content":"            return task;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kevintanjc"},"content":"        } else if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kevintanjc"},"content":"            DeadlineTask task \u003d new DeadlineTask(parts[0], DateTimeUtil.convertStringToLocalDate(parts[1]));","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(INDENT + \"Thanks for letting me know! I have added:\\n\"","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kevintanjc"},"content":"                    + INDENT + task);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kevintanjc"},"content":"            return task;","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"Invalid format for Deadline task!\"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kevintanjc"},"content":"                    + \"Use \u0027deadline \u003cdescription\u003e /by \u003cdate\u003e\u0027.\");","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T22:47:28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kevintanjc"},"content":"     * Initializes an {@link EventTask} from an input String.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kevintanjc"},"content":"     * @param inputStr the input String containing the task details.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code EventTask} - the initialized EventTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalStateException    if the task description is empty or format is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kevintanjc"},"content":"     * @throws DateTimeParseException if the date format is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kevintanjc"},"content":"    private EventTask initializeEventTask(String inputStr) throws IllegalStateException, DateTimeParseException {","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kevintanjc"},"content":"        String[] eventParts \u003d inputStr.substring(6).split(\" /from | /to \");","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kevintanjc"},"content":"        for (String str : eventParts) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kevintanjc"},"content":"            if (str.contains(\"/from\") || eventParts[0].contains(\"/to\")) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kevintanjc"},"content":"                throw new IllegalStateException(\"Invalid format for Event task!\"","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kevintanjc"},"content":"                        + \"Use \u0027event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\u0027.\");","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kevintanjc"},"content":"        if (eventParts.length \u003d\u003d 0) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"Event task description cannot be empty!\");","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kevintanjc"},"content":"        } else if (eventParts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kevintanjc"},"content":"            return new EventTask(eventParts[0].trim(), null, null);","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kevintanjc"},"content":"        } else if (eventParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kevintanjc"},"content":"            return new EventTask(eventParts[0].trim(), DateTimeUtil.convertStringToLocalDate(eventParts[1]),","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kevintanjc"},"content":"                    null);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kevintanjc"},"content":"        } else if (eventParts.length \u003d\u003d 3) {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kevintanjc"},"content":"            return new EventTask(eventParts[0].trim(),","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kevintanjc"},"content":"                    DateTimeUtil.convertStringToLocalDate(eventParts[1]),","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kevintanjc"},"content":"                    DateTimeUtil.convertStringToLocalDate(eventParts[2]));","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalStateException(\"Invalid format for Event task! Use \u0027event \u003cdescription\u003e\"","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kevintanjc"},"content":"                    + \"/from \u003cstart date\u003e /to \u003cend date\u003e\u0027.\");","lastModifiedDate":"2025-08-26T18:46:17","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-20T23:38:38","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T23:57:40","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"kevintanjc"},"content":"     * Starts the bot service by loading the {@link CheckList} and initiating the command execution loop.","lastModifiedDate":"2025-08-27T03:23:00","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException if an I/O error occurs during service startup.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"kevintanjc"},"content":"    protected void startService() throws IOException {","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"kevintanjc"},"content":"        LoadingService load \u003d new LoadingService();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"kevintanjc"},"content":"        this.checkList \u003d load.getChecklist();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(LINE_SEPARATOR + \"\\n\" + \"Hello! I\u0027m JavaBot\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"kevintanjc"},"content":"        executeService();","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"kevintanjc"},"content":"     * Ends the bot service by displaying a farewell message.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"kevintanjc"},"content":"    protected void endService() {","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(\"See you next time!\\n\" + LINE_SEPARATOR);","lastModifiedDate":"2025-08-20T23:07:19","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"kevintanjc"},"content":"    public BotService() throws IOException {","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"kevintanjc"},"content":"        startService();","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T16:51:37","isFullCredit":false}],"authorContributionMap":{"kevintanjc":258}},{"path":"src/main/java/resources/util/services/LoadingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.services;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.datastorage.CheckList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import resources.util.parsers.DateTimeUtil;","lastModifiedDate":"2025-08-26T18:45:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.DeadlineTask;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.EventTask;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.Task;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.ToDosTask;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.EVENT_TASK_TYPE;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.FILE_PATH;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":" * Service class responsible for loading tasks from a file into a checklist.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":" * The {@link LoadingService} reads tasks from a specified file, parses them, and adds them to a Checklist object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":" * It supports different types of tasks including EventTask, ToDosTask, and DeadlineTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":" * Usage:","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":" *     LoadingService loadingService \u003d new LoadingService();","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":" *     Checklist checklist \u003d loadingService.getChecklist();","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":" * The {@link LoadingService} class extends {@link Service} class and provides implementations for starting and ending","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":" * the service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":" * @see CheckList","lastModifiedDate":"2025-08-27T02:36:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":" * @see Task","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":" * @see EventTask","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":" * @see ToDosTask","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":" * @see DeadlineTask","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"public class LoadingService extends Service {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    private CheckList checklist;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"     * Executes the loading service by reading tasks from a storage file and adding them to the {@link Checklist}.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"     * This method reads each line from the file, parses it into a {@link Task} object,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"     * and adds it to the {@link Checklist}.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"     * If the checklist is empty after loading, it notifies the user.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException if an I/O error occurs while reading the file.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"    protected void executeService() throws IOException {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"        checklist \u003d new CheckList();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"        while(scanner.hasNextLine()) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"            if (line.startsWith(\"[\")) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"                checklist.addTask(parseLineToTask(line));","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"        if (checklist \u003d\u003d null || checklist.isEmpty()) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(\"There are no tasks in your checklist.\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"            System.out.println(\"Tasks have been loaded successfully\\n\" + \"type \u0027list\u0027 to view your tasks.\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"     * Starts the loading service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException if an I/O error occurs during service startup.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"    protected void startService() throws IOException {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(\"Loading tasks from file...\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"        executeService();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"     * Ends the loading service by closing the scanner resource.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"    protected void endService() {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"        scanner.close();","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kevintanjc"},"content":"     * Parses a {@link String} line from the file and converts it into a corresponding Task object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kevintanjc"},"content":"     * @param line the {@code String} from the file representing a task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kevintanjc"},"content":"     * @return the Task object created from the line.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kevintanjc"},"content":"     * @throws IllegalArgumentException if the task type is invalid.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kevintanjc"},"content":"    private Task parseLineToTask(String line) throws IllegalArgumentException {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kevintanjc"},"content":"        String taskType \u003d line.substring(0, 3);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kevintanjc"},"content":"        if (taskType.equals(EVENT_TASK_TYPE)) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kevintanjc"},"content":"            return createEventTask(line);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kevintanjc"},"content":"        } else if (taskType.equals(\"[T]\")) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kevintanjc"},"content":"            return createToDoTask(line);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kevintanjc"},"content":"        } else if (taskType.equals(\"[D]\")) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kevintanjc"},"content":"            return createDeadlineTask(line);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kevintanjc"},"content":"        } else {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kevintanjc"},"content":"            throw new IllegalArgumentException(\"Invalid task type: \" + taskType);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kevintanjc"},"content":"     * Creates an EventTask from a given line.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kevintanjc"},"content":"     * @param line  the {@code String} from the file representing an EventTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kevintanjc"},"content":"     * @return {@link EventTask} - the created EventTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kevintanjc"},"content":"    private EventTask createEventTask(String line) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kevintanjc"},"content":"        String[] parts \u003d line.split(\" \\\\(from: | to: |\\\\)\");","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kevintanjc"},"content":"        String description \u003d parts[0].substring(7);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kevintanjc"},"content":"        String startDate \u003d parts[1];","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kevintanjc"},"content":"        String endDate \u003d formatDate(parts[2]);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kevintanjc"},"content":"        boolean completed \u003d checkCompletedTask(parts[0].substring(3));","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kevintanjc"},"content":"        EventTask output \u003d new EventTask(description, DateTimeUtil.convertFormattedStringDateToLocalDate(startDate),","lastModifiedDate":"2025-08-26T18:45:28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kevintanjc"},"content":"                DateTimeUtil.convertFormattedStringDateToLocalDate(endDate));","lastModifiedDate":"2025-08-26T18:45:28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kevintanjc"},"content":"        if (completed) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kevintanjc"},"content":"            output.setCompleted();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kevintanjc"},"content":"        return output;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kevintanjc"},"content":"     * Creates a ToDosTask from a given line.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kevintanjc"},"content":"     * @param line  the {@code String} from the file representing a ToDosTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kevintanjc"},"content":"     * @return {@link ToDosTask} - the created ToDosTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kevintanjc"},"content":"    private ToDosTask createToDoTask(String line) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kevintanjc"},"content":"        String[] parts \u003d line.split(\"(?\u003c!\\\\[)\\\\s+(?!\\\\])\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kevintanjc"},"content":"        String description \u003d parts[1];","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kevintanjc"},"content":"        boolean completed \u003d checkCompletedTask(parts[0].substring(3));","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kevintanjc"},"content":"        ToDosTask output \u003d new ToDosTask(description);","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kevintanjc"},"content":"        if (completed) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kevintanjc"},"content":"            output.setCompleted();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kevintanjc"},"content":"        return output;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kevintanjc"},"content":"     * Creates a DeadlineTask from a given line.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kevintanjc"},"content":"     * @param line  the {@code String} from the file representing a DeadlineTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kevintanjc"},"content":"     * @return {@link DeadlineTask} - the created DeadlineTask object.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kevintanjc"},"content":"    private Task createDeadlineTask(String line) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kevintanjc"},"content":"        String[] parts \u003d line.split(\" \\\\(by: \");","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kevintanjc"},"content":"        String description \u003d parts[0].substring(7);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kevintanjc"},"content":"        String endDate \u003d formatDate(parts[1]);","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kevintanjc"},"content":"        boolean completed \u003d checkCompletedTask(parts[0].substring(3));","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kevintanjc"},"content":"        DeadlineTask output \u003d new DeadlineTask(description, DateTimeUtil.convertFormattedStringDateToLocalDate(endDate));","lastModifiedDate":"2025-08-26T18:45:28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kevintanjc"},"content":"        if (completed) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kevintanjc"},"content":"            output.setCompleted();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kevintanjc"},"content":"        return output;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kevintanjc"},"content":"     * Checks if a task is completed based on its status string.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kevintanjc"},"content":"     * @param status    the symbol {@link String} of the task (e.g., \"[X]\" for completed, \"[ ]\" for not completed).","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code boolean} - true if the task is completed, false otherwise.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kevintanjc"},"content":"    private boolean checkCompletedTask(String status) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kevintanjc"},"content":"        return status.equals(\"[X]\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kevintanjc"},"content":"     * Formats a date string by removing parentheses.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kevintanjc"},"content":"     * @param date  the {@code String} representing a date with parentheses.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} - the formatted date string without parentheses.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kevintanjc"},"content":"    private String formatDate(String date) {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kevintanjc"},"content":"        return date.replaceAll(\"[()]\", \"\");","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kevintanjc"},"content":"     * Gets the checklist containing the loaded tasks.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code Checklist} — the checklist with loaded tasks.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kevintanjc"},"content":"    public CheckList getChecklist() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kevintanjc"},"content":"        return checklist;","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kevintanjc"},"content":"    public LoadingService() throws IOException {","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kevintanjc"},"content":"        Path filePath \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kevintanjc"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kevintanjc"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kevintanjc"},"content":"        scanner \u003d new Scanner(Files.newBufferedReader(filePath));","lastModifiedDate":"2025-08-26T16:30:26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kevintanjc"},"content":"        startService();","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-26T16:23:04","isFullCredit":false}],"authorContributionMap":{"kevintanjc":200}},{"path":"src/main/java/resources/util/services/SavingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.services;","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.datastorage.CheckList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.FILE_PATH;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" * Service class responsible for saving tasks from a checklist to a file.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":" * The {@link SavingService} writes tasks from a {@link Checklist} object to a specified filepath.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":" * It ensures that the tasks are saved in a readable format, with each task on a new line.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":" * Usage:","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":" *     SavingService savingService \u003d new SavingService(checklist);","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":" * The {@link SavingService} class extends {@link Service} class and provides implementations for starting and ending","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":" * the service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":" * @see Checklist","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"public class SavingService extends Service {","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"    String filePath \u003d FILE_PATH;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"    CheckList checklist;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"     * Executes the saving service by writing tasks from the {@link Checklist} to a storage file.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"     * This method creates or overwrites the specified file and writes each task from the checklist","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"     * into the file, ensuring that each task is on a new line. It also includes a header indicating","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"     * that these are the saved tasks.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"    protected void executeService() throws IOException {","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(path, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)) {","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"            writer.write(\"Your saved tasks:\");","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"            writer.newLine();","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"            writer.newLine();","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"            for (int i \u003d 0; i \u003c checklist.getSize(); i++) {","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"                writer.write(checklist.getTaskByIndex(i).toString());","lastModifiedDate":"2025-08-26T20:08:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"                writer.newLine();","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"        endService();","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"     * Starts the saving service by initializing the file path and executing the service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"     * This method prints a message indicating the file path where tasks will be saved,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"     * and then calls the {@link #executeService()} method to perform the actual saving of tasks.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"     * @throws IOException if an I/O error occurs while starting the service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"    protected void startService() throws IOException {","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(\"Saving tasks to: \" + filePath);","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"        executeService();","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"     * Ends the saving service by printing a confirmation message.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"     * This method is called after the tasks have been successfully saved to the file,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"     * and it notifies the user that the tasks have been saved.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"    protected void endService() {","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"        System.out.println(\"Tasks saved successfully! Shutting down...\");","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"    public SavingService(CheckList checklist) throws IOException {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"        this.checklist \u003d checklist;","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"        startService();","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-26T15:05:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false}],"authorContributionMap":{"kevintanjc":90}},{"path":"src/main/java/resources/util/services/Service.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.services;","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":" * Abstract class representing a generic service with lifecycle methods.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":" * The {@link Service} class defines the structure for services that have a defined lifecycle,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":" * including methods to start, execute, and end the service.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":" * Subclasses must provide implementations for these abstract methods.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":" * Usage:","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" *     class MyService extends Service {","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":" *         // Implement abstract methods","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":" *     }","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"public abstract class Service {","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"    protected abstract void executeService() throws Exception;","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    protected abstract void startService() throws Exception;","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    protected abstract void endService();","lastModifiedDate":"2025-08-26T15:06:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-26T14:03:14","isFullCredit":false}],"authorContributionMap":{"kevintanjc":26}},{"path":"src/main/java/resources/util/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.tasks;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.parsers.DateTimeUtil;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.DEADLINE_TASK_TYPE;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.NO_DATE_GIVEN;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" * Represents a deadline task which has a description and an end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":" * A DeadlineTask object contains a description of the task and an end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" * It extends the {@link Task} class to include a deadline for the task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    private static final String TASK_TYPE \u003d DEADLINE_TASK_TYPE;","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    public DeadlineTask(String description, LocalDateTime endDate) {","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"     * Returns a String representation of the task which includes its description, completion as a symbol,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"     * and end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"     * Example: \"[D][ ] read book (by: Jan 01 1990, 12:00 pm)\"","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — a string representation of DeadlineTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"        String formattedEndDate \u003d isNull(endDate)","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"                ? NO_DATE_GIVEN","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"                : DateTimeUtil.convertLocalDateToFormattedString(endDate);","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"        return String.format(\"%s%s (by: %s)\", TASK_TYPE, super.toString(), formattedEndDate);","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T18:38:54","isFullCredit":false}],"authorContributionMap":{"kevintanjc":46}},{"path":"src/main/java/resources/util/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.tasks;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import resources.util.parsers.DateTimeUtil;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.EVENT_TASK_TYPE;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.NO_DATE_GIVEN;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * Represents an event task which has a description, start date, and end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":" * An EventTask object contains a description of the task, a start date, and an end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":" * It extends the {@link Task} class to include start and end timings of a given event.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"    private static final String TASK_TYPE \u003d EVENT_TASK_TYPE;","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"    public EventTask(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"     * Returns a String representation of the task which includes its description, completion as a symbol,","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"     * start date, and end date.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"     * Example: \"[E][ ] read book (from: Jan 01 1990, 12:00 pm to: Jan 01 1990, 1:00 pm)\"","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — a string representation of EventTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"        String formattedStartDate \u003d isNull(startDate)","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"                ? NO_DATE_GIVEN","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"                : DateTimeUtil.convertLocalDateToFormattedString(startDate);","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"        String formattedEndDate \u003d isNull(endDate)","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"                ? NO_DATE_GIVEN","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"                : DateTimeUtil.convertLocalDateToFormattedString(endDate);","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T18:44:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"        return String.format(\"%s%s (from: %s to: %s)\", TASK_TYPE, super.toString(),","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"                formattedStartDate, formattedEndDate);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T18:40:58","isFullCredit":false}],"authorContributionMap":{"kevintanjc":52}},{"path":"src/main/java/resources/util/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.tasks;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import resources.util.constants.BotConstants;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":" * Represents a basic task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":" * A Task object contains a description of the task and a boolean flag indicating whether the task is completed.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"public class Task {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"    private String description;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"    private boolean completed;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"        this.completed \u003d false;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"     * Gets the description of this task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — the description of the task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"        return description;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"    /** Gets whether the task is completed.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code boolean} — true if the task is completed, false otherwise.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"        return completed;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"     * If the task is completed, it will be marked as incomplete, and vice versa.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"     * @return","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    public void setCompleted() {","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"        completed \u003d !completed;","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:31:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"     * Returns a String representation of the task which includes its description and completion as a symbol.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"     * The completion symbol is \"[✗]\" if the task is completed and \"[ ]\" if it is not.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"     * Example: \"[ ] read book\" or \"[✗] write code\"","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — a string representation of the task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:31:19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"        String symbol \u003d completed","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"                ? BotConstants.Symbol.COMPLETED.toString()","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"                : BotConstants.Symbol.INCOMPLETE.toString();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"        return String.format(\"%s %s\", symbol, description);","lastModifiedDate":"2025-08-20T18:31:19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:31:19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T18:05:33","isFullCredit":false}],"authorContributionMap":{"kevintanjc":65}},{"path":"src/main/java/resources/util/tasks/ToDosTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.tasks;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import static resources.util.constants.BotConstants.TODO_TASK_TYPE;","lastModifiedDate":"2025-08-26T13:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"/**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":" * Represents a to-do task which has a description.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":" * A ToDosTask object contains a description of the task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":" * It extends the {@link Task} class to represent a basic to-do task.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":" *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":" * @author Kevin Tan","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":" */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"public class ToDosTask extends Task {","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"    private static final String TASK_TYPE \u003d TODO_TASK_TYPE;","lastModifiedDate":"2025-08-20T18:45:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"    public ToDosTask(String description) {","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"    /**","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"     * Returns a String representation of the task which includes its description, completion as a symbol.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"     * Example: \"[T][ ] read book\"","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"     *","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"     * @return {@code String} — a string representation of ToDosTask.","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"     */","lastModifiedDate":"2025-08-27T02:00:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"        return String.format(\"%s%s\", TASK_TYPE, super.toString());","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-20T18:31:53","isFullCredit":false}],"authorContributionMap":{"kevintanjc":32}},{"path":"src/test/java/resource/util/datastorage/CheckListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resource.util.datastorage;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import org.mockito.Mock;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import org.mockito.MockitoAnnotations;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import resources.util.datastorage.CheckList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.DeadlineTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.EventTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.ToDosTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"class CheckListTest {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"    @Mock","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"    private DeadlineTask deadlineTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"    @Mock","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"    private ToDosTask toDosTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    @Mock","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"    private EventTask eventTask;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"    private CheckList checkListTest;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"        MockitoAnnotations.initMocks(this);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"        checkListTest \u003d new CheckList();","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"    void addTaskTest_addTasks_success() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(deadlineTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(toDosTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(eventTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(3, checkListTest.getSize());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"    void removeTaskByIndexTest_removeTwoTasks_success() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(deadlineTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(toDosTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(eventTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.removeTaskByIndex(0);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(2, checkListTest.getSize());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.removeTaskByIndex(1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(1, checkListTest.getSize());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"    void getTaskByIndexTest_getTwoTasks_success() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(deadlineTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(toDosTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(eventTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"        when(deadlineTask.getDescription()).thenReturn(\"Submit assignment\");","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"        when(toDosTask.getDescription()).thenReturn(\"Buy groceries\");","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(deadlineTask, checkListTest.getTaskByIndex(0));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(toDosTask, checkListTest.getTaskByIndex(1));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(\"Submit assignment\", checkListTest.getTaskByIndex(0).getDescription());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"        assertEquals(\"Buy groceries\", checkListTest.getTaskByIndex(1).getDescription());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"    void markTaskTest_markTwoTasks_success() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(deadlineTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(toDosTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(eventTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"        when(deadlineTask.isCompleted()).thenReturn(false);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"        when(toDosTask.isCompleted()).thenReturn(false);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"        when(eventTask.isCompleted()).thenReturn(true);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.markTask(0);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"        assertFalse(checkListTest.getTaskByIndex(0).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.markTask(1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"        assertFalse(checkListTest.getTaskByIndex(1).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.markTask(2);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"        assertTrue(checkListTest.getTaskByIndex(2).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kevintanjc"},"content":"    void unmarkTaskTest_unmarkTwoTasks_success() {","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(deadlineTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(toDosTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.addTask(eventTask);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kevintanjc"},"content":"        when(deadlineTask.isCompleted()).thenReturn(true);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kevintanjc"},"content":"        when(toDosTask.isCompleted()).thenReturn(true);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kevintanjc"},"content":"        when(eventTask.isCompleted()).thenReturn(false);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.unmarkTask(0);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kevintanjc"},"content":"        assertTrue(checkListTest.getTaskByIndex(0).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.unmarkTask(1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kevintanjc"},"content":"        assertTrue(checkListTest.getTaskByIndex(1).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kevintanjc"},"content":"        checkListTest.unmarkTask(2);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kevintanjc"},"content":"        assertFalse(checkListTest.getTaskByIndex(2).isCompleted());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false}],"authorContributionMap":{"kevintanjc":109}},{"path":"src/test/java/resources/util/services/BotServiceTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"package resources.util.services;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"import org.mockito.ArgumentCaptor;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"import org.mockito.MockedConstruction;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"import resources.util.datastorage.CheckList;","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.DeadlineTask;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.EventTask;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.Task;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"kevintanjc"},"content":"import resources.util.tasks.ToDosTask;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"kevintanjc"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"kevintanjc"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"kevintanjc"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"kevintanjc"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"kevintanjc"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"kevintanjc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"kevintanjc"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"class BotServiceTest {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"kevintanjc"},"content":"    private PrintStream originalOut;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"kevintanjc"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"kevintanjc"},"content":"    private PrintStream originalErr;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"kevintanjc"},"content":"    private ByteArrayOutputStream errContent;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"kevintanjc"},"content":"    private java.io.InputStream originalIn;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"kevintanjc"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"kevintanjc"},"content":"    void captureIO() {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"kevintanjc"},"content":"        originalOut \u003d System.out;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"kevintanjc"},"content":"        originalErr \u003d System.err;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"kevintanjc"},"content":"        originalIn \u003d System.in;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"kevintanjc"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"kevintanjc"},"content":"        errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"kevintanjc"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"kevintanjc"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"kevintanjc"},"content":"    @AfterEach","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"kevintanjc"},"content":"    void resetSystemIO() {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"kevintanjc"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"kevintanjc"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"kevintanjc"},"content":"        System.setIn(originalIn);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"kevintanjc"},"content":"    private static void setInput(String script) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"kevintanjc"},"content":"        System.setIn(new ByteArrayInputStream(script.getBytes(StandardCharsets.UTF_8)));","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"kevintanjc"},"content":"    void todoCommand_addsTask_sucess() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"todo read book\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class)) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"kevintanjc"},"content":"            ArgumentCaptor\u003cTask\u003e captor \u003d ArgumentCaptor.forClass(Task.class);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).addTask(captor.capture());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"kevintanjc"},"content":"            Task added \u003d captor.getValue();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(ToDosTask.class, added.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(\"read book\", added.getDescription());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"kevintanjc"},"content":"    void deadlineCommand_WithEndDate_success() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"deadline submit report /by 01/01/2025 1600\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class)) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"kevintanjc"},"content":"            ArgumentCaptor\u003cTask\u003e captor \u003d ArgumentCaptor.forClass(Task.class);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).addTask(captor.capture());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"kevintanjc"},"content":"            Task added \u003d captor.getValue();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(DeadlineTask.class, added.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"kevintanjc"},"content":"            DeadlineTask dt \u003d (DeadlineTask) added;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(\"[D][ ] submit report (by: Jan 01 2025, 4:00 pm)\", dt.toString());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"kevintanjc"},"content":"    void deadlineCommand_WithoutEndDate_success() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"deadline submit report\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class);) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"kevintanjc"},"content":"            ArgumentCaptor\u003cTask\u003e captor \u003d ArgumentCaptor.forClass(Task.class);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).addTask(captor.capture());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"kevintanjc"},"content":"            Task added \u003d captor.getValue();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(DeadlineTask.class, added.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"kevintanjc"},"content":"            DeadlineTask dt \u003d (DeadlineTask) added;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(\"[D][ ] submit report (by: I DUNNO \u003e.\u003c)\", dt.toString());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"kevintanjc"},"content":"    void eventCommand_WithStartAndEndDates_success() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"event daily stand up /from 02/01/2025 1000 /to 02/01/2025 1200\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class);) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"kevintanjc"},"content":"            ArgumentCaptor\u003cTask\u003e captor \u003d ArgumentCaptor.forClass(Task.class);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).addTask(captor.capture());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"kevintanjc"},"content":"            Task added \u003d captor.getValue();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(EventTask.class, added.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"kevintanjc"},"content":"            EventTask et \u003d (EventTask) added;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(\"[E][ ] daily stand up (from: Jan 02 2025, 10:00 am to: Jan 02 2025, 12:00 pm)\",","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"kevintanjc"},"content":"                    et.toString());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"kevintanjc"},"content":"    void eventCommand_WithoutStartAndEndDates_success() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"event daily stand up\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class);) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"kevintanjc"},"content":"            ArgumentCaptor\u003cTask\u003e captor \u003d ArgumentCaptor.forClass(Task.class);","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).addTask(captor.capture());","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"kevintanjc"},"content":"            Task added \u003d captor.getValue();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(EventTask.class, added.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"kevintanjc"},"content":"            EventTask et \u003d (EventTask) added;","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"kevintanjc"},"content":"            assertEquals(\"[E][ ] daily stand up (from: I DUNNO \u003e.\u003c to: I DUNNO \u003e.\u003c)\",","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"kevintanjc"},"content":"                    et.toString());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"kevintanjc"},"content":"    void deleteCommand_RemoveIndexZero_success() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"delete 1\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class)) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).removeTaskByIndex(0);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"kevintanjc"},"content":"    void markAndUnmark_callChecklistWithParsedIndex() throws IOException {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"todo code\\ntodo sleep\\nmark 2\\nunmark 2\\nbye\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx)","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"kevintanjc"},"content":"                             -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class)) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"kevintanjc"},"content":"            new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).markTask(1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"kevintanjc"},"content":"            verify(mockCheckList).unmarkTask(1);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"kevintanjc"},"content":"    @Test","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"kevintanjc"},"content":"    void invalidCommand_throwsIllegalState_failure() {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"kevintanjc"},"content":"        setInput(\"nonsense whatever\\n\");","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"kevintanjc"},"content":"        CheckList mockCheckList \u003d mock(CheckList.class);","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"kevintanjc"},"content":"        try (MockedConstruction\u003cLoadingService\u003e mockedLoad \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(LoadingService.class, (mock, ctx) -\u003e when(mock.getChecklist()).thenReturn(mockCheckList));","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"kevintanjc"},"content":"             MockedConstruction\u003cSavingService\u003e mockedSave \u003d","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"kevintanjc"},"content":"                     mockConstruction(SavingService.class)) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"kevintanjc"},"content":"","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"kevintanjc"},"content":"            try {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"kevintanjc"},"content":"                new BotService();","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"kevintanjc"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"kevintanjc"},"content":"                // insertTaskIntoChecklist throws IllegalStateException for unknown task types","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"kevintanjc"},"content":"                assertEquals(IllegalStateException.class, e.getClass());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"kevintanjc"},"content":"                assertEquals(\"Invalid task type! Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\", e.getMessage());","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"kevintanjc"},"content":"            }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"kevintanjc"},"content":"        }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"kevintanjc"},"content":"    }","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"kevintanjc"},"content":"}","lastModifiedDate":"2025-08-27T00:22:40","isFullCredit":false}],"authorContributionMap":{"kevintanjc":232}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevintanjc"},"content":"todo read book","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"kevintanjc"},"content":"todo read article","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"kevintanjc"},"content":"deadline A /by 2023-10-01","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"kevintanjc"},"content":"deadline B /by 2023-10-02","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"kevintanjc"},"content":"event C /from 2023-10-03 /to 2023-10-04","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"kevintanjc"},"content":"event D /from 2023-10-05 /to 2023-10-06","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"kevintanjc"},"content":"list","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"kevintanjc"},"content":"bye","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false}],"authorContributionMap":{"kevintanjc":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"kevintanjc"},"content":"javac  -cp ..\\src\\app\\java -Xlint:none -d ..\\bin ..\\src\\app\\java\\*.java","lastModifiedDate":"2025-08-27T02:23:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"kevintanjc":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"kevintanjc"},"content":"java -classpath ../bin JavaBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T23:08:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"kevintanjc":1,"-":37}}]
