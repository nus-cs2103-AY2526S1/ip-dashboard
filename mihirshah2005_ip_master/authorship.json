[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"# Shahzam project template","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"1. After that, locate the `src/main/java/Shahzam.java` file, right-click it, and choose `Run Shahzam.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"# Shahzam User Guide","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":1,"-":29}},{"path":"src/main/java/DateTimeFormatUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"/**","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":" * A util class for processing date time in \u003ccode\u003eString\u003c/code\u003e formats","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":" * and converting Strings in accepted date time formats to a","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":" * \u003ccode\u003eLocalDateTime\u003c/code\u003e object. This util class also formats a","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":" * \u003ccode\u003eLocaleDateTime\u003c/code\u003e into a \u003ccode\u003eString\u003c/code\u003e in the format","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":" * \u003ccode\u003eMMM dd yyyy HHmm\u003c/code\u003e e.g. Aug 06 2025 1400.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":" */","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"public class DateTimeFormatUtils {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"    private static final DateTimeFormatter FORMATTER_1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"    private static final DateTimeFormatter FORMATTER_2 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"    private static final String OUTPUT_FORMAT \u003d \"MMM dd yyyy HHmm\";","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mihirshah2005"},"content":"    /**","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"     * Returns a \u003ccode\u003eLocalDateTime\u003c/code\u003e object if the \u003ccode\u003edateTimeString\u003c/code\u003e","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mihirshah2005"},"content":"     * is of a valid/accepted date time format.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mihirshah2005"},"content":"     * @param dateTimeString The date time String to be converted","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mihirshah2005"},"content":"     * @return A \u003ccode\u003eLocalDateTime\u003c/code\u003e object based on the date time","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mihirshah2005"},"content":"     * String provided","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"     * @throws ShahzamExceptions If the date time String provided is not of an accepted format","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mihirshah2005"},"content":"     */","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mihirshah2005"},"content":"    public static LocalDateTime getLocalDateTimeFromString(String dateTimeString) throws ShahzamExceptions {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mihirshah2005"},"content":"            return LocalDateTime.parse(dateTimeString, FORMATTER_1);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mihirshah2005"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mihirshah2005"},"content":"            // ignore and try next format","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mihirshah2005"},"content":"            return LocalDateTime.parse(dateTimeString, FORMATTER_2);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mihirshah2005"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mihirshah2005"},"content":"            // ignore","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mihirshah2005"},"content":"            throw new ShahzamExceptions(\"Invalid date time format. Please use date formats like \u0027yyyy-MM-dd HHmm\u0027 \" +","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mihirshah2005"},"content":"                    \"(e.g. 2019-09-15 1800) or \u0027d/M/yyyy HHmm\u0027 (e.g. 13/9/2015 1800)\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mihirshah2005"},"content":"    /**","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mihirshah2005"},"content":"     * Parses a \u003ccode\u003eLocalDateTime\u003c/code\u003e object into a \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mihirshah2005"},"content":"     * in the format \u003ccode\u003eMMM dd yyyy HHmm\u003c/code\u003e.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mihirshah2005"},"content":"     * @param dateTime The \u003ccode\u003eLocalDateTime\u003c/code\u003e object to be parsed.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mihirshah2005"},"content":"     * @return A String representation of the date time provided.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mihirshah2005"},"content":"     */","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mihirshah2005"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mihirshah2005"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(OUTPUT_FORMAT));","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":49}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"    public Deadline(String description, LocalDateTime time) {","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"        super(description);","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"    @Override","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeFormatUtils.formatDateTime(time) + \")\";","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-18T18:53:28","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"    private String time;","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"    public Event(String description, LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"        super(description);","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2025-08-18T23:28:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2025-08-18T23:28:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"    @Override","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mihirshah2005"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mihirshah2005"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mihirshah2005"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateTimeFormatUtils.formatDateTime(fromTime) + \" to: \" + DateTimeFormatUtils.formatDateTime(toTime) + \")\";","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-18T18:55:52","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":23}},{"path":"src/main/java/Shahzam.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-17T19:48:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"import java.io.File;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"public class Shahzam {","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mihirshah2005"},"content":"    private final String WELCOME_MSG \u003d \"\\nThe word was spoken, SHAHZAM awakens.\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"    private final String EXIT_MSG \u003d \"Thunder quiets. SHAHZAM signing off, until next time.\";","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mihirshah2005"},"content":"    /*private final String logo \u003d  \"  ____  _           _                        \\n\" +","lastModifiedDate":"2025-08-19T21:20:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mihirshah2005"},"content":"            \" / ___|| |__   __ _| |__  ______ _ _ __ ___  \\n\" +","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mihirshah2005"},"content":"            \" \\\\___ \\\\| \u0027_ \\\\ / _` | \u0027_ \\\\|_  / _` | \u0027_ ` _ \\\\ \\n\" +","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mihirshah2005"},"content":"            \"  ___) | | | | (_| | | | |/ / (_| | | | | | |\\n\" +","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"            \" |____/|_| |_|\\\\__,_|_| |_/___\\\\__,_|_| |_| |_|\\n\" +","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mihirshah2005"},"content":"            \"                                             \";","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mihirshah2005"},"content":"     */","lastModifiedDate":"2025-08-19T21:20:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T21:20:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mihirshah2005"},"content":"    private final ArrayList\u003cTask\u003e TaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mihirshah2005"},"content":"    private final String fileName \u003d \"data.txt\";","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T19:48:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mihirshah2005"},"content":"    public void run() {","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mihirshah2005"},"content":"        //System.out.println(logo + WELCOME_MSG);","lastModifiedDate":"2025-08-19T21:20:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mihirshah2005"},"content":"        System.out.println(WELCOME_MSG);","lastModifiedDate":"2025-08-19T21:20:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mihirshah2005"},"content":"            loadData();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mihirshah2005"},"content":"        } catch (ShahzamExceptions | IOException e) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mihirshah2005"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mihirshah2005"},"content":"        while (true) {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mihirshah2005"},"content":"            String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T19:48:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mihirshah2005"},"content":"            try {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mihirshah2005"},"content":"                if (input.equals(\"bye\")){","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mihirshah2005"},"content":"                    break;","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mihirshah2005"},"content":"                }","lastModifiedDate":"2025-08-17T19:48:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mihirshah2005"},"content":"                interpretCommand(input);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mihirshah2005"},"content":"                // Update storage file","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mihirshah2005"},"content":"                saveData();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mihirshah2005"},"content":"            } catch ( ShahzamExceptions | IOException e) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mihirshah2005"},"content":"                System.out.println(\" OOPS! \" + e.getMessage());","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mihirshah2005"},"content":"        sc.close();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mihirshah2005"},"content":"        System.out.println(EXIT_MSG);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mihirshah2005"},"content":"    private void interpretCommand(String input) throws ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mihirshah2005"},"content":"        // Each if else handles one type of command","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mihirshah2005"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mihirshah2005"},"content":"                PrintList(TaskList);","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mihirshah2005"},"content":"                TaskDone(input);","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mihirshah2005"},"content":"                TaskUnmark(input);","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mihirshah2005"},"content":"                addToDo(input);","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mihirshah2005"},"content":"                addEvent(input);","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mihirshah2005"},"content":"                addDeadline(input);","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mihirshah2005"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mihirshah2005"},"content":"                deleteTask(input);","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mihirshah2005"},"content":"            } else {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mihirshah2005"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-17T19:48:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mihirshah2005"},"content":"    private void saveData() throws IOException {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mihirshah2005"},"content":"        // Reformat the list of tasks for storage","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mihirshah2005"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mihirshah2005"},"content":"        TaskList.forEach(task -\u003e output.append(task.toString()).append(\"\\n\"));","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mihirshah2005"},"content":"        FileWriter fw \u003d new FileWriter(fileName, false);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mihirshah2005"},"content":"        fw.write(output.toString());","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mihirshah2005"},"content":"        fw.close();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mihirshah2005"},"content":"    private void loadData() throws DataIntegrityException, IOException {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mihirshah2005"},"content":"        // Initialize save file and create parent directory","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mihirshah2005"},"content":"        File file \u003d new File(fileName);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mihirshah2005"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mihirshah2005"},"content":"            return;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mihirshah2005"},"content":"        String input;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mihirshah2005"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mihirshah2005"},"content":"        // Read the rest of data and add to list of tasks","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mihirshah2005"},"content":"        while ((input \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mihirshah2005"},"content":"            Task newTask;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mihirshah2005"},"content":"            String description;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mihirshah2005"},"content":"            String time;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mihirshah2005"},"content":"            // Obtain relevant info based on type of task","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mihirshah2005"},"content":"            switch (input.charAt(1)) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mihirshah2005"},"content":"            case \u0027T\u0027: // todo","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mihirshah2005"},"content":"                newTask \u003d new ToDo(input.substring(7));","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mihirshah2005"},"content":"                break;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mihirshah2005"},"content":"            case \u0027D\u0027: { // [D][ ] desc (by: \u003cdatetime\u003e)","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mihirshah2005"},"content":"                description \u003d input.substring(7, input.indexOf(\" (\"));","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mihirshah2005"},"content":"                String byStr \u003d input.substring(input.indexOf(\"(by: \") + 5, input.length() - 1);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mihirshah2005"},"content":"                LocalDateTime by \u003d parseStoredDateTime(byStr);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mihirshah2005"},"content":"                // If Deadline constructor expects LocalDateTime:","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mihirshah2005"},"content":"                newTask \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mihirshah2005"},"content":"                // If yours still takes a String that it parses internally, you can instead pass byStr.","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mihirshah2005"},"content":"                break;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mihirshah2005"},"content":"            case \u0027E\u0027: { // [E][ ] desc (from: \u003cdatetime\u003e to: \u003cdatetime\u003e)","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mihirshah2005"},"content":"                description \u003d input.substring(7, input.indexOf(\" (\"));","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mihirshah2005"},"content":"                int fromStart \u003d input.indexOf(\"(from: \") + 7;","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mihirshah2005"},"content":"                int toSep     \u003d input.indexOf(\" to: \", fromStart);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mihirshah2005"},"content":"                int endParen  \u003d input.lastIndexOf(\u0027)\u0027);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mihirshah2005"},"content":"                if (fromStart \u003c 7 || toSep \u003d\u003d -1 || endParen \u003d\u003d -1) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mihirshah2005"},"content":"                    throw new DataIntegrityException();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mihirshah2005"},"content":"                }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mihirshah2005"},"content":"                String fromStr \u003d input.substring(fromStart, toSep).trim();","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mihirshah2005"},"content":"                String toStr   \u003d input.substring(toSep + 5, endParen).trim();","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mihirshah2005"},"content":"                LocalDateTime from \u003d parseStoredDateTime(fromStr);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mihirshah2005"},"content":"                LocalDateTime to   \u003d parseStoredDateTime(toStr);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mihirshah2005"},"content":"                // If Event constructor expects LocalDateTime:","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mihirshah2005"},"content":"                newTask \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mihirshah2005"},"content":"                // If yours expects LocalDate + LocalTime:","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mihirshah2005"},"content":"                // newTask \u003d new Event(description, from.toLocalDate(), from.toLocalTime(), to.toLocalTime());","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mihirshah2005"},"content":"                break;","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mihirshah2005"},"content":"            default:","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mihirshah2005"},"content":"                throw new DataIntegrityException();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mihirshah2005"},"content":"            if (input.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mihirshah2005"},"content":"                newTask.MarkDone();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mihirshah2005"},"content":"            // Add task to list but do not show a confirmation msg","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mihirshah2005"},"content":"            AddTask(newTask, false);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mihirshah2005"},"content":"        // Close reader","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mihirshah2005"},"content":"        br.close();","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mihirshah2005"},"content":"    private LocalDateTime parseStoredDateTime(String s) throws DataIntegrityException {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mihirshah2005"},"content":"            return DateTimeFormatUtils.getLocalDateTimeFromString(s);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mihirshah2005"},"content":"        } catch (ShahzamExceptions ignored) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mihirshah2005"},"content":"            // If your toString() prints with DateTimeFormatUtils.formatDateTime(...)","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mihirshah2005"},"content":"            try {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mihirshah2005"},"content":"                DateTimeFormatter OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mihirshah2005"},"content":"                return LocalDateTime.parse(s, OUT);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mihirshah2005"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mihirshah2005"},"content":"                throw new DataIntegrityException(); // not a recognized stored datetime","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mihirshah2005"},"content":"    private void AddTask(Task newTask, boolean showMsg) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mihirshah2005"},"content":"        TaskList.add(newTask);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mihirshah2005"},"content":"        if (showMsg) {","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(\"Alright, new task added to the list:\" + \"\\n  \" +","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mihirshah2005"},"content":"                    newTask + \"\\n\" +","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mihirshah2005"},"content":"                    \"Now you have \" + TaskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mihirshah2005"},"content":"    private void TaskDone(String input) throws InvalidTaskNumberException {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mihirshah2005"},"content":"            int idx \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mihirshah2005"},"content":"            if (idx \u003c 1 || idx \u003e TaskList.size()) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mihirshah2005"},"content":"                throw new InvalidTaskNumberException(\"There is no task with that number.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d TaskList.get(idx - 1);","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mihirshah2005"},"content":"            t.MarkDone();","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + t);","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mihirshah2005"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidTaskNumberException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mihirshah2005"},"content":"    private void TaskUnmark(String input) throws InvalidTaskNumberException{","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mihirshah2005"},"content":"            int idx \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mihirshah2005"},"content":"            if (idx \u003c 1 || idx \u003e TaskList.size()) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mihirshah2005"},"content":"                throw new InvalidTaskNumberException(\"There is no task with that number.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d TaskList.get(idx - 1);","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mihirshah2005"},"content":"            t.UnmarkDone();","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + t);","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mihirshah2005"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidTaskNumberException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T23:04:21","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mihirshah2005"},"content":"    private void addToDo(String input) throws EmptyTaskDescriptionException{","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mihirshah2005"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mihirshah2005"},"content":"            throw new EmptyTaskDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mihirshah2005"},"content":"        } else {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d new ToDo(input.substring(5).trim());","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mihirshah2005"},"content":"            AddTask(t, true);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mihirshah2005"},"content":"    private void addDeadline(String input) throws InvalidDeadlineFormatException{","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mihirshah2005"},"content":"            String[] parts \u003d input.substring(9).split(\"/by\", 2);","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mihirshah2005"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mihirshah2005"},"content":"                throw new InvalidDeadlineFormatException(\"Please specify a deadline with the /by keyword.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mihirshah2005"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mihirshah2005"},"content":"            String byRaw       \u003d parts[1].trim();","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mihirshah2005"},"content":"            // parse full datetime using your util (Option A)","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mihirshah2005"},"content":"            LocalDateTime by \u003d DateTimeFormatUtils.getLocalDateTimeFromString(byRaw);","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mihirshah2005"},"content":"            AddTask(t, true);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mihirshah2005"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidDeadlineFormatException(\"Deadline format is incorrect. Use \u0027/by\u0027 to specify deadline.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mihirshah2005"},"content":"        } catch (Exception e) { // whatever your util throws (e.g., ButtercupException)","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidDeadlineFormatException(","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mihirshah2005"},"content":"                    \"Use \u0027/by yyyy-MM-dd HHmm\u0027 or \u0027/by d/M/yyyy HHmm\u0027 (e.g., 2019-12-02 1800 or 2/12/2019 1800).\"","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mihirshah2005"},"content":"            );","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-25T00:41:49","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mihirshah2005"},"content":"    private void addEvent(String input) throws InvalidEventFormatException{","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mihirshah2005"},"content":"            String[] parts \u003d input.substring(6).split(\"/from\", 2);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mihirshah2005"},"content":"            if (parts.length \u003c 2) throw new InvalidEventFormatException(\"Please specify \u0027/from\u0027.\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mihirshah2005"},"content":"            String description \u003d parts[0].trim();","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mihirshah2005"},"content":"            String[] timeParts \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mihirshah2005"},"content":"            if (timeParts.length \u003c 2) throw new InvalidEventFormatException(\"Please specify \u0027/to\u0027.\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mihirshah2005"},"content":"            LocalDateTime from \u003d DateTimeFormatUtils.getLocalDateTimeFromString(timeParts[0].trim());","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mihirshah2005"},"content":"            LocalDateTime to   \u003d DateTimeFormatUtils.getLocalDateTimeFromString(timeParts[1].trim());","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d new Event(description, from, to); // Event(LocalDateTime, LocalDateTime)","lastModifiedDate":"2025-08-25T00:47:13","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mihirshah2005"},"content":"            AddTask(t, true);","lastModifiedDate":"2025-08-24T18:39:21","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mihirshah2005"},"content":"        } catch (ShahzamExceptions e) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidEventFormatException(","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mihirshah2005"},"content":"                    \"Use \u0027/from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\u0027 or \u0027/from d/M/yyyy HHmm /to d/M/yyyy HHmm\u0027.\"","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mihirshah2005"},"content":"            );","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mihirshah2005"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidEventFormatException(\"Event format is incorrect. Use \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-08-25T00:34:06","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T23:30:11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mihirshah2005"},"content":"    private void deleteTask(String input) throws InvalidTaskNumberException {","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mihirshah2005"},"content":"        try {","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mihirshah2005"},"content":"            int idx \u003d Integer.parseInt(input.substring(7).trim()); // 1-based index","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mihirshah2005"},"content":"            if (idx \u003c 1 || idx \u003e TaskList.size()) {","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mihirshah2005"},"content":"                throw new InvalidTaskNumberException(\"There is no task with that number.\");","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mihirshah2005"},"content":"            }","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mihirshah2005"},"content":"            Task t \u003d TaskList.remove(idx - 1); // Remove task at the index","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + t);","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println(\"Now you have \" + TaskList.size() + \" tasks in your list.\");","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mihirshah2005"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mihirshah2005"},"content":"            throw new InvalidTaskNumberException(\"Please provide a valid task number.\");","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:54:01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mihirshah2005"},"content":"    private void PrintList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mihirshah2005"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mihirshah2005"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mihirshah2005"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mihirshah2005"},"content":"        }","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mihirshah2005"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mihirshah2005"},"content":"        new Shahzam().run();","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T18:28:46","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-17T18:17:47","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":301}},{"path":"src/main/java/ShahzamExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"public class ShahzamExceptions extends Exception {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"    public ShahzamExceptions(String message) {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"        super(message);","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"class UnknownCommandException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"        super(\"Sorry but my knowledge does not have such command.\");","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"class EmptyTaskDescriptionException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"    public EmptyTaskDescriptionException(String message) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"        super(message);","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mihirshah2005"},"content":"class InvalidTaskNumberException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mihirshah2005"},"content":"    public InvalidTaskNumberException(String message) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mihirshah2005"},"content":"        super(message);","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mihirshah2005"},"content":"class InvalidDeadlineFormatException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mihirshah2005"},"content":"    public InvalidDeadlineFormatException(String message) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mihirshah2005"},"content":"        super(message);","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mihirshah2005"},"content":"class InvalidEventFormatException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mihirshah2005"},"content":"    public InvalidEventFormatException(String message) {","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mihirshah2005"},"content":"        super(message);","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-19T00:44:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mihirshah2005"},"content":"class DataIntegrityException extends ShahzamExceptions {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mihirshah2005"},"content":"    public DataIntegrityException() {","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mihirshah2005"},"content":"        super(\"Storage file integrity compromised :(\");","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-24T18:38:08","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":41}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"public class Task {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"    private String description;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"    public void MarkDone() {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mihirshah2005"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mihirshah2005"},"content":"    public void UnmarkDone() {","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mihirshah2005"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:57:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mihirshah2005"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mihirshah2005"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mihirshah2005"},"content":"    @Override","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mihirshah2005"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mihirshah2005"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-17T22:32:51","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":28}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"        super(description);","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"    @Override","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"    public String toString() {","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"    }","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"}","lastModifiedDate":"2025-08-18T18:58:24","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mihirshah2005"},"content":"todo read book","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mihirshah2005"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mihirshah2005"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mihirshah2005"},"content":"list","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mihirshah2005"},"content":"mark 1","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mihirshah2005"},"content":"mark 3","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mihirshah2005"},"content":"todo borrow book","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mihirshah2005"},"content":"list","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mihirshah2005"},"content":"unmark 1","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mihirshah2005"},"content":"delete 2","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mihirshah2005"},"content":"list","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mihirshah2005"},"content":"bye","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mihirshah2005"},"content":"java -classpath ..\\bin Shahzam.java \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mihirshah2005"},"content":"java -classpath ../bin Shahzam \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mihirshah2005"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-08-19T21:20:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"mihirshah2005":2,"-":32}}]
