[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-09T12:33:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-09T12:33:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-09T12:33:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"checkstyle {","lastModifiedDate":"2025-09-09T12:33:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-09T12:33:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"    archiveBaseName \u003d \"Sloth\"","lastModifiedDate":"2025-08-29T23:37:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"    archiveFileName \u003d \u0027Sloth.jar\u0027","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"yyssophie":24,"-":39}},{"path":"data/sloth.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"E | 0 | love | Apr 08 2005, 13:00 | Apr 19 2006, 14:00","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"D | 0 | just do it | Jan 07 2008, 12:59","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"D | 0 | ddl | Jan 01 2025, 12:59","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"T | 0 | bur","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"T | 1 | love you","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"D | 1 | uddu | Apr 18 2025, 00:00","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"D | 0 | CS2103 ip submission | Dec 31 2025, 00:00","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false}],"authorContributionMap":{"yyssophie":7}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package gui;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"import java.net.URL;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    @FXML private Label dialog;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    @FXML private ImageView displayPicture;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        try {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"            URL url \u003d DialogBox.class.getResource(\"/view/DialogBox.fxml\");","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"            if (url \u003d\u003d null) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"                throw new IllegalStateException(\"FXML not found at /view/DialogueBox.fxml\");","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"            FXMLLoader loader \u003d new FXMLLoader(url);  // location is set here","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"            loader.setRoot(this);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"            loader.setController(this);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"            loader.load();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"    private void flip() {","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"        db.setAlignment(Pos.TOP_RIGHT); // User dialog: text on left, image on right, aligned right","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"        return db;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"        db.flip(); // Sloth dialog: image on left, text on right, aligned left","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"        return db;","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":59}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package gui;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class Launcher {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":11}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package gui;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Sloth;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":" * JavaFX Application class for the Sloth task management system.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":" * Loads the FXML layout, initializes the main window controller,","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":" * and manages the primary stage of the GUI application.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    private Sloth sloth \u003d new Sloth();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     * Starts the JavaFX application by setting up the primary stage.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     * Loads the FXML layout, creates the scene, injects the Sloth instance","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     * into the controller, displays the welcome message, and shows the stage.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     * @param stage the primary stage for this application","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"        try {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"            controller.setSloth(sloth);  // inject the Sloth instance","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"            controller.showWelcomeMessage();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"            stage.show();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":42}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package gui;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Sloth;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import sloth.command.Command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskParser;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":" * Controller for the main GUI window of the Sloth task management application.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":" * Handles user interactions, manages dialog display, and coordinates between","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":" * the GUI components and the underlying Sloth application logic.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"    private Sloth sloth;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"    private UI ui;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"    private TaskParser taskParser;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cute_girl.png\"));","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"    private Image slothImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cute_sloth.png\"));","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"     * Initializes the GUI components and sets up automatic scrolling behavior.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"     * Called automatically by JavaFX after loading the FXML file.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"     * Injects the Sloth application instance and initializes related components.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"     * Sets up the UI, storage, task list, and task parser for the GUI session.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"     * @param s the Sloth application instance to inject","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"    public void setSloth(Sloth s) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"        sloth \u003d s;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"        taskParser \u003d new TaskParser();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"     * Shows the initial greeting in the dialog container with the sloth image.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"        String welcomeMessage \u003d ui.showWelcome();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"                DialogBox.getDukeDialog(welcomeMessage, slothImage)","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"        );","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"     * Handles user input from the text field and processes commands.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"     * Creates dialog boxes for both user input and system responses.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"     * Automatically closes the application window when a ByeCommand is executed.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"     * Clears the user input field after processing.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"    @FXML","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"        String response;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"        );","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"        try {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"            Command c \u003d taskParser.parse(input);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"            response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"            if (c instanceof sloth.command.ByeCommand) {","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"                dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"                        DialogBox.getDukeDialog(response, slothImage)","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"                );","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"                userInput.clear();","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"                // Close the window after a brief delay to show the goodbye message","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"                Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), e -\u003e {","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"                    Stage stage \u003d (Stage) userInput.getScene().getWindow();","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"                    stage.close();","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"                }));","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"                timeline.play();","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"                return;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yyssophie"},"content":"        } catch (SlothException e) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yyssophie"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yyssophie"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yyssophie"},"content":"            response \u003d \"sorry :( That index is out of my knowledge.\";","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yyssophie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yyssophie"},"content":"            response \u003d \"An unexpected error occurred: \" + e.getMessage();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yyssophie"},"content":"        // Add Sloth\u0027s response dialog","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yyssophie"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yyssophie"},"content":"                DialogBox.getDukeDialog(response, slothImage)","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yyssophie"},"content":"        );","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yyssophie"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":129}},{"path":"src/main/java/sloth/Sloth.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.command.Command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":" * Main class for the Sloth task management application.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Coordinates the interaction between UI, Storage, and TaskList components","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * to provide a command-line task management system.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class Sloth {","lastModifiedDate":"2025-08-22T10:43:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    private final UI ui;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new Sloth application instance.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     * Initializes the UI, storage system, and loads existing tasks from storage.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    public Sloth() {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        ui \u003d new UI();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-22T12:06:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * Displays welcome message, processes user commands until exit command is received,","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     * and handles exceptions gracefully.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"                Command c \u003d TaskParser.parse(fullCommand);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"            } catch (SlothException e) {","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"                ui.showError(\"sorry :( That index is out of my knowledge.\");","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"            } finally {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-22T12:47:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-22T10:58:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-22T10:58:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"     * Entry point for the Sloth application.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"        new Sloth().run();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-22T10:43:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-22T10:43:23","isFullCredit":false}],"authorContributionMap":{"yyssophie":59}},{"path":"src/main/java/sloth/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import java.util.List;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":" * Handles persistent storage of tasks to and from the file system.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":" * Uses a simple text file format to store task data in the data/sloth.txt file.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    private static final Path dataDir \u003d Paths.get(\"data\");","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    private static final Path dataFile \u003d dataDir.resolve(\"sloth.txt\");","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     * Creates the data directory and file if they don\u0027t exist.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Skips corrupted lines and continues loading valid tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @return ArrayList of loaded tasks, empty if no file exists or on first run","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"        try {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"            if (Files.notExists(dataDir)) Files.createDirectories(dataDir);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"            if (Files.notExists(dataFile)) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"                Files.createFile(dataFile);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"                return tasks; // empty (first run)","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(dataFile);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"            for (String line : lines) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"                try {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"                    tasks.add(TaskParser.parseStorage(line));","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"                } catch (SlothException ex) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"                    // corrupted line; skip but keep going","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"                    System.err.println(\"Skipping corrupted line: \" + line + \"  Reason: \" + ex.getMessage());","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"            System.err.println(\"Failed to load tasks: \" + ioe.getMessage());","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"     * Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"     * Overwrites the existing file with the current task list.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"        for (Task t : tasks) lines.add(t.to_storage_string());","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"        try {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"            if (Files.notExists(dataDir)) Files.createDirectories(dataDir);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"            Files.write(dataFile, lines, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.CREATE);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"            System.err.println(\"Failed to save tasks: \" + ioe.getMessage());","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false}],"authorContributionMap":{"yyssophie":69}},{"path":"src/main/java/sloth/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":" * Manages a collection of tasks with operations for adding, removing, and modifying tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Provides a convenient interface for task list operations with 1-based indexing for user interaction.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new TaskList with the given list of tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     * Creates a copy of the provided list to ensure encapsulation.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     * @param list the initial list of tasks to populate this TaskList with","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"     * Gets the number of tasks in this list.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"    public int size() {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"     * Returns the internal ArrayList of tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"     * Note: This returns a reference to the internal list, not a copy.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"    public ArrayList\u003cTask\u003e asList() {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"     * Adds a new task to the end of the task list.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"     * @param t the task to add","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"     * @return the added task (same as input parameter)","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"    public Task add(Task t){","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"        return t;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"     * Gets the task at the specified 1-based index.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"     * @param i the 1-based index of the task to retrieve","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"     * @return the task at the specified position","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"    public Task get(int i){","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"        return tasks.get(i - 1);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"     * Removes and returns the task at the specified 1-based index.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"     * @param i the 1-based index of the task to remove","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"     * @return the removed task","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"    public Task delete(int i){","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"        return tasks.remove(i - 1);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"     * Marks the task at the specified 1-based index as completed.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"     * Only changes the status if the task is not already marked as done.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"     * @param i the 1-based index of the task to mark","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"     * @return the marked task","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"    public Task mark(int i){","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"        Task t \u003d get(i);","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"        if (t.getStatus().equals(\" \"))","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"            t.toggleStatus();","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"        return t;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"     * Unmarks the task at the specified 1-based index (marks as incomplete).","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"     * Only changes the status if the task is currently marked as done.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"     * @param i the 1-based index of the task to unmark","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"     * @return the unmarked task","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"    public Task unmark(int i){","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"        Task t \u003d get(i);","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"        if (t.getStatus().equals(\"X\"))","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"            t.toggleStatus();","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"        return t;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false}],"authorContributionMap":{"yyssophie":111}},{"path":"src/main/java/sloth/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.command.*;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Deadline;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.ToDo;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Event;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.EmptyDescriptionException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.UnknownCommandException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.ParseException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":" * Utility class for parsing user input and storage data into Task objects and Commands.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":" * Handles flexible date/time parsing and command interpretation.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"public class TaskParser {","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    private static final Pattern TODO \u003d","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"            Pattern.compile(\"^\\\\s*todo\\\\s+(?\u003ccontent\u003e.+)\\\\s*$\");","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"    private static final Pattern DEADLINE \u003d","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"            Pattern.compile(\"^\\\\s*deadline\\\\s+(?\u003ccontent\u003e.+?)\\\\s+/by\\\\s+(?\u003cby\u003e.+)\\\\s*$\");","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    private static final Pattern EVENT \u003d","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"            Pattern.compile(\"^\\\\s*event\\\\s+(?\u003ccontent\u003e.+?)\\\\s+/from\\\\s+(?\u003cfrom\u003e.+?)\\\\s+/to\\\\s+(?\u003cto\u003e.+)\\\\s*$\");","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"     * Parses a date/time string using multiple flexible formats.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"     * Tries various common date formats until one succeeds.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"     * @param dateTimeString the date/time string to parse","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"     * @return LocalDateTime object representing the parsed date/time","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"     * @throws SlothException if the string cannot be parsed with any supported format","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    public static LocalDateTime parseFlexibleDateTime(String dateTimeString) throws SlothException {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter[] formats \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"),// Apr 18 2005, 18:00","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"),","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),   // 2019-10-15 18:00","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"),     // 2/12/2019 18:00","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),   // 02/12/2019 18:00","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE_TIME             // 2019-10-15T18:00","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"        };","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"        for (DateTimeFormatter formatter : formats) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"                return LocalDateTime.parse(dateTimeString.trim(), formatter);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"                // Continue to next format","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter[] dateOnlyFormats \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\"),","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"MMM d yyyy\"),","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),        // 2025-04-18","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE                  // 2025-04-18","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"        };","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"        for (DateTimeFormatter formatter : dateOnlyFormats) {","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString.trim(), formatter);","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"                return date.atStartOfDay(); // Convert to LocalDateTime at 00:00","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"                // Continue to next format","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"        throw new SlothException(\"nuzzz... nuzzzz..\\n\"","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"                + \"Little sloth don\u0027t understand this date format!\\n\"","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"                + \"Try e.g. Apr 18 2025 18:00 or 2025-04-18 18:00\");","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"     * Parses user input to create the appropriate Task object.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"     * Handles todo, deadline, and event task creation with appropriate validation.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"     * @return Task object of the appropriate type (ToDo, Deadline, or Event)","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"     * @throws SlothException if the input format is invalid or required information is missing","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"    public static Task parseInput(String input) throws SlothException {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"        Matcher matcher;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"        if ((matcher \u003d TODO.matcher(input)).matches()) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"            return new ToDo(matcher.group(\"content\"));","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"        } else if ((matcher \u003d DEADLINE.matcher(input)).matches()) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"            String date \u003d matcher.group(\"by\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"            LocalDateTime dueDate \u003d TaskParser.parseFlexibleDateTime(date);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"            return new Deadline(matcher.group(\"content\").trim(), dueDate);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"        } else if ((matcher \u003d EVENT.matcher(input)).matches()) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"            String from \u003d matcher.group(\"from\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"            String to \u003d matcher.group(\"to\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"            LocalDateTime startTime \u003d TaskParser.parseFlexibleDateTime(from);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"            LocalDateTime endTime \u003d TaskParser.parseFlexibleDateTime(to);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"            assert endTime.isAfter(startTime) : \"Event \u0027/to\u0027 must be \u003e\u003d \u0027/from\u0027\";","lastModifiedDate":"2025-09-13T15:30:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"            return new Event(matcher.group(\"content\").trim(), startTime, endTime);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"        } else {","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"            String command \u003d input.split(\"\\\\s+\", 2)[0].toLowerCase();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"                throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"                throw new ParseException(\"deadline\");","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yyssophie"},"content":"                throw new ParseException(\"event\");","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yyssophie"},"content":"            } else {","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yyssophie"},"content":"                throw new UnknownCommandException(input);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-22T20:27:36","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yyssophie"},"content":"     * Parses user input to create the appropriate Command object.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yyssophie"},"content":"     * Handles all supported commands: bye, list, mark, unmark, delete, and task creation commands.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yyssophie"},"content":"     * @param input the user input string to parse","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yyssophie"},"content":"     * @return Command object that can be executed","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yyssophie"},"content":"     * @throws SlothException if the input cannot be parsed into a valid command","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yyssophie"},"content":"    public static Command parse(String input) throws SlothException {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yyssophie"},"content":"        String command \u003d input;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yyssophie"},"content":"        if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yyssophie"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yyssophie"},"content":"        if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yyssophie"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yyssophie"},"content":"        if (command.equalsIgnoreCase(\"sort\")) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yyssophie"},"content":"            return new SortCommand();","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yyssophie"},"content":"        if (command.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yyssophie"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yyssophie"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yyssophie"},"content":"                    throw new SlothException(\"eep! I need a task number after \u0027mark\u0027. Try: mark 1\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yyssophie"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yyssophie"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yyssophie"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yyssophie"},"content":"                throw new SlothException(\"eep! This is not a valid number. Try: mark 1\");","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yyssophie"},"content":"        if (command.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yyssophie"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yyssophie"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yyssophie"},"content":"                    throw new SlothException(\"eep! I need a task number after \u0027unmark\u0027. Try: unmark 1\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yyssophie"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yyssophie"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yyssophie"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yyssophie"},"content":"                throw new SlothException(\"eep! This is not a valid number. Try: unmark 1\");","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yyssophie"},"content":"        if (command.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yyssophie"},"content":"            try {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yyssophie"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yyssophie"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yyssophie"},"content":"                    throw new SlothException(\"eep! I need a task number after \u0027delete\u0027. Try: delete 1\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yyssophie"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yyssophie"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yyssophie"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yyssophie"},"content":"                throw new SlothException(\"eep! This is not a valid number. Try: delete 1\");","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T15:18:19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yyssophie"},"content":"        if (command.startsWith(\"find \")) {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yyssophie"},"content":"            String[] parts \u003d command.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yyssophie"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yyssophie"},"content":"                throw new SlothException(\"eep! I need a keyword to search for. Try: find book\");","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yyssophie"},"content":"            String keyword \u003d parts[1].trim();","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yyssophie"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yyssophie"},"content":"                throw new SlothException(\"eep! Little sloth need a keyword to search for. Try: find book\");","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yyssophie"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yyssophie"},"content":"        // everything else is an add: todo / deadline / event","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"yyssophie"},"content":"        Task task \u003d TaskParser.parseInput(command);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yyssophie"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yyssophie"},"content":"     * Parses a line from storage file to recreate a Task object.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"yyssophie"},"content":"     * Expected format: \"TYPE | DONE_FLAG | CONTENT | [DATE_INFO]\"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"yyssophie"},"content":"     * where TYPE is T/D/E, DONE_FLAG is 0/1, and DATE_INFO varies by task type.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yyssophie"},"content":"     * @param line the storage line to parse","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"yyssophie"},"content":"     * @return Task object recreated from the storage format","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"yyssophie"},"content":"     * @throws SlothException if the line format is invalid or cannot be parsed","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"yyssophie"},"content":"    public static Task parseStorage(String line) throws SlothException {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"yyssophie"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"yyssophie"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"yyssophie"},"content":"            throw new ParseException(\"oops, storage line too short\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yyssophie"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yyssophie"},"content":"        String doneFlag \u003d parts[1];","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yyssophie"},"content":"        String content \u003d parts[2];","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yyssophie"},"content":"        boolean isDone \u003d doneFlag.equals(\"1\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yyssophie"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yyssophie"},"content":"            case \"T\":","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yyssophie"},"content":"                ToDo todo \u003d new ToDo(content);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yyssophie"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yyssophie"},"content":"                    todo.toggleStatus();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yyssophie"},"content":"                return todo;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yyssophie"},"content":"            case \"D\":","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yyssophie"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"yyssophie"},"content":"                    throw new ParseException(\"deadline missing /by\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yyssophie"},"content":"                String by \u003d parts[3];","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-08-28T13:27:55","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yyssophie"},"content":"                LocalDateTime dueDateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"yyssophie"},"content":"                Deadline deadline \u003d new Deadline(content, dueDateTime);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"yyssophie"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yyssophie"},"content":"                    deadline.toggleStatus();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yyssophie"},"content":"                return deadline;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yyssophie"},"content":"            case \"E\":","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yyssophie"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"yyssophie"},"content":"                    throw new ParseException(\"event missing /from or /to\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"yyssophie"},"content":"                String from \u003d parts[3];","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"yyssophie"},"content":"                String to \u003d parts[4];","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"yyssophie"},"content":"                DateTimeFormatter eventFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"yyssophie"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(from, eventFormatter);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"yyssophie"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime.parse(to, eventFormatter);","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yyssophie"},"content":"                Event event \u003d new Event(content, startDateTime, endDateTime);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"yyssophie"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yyssophie"},"content":"                    event.toggleStatus();","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"yyssophie"},"content":"                }","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"yyssophie"},"content":"                return event;","lastModifiedDate":"2025-08-30T16:06:03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"yyssophie"},"content":"            default:","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yyssophie"},"content":"                throw new ParseException(\"unknown type: \" + type);","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-22T19:15:30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-28T00:08:01","isFullCredit":false}],"authorContributionMap":{"yyssophie":248}},{"path":"src/main/java/sloth/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T14:58:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import java.util.List;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-09T00:32:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Handles all user interface operations for the Sloth task management application.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" * Manages input/output operations including displaying messages, reading commands,","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":" * and formatting output with consistent styling.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"public class UI {","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    private final String line \u003d \"_\".repeat(50);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     * Displays the welcome message with the Sloth logo when the application starts.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"     * Shows the application greeting and ASCII art logo.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    public String showWelcome() {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"        String logo \u003d \"   🌿─────\\n  ( - . - )\\n  /(   づ )\\n  ╯ ╯ ╯ ╯\\n\";","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"        String word \u003d logo + \"Hello, I am ... Sloth\\n\" + \"\\nHow can I help you today?🦥\";","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"        println(word);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"     * @return the command string entered by the user","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"     * Displays a horizontal line separator for visual formatting.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"     * @param msg the error message to display","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"    public void showError(String msg) {","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"        println(msg);","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"     * Displays the goodbye message when the application is exiting.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"     * Shows a farewell message with sloth-themed text.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"    public String showGoodbye() {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"        String word \u003d \"Bye. Hope to see you soon~\\nI\u0027m gonna...go back to...sleep  zZZ 🦥\";","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"        println(word);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"     * Displays the complete list of tasks with numbering.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"     * Shows each task with its 1-based index and formatted representation.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"    public String showList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"        String list \u003d \"\";","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"            list +\u003d (i+1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"            println(\"\\t\" + (i+1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"        return list;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"     * Displays a confirmation message when a task is successfully added.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"     * Shows the added task and the updated total count of tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"     * @param t the task that was added","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"     * @param size the new total number of tasks","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"    public String showAdded(Task t, int size) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"        String word \u003d \"okayy ... I\u0027ve added \" + t + \"\\n\" + \"Now you have \" + size + \" tasks 🦥\";","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"        println(\"okayy ... I\u0027ve added \" + t);","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"        println(\"Now you have \" + size + \" tasks 🦥\");","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"     * Displays a confirmation message when a task\u0027s completion status is changed.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"     * Shows different messages for marking as done vs marking as undone.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"     * @param t the task whose status was changed","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"     * @param done true if the task was marked as done, false if marked as undone","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"    public String showMarked(Task t, boolean done) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"        String word \u003d done ? \"sniff sniff! I\u0027ve marked as done:\\n\" + t","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"                : \"okay... I\u0027ve marked as undone:\\n\" + t;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"        println(word);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yyssophie"},"content":"     * Displays a confirmation message when a task is successfully deleted.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yyssophie"},"content":"     * Shows the deleted task and the updated total count of tasks.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yyssophie"},"content":"     * @param t the task that was deleted","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yyssophie"},"content":"     * @param size the new total number of tasks after deletion","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yyssophie"},"content":"    public String showDeleted(Task t, int size) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yyssophie"},"content":"        String word \u003d \"Got it ..... I removed this task\\n\" + t + \"\\n\" + \"Now you have \" + size + \" tasks 🦥\";","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yyssophie"},"content":"        println(word);","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yyssophie"},"content":"     * Helper method to print a line to standard output.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yyssophie"},"content":"     * Centralizes output operations for consistent formatting.","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yyssophie"},"content":"     * @param s the string to print","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yyssophie"},"content":"    private void println(String s){","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yyssophie"},"content":"        System.out.println(s);","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T15:42:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yyssophie"},"content":"     * Displays the results of a find operation.","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yyssophie"},"content":"     * Shows all tasks that contain the searched keyword with their original numbering.","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yyssophie"},"content":"     * @param matchingTasks the list of tasks that match the search keyword","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yyssophie"},"content":"    public String showFoundTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yyssophie"},"content":"        String word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yyssophie"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yyssophie"},"content":"            word \u003d \"Oops, there is no matching tasks found in your list 🦥\\n\";","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yyssophie"},"content":"            println(\"Oops, there is no matching tasks found in your list 🦥\");","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yyssophie"},"content":"        } else {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yyssophie"},"content":"            word \u003d \"aha ~ Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yyssophie"},"content":"            println(\"aha ~ Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yyssophie"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yyssophie"},"content":"                println(\"\\t\" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yyssophie"},"content":"                word +\u003d \"\\t\" + (i + 1) + \".\" + matchingTasks.get(i) + \"\\n\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yyssophie"},"content":"        println(line);","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T16:25:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yyssophie"},"content":"     * Displays the sorted list of tasks with their current numbering.","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yyssophie"},"content":"     * Shows a confirmation message followed by all tasks in their sorted order.","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the TaskList containing the sorted tasks to display","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yyssophie"},"content":"     * @return the formatted string representation of the sorted task list","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yyssophie"},"content":"    public String showSorted(TaskList tasks) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yyssophie"},"content":"        String word \u003d \"Ok, I\u0027ve sorted all tasks in the list\\n\";","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yyssophie"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yyssophie"},"content":"            word +\u003d i + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yyssophie"},"content":"        println(word);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yyssophie"},"content":"        return word;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-29T00:50:53","isFullCredit":false}],"authorContributionMap":{"yyssophie":174}},{"path":"src/main/java/sloth/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Command to add a new task to the task list.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private final Task task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Creates a new AddTaskCommand with the specified task.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param task the task to be added","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Executes the add command by adding the task to the list, saving, and showing confirmation.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to add the task to","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for showing the confirmation message","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting the updated task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        int before \u003d tasks.size();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        assert tasks.size() \u003d\u003d before + 1 : \"TaskList size should increase by 1 after add\";","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        return ui.showAdded(task, tasks.size());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":38}},{"path":"src/main/java/sloth/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Command to terminate the Sloth application.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Saves all tasks before exiting and displays a goodbye message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"     * Indicates that this command will exit the application.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     * @return true, as this command exits the application","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        return true;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Executes the bye command by saving tasks and showing goodbye message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to save before exiting","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for displaying the goodbye message","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for saving tasks","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":35}},{"path":"src/main/java/sloth/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Abstract base class for all commands in the Sloth task management system.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" * Implements the Command pattern to encapsulate user actions.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Determines if this command should cause the application to exit.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @return true if the command should exit the application, false otherwise","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        return false;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     * @throws SlothException if an error occurs during command execution","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public abstract String execute(TaskList tasks, UI ui, Storage storage) throws SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":" * Command to terminate the Sloth application.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":" * Saves all tasks before exiting and displays a goodbye message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":37}},{"path":"src/main/java/sloth/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private final int index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Creates a new DeleteCommand for the task at the specified index.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param oneBasedIndex the 1-based index of the task to delete","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public DeleteCommand(int oneBasedIndex) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        assert oneBasedIndex \u003e 0 : \"Delete index must be 1-based positive\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        this.index \u003d oneBasedIndex;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     * Executes the delete command by removing the task, saving, and showing confirmation.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to remove the task from","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for showing the confirmation message","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting the updated task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size() : \"Delete index out of range: \" + index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        int before \u003d tasks.size();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        Task task \u003d tasks.delete(index);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"        assert task !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"        assert tasks.size() \u003d\u003d before - 1 : \"TaskList size should decrease by 1 after delete\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"        return ui.showDeleted(task, tasks.size());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":41}},{"path":"src/main/java/sloth/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Command to find  a task","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" * by searching for a keyword in the task description","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"        assert keyword !\u003d null \u0026\u0026 !keyword.isBlank() : \"Find keyword must be non-empty\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     * Executes find command by looping through all tasks in task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     * to find tasks that match the key word","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for displaying messages","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting tasks","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"        java.util.ArrayList\u003cTask\u003e allTasks \u003d tasks.asList();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"        java.util.ArrayList\u003cTask\u003e matchingTasks \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"            if (task.getContent().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"        return ui.showFoundTasks(matchingTasks);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":40}},{"path":"src/main/java/sloth/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Command to display all tasks in the current task list.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"     * Executes the list command by displaying all tasks.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to display","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for showing the task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system (not used in this command)","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        return ui.showList(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":23}},{"path":"src/main/java/sloth/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private final int index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Creates a new MarkCommand for the task at the specified index.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param oneBasedIndex the 1-based index of the task to mark as completed","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public MarkCommand(int oneBasedIndex) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        this.index \u003d oneBasedIndex;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Executes the mark command by marking the task as done, saving, and showing confirmation.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list containing the task to mark","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for showing the confirmation message","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting the updated task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size() : \"Mark index out of range: \" + index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        Task task \u003d tasks.mark(index);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        assert task.isDone() : \"Marked task should be done\";","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        return ui.showMarked(task, true);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":38}},{"path":"src/main/java/sloth/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":" * Command to sort all tasks chronologically.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":" * Compares deadline and event tasks by their respective time constraints:","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":" * - Deadline tasks are sorted by their due date","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":" * - Event tasks are sorted by their start time","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":" * - Todo tasks come last in the sorted order as they have no time constraints","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"     * Executes the sort command by arranging all tasks in chronological order.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     * Sorts the task list using the natural ordering defined in Task.compareTo(),","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     * saves the updated list to storage, and displays the sorted tasks to the user.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list to sort","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for displaying the sorted task list","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting the sorted task order","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @return the formatted string representation of the sorted task list","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"        ArrayList\u003cTask\u003e lst \u003d tasks.asList();","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        Collections.sort(lst);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        Storage.save(lst);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        return ui.showSorted(tasks);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false}],"authorContributionMap":{"yyssophie":37}},{"path":"src/main/java/sloth/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.command;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import sloth.Storage;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import sloth.TaskList;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import sloth.UI;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" * Command to unmark a task (mark as incomplete).","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private final int index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Creates a new UnmarkCommand for the task at the specified index.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param oneBasedIndex the 1-based index of the task to mark as incomplete","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    public UnmarkCommand(int oneBasedIndex) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        this.index \u003d oneBasedIndex;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     * Executes the unmark command by marking the task as undone, saving, and showing confirmation.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * @param tasks the task list containing the task to unmark","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     * @param ui the user interface for showing the confirmation message","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @param storage the storage system for persisting the updated task list","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        assert index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size() : \"Mark index out of range: \" + index;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        Task task \u003d tasks.unmark(index);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        assert !task.isDone() : \"Marked task should be undone\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"        return ui.showMarked(task, false);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":38}},{"path":"src/main/java/sloth/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.exception;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Exception thrown when a command requiring a description is entered without one.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Provides an example of proper usage.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class EmptyDescriptionException extends SlothException {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new EmptyDescriptionException with a descriptive error message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"     * @param cmd the command that was missing a description","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    public EmptyDescriptionException(String cmd) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"        super(\"eep! I slipped off my branch trying to read that 🦥🌿\\n\" +","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"                \"the \" + cmd + \" description cannot be empty. e.g., \\\"\" + cmd + \" borrow book\\\"\");","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":17}},{"path":"src/main/java/sloth/exception/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.exception;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Exception thrown when parsing fails due to incorrect command format.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Provides examples of correct usage for deadline and event commands.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class ParseException extends SlothException {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new ParseException with examples of correct command formats.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"     * @param hint additional context about what parsing failed (not currently used)","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    public ParseException(String hint) { super(\"oh nooo… my tiny sloth brain got tangled \\uD83E\\uDDA5\\n\" +","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"            \"try eg. deadline Assignment /by Sep 3 2025, 23:59\\n\" +","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"            \"or  event Career Fair /from Aug 28 2025, 12:00 /to Aug 28 2025, 16:00\"); }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":16}},{"path":"src/main/java/sloth/exception/SlothException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.exception;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Base exception class for all Sloth application-specific errors.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Extends Exception to provide custom error handling for task management operations.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class SlothException extends Exception {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new SlothException with a helpful error message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"     * @param message of error","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    public SlothException(String message) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"        super(message);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":16}},{"path":"src/main/java/sloth/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.exception;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Exception thrown when an unrecognized command is entered by the user.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Provides helpful suggestions for valid commands.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class UnknownCommandException extends SlothException {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new UnknownCommandException with a helpful error message.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"     * @param cmd the unrecognized command that was entered","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    public UnknownCommandException(String cmd) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"        super(\"hmm… I don’t recognise the command: \\\"\" + cmd + \"\\\".\\n\"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"                + \"But here is what I know:\\n\"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"                + \"todo \u003csomething\u003e\\ndeadline \u003csomething\u003e /by \u003cwhen\u003e\\nevent \u003csomething\u003e /from \u003cwhen\u003e /to \u003cwhen\u003e\\n\" +","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"                \"list\\nsort\\nmark \u003cn\u003e\\nunmark \u003cn\u003e\\n\" + \"delete \u003cindex\u003e\\n\" +  \"find \u003ckey word\u003e\\n\" + \"bye\");","lastModifiedDate":"2025-09-19T20:41:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":19}},{"path":"src/main/java/sloth/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":" * Represents a task with a deadline (due date and time).","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Extends the base Task class to include deadline information.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"    private final String type \u003d \"D\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new Deadline task with the specified content and due date.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     * @param content the description of the deadline task","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     * @param endDate the date and time when this task is due","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    public Deadline(String content, LocalDateTime endDate) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        super(content);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     * Gets the due date and time for this deadline task.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"     * @return the LocalDateTime representing when this task is due","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"        return endDate;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T20:15:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation with deadline-specific formatting.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string showing [D] type indicator, status, content, and due date","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"        return \"[\" + this.type + \"] [\" + this.getStatus() + \"] \" + this.getContent()","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"                + \" (by: \" + this.endDate.format(formatter) + \")\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation for storage with deadline information.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string for file storage including due date","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"    public String to_storage_string() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"        return \"D | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + getContent() + \" | \" + this.endDate.format(formatter);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":55}},{"path":"src/main/java/sloth/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":" * Represents an event task with start and end times.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":" * Extends the base Task class to include event timing information.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"    private final String type \u003d \"E\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new Event task with the specified content, start time, and end time.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"     * @param content the description of the event","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"     * @param startDate the date and time when the event starts","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"     * @param endDate the date and time when the event ends","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"    public Event(String content, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"        super(content);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"     * Gets the start date and time for this event.","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"     * @return the LocalDateTime representing when this event starts","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        return startDate;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T20:15:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation with event-specific formatting.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string showing [E] type indicator, status, content, and time range","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"        return \"[\" + this.type + \"] [\" + this.getStatus() + \"] \" + this.getContent()","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"                + \" (from: \" + this.startDate.format(formatter) + \" to: \" + this.endDate.format(formatter) + \")\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation for storage with event timing information.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string for file storage including start and end times","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"    public String to_storage_string() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"        return \"E | \" + (this.isDone() ? \"1\" : \"0\") + \" | \" + getContent() + \" | \" +","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"                this.startDate.format(formatter) + \" | \" + this.endDate.format(formatter);","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":59}},{"path":"src/main/java/sloth/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Represents a basic task with content and completion status.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Base class for all task types in the Sloth task management system.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    private String content;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"    private boolean done;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new Task with the specified content.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"     * @param content the description of the task","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    public Task(String content) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"        this.content \u003d content;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"        this.done \u003d false;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     * Gets the content/description of this task.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"     * @return the task description","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    public String getContent() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"        return this.content;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"     * Gets the completion status symbol of this task.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"    public String getStatus() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"        return this.done? \"X\" : \" \";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"     * Checks if this task is completed.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"        return this.done;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"     * Toggles the completion status of this task.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"     * Changes done tasks to not done, and not done tasks to done.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"    public void toggleStatus() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"        this.done \u003d !this.done;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation of this task for display purposes.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string with status and content","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"        return \"[\" + getStatus() + \"] \" + getContent();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation of this task for storage purposes.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"     * Uses pipe-separated format for easy parsing.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string for file storage","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"    public String to_storage_string() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"        return \"T | \" + (this.done ? \"1\" : \"0\") + \" | \" + this.content;","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T21:23:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"     * Compares this task with another task for chronological ordering.","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"     * Sorting priority:","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"     * 1. Todo tasks come last (sorted alphabetically among themselves)","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"     * 2. Deadline tasks are sorted by their due date","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"     * 3. Event tasks are sorted by their start time","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"     * 4. When comparing different task types, time-based tasks come before todos,","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"     *    and deadlines vs events are compared by their respective time constraints","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"     * @param o the other task to compare with","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"     * @return negative integer if this task comes before o, positive if after,","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"     *         zero if they are considered equal in ordering","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-19T20:09:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"        if (this instanceof ToDo) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"            if (o instanceof ToDo) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"                return this.getContent().compareTo(o.getContent());","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"            } else {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"                return 1;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"            if (o instanceof ToDo) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"                return -1;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"            } else if (o instanceof Deadline) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"                return ((Deadline) this).getEndDate().compareTo(((Deadline) o).getEndDate());","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"            } else {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"                return ((Deadline) this).getEndDate().compareTo(((Event) o).getStartDate());","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"        } else {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"            if (o instanceof ToDo) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"                return -1;","lastModifiedDate":"2025-09-19T19:37:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"            } else if (o instanceof Deadline) {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"                return ((Event) this).getStartDate().compareTo(((Deadline) o).getEndDate());","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"            } else {","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yyssophie"},"content":"                return ((Event) this).getStartDate().compareTo(((Event) o).getStartDate());","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yyssophie"},"content":"            }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yyssophie"},"content":"        }","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":116}},{"path":"src/main/java/sloth/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth.task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"/**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":" * Represents a basic todo task without any time constraints.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":" * Extends the base Task class with todo-specific formatting.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":" */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"    private final String type \u003d \"T\";","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"     * Constructs a new ToDo task with the specified content.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"     * @param content the description of the todo task","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"    public ToDo(String content) {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"        super(content);","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"    /**","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"     * Returns a string representation with todo-specific formatting.","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"     *","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"     * @return formatted string showing [T] type indicator, status, and content","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"     */","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    @Override","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"        return \"[\" + this.type + \"] [\" + this.getStatus() + \"] \" + this.getContent();","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-19T18:47:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false}],"authorContributionMap":{"yyssophie":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"         stylesheets\u003d\"@../css/DialogueBox.css\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"        \u003cLabel fx:id\u003d\"dialog\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388\" /\u003e","lastModifiedDate":"2025-09-10T10:43:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-10T00:00:29","isFullCredit":false}],"authorContributionMap":{"yyssophie":19}},{"path":"src/test/java/sloth/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Task;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Event;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"import sloth.task.ToDo;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"import sloth.task.Deadline;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"    private ToDo todoTask;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"    private Event eventTask;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"        todoTask \u003d new ToDo(\"Buy groceries\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"        deadlineTask \u003d new Deadline(\"Submit assignment\", LocalDateTime.of(2025, 3, 15, 23, 59));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        eventTask \u003d new Event(\"Team meeting\",","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"                LocalDateTime.of(2025, 3, 10, 14, 0),","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"                LocalDateTime.of(2025, 3, 10, 16, 0));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"        // Add tasks to the list for testing","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"        taskList.add(todoTask);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"        taskList.add(eventTask);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method marks an unmarked task\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"    public void testMark_unmarkedTask() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"        // Ensure the task is initially unmarked","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\" \", todoTask.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"        assertFalse(todoTask.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"        // Mark the task","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"        Task markedTask \u003d taskList.mark(1);  // 1-based indexing","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"        // Verify the task is now marked","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", markedTask.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"        assertEquals(todoTask, markedTask);  // Should return the same task object","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method does not change already marked task\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"    public void testMark_alreadyMarkedTask() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"        // First mark the task","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"        todoTask.toggleStatus();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", todoTask.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"        assertTrue(todoTask.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"        // Try to mark it again","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"        Task result \u003d taskList.mark(1);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"        // Should remain marked (no change)","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", result.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"        assertTrue(result.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"        assertEquals(todoTask, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method with different task types\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"    public void testMark_differentTaskTypes() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"        // Test marking a Deadline task","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\" \", deadlineTask.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"        Task markedDeadline \u003d taskList.mark(2);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", markedDeadline.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"        assertTrue(markedDeadline.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"        // Test marking an Event task","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\" \", eventTask.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"        Task markedEvent \u003d taskList.mark(3);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", markedEvent.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"        assertTrue(markedEvent.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method throws exception for invalid index (too high)\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"    public void testMark_invalidIndexTooHigh() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"            taskList.mark(10);  // Only 3 tasks in the list","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method throws exception for invalid index (zero)\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"    public void testMark_invalidIndexZero() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yyssophie"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yyssophie"},"content":"            taskList.mark(0);  // 1-based indexing, so 0 is invalid","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method throws exception for negative index\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yyssophie"},"content":"    public void testMark_negativeIndex() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yyssophie"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yyssophie"},"content":"            taskList.mark(-1);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method on empty task list\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yyssophie"},"content":"    public void testMark_emptyTaskList() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yyssophie"},"content":"        TaskList emptyList \u003d new TaskList();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yyssophie"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yyssophie"},"content":"            emptyList.mark(1);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method preserves task content and other properties\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yyssophie"},"content":"    public void testMark_preservesTaskProperties() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yyssophie"},"content":"        // Test with Deadline task to ensure dates are preserved","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yyssophie"},"content":"        String originalContent \u003d deadlineTask.getContent();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yyssophie"},"content":"        String originalToString \u003d deadlineTask.toString();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yyssophie"},"content":"        Task markedTask \u003d taskList.mark(2);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yyssophie"},"content":"        // Content should remain the same","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yyssophie"},"content":"        assertEquals(originalContent, markedTask.getContent());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yyssophie"},"content":"        // ToString should change (status changed from [ ] to [X])","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yyssophie"},"content":"        assertNotEquals(originalToString, markedTask.toString());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yyssophie"},"content":"        assertTrue(markedTask.toString().contains(\"[X]\"));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test mark method with task list created from existing list\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yyssophie"},"content":"    public void testMark_withPreloadedTaskList() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yyssophie"},"content":"        // Create a new task list from existing tasks","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yyssophie"},"content":"        ArrayList\u003cTask\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yyssophie"},"content":"        ToDo preloadedTask \u003d new ToDo(\"Preloaded task\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yyssophie"},"content":"        existingTasks.add(preloadedTask);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yyssophie"},"content":"        TaskList preloadedList \u003d new TaskList(existingTasks);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yyssophie"},"content":"        // Mark the preloaded task","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yyssophie"},"content":"        Task result \u003d preloadedList.mark(1);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yyssophie"},"content":"        assertEquals(\"X\", result.getStatus());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yyssophie"},"content":"        assertTrue(result.isDone());","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yyssophie"},"content":"        assertEquals(preloadedTask, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false}],"authorContributionMap":{"yyssophie":161}},{"path":"src/test/java/sloth/TaskParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"package sloth;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"import sloth.exception.SlothException;","lastModifiedDate":"2025-09-13T17:02:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yyssophie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yyssophie"},"content":"public class TaskParserTest {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime with valid MMM dd yyyy, HH:mm format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_validMmmddFormat() throws SlothException {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yyssophie"},"content":"        // Test with April format","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime result \u003d TaskParser.parseFlexibleDateTime(\"Apr 18 2025, 18:00\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 4, 18, 18, 0);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yyssophie"},"content":"        // Test with December format","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yyssophie"},"content":"        result \u003d TaskParser.parseFlexibleDateTime(\"Dec 25 2024, 23:59\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yyssophie"},"content":"        expected \u003d LocalDateTime.of(2024, 12, 25, 23, 59);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime with valid MMM d yyyy, HH:mm format (single digit day)\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_validMmmdFormat() throws SlothException {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime result \u003d TaskParser.parseFlexibleDateTime(\"Jan 5 2025, 09:30\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 1, 5, 9, 30);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime with valid yyyy-MM-dd HH:mm format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_validISOFormat() throws SlothException {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime result \u003d TaskParser.parseFlexibleDateTime(\"2025-03-15 14:30\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 3, 15, 14, 30);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime with valid d/M/yyyy HH:mm format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_validSlashFormat() throws SlothException {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime result \u003d TaskParser.parseFlexibleDateTime(\"2/12/2025 18:00\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 12, 2, 18, 0);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime with valid ISO_LOCAL_DATE_TIME format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_validISOLocalDateTime() throws SlothException {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime result \u003d TaskParser.parseFlexibleDateTime(\"2025-10-15T18:00\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yyssophie"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2025, 10, 15, 18, 0);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yyssophie"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime throws exception for invalid format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_invalidFormat() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yyssophie"},"content":"        SlothException exception \u003d assertThrows(SlothException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yyssophie"},"content":"            TaskParser.parseFlexibleDateTime(\"invalid date format\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yyssophie"},"content":"        assertTrue(exception.getMessage().contains(\"Little sloth don\u0027t understand this date format!\"));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yyssophie"},"content":"        assertTrue(exception.getMessage().contains(\"Try e.g. Apr 18 2025, 18:00\"));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime throws exception for partially valid format\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_partiallyValidFormat() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yyssophie"},"content":"        SlothException exception \u003d assertThrows(SlothException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yyssophie"},"content":"            TaskParser.parseFlexibleDateTime(\"Apr 18 2025\");  // Missing time","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yyssophie"},"content":"        assertTrue(exception.getMessage().contains(\"Little sloth don\u0027t understand this date format!\"));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime throws exception for empty string\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_emptyString() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yyssophie"},"content":"        SlothException exception \u003d assertThrows(SlothException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yyssophie"},"content":"            TaskParser.parseFlexibleDateTime(\"\");","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yyssophie"},"content":"        assertTrue(exception.getMessage().contains(\"Little sloth don\u0027t understand this date format!\"));","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yyssophie"},"content":"    @Test","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yyssophie"},"content":"    @DisplayName(\"Test parseFlexibleDateTime throws exception for null input\")","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yyssophie"},"content":"    public void testParseFlexibleDateTime_nullInput() {","lastModifiedDate":"2025-09-13T17:57:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yyssophie"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yyssophie"},"content":"            TaskParser.parseFlexibleDateTime(null);","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yyssophie"},"content":"        });","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yyssophie"},"content":"    }","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yyssophie"},"content":"","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yyssophie"},"content":"}","lastModifiedDate":"2025-08-30T11:03:51","isFullCredit":false}],"authorContributionMap":{"yyssophie":102}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyssophie"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yyssophie"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yyssophie"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yyssophie"},"content":"list","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yyssophie"},"content":"mark 1","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yyssophie"},"content":"unmark 1","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yyssophie"},"content":"blah","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yyssophie"},"content":"todo","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yyssophie"},"content":"bye","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false}],"authorContributionMap":{"yyssophie":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yyssophie"},"content":"java -classpath ../bin Sloth \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T22:39:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"yyssophie":1,"-":37}}]
