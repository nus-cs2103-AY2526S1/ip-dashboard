{"authorDailyContributionsMap":{"BrandonnLow":[{"date":"2025-08-15T00:00:00","commitResults":[{"hash":"367012197a2b61012d64c7a7fb3018ddafa064ab","isMergeCommit":false,"messageTitle":"Level-0: Rename Duke to Pingpong, implement greet and exit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10},"bat":{"insertions":1,"deletions":1}}},{"hash":"65e8471f7ac83d4404e6b429c127a640ea45fc21","isMergeCommit":false,"messageTitle":"Level-0: Removed traces of Duke from source code","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]},{"date":"2025-08-18T00:00:00","commitResults":[{"hash":"b0cebdd3bdf93638bbace20cb37b238d1919958c","isMergeCommit":false,"messageTitle":"Level-1: Add echo functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"84f1365ba08b14d1a129c5a74bdce56dff19bc80","isMergeCommit":false,"messageTitle":"Add support for list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"1d6d76692cabdb74b11790a422d7673c7ea64d13","isMergeCommit":false,"messageTitle":"Level-2: Task storage and listing","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"b45072efdf5f27c8a22d998e38e31652547658d3","isMergeCommit":false,"messageTitle":"Level-3: Add mark/unmark functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":2}}},{"hash":"afc57526c9aaba1cd94a6c538cf56d2c1bfc7303","isMergeCommit":false,"messageTitle":"A-Classes: Use Task class to represent tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":10}}},{"hash":"6eaeb95d28babf53a8820c464ccac46072515608","isMergeCommit":false,"messageTitle":"Inherited classes from Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":2}}},{"hash":"40bc819b838899abd3ce9630fa2ca7245fefc383","isMergeCommit":false,"messageTitle":"Level 4: Integrate ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"bb2ae49f4c0d23b5211fbd8d438081146325a411","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0}}},{"hash":"6bddb2562e0d8228a23693c6923ed3d720062069","isMergeCommit":false,"messageTitle":"Fixed spacing inconsistency","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"e3ae7c59f771be395a9af617bb48f7dc8ddcf88e","isMergeCommit":false,"messageTitle":"Level 5: Handling errors","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":4,"deletions":0}}},{"hash":"5b1a0214e86990ed3e0125ea9c1cabdb2795cf14","isMergeCommit":false,"messageTitle":"Level-5: Committing uncommitted files","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":165,"deletions":80}}}]},{"date":"2025-08-19T00:00:00","commitResults":[{"hash":"29a113b80ea9305fff8ee45c5231dc1277113dd1","isMergeCommit":false,"messageTitle":"Level-6: Add support for deleting tasks from the list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":3}}},{"hash":"0d3f3df5d73f17384d31d2365890fbead207756c","isMergeCommit":false,"messageTitle":"Level-6: Added tests for delete functionality","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}},{"hash":"92ddade050791fd7fece25b8504c1563c7ec4177","isMergeCommit":false,"messageTitle":"A-Enums: Used Enums for task types","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":15}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"32b378a6c5cc5f864bc731327643df0398b26059","isMergeCommit":false,"messageTitle":"Add file I/O functionality for task persistence","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":0}}},{"hash":"06bf9d441f237ea8d83961401db4e58af13418f8","isMergeCommit":false,"messageTitle":"Add getter methods to Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"c3cfcb8ee2b1ae58defed85498240014014e2f5d","isMergeCommit":false,"messageTitle":"Add getter method to Deadline class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"10d1ecf8322ed29596282cbbbd7ab900a8e5833a","isMergeCommit":false,"messageTitle":"Add getter method to Event class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"bdc8cf173c5c65e79efd0c767f4f9a5c24766630","isMergeCommit":true,"messageTitle":"Merge branch-Level-7","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"fa4c99ad87d143f8130b34d44212d056df6abc4c","isMergeCommit":false,"messageTitle":"Add date/time support","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":33}}},{"hash":"7e9f1ae8f3b2fb95b13ce747eab111a94d990da0","isMergeCommit":false,"messageTitle":"Update test input to demonstrate Level 8 features","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":16,"deletions":25},"bat":{"insertions":4,"deletions":0}}},{"hash":"f54faa46d195df38451f0a41722e69136347e591","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"2629d064529ca0436f04c06acea62075202ba7f0","isMergeCommit":false,"messageTitle":"Extract Storage Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":131}}},{"hash":"fcdd735338abb150f35a7957766929fbaca10693","isMergeCommit":false,"messageTitle":"Extract Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":43}}},{"hash":"360361ba6b859783d65552ae1d8674ac86ba05ed","isMergeCommit":false,"messageTitle":"Extract Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":318,"deletions":186}}},{"hash":"1037fc0b8cc43d79a29a136654e1cdbd64403293","isMergeCommit":false,"messageTitle":"Extracted TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":96}}},{"hash":"a9cb9719e5a4c93c96370f7160f4256ca4e9bb3a","isMergeCommit":false,"messageTitle":"A-MoreOOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":170,"deletions":152}}},{"hash":"4c76b66a6c713716fa33c6bbfba6149017613ced","isMergeCommit":false,"messageTitle":"A-Packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":872},"bat":{"insertions":3,"deletions":3}}},{"hash":"3a9a64dad97e0ca304196ae71166157efff167b6","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027upstream/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d566a09e6ed7eeefbb8020cf0ce50fab1b67d087","isMergeCommit":false,"messageTitle":"A-Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"c567a1bcc850b5ec60a6f91058f136d86703d212","isMergeCommit":false,"messageTitle":"A-JUnit: Add JUnit Tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":347,"deletions":0}}},{"hash":"e9caaf1bae39bacf39b67353378e3d9b25231c49","isMergeCommit":false,"messageTitle":"Implement A-Jar: Package app as executable JAR file","messageBody":"","tags":["branch-A-CodingStandard","A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":965,"deletions":0}}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"1d10fe152587ced80274d5a157a2005dd6657cf8","isMergeCommit":false,"messageTitle":"branch-A-JavaDoc: Add JavaDoc comments","messageBody":"","tags":["branch-A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":569,"deletions":37}}},{"hash":"26fba880ff8a820af37d834d7bff1d3fd757bd17","isMergeCommit":false,"messageTitle":"branch-Level-9","messageBody":"","tags":["branch-Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":15}}},{"hash":"b92c2bedcff13cfc8b98e48de9ba067c00da77dd","isMergeCommit":true,"messageTitle":"Merge tag \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"af218c221072b12da5e73cdde9c232dcf14cf0b6","isMergeCommit":false,"messageTitle":"Update test cases in text-ui-test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}},{"hash":"5a46af00242a2d2748c41f6a0950a05c89be6c85","isMergeCommit":false,"messageTitle":"Include JUnit tests for search functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":4}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"988ed1025750e54e6eb58209760d8682c1c11253","isMergeCommit":false,"messageTitle":"A-CheckStyle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":3},"java":{"insertions":125,"deletions":104}}},{"hash":"4cb11910284fd95e91b0a5c49c2b1c51bc02ae60","isMergeCommit":true,"messageTitle":"A-CheckStyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"289330a145c4ad809f280e43c2aa6a80a9061545","isMergeCommit":false,"messageTitle":"Implement up till part 4 from the tutorial","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":2},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":311,"deletions":0}}},{"hash":"ef355794f68e3cdfa9b3950211c46cee846d98c1","isMergeCommit":false,"messageTitle":"Add CSS styling","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":5},"java":{"insertions":6,"deletions":1}}},{"hash":"fbf7492ac1f8677c1725a18bfecad8bb7e212621","isMergeCommit":true,"messageTitle":"Merge branch-Level-10","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"d665378c75eb441d3a8a3fd5de01461429167aef","isMergeCommit":false,"messageTitle":"Implement Varargs and update JUnit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1070,"deletions":70}}},{"hash":"9c0da33ad806e6bd3cfcdf62019f47cea3e21d3c","isMergeCommit":true,"messageTitle":"Merge A-Varargs","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"8296bde3bf7e5b8cd0e2b6215972ed2b33be7b0b","isMergeCommit":false,"messageTitle":"Add assertions to TaskList operations","messageBody":"Current TaskList methods lack assumption validation which can lead to\nunexpected behavior when invalid parameters are passed.\n\nAdding assertions helps document important assumptions:\n* Task indices should be non-negative\n* Tasks being added should not be null\n* Task list should be properly initialized\n\nLet\u0027s add assert statements to key methods:\n* deleteTask() validates index and null checks\n* markTask() ensures proper state transitions\n* addTask() validates input and post-conditions\n\nThis improves code reliability by catching violations early in\ndevelopment and serves as executable documentation.\n","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"java":{"insertions":17,"deletions":1}}},{"hash":"468fc7340af0db9ef953f3afaa8ee6caf80e2de0","isMergeCommit":false,"messageTitle":"Add comprehensive assertions for assumption validation","messageBody":"Current codebase lacks documentation of important assumptions and\nvalidation of preconditions. Methods accept parameters without\nvalidating expected constraints, making debugging difficult.\n\nAssertions serve as executable documentation and help catch\nassumption violations early in development phase.\n\nLet\u0027s add comprehensive assert statements throughout the codebase:\n* TaskList operations validate indices, null checks, and state changes\n* Parser validates input format and parameter constraints\n* Storage validates file operations and data integrity\n* Task constructors validate required fields and logical constraints\n* Command classes validate execution preconditions\n\nThis improves code reliability by documenting assumptions and\ncatching violations during development with meaningful error messages.\n\nThe assertions follow the principle of documenting what should be\ntrue at various points in execution, making the code more\nmaintainable and easier to debug.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":3},"java":{"insertions":499,"deletions":66}}},{"hash":"59e8a4b38914c80d19a736ea8794d1058db2f2f7","isMergeCommit":false,"messageTitle":"Refactor core classes to improve code quality","messageBody":"Current implementation has several code quality issues:\n* Magic strings and numbers scattered throughout Parser and Storage\n* Long methods that violate Single Responsibility Principle\n* Code duplication in validation and error handling logic\n* Poor separation of concerns in parsing methods\n\nFollowing SE-EDU code quality guidelines improves maintainability\nand reduces the likelihood of bugs from unclear code.\n\nLet\u0027s apply key refactoring improvements:\n* Extract string/number constants in Parser and Storage classes\n* Break down long parsing methods into focused helper methods\n* Add dedicated validation methods to eliminate duplication\n* Improve method naming to better express intent\n* Centralize error message definitions for consistency\n\nThis makes the codebase more maintainable and follows industry\ncoding standards without changing external behavior.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":525,"deletions":212}}},{"hash":"8f83b1b8da4fe66afdf2b83ffeffd5bd503a3586","isMergeCommit":false,"messageTitle":"Convert collection operations to use Java Streams","messageBody":"Current TaskList methods use traditional for-loops for filtering and\nmapping operations on the task collection. Streams provide a more\nfunctional and readable approach for these operations.\n\nThe existing loop-based implementations work correctly but Streams\noffer better readability and leverage modern Java capabilities.\n\nLet\u0027s convert key methods to use Streams:\n* findTasksByKeyword() uses filter() instead of manual loop\n* findTasksByKeywords() replaces nested loops with anyMatch()\n* findTasksOnDate() uses filter() with extracted helper method\n* addTodos() uses map() to transform descriptions to tasks\n\nThis maintains the same functionality while using modern Java\nfeatures for collection processing.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":65}}},{"hash":"0dde89b0741179e1966ee8f73ba4da0e256ccafc","isMergeCommit":false,"messageTitle":"Delete uneccessary files before merging branch","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":5}}},{"hash":"c763721607252f5c10c1efbaaa16e7f7ffea621c","isMergeCommit":true,"messageTitle":"Merge pull request #1 from BrandonnLow/branch-A-Assertions","messageBody":"branch-A-Assertions","fileTypesAndContributionMap":{}},{"hash":"4c29eb89dd376bedea81d9e63384bc3cb061008d","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"Resolve merge conflicts between A-CodeQuality and A-Assertions\n\nIntegrate code quality improvements with assertion statements.\nBoth refactored methods and validation assertions are preserved.\n","fileTypesAndContributionMap":{}},{"hash":"ffc8a6c164e570a84c690819f9c903aafce3f54e","isMergeCommit":true,"messageTitle":"Merge pull request #2 from BrandonnLow/branch-A-CodeQuality","messageBody":"Refactor core classes to improve code quality","fileTypesAndContributionMap":{}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"c762cd89278564ce24d63955099951cfb3f3427e","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"Merge master into branch-A-Streams\n\nResolved conflicts by combining assertions, code quality improvements,\nand streams functionality. Removed assertions from lambda expressions\nto fix compilation errors while maintaining all other functionality.\n","fileTypesAndContributionMap":{}},{"hash":"3c23a5f180f7160df5ae2fd09b14a03b3b272d97","isMergeCommit":true,"messageTitle":"Merge pull request #3 from BrandonnLow/branch-A-Streams","messageBody":"Convert collection operations to use Java Streams","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{}},{"hash":"7ee954defb5236afcdf81ec07e908a3bd33e8c5e","isMergeCommit":false,"messageTitle":"Fix task descriptions being replaced with \"0\" on app restart","messageBody":"Replace improper regex splitting with Pattern.quote() to handle\nliteral \" | \" field separator correctly in parseTaskFromFile().\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"b2acc7be2c7413177e7c9d0ff3a1c0035a5aa027","isMergeCommit":true,"messageTitle":"Merge pull request #4 from BrandonnLow/branch-A-Streams","messageBody":"Fix task descriptions being replaced with \"0\" on app restart","fileTypesAndContributionMap":{}},{"hash":"3430838c8c03f2805246c783478197e19956b022","isMergeCommit":false,"messageTitle":"Add C-Update extension for editing task details","messageBody":"- Add UpdateCommand and UpdateMultipleCommand classes\n- Extend Parser to handle update command syntax\n- Add task update methods to TaskList with type validation\n- Add UI methods for update confirmations\n- Support updating descriptions, deadlines, and event times\n- Preserve task completion status during updates\n- Include comprehensive error handling for invalid operations\n","fileTypesAndContributionMap":{"java":{"insertions":703,"deletions":2}}},{"hash":"228968f8768ac9f72bddca4ecfde14eda0f96979","isMergeCommit":false,"messageTitle":"Update tests for C-Update","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":7},"java":{"insertions":703,"deletions":11}}},{"hash":"d5c0090eb74359730e98f332e5f797a5bf541176","isMergeCommit":true,"messageTitle":"Merge pull request #5 from BrandonnLow/branch-C-Update","messageBody":"Branch c update","fileTypesAndContributionMap":{}}]},{"date":"2025-09-06T00:00:00","commitResults":[{"hash":"d769dc4207ab17d537d469bb2c66c77d69919196","isMergeCommit":false,"messageTitle":"Add AI usage documentation","messageBody":"- Document use of Claude for development assistance\n- Include details on Javadocs generation and debugging help\n","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{"md":{"insertions":40,"deletions":0}}},{"hash":"f87ee949875f30d3d9e8a50c4c87f544712ad135","isMergeCommit":false,"messageTitle":"Enhance GUI with custom Ping and Pong avatars","messageBody":"- Replace default DaDuke and DaUser images with custom Ping.JPG and Pong.JPG\n- Personalize chat interface with themed avatars\n- Improve visual appeal of dialog boxes\n","tags":["v.02","A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"8e843c4938232aad375e1128223f8282d02568f1","isMergeCommit":false,"messageTitle":"Add user guide and product screenshot","messageBody":"- Add comprehensive user guide with all command documentation\n- Include product screenshot showing full GUI window\n- Document all features including batch operations\n- Add command summary table for quick reference\n","tags":["A-UserGuide","A-Release"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2},"md":{"insertions":108,"deletions":15}}}]},{"date":"2025-09-13T00:00:00","commitResults":[{"hash":"bf69ba7faf7f98efb3a7c0c46815941cf3f07f19","isMergeCommit":false,"messageTitle":"Refactor Parser: extract field parsing logic into helper methods","messageBody":"The parseUpdateFields() methods in Parser.java are 50 lines long,\nviolating the recommended method length guidelines. Both overloaded\nversions contain identical field parsing logic, causing code\nduplication.\n\nLong methods are harder to understand, test, and maintain. The\nduplicated logic between the two parseUpdateFields() overloads\nincreases the risk of inconsistencies when making changes.\n\nLet\u0027s extract the field parsing logic into dedicated helper methods:\n* parseDescriptionField() - handles description parsing and validation\n* parseDeadlineField() - handles deadline date parsing and validation\n* parseStartTimeField() - handles start time parsing and validation\n* parseEndTimeField() - handles end time parsing and validation\n* validateTimeRange() - validates start/end time relationship\n\nThis refactoring follows the Single Level of Abstraction Principle\n(SLAP) by separating the high-level flow from low-level parsing\ndetails. Each helper method has a single, clear responsibility.\n\nThe extraction reduces both parseUpdateFields() methods from ~50 lines\nto ~20 lines each while eliminating code duplication. All existing\nfunctionality is preserved with no changes to the public API or other\nclasses.\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":56}}},{"hash":"4a4bbdbaff7dc615f259f34bbe201bdafdc20da6","isMergeCommit":false,"messageTitle":"Refactor large classes to improve code organization","messageBody":"Parser.java (820 lines) and TaskList.java (653 lines) exceed\nrecommended class size limits, indicating they handle too many\nresponsibilities.\n\nExtract specialized functionality into focused helper classes:\n* DateTimeParser - handles date/time parsing logic\n* TaskNumberParser - handles task number validation and parsing\n* UpdateFieldParser - handles update command field parsing\n* TaskSearcher - handles task search operations\n* TaskUpdater - handles task update logic\n\nSplit TaskListTest.java (774 lines) into focused test classes:\n* TaskListBasicTest - tests core CRUD operations\n* TaskListBatchTest - tests batch operations\n* TaskListSearchTest - tests search functionality\n* TaskListUpdateTest - tests update functionality\n\nThis refactoring follows Single Responsibility Principle, reducing\nParser and TaskList to ~400 lines.\n","fileTypesAndContributionMap":{"java":{"insertions":1139,"deletions":830}}}]},{"date":"2025-09-19T00:00:00","commitResults":[{"hash":"9cb0ca76db93441279a95fd08d1828826b477359","isMergeCommit":false,"messageTitle":"Add help command and improve error messages","messageBody":"Users need guidance on available commands and correct syntax.\n\nLet\u0027s add a help command that displays all available commands with\nexamples. Also enhance error messages to include format hints and\nsuggest typing \u0027help\u0027 when users make mistakes.\n\nOptional sample data loader provides example tasks for first-time\nusers to understand different task types.\n","fileTypesAndContributionMap":{"java":{"insertions":306,"deletions":23}}}]}]},"authorFileTypeContributionMap":{"BrandonnLow":{"java":6133,"md":150,"fxml":35,"sh":0,"bat":6,"gradle":21,"txt":28}},"authorContributionVariance":{"BrandonnLow":597705.3},"authorDisplayNameMap":{"BrandonnLow":"CS2103T-W09-4 LOW ..NDON"}}
