[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"# Pingpong project template","lastModifiedDate":"2025-08-15T00:52:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04T21:45:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":1,"-":25}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    mainClass.set(\"pingpong.Launcher\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    archiveBaseName \u003d \"pingpong\"","lastModifiedDate":"2025-08-24T23:18:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"checkstyle {","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":21,"-":37}},{"path":"data/pingpong.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"T | 0 | wjlognwe","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"# Pingpong User Guide","lastModifiedDate":"2025-08-15T00:52:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":1,"-":29}},{"path":"src/main/java/pingpong/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    private Label dialog;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    private void flip() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    public static DialogBox getPingpongDialog(String text, Image img) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"        db.flip();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"        return db;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":61}},{"path":"src/main/java/pingpong/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"public class Launcher {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":12}},{"path":"src/main/java/pingpong/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * A GUI for Pingpong using FXML.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class Main extends Application {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private Pingpong pingpong \u003d new Pingpong(\"./data/pingpong.txt\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"            stage.setTitle(\"Pingpong\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPingpong(pingpong);","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"            stage.show();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":36}},{"path":"src/main/java/pingpong/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    private TextField userInput;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    private Button sendButton;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    private Pingpong pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    private final Image pingpongImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    public void initialize() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    /** Injects the Pingpong instance */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public void setPingpong(Pingpong p) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        pingpong \u003d p;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        showWelcomeMessage();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"     * Shows the welcome message when the application starts.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        String welcomeMessage \u003d \" Hello! I\u0027m Pingpong\\n What can I do for you?\";","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"                DialogBox.getPingpongDialog(welcomeMessage, pingpongImage)","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        );","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Pingpong\u0027s reply","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    @FXML","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        String response \u003d getPingpongResponse(input);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"        addDialogBoxes(","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"                DialogBox.getPingpongDialog(response, pingpongImage)","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        );","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"        userInput.clear();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"     * Gets response from Pingpong by processing the user input.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"    private String getPingpongResponse(String input) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"            MockUi mockUi \u003d new MockUi();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"            if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"                return \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"            pingpong.processCommand(input, mockUi);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"            return mockUi.getOutput();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"        } catch (PingpongException e) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"            return \" OOPS!!! \" + e.getMessage();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"     * Adds multiple dialog boxes to the dialog container using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"    private void addDialogBoxes(DialogBox... dialogBoxes) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"        dialogContainer.getChildren().addAll(dialogBoxes);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":91}},{"path":"src/main/java/pingpong/MockUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":" * Mock UI class to capture output from Pingpong operations for GUI display.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"public class MockUi extends Ui {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    private StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    public MockUi() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"        super(); // This will initialize the Scanner, but we won\u0027t use it","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    public String getOutput() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d output.toString();","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"        output.setLength(0); // Clear the buffer for next use","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        return result;","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" OOPS!!! \").append(message);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    public void showErrors(String... messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" OOPS!!! \").append(message).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    public void showMessages(String... messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" \").append(message).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" Got it. I\u0027ve added this task:\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"                .append(\"   \").append(task).append(\"\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"                .append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksAdded(ArrayList\u003cTask\u003e tasks, int totalTasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"            showTaskAdded(tasks.get(0), totalTasks);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Got it. I\u0027ve added these \").append(tasks.size()).append(\" tasks:\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\"   \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" Nice! I\u0027ve marked this task as done:\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"                .append(\"  \").append(task);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksMarked(Task... tasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"            showTaskMarked(tasks[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Nice! I\u0027ve marked these \").append(tasks.length).append(\" tasks as done:\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\"  \").append(i + 1).append(\". \").append(tasks[i]).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" OK, I\u0027ve marked this task as not done yet:\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"                .append(\"  \").append(task);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksUnmarked(Task... tasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"            showTaskUnmarked(tasks[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" OK, I\u0027ve marked these \").append(tasks.length).append(\" tasks as not done yet:\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\"  \").append(i + 1).append(\". \").append(tasks[i]).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"        output.append(\" Noted. I\u0027ve removed this task:\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"                .append(\"   \").append(task).append(\"\\n\")","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"                .append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksDeleted(ArrayList\u003cTask\u003e tasks, int totalTasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"            showTaskDeleted(tasks.get(0), totalTasks);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Noted. I\u0027ve removed these \").append(tasks.size()).append(\" tasks:\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\"   \").append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Now you have \").append(totalTasks).append(\" tasks in the list.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByKeyword(ArrayList\u003cTask\u003e matchingTasks, String keyword) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" No matching tasks found.\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByKeywords(ArrayList\u003cTask\u003e matchingTasks, String... keywords) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" No matching tasks found for any of the keywords.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Here are the matching tasks for keywords: \");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c keywords.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"                output.append(keywords[i]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"                if (i \u003c keywords.length - 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"                    output.append(\", \");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"                }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByDate(ArrayList\u003cTask\u003e matchingTasks, String dateStr) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" No tasks found on \").append(dateStr);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"            output.append(\" Here are the tasks on \").append(dateStr).append(\":\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"                output.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"    // Override unused methods from parent class","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"        return \"\";","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"        // Not used in GUI","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"    public void close() {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"        // Not needed for GUI","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":193}},{"path":"src/main/java/pingpong/Pingpong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.command.Command;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.command.Parser;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Main class for the Pingpong task management application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" * Coordinates the interaction between the UI, task list, storage, and command parsing.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"public class Pingpong {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    private static Ui ui;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Pingpong application instance with the specified storage file path.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     * Initializes the UI, storage, and loads existing tasks from file.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     * @param filePath the path to the file where tasks are stored","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    public Pingpong(String filePath) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"            ui.showError(\"Error loading tasks from file. Starting with empty task list.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     * The main entry point for the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        new Pingpong(\"./data/pingpong.txt\").run();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"     * Starts the main application loop.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"     * Handles user input, command parsing, and execution until the user exits.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"    public void run() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"            try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"                if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"                    break;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"                }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"            } catch (PingpongException e) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        ui.close();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"     * Processes a single command using the provided UI without running the full interactive loop.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"     * Used by the GUI to get responses for user input.","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"     * @param fullCommand the command to process","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to use for output","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during command execution","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"    public void processCommand(String fullCommand, Ui ui) throws PingpongException {","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":88}},{"path":"src/main/java/pingpong/PingpongException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":" * Custom exception class for the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":" * Used to handle application-specific errors and provide meaningful error messages to users.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"public class PingpongException extends Exception {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new PingpongException with the specified error message.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"     * @param message the error message describing what went wrong","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    public PingpongException(String message) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"        super(message);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":17}},{"path":"src/main/java/pingpong/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" * Command to add a new Deadline task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    private String description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDate by;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new AddDeadlineCommand with the specified description and deadline.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     * @param by the date by which the task should be completed","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    public AddDeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to add a deadline task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to add the deadline to","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        Task deadline \u003d tasks.addDeadline(description, by);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskAdded(deadline, tasks.size());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":41}},{"path":"src/main/java/pingpong/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" * Command to add a new Event task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    private String description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new AddEventCommand with the specified description, start time, and end time.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"     * @param start the start date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"     * @param end the end date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    public AddEventCommand(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to add an event task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to add the event to","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        Task event \u003d tasks.addEvent(description, start, end);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskAdded(event, tasks.size());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":44}},{"path":"src/main/java/pingpong/command/AddMultipleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Command to add multiple todo tasks to the task list using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class AddMultipleCommand extends Command {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private String[] descriptions;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new AddMultipleCommand with the specified descriptions.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * @param descriptions the descriptions of the todo tasks (varargs)","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    public AddMultipleCommand(String... descriptions) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        this.descriptions \u003d descriptions;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to add multiple todo tasks to the task list.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to add the todos to","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during execution","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d tasks.addTodos(descriptions);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTasksAdded(addedTasks, tasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":40}},{"path":"src/main/java/pingpong/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Command to add a new Todo task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    private String description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new AddTodoCommand with the specified description.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Todo description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.trim().isEmpty() : \"Todo description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        assert this.description !\u003d null : \"Todo description should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to add a todo task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to add the todo to","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during execution","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        assert ui !\u003d null : \"UI should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        int originalSize \u003d tasks.size();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        Task todo \u003d tasks.addTodo(description);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        assert todo !\u003d null : \"Created todo should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.size() \u003d\u003d originalSize + 1 : \"Task list size should increase by 1\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.getAllTasks().contains(todo) : \"Todo should be in task list\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskAdded(todo, tasks.size());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":54}},{"path":"src/main/java/pingpong/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":" * Represents an abstract command that can be executed by the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * All concrete commands should extend this class and implement the execute method.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to operate on","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI for user interactions","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage for saving/loading tasks","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during command execution","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":24}},{"path":"src/main/java/pingpong/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Command to delete a task from the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new DeleteCommand for the specified task number.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumber the number of the task to delete (1-indexed)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive (1-indexed)\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        assert this.taskNumber \u003e 0 : \"Task number should be set and positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to delete the specified task from the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to delete the task from","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the task number is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        assert ui !\u003d null : \"UI should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        int originalSize \u003d tasks.size();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        assert originalSize \u003e\u003d 0 : \"Original task list size should not be negative\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        int zeroIndexedTaskNumber \u003d taskNumber - 1;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        assert zeroIndexedTaskNumber \u003e\u003d 0 : \"Zero-indexed task number should not be negative\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        Task deletedTask \u003d tasks.deleteTask(zeroIndexedTaskNumber);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        assert deletedTask !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.size() \u003d\u003d originalSize - 1 : \"Task list size should decrease by 1\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskDeleted(deletedTask, tasks.size());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":57}},{"path":"src/main/java/pingpong/command/DeleteMultipleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":" * Command to delete multiple tasks from the task list using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"public class DeleteMultipleCommand extends Command {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new DeleteMultipleCommand for the specified task numbers.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumbers the numbers of the tasks to delete (1-indexed, varargs)","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    public DeleteMultipleCommand(int... taskNumbers) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to delete multiple specified tasks from the task list.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * Deletes tasks in reverse order to maintain valid indices.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to delete the tasks from","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any task number is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        // Sort task numbers in descending order to delete from highest index first","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        // This prevents index shifting issues when deleting multiple items","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        Integer[] taskNumbersWrapper \u003d new Integer[taskNumbers.length];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c taskNumbers.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"            taskNumbersWrapper[i] \u003d taskNumbers[i];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        Arrays.sort(taskNumbersWrapper, Comparator.reverseOrder());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        // Delete tasks in descending order of their indices","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        for (int taskNumber : taskNumbersWrapper) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"            Task deletedTask \u003d tasks.deleteTask(taskNumber - 1);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"            deletedTasks.add(0, deletedTask);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTasksDeleted(deletedTasks, tasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":58}},{"path":"src/main/java/pingpong/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":" * Command to find tasks that occur on a specific date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDate date;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    private String searchTerm;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isDateSearch;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDate targetDate;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new FindCommand for the specified date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     * @param searchTerm the searched term (either time or description)","lastModifiedDate":"2025-08-25T16:11:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        this.isDateSearch \u003d false;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"            this.targetDate \u003d LocalDate.parse(searchTerm, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"            this.isDateSearch \u003d true;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"            this.isDateSearch \u003d false;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to find and display tasks occurring on the specified date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to search through","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display the found tasks","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage (not modified by this command)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during execution","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        if (isDateSearch) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"            foundTasks \u003d tasks.findTasksOnDate(targetDate);","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"            String formattedDate \u003d targetDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"            ui.showFoundTasksByDate(foundTasks, formattedDate);","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"            foundTasks \u003d tasks.findTasksByKeyword(searchTerm);","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"            ui.showFoundTasksByKeyword(foundTasks, searchTerm);","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":62}},{"path":"src/main/java/pingpong/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":" * Command to list all tasks in the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to display all tasks in the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list to display","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to show the task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage (not modified by this command)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if an error occurs during execution","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskList(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":25}},{"path":"src/main/java/pingpong/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Command to mark a task as completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new MarkCommand for the specified task number.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumber the number of the task to mark (1-indexed)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive (1-indexed)\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        assert this.taskNumber \u003e 0 : \"Task number should be set and positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to mark the specified task as completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list containing the task to mark","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the task number is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        assert ui !\u003d null : \"UI should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        int zeroIndexedTaskNumber \u003d taskNumber - 1;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        assert zeroIndexedTaskNumber \u003e\u003d 0 : \"Zero-indexed task number should not be negative\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        Task markedTask \u003d tasks.markTask(zeroIndexedTaskNumber);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"        assert markedTask !\u003d null : \"Marked task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        assert markedTask.isDone() : \"Task should be marked as done after execution\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskMarked(markedTask);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":54}},{"path":"src/main/java/pingpong/command/MarkMultipleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Command to mark multiple tasks as completed using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class MarkMultipleCommand extends Command {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new MarkMultipleCommand for the specified task numbers.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumbers the numbers of the tasks to mark (1-indexed, varargs)","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    public MarkMultipleCommand(int... taskNumbers) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to mark multiple specified tasks as completed.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list containing the tasks to mark","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any task number is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        int[] indices \u003d new int[taskNumbers.length];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c taskNumbers.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"            indices[i] \u003d taskNumbers[i] - 1;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d tasks.markTasks(indices);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        Task[] markedTasksArray \u003d markedTasks.toArray(new Task[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTasksMarked(markedTasksArray);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":48}},{"path":"src/main/java/pingpong/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Handles parsing of user commands and returns appropriate Command objects.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" * This class contains the main parsing logic for all supported commands in the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":" * Now supports varargs for batch operations on multiple tasks.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"public class Parser {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    // Command keywords","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    private static final String ADD_MULTIPLE_COMMAND \u003d \"addmultiple\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    // Error messages","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    private static final String EMPTY_COMMAND_ERROR \u003d \"Please enter a command.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    private static final String UNKNOWN_COMMAND_ERROR \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    private static final String MARK_MISSING_ERROR \u003d \"Please specify which task(s) to mark.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    private static final String UNMARK_MISSING_ERROR \u003d \"Please specify which task(s) to unmark.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DELETE_MISSING_ERROR \u003d \"Please specify which task(s) to delete.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    private static final String TODO_EMPTY_ERROR \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DEADLINE_EMPTY_ERROR \u003d \"The description of a deadline cannot be empty.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    private static final String EVENT_EMPTY_ERROR \u003d \"The description of an event cannot be empty.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    private static final String FIND_EMPTY_ERROR \u003d \"Please specify a keyword or date (yyyy-MM-dd) to search for.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    private static final String ADD_MULTIPLE_EMPTY_ERROR \u003d \"Please specify todo descriptions separated by semicolons.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    private static final String INVALID_TASK_NUMBER_ERROR \u003d \"Please provide valid task number(s).\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    private static final String POSITIVE_NUMBER_ERROR \u003d \"Task numbers must be positive integers.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"    // Date format strings","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATETIME_FORMAT_HHMM \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATETIME_FORMAT_COLON \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATE_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATETIME_HHMM_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DATETIME_COLON_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"     * Parses user input and returns the appropriate Command object for execution.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"     * Supports commands: list, mark, unmark, todo, deadline, event, delete, find, addmultiple.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"     * Also supports batch operations with multiple task numbers.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the raw user input string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"     * @return the Command object corresponding to the user input","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the command format is invalid or unrecognized","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"    public static Command parse(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        validateInput(input);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"        String command \u003d extractCommand(input);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"        assert command !\u003d null : \"Extracted command should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"        switch (command) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        case MARK_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"            return parseMarkCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        case UNMARK_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"            return parseUnmarkCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"            return parseTodoCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"            return parseDeadlineCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"            return parseEventCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"            return parseDeleteCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"            return parseFindCommand(input);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"        case ADD_MULTIPLE_COMMAND:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"            return parseAddMultipleCommand(input);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"        default:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(UNKNOWN_COMMAND_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"     * Validates that the input is not empty or blank.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the user input to validate","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if input is empty or blank","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"    private static void validateInput(String input) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(EMPTY_COMMAND_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"     * Extracts the command keyword from user input.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the user input","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"     * @return the command keyword","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"    private static String extractCommand(String input) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"        assert !input.trim().isEmpty() : \"Input should not be empty\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"        return input.trim().split(\"\\\\s+\")[0];","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if the command has arguments after the command keyword.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the complete user input","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"     * @param command the command keyword","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if arguments exist, false otherwise","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"    private static boolean hasArguments(String input, String command) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"        assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"        return input.length() \u003e command.length() \u0026\u0026","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"                input.substring(command.length()).trim().length() \u003e 0;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a mark command to extract task numbers (supports both single and multiple).","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"mark task_number\" or \"mark task_number1 task_number2 ...\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the mark command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"     * @return a MarkCommand or MarkMultipleCommand depending on number of tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if task numbers are missing or invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseMarkCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"mark\") : \"Input should start with \u0027mark\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, MARK_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(MARK_MISSING_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"        String numbersStr \u003d input.substring(MARK_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"        assert !numbersStr.isEmpty() : \"Numbers string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"        String[] numberParts \u003d numbersStr.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts !\u003d null : \"Number parts array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts.length \u003e 0 : \"Should have at least one number part\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"        if (numberParts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"            int taskNum \u003d parseTaskNumber(numberParts[0]);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"            int[] taskNumbers \u003d parseTaskNumbers(numberParts);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers !\u003d null : \"Parsed task numbers should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers.length \u003e 1 : \"Should have multiple task numbers\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"            return new MarkMultipleCommand(taskNumbers);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"     * Parses an unmark command to extract task numbers (supports both single and multiple).","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"unmark task_number\" or \"unmark task_number1 task_number2 ...\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the unmark command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"     * @return an UnmarkCommand or UnmarkMultipleCommand depending on number of tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if task numbers are missing or invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseUnmarkCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"unmark\") : \"Input should start with \u0027unmark\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, UNMARK_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(UNMARK_MISSING_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"        String numbersStr \u003d input.substring(UNMARK_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"        assert !numbersStr.isEmpty() : \"Numbers string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"        String[] numberParts \u003d numbersStr.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts !\u003d null : \"Number parts array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts.length \u003e 0 : \"Should have at least one number part\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"        if (numberParts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"            int taskNum \u003d parseTaskNumber(numberParts[0]);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"            int[] taskNumbers \u003d parseTaskNumbers(numberParts);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers !\u003d null : \"Parsed task numbers should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers.length \u003e 1 : \"Should have multiple task numbers\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"            return new UnmarkMultipleCommand(taskNumbers);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a delete command to extract task numbers (supports both single and multiple).","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"delete task_number\" or \"delete task_number1 task_number2 ...\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the delete command string","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"     * @return a DeleteCommand or DeleteMultipleCommand depending on number of tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if task numbers are missing or invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseDeleteCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"delete\") : \"Input should start with \u0027delete\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, DELETE_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(DELETE_MISSING_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"        String numbersStr \u003d input.substring(DELETE_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"        assert !numbersStr.isEmpty() : \"Numbers string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"        String[] numberParts \u003d numbersStr.split(\"\\\\s+\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts !\u003d null : \"Number parts array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts.length \u003e 0 : \"Should have at least one number part\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"        if (numberParts.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"            int taskNum \u003d parseTaskNumber(numberParts[0]);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"            int[] taskNumbers \u003d parseTaskNumbers(numberParts);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers !\u003d null : \"Parsed task numbers should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNumbers.length \u003e 1 : \"Should have multiple task numbers\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"            return new DeleteMultipleCommand(taskNumbers);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"     * Parses an addmultiple command to extract multiple todo descriptions.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"addmultiple description1; description2; description3\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the addmultiple command string","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"     * @return an AddMultipleCommand with the specified descriptions","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if descriptions are missing or invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseAddMultipleCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"addmultiple\") : \"Input should start with \u0027addmultiple\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, ADD_MULTIPLE_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(ADD_MULTIPLE_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"        String descriptionsStr \u003d input.substring(ADD_MULTIPLE_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"        assert !descriptionsStr.isEmpty() : \"Descriptions string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"        String[] descriptions \u003d descriptionsStr.split(\";\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"        assert descriptions !\u003d null : \"Descriptions array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cString\u003e validDescriptions \u003d extractValidDescriptions(descriptions);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"        if (validDescriptions.isEmpty()) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Please provide at least one valid todo description.\");","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"        assert !validDescriptions.isEmpty() : \"Should have at least one valid description\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"        return new AddMultipleCommand(validDescriptions.toArray(new String[0]));","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"     * Filters out empty descriptions from the array of description strings.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"     * @param descriptions array of raw description strings","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"     * @return list of valid, non-empty descriptions","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"    private static ArrayList\u003cString\u003e extractValidDescriptions(String[] descriptions) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"        assert descriptions !\u003d null : \"Descriptions array should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cString\u003e validDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"        for (String desc : descriptions) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"            assert desc !\u003d null : \"Each description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"            String trimmed \u003d desc.trim();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"            if (!trimmed.isEmpty()) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"                validDescriptions.add(trimmed);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"        return validDescriptions;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"     * Helper method to parse a single task number.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"     * @param numberStr string representation of task number","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"     * @return parsed task number","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if task number is invalid","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"    private static int parseTaskNumber(String numberStr) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"        assert numberStr !\u003d null : \"Number string should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"            int taskNum \u003d Integer.parseInt(numberStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BrandonnLow"},"content":"            if (taskNum \u003c\u003d 0) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BrandonnLow"},"content":"                throw new PingpongException(POSITIVE_NUMBER_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BrandonnLow"},"content":"            assert taskNum \u003e 0 : \"Parsed task number should be positive\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BrandonnLow"},"content":"            return taskNum;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BrandonnLow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(INVALID_TASK_NUMBER_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BrandonnLow"},"content":"     * Helper method to parse multiple task numbers from string array using varargs concept.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BrandonnLow"},"content":"     * @param numberParts array of string representations of task numbers","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BrandonnLow"},"content":"     * @return array of parsed task numbers","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any task number is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BrandonnLow"},"content":"    private static int[] parseTaskNumbers(String... numberParts) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts !\u003d null : \"Number parts array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BrandonnLow"},"content":"        assert numberParts.length \u003e 0 : \"Should have at least one number part\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BrandonnLow"},"content":"        int[] taskNumbers \u003d new int[numberParts.length];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c numberParts.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BrandonnLow"},"content":"            assert numberParts[i] !\u003d null : \"Each number part should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BrandonnLow"},"content":"            taskNumbers[i] \u003d parseTaskNumber(numberParts[i]);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BrandonnLow"},"content":"        assert taskNumbers.length \u003d\u003d numberParts.length : \"All numbers should be parsed\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BrandonnLow"},"content":"        return taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a todo command to extract the task description.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"todo description\"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the todo command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BrandonnLow"},"content":"     * @return an AddTodoCommand with the specified description","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the description is empty","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseTodoCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"todo\") : \"Input should start with \u0027todo\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, TODO_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(TODO_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BrandonnLow"},"content":"        String description \u003d input.substring(TODO_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.isEmpty() : \"Description should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BrandonnLow"},"content":"        return new AddTodoCommand(description);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a deadline command to extract the description and deadline date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"deadline description /by yyyy-MM-dd\"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the deadline command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BrandonnLow"},"content":"     * @return an AddDeadlineCommand with the specified description and date","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the format is invalid or dates cannot be parsed","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseDeadlineCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"deadline\") : \"Input should start with \u0027deadline\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, DEADLINE_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(DEADLINE_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BrandonnLow"},"content":"        String[] parts \u003d input.substring(DEADLINE_COMMAND.length()).split(\" /by \");","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BrandonnLow"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Please use format: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd\u003e\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BrandonnLow"},"content":"        assert parts.length \u003d\u003d 2 : \"Should have exactly 2 parts after splitting\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BrandonnLow"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BrandonnLow"},"content":"        String byStr \u003d parts[1].trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BrandonnLow"},"content":"        validateDeadlineComponents(description, byStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate by \u003d parseDate(byStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BrandonnLow"},"content":"        assert by !\u003d null : \"Parsed date should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"BrandonnLow"},"content":"        return new AddDeadlineCommand(description, by);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"BrandonnLow"},"content":"     * Validates components of a deadline command.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BrandonnLow"},"content":"     * @param byStr the deadline date string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any component is invalid","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"BrandonnLow"},"content":"    private static void validateDeadlineComponents(String description, String byStr) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"BrandonnLow"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(DEADLINE_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"BrandonnLow"},"content":"        if (byStr.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"The deadline date cannot be empty.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.isEmpty() : \"Description should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"BrandonnLow"},"content":"        assert !byStr.isEmpty() : \"Date string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"BrandonnLow"},"content":"     * Parses an event command to extract the description, start time, and end time.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"event description /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the event command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"BrandonnLow"},"content":"     * @return an AddEventCommand with the specified description and time range","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the format is invalid, dates cannot be parsed, or start time is after end time","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseEventCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"event\") : \"Input should start with \u0027event\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, EVENT_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(EVENT_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"BrandonnLow"},"content":"        String[] eventParts \u003d parseEventParts(input);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"BrandonnLow"},"content":"        String description \u003d eventParts[0];","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"BrandonnLow"},"content":"        String fromStr \u003d eventParts[1];","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"BrandonnLow"},"content":"        String toStr \u003d eventParts[2];","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"BrandonnLow"},"content":"        validateEventComponents(description, fromStr, toStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime from \u003d parseDateTime(fromStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime to \u003d parseDateTime(toStr);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"BrandonnLow"},"content":"        assert from !\u003d null : \"Parsed start time should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"BrandonnLow"},"content":"        assert to !\u003d null : \"Parsed end time should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"BrandonnLow"},"content":"        validateEventTiming(from, to);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"BrandonnLow"},"content":"        return new AddEventCommand(description, from, to);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"BrandonnLow"},"content":"     * Parses event command into its component parts.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the event command string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"BrandonnLow"},"content":"     * @return array containing [description, fromStr, toStr]","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if format is invalid","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"BrandonnLow"},"content":"    private static String[] parseEventParts(String input) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"BrandonnLow"},"content":"        String remaining \u003d input.substring(EVENT_COMMAND.length());","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"BrandonnLow"},"content":"        String[] fromParts \u003d remaining.split(\" /from \");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"BrandonnLow"},"content":"        if (fromParts.length !\u003d 2) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Please use format: event \u003cdescription\u003e \"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"BrandonnLow"},"content":"                    + \"/from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"BrandonnLow"},"content":"        assert fromParts.length \u003d\u003d 2 : \"Should have exactly 2 parts after splitting by /from\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"BrandonnLow"},"content":"        String description \u003d fromParts[0].trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"BrandonnLow"},"content":"        String[] toParts \u003d fromParts[1].split(\" /to \");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"BrandonnLow"},"content":"        if (toParts.length !\u003d 2) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Please use format: event \u003cdescription\u003e \"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"BrandonnLow"},"content":"                    + \"/from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"BrandonnLow"},"content":"        assert toParts.length \u003d\u003d 2 : \"Should have exactly 2 parts after splitting by /to\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"BrandonnLow"},"content":"        return new String[]{description, toParts[0].trim(), toParts[1].trim()};","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"BrandonnLow"},"content":"     * Validates components of an event command.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the event description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"BrandonnLow"},"content":"     * @param fromStr the start time string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"BrandonnLow"},"content":"     * @param toStr the end time string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any component is invalid","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"BrandonnLow"},"content":"    private static void validateEventComponents(String description, String fromStr, String toStr)","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"BrandonnLow"},"content":"            throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"BrandonnLow"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(EVENT_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"BrandonnLow"},"content":"        if (fromStr.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"The event start time cannot be empty.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"BrandonnLow"},"content":"        if (toStr.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"The event end time cannot be empty.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.isEmpty() : \"Description should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"BrandonnLow"},"content":"        assert !fromStr.isEmpty() : \"From string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"BrandonnLow"},"content":"        assert !toStr.isEmpty() : \"To string should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"BrandonnLow"},"content":"     * Validates that event start time is not after end time.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"BrandonnLow"},"content":"     * @param from the start time","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"BrandonnLow"},"content":"     * @param to the end time","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if start time is after end time","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"BrandonnLow"},"content":"    private static void validateEventTiming(LocalDateTime from, LocalDateTime to) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"BrandonnLow"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Event start time cannot be after end time.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"BrandonnLow"},"content":"        assert !from.isAfter(to) : \"Start time should not be after end time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a find command to extract the target date or keywords.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"BrandonnLow"},"content":"     * Expected format: \"find yyyy-MM-dd\" or \"find keyword\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"BrandonnLow"},"content":"     * @param input the find command string","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"BrandonnLow"},"content":"     * @return a FindCommand with the specified date or keyword","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the date/keyword is missing or in invalid format","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"BrandonnLow"},"content":"    private static Command parseFindCommand(String input) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"BrandonnLow"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"BrandonnLow"},"content":"        assert input.startsWith(\"find\") : \"Input should start with \u0027find\u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"BrandonnLow"},"content":"        if (!hasArguments(input, FIND_COMMAND)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(FIND_EMPTY_ERROR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"BrandonnLow"},"content":"        String searchTerm \u003d input.substring(FIND_COMMAND.length()).trim();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"BrandonnLow"},"content":"        assert !searchTerm.isEmpty() : \"Search term should not be empty after validation\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"BrandonnLow"},"content":"        return new FindCommand(searchTerm);","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a date string in yyyy-MM-dd format into a LocalDate object.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"BrandonnLow"},"content":"     * @param dateStr the date string to parse","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"BrandonnLow"},"content":"     * @return the parsed LocalDate","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the date format is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"BrandonnLow"},"content":"    private static LocalDate parseDate(String dateStr) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"BrandonnLow"},"content":"        assert dateStr !\u003d null : \"Date string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"BrandonnLow"},"content":"        assert !dateStr.trim().isEmpty() : \"Date string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"BrandonnLow"},"content":"            LocalDate parsed \u003d LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"BrandonnLow"},"content":"            assert parsed !\u003d null : \"Parsed date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"BrandonnLow"},"content":"            return parsed;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"BrandonnLow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Invalid date format. Please use yyyy-MM-dd format (e.g., 2019-12-02)\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a date-time string into a LocalDateTime object.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"BrandonnLow"},"content":"     * Supports multiple formats:","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"BrandonnLow"},"content":"     * - \"yyyy-MM-dd HHmm\" (e.g., \"2019-12-02 1800\")","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"BrandonnLow"},"content":"     * - \"yyyy-MM-dd HH:mm\" (e.g., \"2019-12-02 18:00\")","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"BrandonnLow"},"content":"     * - \"yyyy-MM-dd\" (treated as start of day)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"BrandonnLow"},"content":"     * @param dateTimeStr the date-time string to parse","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"BrandonnLow"},"content":"     * @return the parsed LocalDateTime","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the date-time format is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"BrandonnLow"},"content":"    private static LocalDateTime parseDateTime(String dateTimeStr) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"BrandonnLow"},"content":"        assert dateTimeStr !\u003d null : \"DateTime string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"BrandonnLow"},"content":"        assert !dateTimeStr.trim().isEmpty() : \"DateTime string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"BrandonnLow"},"content":"            LocalDateTime parsed;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"BrandonnLow"},"content":"            if (dateTimeStr.matches(DATETIME_HHMM_REGEX)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"BrandonnLow"},"content":"                parsed \u003d LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(DATETIME_FORMAT_HHMM));","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"BrandonnLow"},"content":"            } else if (dateTimeStr.matches(DATETIME_COLON_REGEX)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"BrandonnLow"},"content":"                parsed \u003d LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(DATETIME_FORMAT_COLON));","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"BrandonnLow"},"content":"            } else if (dateTimeStr.matches(DATE_REGEX)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"BrandonnLow"},"content":"                parsed \u003d LocalDate.parse(dateTimeStr, DateTimeFormatter.ofPattern(DATE_FORMAT)).atStartOfDay();","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"BrandonnLow"},"content":"            } else {","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"BrandonnLow"},"content":"                throw new DateTimeParseException(\"Unsupported format\", dateTimeStr, 0);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"BrandonnLow"},"content":"            assert parsed !\u003d null : \"Parsed datetime should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"BrandonnLow"},"content":"            return parsed;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"BrandonnLow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(\"Invalid datetime format.\"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"BrandonnLow"},"content":"                    + \"Please use formats like: 2019-12-02 1800, 2019-12-02 18:00, or 2019-12-02\");","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":587}},{"path":"src/main/java/pingpong/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Command to unmark a task (mark it as not completed).","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    private int taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new UnmarkCommand for the specified task number.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumber the number of the task to unmark (1-indexed)","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to unmark the specified task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list containing the task to unmark","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the task number is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"        Task unmarkedTask \u003d tasks.unmarkTask(taskNumber - 1);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTaskUnmarked(unmarkedTask);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":38}},{"path":"src/main/java/pingpong/command/UnmarkMultipleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.storage.Storage;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.TaskList;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.ui.Ui;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Command to unmark multiple tasks (mark them as not completed) using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class UnmarkMultipleCommand extends Command {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    private int[] taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new UnmarkMultipleCommand for the specified task numbers.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     * @param taskNumbers the numbers of the tasks to unmark (1-indexed, varargs)","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    public UnmarkMultipleCommand(int... taskNumbers) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        this.taskNumbers \u003d taskNumbers;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     * Executes the command to unmark multiple specified tasks.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the task list containing the tasks to unmark","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * @param ui the UI to display feedback to the user","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * @param storage the storage to save the updated task list","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any task number is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        int[] indices \u003d new int[taskNumbers.length];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c taskNumbers.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"            indices[i] \u003d taskNumbers[i] - 1;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d tasks.unmarkTasks(indices);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        Task[] unmarkedTasksArray \u003d unmarkedTasks.toArray(new Task[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        ui.showTasksUnmarked(unmarkedTasksArray);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        storage.save(tasks.getAllTasks());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":48}},{"path":"src/main/java/pingpong/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.storage;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.io.File;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Deadline;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Event;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Todo;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":" * Handles loading and saving of tasks to/from file storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":" * Manages the persistence layer for the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"public class Storage {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    // File format constants","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    private static final String FIELD_SEPARATOR \u003d \" | \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    private static final String TODO_TYPE \u003d \"T\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DEADLINE_TYPE \u003d \"D\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    private static final String EVENT_TYPE \u003d \"E\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DONE_MARKER \u003d \"1\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    private static final String NOT_DONE_MARKER \u003d \"0\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    private static final String DEFAULT_DIRECTORY \u003d \"./\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"    // Error message constants","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    private static final String LOAD_ERROR_PREFIX \u003d \"Error loading tasks from file: \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    private static final String SAVE_ERROR_PREFIX \u003d \"Error saving tasks to file: \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    private static final String CORRUPTED_DATA_WARNING \u003d \"Warning: Skipping corrupted task data: \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"    private static final String INVALID_DATE_WARNING \u003d \"Warning: Invalid date format in file for deadline: \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    private static final String INVALID_DATETIME_WARNING \u003d \"Warning: Invalid datetime format in file for event: \";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    // Minimum number of parts required for different task types","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    private static final int MIN_TASK_PARTS \u003d 3;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"    private static final int MIN_DEADLINE_PARTS \u003d 4;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    private static final int MIN_EVENT_PARTS \u003d 5;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"    private final String directoryPath;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Storage instance with the specified file path.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        assert filePath !\u003d null : \"File path should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"        assert !filePath.trim().isEmpty() : \"File path should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"        this.directoryPath \u003d extractDirectoryPath(filePath);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"        assert this.filePath !\u003d null : \"File path should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"        assert this.directoryPath !\u003d null : \"Directory path should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"     * Extracts the directory path from the full file path.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"     * @param filePath the complete file path","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"     * @return the directory path portion","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"    private String extractDirectoryPath(String filePath) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"        int lastSlashIndex \u003d filePath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        return lastSlashIndex !\u003d -1 ? filePath.substring(0, lastSlashIndex) : DEFAULT_DIRECTORY;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"     * Creates the directory and file if they don\u0027t exist.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"     * Handles corrupted or invalid task data gracefully by skipping them.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of tasks loaded from the file, or empty list if file doesn\u0027t exist","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"            File dataFile \u003d new File(filePath);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"            assert dataFile !\u003d null : \"Data file object should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"                assert tasks.isEmpty() : \"Task list should be empty when no file exists\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"                return tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"            tasks \u003d loadTasksFromFile(dataFile);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(LOAD_ERROR_PREFIX + e.getMessage());","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Returned task list should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"        return tasks;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"     * Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"     * @throws IOException if directory creation fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"    private void ensureDirectoryExists() throws IOException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"        File dataDir \u003d new File(directoryPath);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"        assert dataDir !\u003d null : \"Data directory file object should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"            boolean created \u003d dataDir.mkdirs();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"            if (!created) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"                throw new IOException(\"Failed to create data directory: \" + directoryPath);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"            assert created || dataDir.exists() : \"Directory should exist after creation attempt\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"     * Loads tasks from the specified file.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"     * @param dataFile the file to load from","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"     * @return list of tasks loaded from file","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"     * @throws IOException if file reading fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"    private ArrayList\u003cTask\u003e loadTasksFromFile(File dataFile) throws IOException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"        assert dataFile !\u003d null : \"Data file should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"        try (Scanner fileScanner \u003d new Scanner(dataFile)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"            assert fileScanner !\u003d null : \"File scanner should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"                String line \u003d fileScanner.nextLine().trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"                    Task task \u003d parseTaskFromFile(line);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"                        assert task.getDescription() !\u003d null : \"Loaded task should have description\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"                        tasks.add(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"                    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"                }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Returned task list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"        return tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"     * Saves the provided list of tasks to the storage file.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"     * Creates the directory if it doesn\u0027t exist.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"            ensureDirectoryExists();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"            saveTasksToFile(tasks);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(SAVE_ERROR_PREFIX + e.getMessage());","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"     * Writes tasks to the storage file.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the list of tasks to write","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"     * @throws IOException if file writing fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"    private void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"        try (PrintWriter printWriter \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"            assert printWriter !\u003d null : \"Print writer should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"                assert task !\u003d null : \"Each task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"                String line \u003d formatTaskForFile(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"                assert line !\u003d null : \"Formatted task string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"                assert !line.trim().isEmpty() : \"Formatted task string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"                printWriter.println(line);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"     * Handles different task types and validates date/time formats.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"     * @param line the line from the file to parse","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"     * @return the parsed Task object, or null if parsing fails","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"    private Task parseTaskFromFile(String line) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"        assert line !\u003d null : \"Line should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"        assert !line.trim().isEmpty() : \"Line should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"            String[] parts \u003d line.split(\"\\\\\" + FIELD_SEPARATOR);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"            if (!isValidTaskFormat(parts)) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"                return null;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"            assert parts.length \u003e\u003d MIN_TASK_PARTS : \"Should have at least 3 parts for valid task\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"            boolean isDone \u003d parts[1].trim().equals(DONE_MARKER);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"            assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"            assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"            assert !description.isEmpty() : \"Task description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"            Task task \u003d createTaskByType(type, description, parts);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"            if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"                task.markAsDone();","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"                assert task.isDone() : \"Task should be marked as done if loaded as done\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"            return task;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(CORRUPTED_DATA_WARNING + line);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"     * Validates that the parsed parts array has minimum required elements.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"     * @param parts the split line parts","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if format is valid, false otherwise","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isValidTaskFormat(String[] parts) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"        return parts.length \u003e\u003d MIN_TASK_PARTS;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a task object based on the type indicator.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"     * @param type the task type indicator","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"     * @param parts the complete parsed line parts","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"     * @return the created Task object, or null if creation fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"    private Task createTaskByType(String type, String description, String[] parts) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"        assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"        assert parts !\u003d null : \"Parts array should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"        switch (type) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"        case TODO_TYPE:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"            return new Todo(description);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"        case DEADLINE_TYPE:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"            return createDeadlineTask(description, parts);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"        case EVENT_TYPE:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"            return createEventTask(description, parts);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"        default:","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a Deadline task from file data.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"     * @param parts the complete parsed line parts","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"     * @return Deadline task or null if creation fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"    private Task createDeadlineTask(String description, String[] parts) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"        if (parts.length \u003c MIN_DEADLINE_PARTS) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"            LocalDate by \u003d LocalDate.parse(parts[3].trim(), DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"            assert by !\u003d null : \"Parsed deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(INVALID_DATE_WARNING + String.join(FIELD_SEPARATOR, parts));","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"     * Creates an Event task from file data.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"     * @param parts the complete parsed line parts","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"     * @return Event task or null if creation fails","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"    private Task createEventTask(String description, String[] parts) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"        if (parts.length \u003c MIN_EVENT_PARTS) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BrandonnLow"},"content":"        try {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BrandonnLow"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parts[3].trim(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BrandonnLow"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parts[4].trim(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BrandonnLow"},"content":"            assert start !\u003d null : \"Parsed start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BrandonnLow"},"content":"            assert end !\u003d null : \"Parsed end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BrandonnLow"},"content":"            assert !start.isAfter(end) : \"Start time should not be after end time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BrandonnLow"},"content":"            return new Event(description, start, end);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BrandonnLow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(INVALID_DATETIME_WARNING + String.join(FIELD_SEPARATOR, parts));","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BrandonnLow"},"content":"            return null;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BrandonnLow"},"content":"     * Formats a Task object into a string suitable for file storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task to format","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BrandonnLow"},"content":"     * @return the formatted string for file storage","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BrandonnLow"},"content":"    private String formatTaskForFile(Task task) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BrandonnLow"},"content":"        assert task.getType() !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BrandonnLow"},"content":"        assert task.getDescription() !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BrandonnLow"},"content":"        String isDoneStr \u003d task.isDone() ? DONE_MARKER : NOT_DONE_MARKER;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BrandonnLow"},"content":"        String type \u003d task.getType().getSymbol();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BrandonnLow"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BrandonnLow"},"content":"        assert type !\u003d null : \"Task type symbol should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BrandonnLow"},"content":"        assert !type.isEmpty() : \"Task type symbol should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BrandonnLow"},"content":"        String formattedString;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BrandonnLow"},"content":"        switch (task.getType()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BrandonnLow"},"content":"        case TODO:","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BrandonnLow"},"content":"            formattedString \u003d formatTodoForFile(type, isDoneStr, description);","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BrandonnLow"},"content":"            break;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BrandonnLow"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BrandonnLow"},"content":"            formattedString \u003d formatDeadlineForFile(type, isDoneStr, description, (Deadline) task);","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BrandonnLow"},"content":"            break;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BrandonnLow"},"content":"        case Event:","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BrandonnLow"},"content":"            formattedString \u003d formatEventForFile(type, isDoneStr, description, (Event) task);","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BrandonnLow"},"content":"            break;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BrandonnLow"},"content":"        default:","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BrandonnLow"},"content":"            formattedString \u003d formatTodoForFile(type, isDoneStr, description);","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BrandonnLow"},"content":"            break;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BrandonnLow"},"content":"        assert formattedString !\u003d null : \"Formatted string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BrandonnLow"},"content":"        assert !formattedString.trim().isEmpty() : \"Formatted string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BrandonnLow"},"content":"        return formattedString;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BrandonnLow"},"content":"     * Formats a Todo task for file storage.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BrandonnLow"},"content":"     * @param type the task type symbol","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BrandonnLow"},"content":"     * @param isDoneStr the completion status string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BrandonnLow"},"content":"     * @return formatted string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BrandonnLow"},"content":"    private String formatTodoForFile(String type, String isDoneStr, String description) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BrandonnLow"},"content":"        return String.join(FIELD_SEPARATOR, type, isDoneStr, description);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BrandonnLow"},"content":"     * Formats a Deadline task for file storage.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BrandonnLow"},"content":"     * @param type the task type symbol","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BrandonnLow"},"content":"     * @param isDoneStr the completion status string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BrandonnLow"},"content":"     * @param deadline the deadline task","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BrandonnLow"},"content":"     * @return formatted string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BrandonnLow"},"content":"    private String formatDeadlineForFile(String type, String isDoneStr, String description, Deadline deadline) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BrandonnLow"},"content":"        assert deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BrandonnLow"},"content":"        assert deadline.getByForFile() !\u003d null : \"Deadline date string should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BrandonnLow"},"content":"        return String.join(FIELD_SEPARATOR, type, isDoneStr, description, deadline.getByForFile());","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BrandonnLow"},"content":"     * Formats an Event task for file storage.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"BrandonnLow"},"content":"     * @param type the task type symbol","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"BrandonnLow"},"content":"     * @param isDoneStr the completion status string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the task description","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"BrandonnLow"},"content":"     * @param event the event task","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"BrandonnLow"},"content":"     * @return formatted string","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BrandonnLow"},"content":"    private String formatEventForFile(String type, String isDoneStr, String description, Event event) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BrandonnLow"},"content":"        assert event !\u003d null : \"Event should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"BrandonnLow"},"content":"        assert event.getStartForFile() !\u003d null : \"Event start string should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"BrandonnLow"},"content":"        assert event.getEndForFile() !\u003d null : \"Event end string should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"BrandonnLow"},"content":"        return String.join(FIELD_SEPARATOR, type, isDoneStr, description,","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"BrandonnLow"},"content":"                event.getStartForFile(), event.getEndForFile());","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":399}},{"path":"src/main/java/pingpong/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":" * Represents a task with a deadline - a task that needs to be completed by a certain date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDate by;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Deadline task with the specified description and deadline date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"     * @param deadline the description of the deadline task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * @param by the date by which the task should be completed","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    public Deadline(String deadline, LocalDate by) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"        super(deadline, TaskType.DEADLINE);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"        assert !by.isBefore(LocalDate.of(1900, 1, 1)) : \"Deadline date should be reasonable (after 1900)\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        assert this.by !\u003d null : \"Deadline date should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"        assert this.getType() \u003d\u003d TaskType.DEADLINE : \"Task type should be DEADLINE\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the deadline date of this task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * @return the deadline date","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        return this.by;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"     * Gets a human-readable string representation of the deadline date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"     * @return the deadline date formatted as \"MMM d yyyy\"","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    private String getByString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted date string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted date string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the deadline date formatted for file storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"     * @return the deadline date in ISO format for file storage","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    public String getByForFile() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d by.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted date string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted date string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\") : \"Date should be in ISO format\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"     * Returns a string representation of this deadline task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"     * @return a formatted string showing the task details and deadline","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"    public String toString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"        assert this.by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"        String baseString \u003d super.toString();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        String byString \u003d this.getByString();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"        assert baseString !\u003d null : \"Base task string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"        assert byString !\u003d null : \"Deadline date string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d baseString + \" (by: \" + byString + \")\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(\"by:\") : \"Result should contain deadline indicator\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(byString) : \"Result should contain formatted deadline date\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"        return result;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":96}},{"path":"src/main/java/pingpong/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":" * Represents an event task that occurs over a specific time period.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDateTime start;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"    private LocalDateTime end;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Event task with the specified description, start time, and end time.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * @param event the description of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     * @param start the start date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     * @param end the end date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    public Event(String event, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        super(event, TaskType.Event);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        assert start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        assert end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        assert !start.isAfter(end) : \"Event start time should not be after end time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        assert !start.isBefore(LocalDateTime.of(1900, 1, 1, 0, 0)) : \"Event start should be reasonable (after 1900)\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        assert this.start !\u003d null : \"Event start time should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"        assert this.end !\u003d null : \"Event end time should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        assert this.getType() \u003d\u003d TaskType.Event : \"Task type should be Event\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the start date and time of this event.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"     * @return the start datetime","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        assert this.start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        return this.start;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the end date and time of this event.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"     * @return the end datetime","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        assert this.end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        return this.end;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"     * Gets a human-readable string representation of the start time.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"     * @return the start time formatted as \"MMM d yyyy, h:mma\"","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    private String getStartString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        assert start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\"));","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted start string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted start string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"     * Gets a human-readable string representation of the end time.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"     * @return the end time formatted as \"MMM d yyyy, h:mma\"","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"    private String getEndString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"        assert end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\"));","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted end string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted end string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the start time formatted for file storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"     * @return the start time in ISO format for file storage","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"    public String getStartForFile() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"        assert start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d start.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted start string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted start string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted.contains(\"T\") : \"ISO datetime should contain \u0027T\u0027 separator\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the end time formatted for file storage.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"     * @return the end time in ISO format for file storage","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"    public String getEndForFile() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"        assert end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"        String formatted \u003d end.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted !\u003d null : \"Formatted end string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"        assert !formatted.trim().isEmpty() : \"Formatted end string should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"        assert formatted.contains(\"T\") : \"ISO datetime should contain \u0027T\u0027 separator\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"        return formatted;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"     * Returns a string representation of this event task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"     * @return a formatted string showing the task details and time period","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"    public String toString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"        assert this.start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"        assert this.end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"        String baseString \u003d super.toString();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"        String startString \u003d this.getStartString();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"        String endString \u003d this.getEndString();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"        assert baseString !\u003d null : \"Base task string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"        assert startString !\u003d null : \"Start time string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"        assert endString !\u003d null : \"End time string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d baseString + \" (from: \" + startString + \" to: \" + endString + \")\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"        assert result !\u003d null : \"Result string should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(\"from:\") : \"Result should contain \u0027from:\u0027 indicator\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(\"to:\") : \"Result should contain \u0027to:\u0027 indicator\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(startString) : \"Result should contain start time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(endString) : \"Result should contain end time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"        return result;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":150}},{"path":"src/main/java/pingpong/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":" * Represents a task with a description, completion status, and task type.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":" * This is the base class for all types of tasks in the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"public class Task {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"    private String description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"    private TaskType type;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Task with the specified description and type.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"     * The task is initially marked as not completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     * @param type the type of the task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.trim().isEmpty() : \"Task description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"        assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        assert this.description !\u003d null : \"Task description should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"        assert !this.isDone : \"New task should not be marked as done\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"        assert this.type !\u003d null : \"Task type should be set\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the status symbol for this task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"     * @return \"X\" if the task is done, \" \" (space) if not done","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    private String getStatus() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        String status \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        assert status !\u003d null : \"Status should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assert status.equals(\"X\") || status.equals(\" \") : \"Status should be either \u0027X\u0027 or \u0027 \u0027\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        return status;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        assert this.isDone : \"Task should be marked as done after calling markAsDone()\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"        assert !this.isDone : \"Task should be marked as undone after calling markAsUndone()\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the description of this task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"     * @return the task description","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"        assert this.description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        return this.description;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the type of this task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"     * @return the task type","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"    public TaskType getType() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"        assert this.type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"        return this.type;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if this task is completed.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"     * @return a formatted string showing the task type, status, and description","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"    @Override","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"    public String toString() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        assert type !\u003d null : \"Task type should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"        assert type.getSymbol() !\u003d null : \"Task type symbol should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d \"[\" + type.getSymbol() + \"][\" + getStatus() + \"] \" + getDescription();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"        assert result !\u003d null : \"String representation should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(type.getSymbol()) : \"String should contain task type symbol\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"        assert result.contains(description) : \"String should contain task description\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"        return result;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":109}},{"path":"src/main/java/pingpong/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":" * Contains the task list and operations to add/delete/modify tasks.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":" * Acts as the main container for all tasks in the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"public class TaskList {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private static final String TASK_NOT_EXISTS_ERROR \u003d \"Task number %d does not exist.\";","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new empty TaskList.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.isEmpty() : \"New task list should be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new TaskList with the provided list of tasks.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the initial list of tasks","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Input task list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        assert this.tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task to add","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Task to be added should not be null\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        int originalSize \u003d tasks.size();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.size() \u003d\u003d originalSize + 1 : \"Task list size should increase by 1 after adding\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.contains(task) : \"Task should be in the list after adding\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"     * @param index the 0-based index of the task to delete","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"     * @return the deleted task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the index is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"    public Task deleteTask(int index) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"        validateTaskIndex(index);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        int originalSize \u003d tasks.size();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"        Task deletedTask \u003d tasks.remove(index);","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"        assert deletedTask !\u003d null : \"Deleted task should not be null\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.size() \u003d\u003d originalSize - 1 : \"Task list size should decrease by 1 after deletion\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"        return deletedTask;","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"     * Marks a task as completed at the specified index.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"     * @param index the 0-based index of the task to mark","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"     * @return the marked task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the index is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"    public Task markTask(int index) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"        validateTaskIndex(index);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"        assert task.isDone() : \"Task should be marked as done after marking\";","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"     * Marks multiple tasks as completed using varargs and streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"     * @param indices the 0-based indices of tasks to mark","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of marked tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any index is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e markTasks(int... indices) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"        assert indices !\u003d null : \"Indices array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"        if (indices.length \u003d\u003d 0) {","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"        for (int index : indices) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"            Task markedTask \u003d markTask(index);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"            markedTasks.add(markedTask);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"        assert markedTasks.size() \u003d\u003d indices.length : \"Number of marked tasks should match number of indices\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"        return markedTasks;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"     * Unmarks a task (marks as not completed) at the specified index.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"     * @param index the 0-based index of the task to unmark","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"     * @return the unmarked task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the index is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"    public Task unmarkTask(int index) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"        validateTaskIndex(index);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsUndone();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"        assert !task.isDone() : \"Task should be unmarked after unmarking\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"     * Unmarks multiple tasks using varargs and streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"     * @param indices the 0-based indices of tasks to unmark","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of unmarked tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if any index is invalid","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e unmarkTasks(int... indices) throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"        assert indices !\u003d null : \"Indices array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"        if (indices.length \u003d\u003d 0) {","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"        for (int index : indices) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"            Task unmarkedTask \u003d unmarkTask(index);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"            unmarkedTasks.add(unmarkedTask);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"        assert unmarkedTasks.size() \u003d\u003d indices.length : \"Number of unmarked tasks should match number of indices\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"        return unmarkedTasks;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"     * @param index the 0-based index of the task to retrieve","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if the index is invalid","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"    public Task getTask(int index) throws PingpongException {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"        assert index \u003e\u003d 0 : \"Index should not be negative\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"        validateTaskIndex(index);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"     * Validates that the given index is within valid range.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"     * @param index the index to validate","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"     * @throws PingpongException if index is out of bounds","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"    private void validateTaskIndex(int index) throws PingpongException {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"            throw new PingpongException(String.format(TASK_NOT_EXISTS_ERROR, index + 1));","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"     * Gets all tasks in the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"     * @return the complete list of tasks","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"        return tasks;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"    public int size() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"        assert size \u003e\u003d 0 : \"Task list size should not be negative\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"        return size;","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"     * Creates and adds a new Todo task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"     * @return the created Todo task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"    public Task addTodo(String description) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Todo description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.trim().isEmpty() : \"Todo description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"        addTask(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Created todo should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.contains(task) : \"Todo should be in task list after adding\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"     * Creates and adds multiple Todo tasks to the task list using streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"     * @param descriptions the descriptions of the todo tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of created Todo tasks","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e addTodos(String... descriptions) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"        assert descriptions !\u003d null : \"Descriptions array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"        if (descriptions.length \u003d\u003d 0) {","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e createdTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"        for (String description : descriptions) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"            Task createdTask \u003d addTodo(description);","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"            createdTasks.add(createdTask);","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"        assert createdTasks.size() \u003d\u003d descriptions.length : \"Number of created tasks should match descriptions\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"        return createdTasks;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"     * Creates and adds a new Deadline task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"     * @param by the deadline date","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"     * @return the created Deadline task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"    public Task addDeadline(String description, LocalDate by) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Deadline description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.trim().isEmpty() : \"Deadline description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"        assert by !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"        addTask(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Created deadline should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.contains(task) : \"Deadline should be in task list after adding\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"     * Creates and adds a new Event task to the task list.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"     * @param start the start date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"     * @param end the end date and time of the event","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"     * @return the created Event task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"    public Task addEvent(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"        assert description !\u003d null : \"Event description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"        assert !description.trim().isEmpty() : \"Event description should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"        assert start !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"        assert end !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"        assert !start.isAfter(end) : \"Event start time should not be after end time\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Event(description, start, end);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BrandonnLow"},"content":"        addTask(task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Created event should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks.contains(task) : \"Event should be in task list after adding\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BrandonnLow"},"content":"        return task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BrandonnLow"},"content":"     * Finds all tasks that occur on the specified date using streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BrandonnLow"},"content":"     * For Deadline tasks, matches if the deadline is on the target date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BrandonnLow"},"content":"     * For Event tasks, matches if the target date falls within the event period.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BrandonnLow"},"content":"     * Todo tasks are never matched as they have no associated dates.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BrandonnLow"},"content":"     * @param targetDate the date to search for","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of tasks occurring on the specified date","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e findTasksOnDate(LocalDate targetDate) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BrandonnLow"},"content":"        assert targetDate !\u003d null : \"Target date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BrandonnLow"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BrandonnLow"},"content":"                    assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BrandonnLow"},"content":"                    return isTaskOnDate(task, targetDate);","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BrandonnLow"},"content":"                })","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BrandonnLow"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BrandonnLow"},"content":"        assert matchingTasks !\u003d null : \"Matching tasks list should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BrandonnLow"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if a task occurs on the specified date.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task to check","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BrandonnLow"},"content":"     * @param targetDate the target date","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if task occurs on the date, false otherwise","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isTaskOnDate(Task task, LocalDate targetDate) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BrandonnLow"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BrandonnLow"},"content":"            return isDeadlineOnDate((Deadline) task, targetDate);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BrandonnLow"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BrandonnLow"},"content":"            return isEventOnDate((Event) task, targetDate);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BrandonnLow"},"content":"        return false;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if a deadline task occurs on the specified date.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BrandonnLow"},"content":"     * @param deadline the deadline task","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BrandonnLow"},"content":"     * @param targetDate the target date","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if deadline is on the date","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isDeadlineOnDate(Deadline deadline, LocalDate targetDate) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BrandonnLow"},"content":"        assert deadline !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BrandonnLow"},"content":"        assert deadline.getBy() !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BrandonnLow"},"content":"        assert targetDate !\u003d null : \"Target date should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BrandonnLow"},"content":"        return deadline.getBy().equals(targetDate);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if an event task occurs on the specified date.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BrandonnLow"},"content":"     * @param event the event task","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BrandonnLow"},"content":"     * @param targetDate the target date","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if date falls within event period","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BrandonnLow"},"content":"    private boolean isEventOnDate(Event event, LocalDate targetDate) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BrandonnLow"},"content":"        assert event !\u003d null : \"Event should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BrandonnLow"},"content":"        assert event.getStart() !\u003d null : \"Event start time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BrandonnLow"},"content":"        assert event.getEnd() !\u003d null : \"Event end time should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BrandonnLow"},"content":"        assert targetDate !\u003d null : \"Target date should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate startDate \u003d event.getStart().toLocalDate();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate endDate \u003d event.getEnd().toLocalDate();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BrandonnLow"},"content":"        return !targetDate.isBefore(startDate) \u0026\u0026 !targetDate.isAfter(endDate);","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BrandonnLow"},"content":"     * Finds all tasks that contain the specified keyword in their description using streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"BrandonnLow"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"BrandonnLow"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of tasks whose descriptions contain the keyword","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"BrandonnLow"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BrandonnLow"},"content":"        assert !keyword.trim().isEmpty() : \"Keyword should not be empty\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"BrandonnLow"},"content":"        String keywordLower \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"BrandonnLow"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"BrandonnLow"},"content":"                    assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"BrandonnLow"},"content":"                    assert task.getDescription() !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"BrandonnLow"},"content":"                    return containsKeyword(task, keywordLower);","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"BrandonnLow"},"content":"                })","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"BrandonnLow"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"BrandonnLow"},"content":"        assert matchingTasks !\u003d null : \"Matching tasks list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"BrandonnLow"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if a task\u0027s description contains the specified keyword.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task to check","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"BrandonnLow"},"content":"     * @param keywordLower the keyword in lowercase","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if description contains keyword","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"BrandonnLow"},"content":"    private boolean containsKeyword(Task task, String keywordLower) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"BrandonnLow"},"content":"        assert task.getDescription() !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"BrandonnLow"},"content":"        assert keywordLower !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"BrandonnLow"},"content":"        return task.getDescription().toLowerCase().contains(keywordLower);","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"BrandonnLow"},"content":"     * Finds all tasks that contain any of the specified keywords in their description using streams.","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"BrandonnLow"},"content":"     * The search is case-insensitive.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"BrandonnLow"},"content":"     * @param keywords the keywords to search for in task descriptions","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"BrandonnLow"},"content":"     * @return a list of tasks whose descriptions contain any of the keywords","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"BrandonnLow"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeywords(String... keywords) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"BrandonnLow"},"content":"        assert keywords !\u003d null : \"Keywords array should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"BrandonnLow"},"content":"        assert tasks !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"BrandonnLow"},"content":"        if (keywords.length \u003d\u003d 0) {","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"BrandonnLow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"BrandonnLow"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"BrandonnLow"},"content":"                    assert task !\u003d null : \"Task in list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"BrandonnLow"},"content":"                    assert task.getDescription() !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"BrandonnLow"},"content":"                    return taskMatchesAnyKeyword(task, keywords);","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"BrandonnLow"},"content":"                })","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"BrandonnLow"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-02T00:14:53","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"BrandonnLow"},"content":"        assert matchingTasks !\u003d null : \"Matching tasks list should not be null\";","lastModifiedDate":"2025-09-01T20:09:14","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"BrandonnLow"},"content":"        return matchingTasks;","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"BrandonnLow"},"content":"     * Checks if a task matches any of the provided keywords.","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task to check","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"BrandonnLow"},"content":"     * @param keywords the keywords to match against","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"BrandonnLow"},"content":"     * @return true if task matches any keyword","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"BrandonnLow"},"content":"    private boolean taskMatchesAnyKeyword(Task task, String... keywords) {","lastModifiedDate":"2025-09-01T20:48:34","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"BrandonnLow"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"BrandonnLow"},"content":"        assert task.getDescription() !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"BrandonnLow"},"content":"        assert keywords !\u003d null : \"Keywords array should not be null\";","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-09-01T21:37:06","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"BrandonnLow"},"content":"        String descriptionLower \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"BrandonnLow"},"content":"        return Arrays.stream(keywords)","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"BrandonnLow"},"content":"                .anyMatch(keyword -\u003e descriptionLower.contains(keyword.toLowerCase()));","lastModifiedDate":"2025-09-01T21:00:25","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":466}},{"path":"src/main/java/pingpong/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":" * Enumeration representing the different types of tasks in the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"    /** A todo task */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"    TODO(\"T\"),","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    /** A task with a deadline */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"    /** An event task with start and end times */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    Event(\"E\");","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"    private final String symbol;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a TaskType with the specified symbol.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"     * @param symbol the single-character symbol representing this task type","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    TaskType(String symbol) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"     * Gets the symbol for this task type.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"     * @return the single-character symbol","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    public String getSymbol() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        return this.symbol;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":33}},{"path":"src/main/java/pingpong/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":" * Represents a simple todo task without any time constraints.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Todo task with the specified description.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"     * @param todo the description of the todo task","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    public Todo(String todo) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"        super(todo, TaskType.TODO);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":16}},{"path":"src/main/java/pingpong/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.ui;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.task.Task;","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"/**","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":" * Handles interactions with the user, including input/output operations.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":" * Manages the command line interface for the Pingpong application.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":" */","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"public class Ui {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"     * Creates a new Ui instance and initializes the scanner for user input.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    public Ui() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the welcome message to the user when the application starts.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"        showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Hello! I\u0027m Pingpong\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"        showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        showLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"     * Displays a horizontal line separator for better visual formatting.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"     * @return the command string entered by the user","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"     * Displays multiple error messages to the user using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"     * @param messages the error messages to display","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"    public void showErrors(String... messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"            showError(message);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"     * Displays multiple custom messages using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"     * @param messages the messages to display","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"    public void showMessages(String... messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" \" + message);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"     * Displays a confirmation message when a task has been added.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"     * @param totalTasks the total number of tasks in the list after adding","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"     * Displays confirmation messages when multiple tasks have been added using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the tasks that were added","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"     * @param totalTasks the total number of tasks in the list after adding","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksAdded(ArrayList\u003cTask\u003e tasks, int totalTasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"            showTaskAdded(tasks.get(0), totalTasks);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Got it. I\u0027ve added these \" + tasks.size() + \" tasks:\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\"   \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the complete list of tasks.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"     * Displays multiple task lists with headers using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"     * @param listsWithHeaders pairs of header strings and task lists","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskLists(Object... listsWithHeaders) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c listsWithHeaders.length; i +\u003d 2) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"            if (i + 1 \u003c listsWithHeaders.length) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"                String header \u003d (String) listsWithHeaders[i];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"                @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"                ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e) listsWithHeaders[i + 1];","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\" \" + header);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"                for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"                    System.out.println(\" \" + (j + 1) + \".\" + tasks.get(j));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"                }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"     * Displays a confirmation message when a task has been marked as done.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task that was marked","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"     * Displays confirmation messages when multiple tasks have been marked using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the tasks that were marked","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksMarked(Task... tasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"            showTaskMarked(tasks[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Nice! I\u0027ve marked these \" + tasks.length + \" tasks as done:\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\"  \" + (i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"     * Displays a confirmation message when a task has been unmarked.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"     * Displays confirmation messages when multiple tasks have been unmarked using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the tasks that were unmarked","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksUnmarked(Task... tasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.length \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"            showTaskUnmarked(tasks[0]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" OK, I\u0027ve marked these \" + tasks.length + \" tasks as not done yet:\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\"  \" + (i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"     * Displays a confirmation message when a task has been deleted.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"     * @param totalTasks the total number of tasks remaining after deletion","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"        System.out.println(\" Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"     * Displays confirmation messages when multiple tasks have been deleted using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"     * @param tasks the tasks that were deleted","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"     * @param totalTasks the total number of tasks remaining after deletion","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"    public void showTasksDeleted(ArrayList\u003cTask\u003e tasks, int totalTasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"            showTaskDeleted(tasks.get(0), totalTasks);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Noted. I\u0027ve removed these \" + tasks.size() + \" tasks:\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\"   \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the tasks found for a specific date.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"     * @param matchingTasks the list of tasks found for the date","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"     * @param keyword the search term","lastModifiedDate":"2025-08-25T16:11:30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByKeyword(ArrayList\u003cTask\u003e matchingTasks, String keyword) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the tasks found for multiple keywords using varargs.","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"     * @param matchingTasks the list of tasks found for the keywords","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"     * @param keywords the search terms","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByKeywords(ArrayList\u003cTask\u003e matchingTasks, String... keywords) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" No matching tasks found for any of the keywords.\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"            System.out.print(\" Here are the matching tasks for keywords: \");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c keywords.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"                System.out.print(keywords[i]);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"                if (i \u003c keywords.length - 1) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"                    System.out.print(\", \");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"                }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"     * Displays the tasks found for a specific date.","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"     * Shows either a \"no tasks found\" message if the list is empty,","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"     * or displays all matching tasks in a numbered list.","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"     *","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"     * @param matchingTasks the list of tasks found for the date","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"     * @param dateStr the formatted date string for display","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-30T12:13:31","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"    public void showFoundTasksByDate(ArrayList\u003cTask\u003e matchingTasks, String dateStr) {","lastModifiedDate":"2025-08-25T16:04:10","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" No tasks found on \" + dateStr);","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"        } else {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"            System.out.println(\" Here are the tasks on \" + dateStr + \":\");","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"            }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"    /**","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"     * Closes the scanner and releases resources.","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"     */","lastModifiedDate":"2025-08-25T11:49:36","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"    public void close() {","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"        scanner.close();","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:55:37","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":299}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"pingpong.MainWindow\"\u003e","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-08-30T13:52:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-08-30T13:45:54","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":19}},{"path":"src/test/java/pingpong/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.command;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_listCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_todoCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"todo Buy groceries\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddTodoCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_emptyTodoDescription_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deadlineCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"deadline Submit assignment /by 2024-12-25\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddDeadlineCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deadlineInvalidFormat_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        // Missing /by","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"deadline Submit assignment 2024-12-25\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        // Invalid date format","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"deadline Submit assignment /by 25-12-2024\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"        // Empty description","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"deadline /by 2024-12-25\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        // Empty date","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"deadline Submit assignment /by\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_eventCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"event Team meeting /from 2024-12-25 1400 /to 2024-12-25 1600\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddEventCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_eventInvalidFormat_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        // Missing /from","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"event Team meeting \"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"                + \"2024-12-25 1400 /to 2024-12-25 1600\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"        // Missing /to","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"event Team meeting \"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"                + \"/from 2024-12-25 1400 2024-12-25 1600\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        // Invalid date format","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"event Team meeting \"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"                + \"/from 25-12-2024 1400 /to 25-12-2024 1600\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"        // Start time after end time","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"event Team meeting \"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"                + \"/from 2024-12-25 1600 /to 2024-12-25 1400\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markInvalidNumber_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark abc\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark \"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unmarkCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteInvalidNumber_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"delete xyz\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_findByDateCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"find 2024-12-25\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof FindCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_findByKeywordCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"find book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof FindCommand);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_findInvalidDateAsKeyword_success() throws PingpongException {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"        Command command1 \u003d Parser.parse(\"find invalid-date\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"        Command command2 \u003d Parser.parse(\"find 25-12-2024\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command1 instanceof FindCommand);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command2 instanceof FindCommand);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_findEmpty_throwsException() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"find\"));","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"find \"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_emptyInput_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"   \"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unknownCommand_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"unknown command\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"invalid\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_eventDifferentTimeFormats_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"        // Test HHmm format","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"        Command command1 \u003d Parser.parse(\"event Meeting /from 2024-12-25 1400 /to 2024-12-25 1600\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command1 instanceof AddEventCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"        // Test HH:mm format","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"        Command command2 \u003d Parser.parse(\"event Meeting /from 2024-12-25 14:00 /to 2024-12-25 16:00\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command2 instanceof AddEventCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"        // Test date only format (should default to start of day)","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"        Command command3 \u003d Parser.parse(\"event Meeting /from 2024-12-25 /to 2024-12-26\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command3 instanceof AddEventCommand);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"addmultiple Buy groceries; Read book; Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleCommandSingleTask_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"addmultiple Buy groceries\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleCommandWithSpaces_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"addmultiple  Buy groceries ; Read book ; Submit assignment  \");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleEmpty_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple \"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleOnlySemicolons_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple ;;;\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple ; ; ;\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markMultipleCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"mark 1 2 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof MarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markMultipleCommandTwoTasks_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"mark 1 5\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof MarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markMultipleInvalidNumbers_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark 1 abc 3\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark 1 2 -1\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"mark 1 2 0\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unmarkMultipleCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"unmark 1 2 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof UnmarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unmarkMultipleCommandTwoTasks_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"unmark 2 4\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof UnmarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unmarkMultipleInvalidNumbers_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"unmark 1 xyz\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"unmark -5 2\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteMultipleCommand_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"delete 1 2 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof DeleteMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteMultipleCommandTwoTasks_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"delete 3 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof DeleteMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteMultipleInvalidNumbers_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"delete 1 notanumber\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"delete 0 1\"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_markSingleVsMultiple_returnsCorrectCommandType() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"        Command singleCommand \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"        Command multipleCommand \u003d Parser.parse(\"mark 1 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(singleCommand instanceof MarkCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(multipleCommand instanceof MarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_unmarkSingleVsMultiple_returnsCorrectCommandType() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"        Command singleCommand \u003d Parser.parse(\"unmark 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"        Command multipleCommand \u003d Parser.parse(\"unmark 1 3 5\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(singleCommand instanceof UnmarkCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(multipleCommand instanceof UnmarkMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_deleteSingleVsMultiple_returnsCorrectCommandType() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"        Command singleCommand \u003d Parser.parse(\"delete 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"        Command multipleCommand \u003d Parser.parse(\"delete 1 2 3 4\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(singleCommand instanceof DeleteCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(multipleCommand instanceof DeleteMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleWithEmptyDescriptions_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple ; ; \"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e Parser.parse(\"addmultiple   ;   ;   \"));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"    public void parse_addMultipleWithSomeEmptyDescriptions_filtersEmpty() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"        // Should work - empty descriptions should be filtered out","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"        Command command \u003d Parser.parse(\"addmultiple Buy groceries; ; Read book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(command instanceof AddMultipleCommand);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":303}},{"path":"src/test/java/pingpong/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"import pingpong.PingpongException;","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"    public void addTodo_validDescription_success() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        Task todo \u003d taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy groceries\", todo.getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(TaskType.TODO, todo.getType());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"    public void addDeadline_validInput_success() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate deadline \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"        Task deadlineTask \u003d taskList.addDeadline(\"Submit assignment\", deadline);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Submit assignment\", deadlineTask.getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(TaskType.DEADLINE, deadlineTask.getType());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(deadlineTask instanceof Deadline);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"        Deadline d \u003d (Deadline) deadlineTask;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(deadline, d.getBy());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    public void deleteTask_validIndex_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task to delete\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Another task\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"        Task deletedTask \u003d taskList.deleteTask(0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Task to delete\", deletedTask.getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"    public void deleteTask_invalidIndex_throwsException() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Only task\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.deleteTask(1));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.deleteTask(-1));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"    public void markTask_validIndex_success() throws PingpongException {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task to mark\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        Task markedTask \u003d taskList.markTask(0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(markedTask.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Task to mark\", markedTask.getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksOnDate_withDeadlines_returnsMatchingTasks() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate targetDate \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate otherDate \u003d LocalDate.of(2024, 12, 26);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addDeadline(\"Christmas task\", targetDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addDeadline(\"CNY task\", otherDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Regular todo\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksOnDate(targetDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, foundTasks.size());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Christmas task\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksOnDate_withEvents_returnsMatchingTasks() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate targetDate \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime start \u003d targetDate.atTime(10, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime end \u003d targetDate.atTime(12, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime otherStart \u003d LocalDate.of(2024, 12, 26).atTime(10, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime otherEnd \u003d LocalDate.of(2024, 12, 26).atTime(12, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addEvent(\"Christmas event\", start, end);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addEvent(\"CNY event\", otherStart, otherEnd);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksOnDate(targetDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, foundTasks.size());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Christmas event\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksOnDate_noMatchingTasks_returnsEmpty() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate targetDate \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate otherDate \u003d LocalDate.of(2024, 12, 26);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addDeadline(\"Other date task\", otherDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Regular todo\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksOnDate(targetDate);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(foundTasks.isEmpty());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_singleMatch_returnsMatchingTask() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, foundTasks.size());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read book\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_multipleMatches_returnsAllMatchingTasks() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read book review\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Return book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy book\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read book review\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Return book\", foundTasks.get(2).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_caseInsensitive_returnsMatchingTasks() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy BOOK\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"read Book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"submit assignment\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, foundTasks.size());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy BOOK\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"read Book\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_noMatches_returnsEmpty() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(foundTasks.isEmpty());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_partialMatch_returnsMatchingTasks() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Bookstore visit\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Facebook update\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, foundTasks.size());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Bookstore visit\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Facebook update\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeyword_worksWithAllTaskTypes() {","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate deadline \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addDeadline(\"Return book\", deadline);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 12, 25, 10, 0);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 12, 25, 12, 0);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addEvent(\"Book club meeting\", start, end);","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeyword(\"book\");","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read book\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Return book\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Book club meeting\", foundTasks.get(2).getDescription());","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-25T19:24:47","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BrandonnLow"},"content":"    public void addTodos_multipleTasks_success() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d taskList.addTodos(\"Buy groceries\", \"Read book\", \"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, addedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy groceries\", addedTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read book\", addedTasks.get(1).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Submit assignment\", addedTasks.get(2).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"BrandonnLow"},"content":"        for (Task task : addedTasks) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"BrandonnLow"},"content":"            assertEquals(TaskType.TODO, task.getType());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"BrandonnLow"},"content":"            assertFalse(task.isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"BrandonnLow"},"content":"    public void addTodos_singleTask_success() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d taskList.addTodos(\"Single task\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, addedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Single task\", addedTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"BrandonnLow"},"content":"    public void addTodos_emptyVarargs_success() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d taskList.addTodos();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(0, addedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_multipleTasks_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 4\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d taskList.markTasks(0, 2, 3);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, markedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(2).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(3).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_singleTask_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task to mark\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d taskList.markTasks(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, markedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(markedTasks.get(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_invalidIndex_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Only task\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.markTasks(0, 1));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.markTasks(-1));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"BrandonnLow"},"content":"    public void unmarkTasks_multipleTasks_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"BrandonnLow"},"content":"        taskList.markTasks(0, 1, 2);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d taskList.unmarkTasks(0, 2);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, unmarkedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(2).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"BrandonnLow"},"content":"    public void unmarkTasks_singleTask_success() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task to unmark\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"BrandonnLow"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d taskList.unmarkTasks(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(1, unmarkedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(unmarkedTasks.get(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"BrandonnLow"},"content":"    public void unmarkTasks_invalidIndex_throwsException() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Only task\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.unmarkTasks(0, 1));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"BrandonnLow"},"content":"        assertThrows(PingpongException.class, () -\u003e taskList.unmarkTasks(-1));","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_multipleKeywords_returnsMatchingTasks() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy book for reading\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read newspaper\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Write essay\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"book\", \"assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy book for reading\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Submit assignment\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_singleKeyword_returnsMatchingTasks() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy book\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read book\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_overlappingMatches_noDuplicates() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy book for assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read another book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"book\", \"assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy book for assignment\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read another book\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Submit assignment\", foundTasks.get(2).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_noMatches_returnsEmpty() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"book\", \"reading\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(foundTasks.isEmpty());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_caseInsensitive_returnsMatchingTasks() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy BOOK\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"read Book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"SUBMIT assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"book\", \"ASSIGNMENT\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_emptyKeywords_returnsEmpty() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Submit assignment\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(foundTasks.isEmpty());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_emptyIndices_returnsEmpty() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d taskList.markTasks();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(0, markedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"BrandonnLow"},"content":"    public void unmarkTasks_emptyIndices_returnsEmpty() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"BrandonnLow"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e unmarkedTasks \u003d taskList.unmarkTasks();","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(0, unmarkedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_duplicateIndices_marksTaskOnlyOnce() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d taskList.markTasks(0, 0, 1);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, markedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"BrandonnLow"},"content":"    public void addTodos_largeNumberOfTasks_success() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"BrandonnLow"},"content":"        String[] descriptions \u003d {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"BrandonnLow"},"content":"                \"Task 1\", \"Task 2\", \"Task 3\", \"Task 4\", \"Task 5\",","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"BrandonnLow"},"content":"                \"Task 6\", \"Task 7\", \"Task 8\", \"Task 9\", \"Task 10\"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"BrandonnLow"},"content":"        };","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e addedTasks \u003d taskList.addTodos(descriptions);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(10, taskList.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(10, addedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"BrandonnLow"},"content":"        for (int i \u003d 0; i \u003c descriptions.length; i++) {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"BrandonnLow"},"content":"            assertEquals(descriptions[i], addedTasks.get(i).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"BrandonnLow"},"content":"            assertEquals(TaskType.TODO, addedTasks.get(i).getType());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"BrandonnLow"},"content":"        }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"BrandonnLow"},"content":"    public void markTasks_partiallyMarkedTasks_worksCorrectly() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 1\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 2\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Task 3\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"BrandonnLow"},"content":"        taskList.markTask(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e markedTasks \u003d taskList.markTasks(0, 1);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(2, markedTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(2).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"BrandonnLow"},"content":"    public void findTasksByKeywords_withDifferentTaskTypes_returnsAllMatching() {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Read programming book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"BrandonnLow"},"content":"        LocalDate deadline \u003d LocalDate.of(2024, 12, 25);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addDeadline(\"Submit programming assignment\", deadline);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2024, 12, 25, 10, 0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"BrandonnLow"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2024, 12, 25, 12, 0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addEvent(\"Programming workshop\", start, end);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodo(\"Buy groceries\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"programming\", \"book\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Read programming book\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Submit programming assignment\", foundTasks.get(1).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Programming workshop\", foundTasks.get(2).getDescription());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"BrandonnLow"},"content":"    public void operations_afterMultipleOperations_maintainCorrectState() throws PingpongException {","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"BrandonnLow"},"content":"        taskList.addTodos(\"Task 1\", \"Task 2\", \"Task 3\", \"Task 4\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(4, taskList.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"BrandonnLow"},"content":"        taskList.markTasks(0, 2);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(2).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(1).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(3).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"BrandonnLow"},"content":"        taskList.unmarkTasks(0);","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(taskList.getTask(0).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(taskList.getTask(2).isDone());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"BrandonnLow"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasksByKeywords(\"Task\");","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(4, foundTasks.size());","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-30T22:07:59","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":483}},{"path":"src/test/java/pingpong/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"package pingpong.task;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"    public void constructor_validInput_success() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(\"Buy groceries\", task.getDescription());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(TaskType.TODO, task.getType());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"    public void markAsDone_initiallyUndone_becomesMarked() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BrandonnLow"},"content":"    public void markAsUndone_initiallyDone_becomesUnmarked() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsDone(); // First mark as done","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsUndone();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BrandonnLow"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BrandonnLow"},"content":"    public void toString_unmarkedTask_correctFormat() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BrandonnLow"},"content":"        String expected \u003d \"[T][ ] Buy milk\";","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BrandonnLow"},"content":"    public void toString_markedTask_correctFormat() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BrandonnLow"},"content":"        Task task \u003d new Todo(\"Buy milk\");","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BrandonnLow"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BrandonnLow"},"content":"        String expected \u003d \"[T][X] Buy milk\";","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BrandonnLow"},"content":"        assertEquals(expected, task.toString());","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BrandonnLow"},"content":"    public void deadline_toString_correctFormat() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BrandonnLow"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", java.time.LocalDate.of(2024, 12, 25));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d deadline.toString();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(result.contains(\"[D][ ] Submit report\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(result.contains(\"(by: Dec 25 2024)\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BrandonnLow"},"content":"    @Test","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BrandonnLow"},"content":"    public void event_toString_correctFormat() {","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BrandonnLow"},"content":"        java.time.LocalDateTime start \u003d java.time.LocalDateTime.of(2024, 12, 25, 14, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BrandonnLow"},"content":"        java.time.LocalDateTime end \u003d java.time.LocalDateTime.of(2024, 12, 25, 16, 0);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BrandonnLow"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BrandonnLow"},"content":"        String result \u003d event.toString();","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(result.contains(\"[E][ ] Team meeting\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(result.contains(\"(from: Dec 25 2024, 2:00pm\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BrandonnLow"},"content":"        assertTrue(result.contains(\"to: Dec 25 2024, 4:00pm)\"));","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BrandonnLow"},"content":"    }","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BrandonnLow"},"content":"}","lastModifiedDate":"2025-08-24T23:46:42","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":79}},{"path":"text-ui-test/data/pingpong.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"D | 0 | submit report | 2019-12-02","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"E | 0 | team meeting | 2019-12-15T14:00:00 | 2019-12-15T16:00:00","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"E | 0 | project presentation | 2019-12-02T10:00:00 | 2019-12-02T12:00:00","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"T | 0 | another task","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"D | 0 | valid date test | 2024-01-15","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"E | 0 | valid time test | 2024-01-15T09:00:00 | 2024-01-15T17:00:00","lastModifiedDate":"2025-09-01T19:24:12","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BrandonnLow"},"content":"todo read book","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BrandonnLow"},"content":"deadline submit report /by 2019-12-02","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BrandonnLow"},"content":"event team meeting /from 2019-12-15 1400 /to 2019-12-15 1600","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BrandonnLow"},"content":"list","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BrandonnLow"},"content":"mark 2","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BrandonnLow"},"content":"list","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BrandonnLow"},"content":"deadline return book /by 2019-12-02","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BrandonnLow"},"content":"event project presentation /from 2019-12-02 1000 /to 2019-12-02 1200","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"list","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"find 2019-12-02","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"find 2019-12-15","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"find 2019-12-01","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BrandonnLow"},"content":"unmark 2","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"delete 4","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BrandonnLow"},"content":"list","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BrandonnLow"},"content":"todo another task","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BrandonnLow"},"content":"deadline invalid date test /by 2019-13-45","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BrandonnLow"},"content":"deadline valid date test /by 2024-01-15","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BrandonnLow"},"content":"event invalid time test /from 2019-12-02 2500 /to 2019-12-02 1800","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BrandonnLow"},"content":"event valid time test /from 2024-01-15 0900 /to 2024-01-15 1700","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BrandonnLow"},"content":"list","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"find 2024-01-15","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BrandonnLow"},"content":"find book","lastModifiedDate":"2025-08-25T16:22:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BrandonnLow"},"content":"find test","lastModifiedDate":"2025-08-25T16:22:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BrandonnLow"},"content":"find project","lastModifiedDate":"2025-08-25T16:22:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BrandonnLow"},"content":"find xyz","lastModifiedDate":"2025-08-25T16:22:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BrandonnLow"},"content":"bye","lastModifiedDate":"2025-08-18T19:47:36","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BrandonnLow"},"content":"REM CLEAR DATA FILE BEFORE TESTING","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BrandonnLow"},"content":"if exist data\\pingpong.txt del data\\pingpong.txt","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BrandonnLow"},"content":"if exist data rmdir data /S /Q","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BrandonnLow"},"content":"","lastModifiedDate":"2025-08-24T15:51:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BrandonnLow"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\pingpong\\*.java ..\\src\\main\\java\\pingpong\\task\\*.java ..\\src\\main\\java\\pingpong\\command\\*.java ..\\src\\main\\java\\pingpong\\ui\\*.java ..\\src\\main\\java\\pingpong\\storage\\*.java","lastModifiedDate":"2025-08-24T22:10:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BrandonnLow"},"content":"java -classpath ..\\bin pingpong.Pingpong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-24T22:10:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"BrandonnLow":6,"-":19}}]
