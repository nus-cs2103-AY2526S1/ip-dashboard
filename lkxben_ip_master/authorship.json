[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"# cate.ui.Cate project template","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"1. After that, locate the `src/main/java/cate.ui.Cate.java` file, right-click it, and choose `Run cate.ui.Cate.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"lkxben":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"    mainClass.set(\"cate.ui.Cate\")","lastModifiedDate":"2025-08-27T16:45:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    archiveBaseName \u003d \"cate\"","lastModifiedDate":"2025-08-27T16:45:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"    archiveFileName \u003d \u0027cate.jar\u0027","lastModifiedDate":"2025-08-27T16:45:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"lkxben":3,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"# cate.ui.Cate User Guide","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"lkxben":1,"-":29}},{"path":"src/main/data/cate.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"T,1,read book","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"E,0,project meeting,Aug 6th 2pm,4pm","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"T,1,join sports club","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"D,0,return,2025-06-20 1600","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false}],"authorContributionMap":{"lkxben":4}},{"path":"src/main/java/cate/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":" * A {@code Deadline} has a description, completion status, and a date/time by which it is due.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Deadline} task with the given description and deadline.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"     * @param by The {@link LocalDateTime} representing the deadline of the task.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     * Converts this {@code Deadline} task into a machine-readable string","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     * for saving to a file. The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     * D,{doneFlag},{description},{deadline}","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"     * where {@code doneFlag} is 1 if completed, 0 if not, and","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"     * {@code deadline} is formatted as {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"     * @return The string representation of this task for file storage.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"        return String.format(\"D,%d,%s,%s\", isDone ? 1 : 0, description, by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     * Returns a human-readable string representation of this {@code Deadline}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     * The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"     * [D] {taskString} (by: {deadline})","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"     * where {@code taskString} comes from {@link Task#toString()} and","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"     * {@code deadline} is formatted as {@code MMM dd yyyy HHmm}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"     * @return A string representation of this task suitable for display.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false}],"authorContributionMap":{"lkxben":55}},{"path":"src/main/java/cate/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":" * Represents a task that occurs during a specific time range.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":" * An {@code Event} has a description, completion status,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" * a start time, and an end time.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"    protected String start;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"    protected String end;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"     * Constructs an {@code Event} task with the given description, start time, and end time.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"     * @param start The start time of the event.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"     * @param end The end time of the event.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     * Converts this {@code Event} task into a machine-readable string","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * for saving to a file. The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"     * E,{doneFlag},{description},{start},{end}","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"     * where {@code doneFlag} is 1 if completed, 0 if not.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"     * @return The string representation of this task for file storage.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"        return String.format(\"E,%d,%s,%s,%s\", isDone ? 1 : 0, description, start, end);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     * Returns a human-readable string representation of this {@code Event}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     * The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"     * [E] {taskString} (from: {start} to: {end})","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"     * where {@code taskString} comes from {@link Task#toString()}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"     * @return A string representation of this task suitable for display.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(), start, end);","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false}],"authorContributionMap":{"lkxben":54}},{"path":"src/main/java/cate/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":" * A {@code Task} can be marked as done or undone, and","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" * subclasses must define how the task is saved to a file.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Task} with the given description.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"     * Marks this task as done by setting its completion status to {@code true}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"     * Marks this task as not done by setting its completion status to {@code false}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"    public void markUndone() {","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"     * Converts this task into a machine-readable string","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"     * for saving to a file. Each subclass defines its own format.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     * @return The string representation of this task for file storage.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"    public boolean descriptionContains(String query) {","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"        return this.description.contains(query);","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"     * Returns a human-readable string representation of this {@code Task}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"     * The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"     * [X] description   // if the task is done","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"     * [ ] description   // if the task is not done","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"     * @return A string representation of this task suitable for display.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false}],"authorContributionMap":{"lkxben":63}},{"path":"src/main/java/cate/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" * Represents a collection of {@link Task} objects.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" * A {@code TaskList} supports adding, deleting, marking, unmarking,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":" * and printing tasks, while also providing access to the underlying list.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"public class TaskList {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"    private static final String line \u003d \"    _______________________________________\\n\";","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code TaskList} with an existing list of tasks.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"     * @param list The list of tasks to initialize this {@code TaskList} with.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"     * Returns a copy of the internal list of tasks.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     * Modifications to the returned list will not affect the {@code TaskList}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * @return A new {@link ArrayList} containing all tasks in this list.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"        return new ArrayList\u003c\u003e(list);","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"     * Adds a task to the list and prints a confirmation message,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"     * including the number of tasks in the list after addition.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"     * @param task The {@link Task} to be added.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"        System.out.println(line + \"    Got it. I\u0027ve added this task:\\n      \" + task.toString());","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"        list.add(task);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"        System.out.println(\"    Now you have \" + list.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"     * Deletes a task at the given index (1-based) from the list","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"     * and prints a confirmation message.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"     * @param i The 1-based index of the task to delete.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"        Task t \u003d list.get(i - 1);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"        System.out.println(String.format(\"    Noted. I\u0027ve removed this task:\\n      %s\", t));","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"        list.remove(t);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"        System.out.println(\"    Now you have \" + list.size() + \" tasks in the list.\\n\" + line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"     * Marks the task at the given index (1-based) as done","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"     * and prints a confirmation message.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lkxben"},"content":"     * @param i The 1-based index of the task to mark as done.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lkxben"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lkxben"},"content":"    public void markTask(int i) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lkxben"},"content":"        Task t \u003d list.get(i - 1);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lkxben"},"content":"        t.markDone();","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lkxben"},"content":"        System.out.println(String.format(\"    Nice! I\u0027ve marked this task as done:\\n      %s\", t));","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lkxben"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lkxben"},"content":"     * Marks the task at the given index (1-based) as not done","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lkxben"},"content":"     * and prints a confirmation message.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lkxben"},"content":"     * @param i The 1-based index of the task to unmark.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lkxben"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lkxben"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lkxben"},"content":"        Task t \u003d list.get(i - 1);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lkxben"},"content":"        t.markUndone();","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lkxben"},"content":"        System.out.println(String.format(\"    OK, I\u0027ve marked this task as not done yet:\\n      %s\", t));","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lkxben"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lkxben"},"content":"    public void findTasks(String query) {","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"lkxben"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"lkxben"},"content":"        for (Task t : list) {","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"lkxben"},"content":"            if (t.descriptionContains(query)) {","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"lkxben"},"content":"                System.out.println(\"    \" + t);","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"lkxben"},"content":"            }","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"lkxben"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"lkxben"},"content":"     * Prints all tasks in the list in order,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"lkxben"},"content":"     * including their index and string representation.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"lkxben"},"content":"    public void printList() {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"lkxben"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"lkxben"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"lkxben"},"content":"            if (list.get(i) \u003d\u003d null) break;","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"lkxben"},"content":"            System.out.println(String.format(\"    %d. %s\", i + 1, list.get(i)));","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"lkxben"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false}],"authorContributionMap":{"lkxben":114}},{"path":"src/main/java/cate/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":" * Represents a simple to-do task with only a description and completion status.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":" * A {@code Todo} does not have additional date or time attributes.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Todo} task with the given description.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"        super(description);","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"     * Converts this {@code Todo} task into a machine-readable string","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"     * for saving to a file. The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"     * T,{doneFlag},{description}","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     * where {@code doneFlag} is 1 if completed, 0 if not.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * @return The string representation of this task for file storage.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"        return String.format(\"T,%d,%s\", isDone ? 1 : 0, description);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"     * Returns a human-readable string representation of this {@code Todo}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"     * The format is:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"     * [T] {taskString}","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"     * where {@code taskString} comes from {@link Task#toString()}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     * @return A string representation of this task suitable for display.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"    @Override","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T17:21:21","isFullCredit":false}],"authorContributionMap":{"lkxben":48}},{"path":"src/main/java/cate/ui/Cate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.ui;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-19T00:19:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T00:19:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"import cate.task.TaskList;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"import cate.util.Storage;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"import cate.util.Parser;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"import cate.util.CateException;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":" * The main entry point for the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":" * {@code Cate} manages the user interface, command parsing,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":" * task storage, and task execution loop.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"public class Cate {","lastModifiedDate":"2025-08-19T00:06:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"    private static final String filePath \u003d \"src/main/data/cate.txt\";","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"    private static final String line \u003d \"    _______________________________________\\n\";","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T16:44:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-26T20:37:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Cate} instance with the given file path","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     * for loading and saving tasks.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"    public Cate(String filePath) {","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"     * Runs the main program loop for the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"     * Continuously reads user input, parses it into commands,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"     * and executes them until the user enters {@code \"bye\"}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"     * Handles invalid commands and errors by showing messages via {@link Ui}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"    public void run() {","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-19T00:19:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T00:19:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"        while (true) {","lastModifiedDate":"2025-08-19T00:19:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"            String userInput \u003d ui.readCommand(scanner);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"            if (userInput.equals(\"bye\")) break;","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"            try {","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"                Parser.parse(userInput, tasks, storage);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"            } catch (CateException e) {","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"            }","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"        ui.showBye();","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"     * Launches the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"        new Cate(filePath).run();","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T00:06:09","isFullCredit":false}],"authorContributionMap":{"lkxben":64}},{"path":"src/main/java/cate/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.ui;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" * Handles all user interface interactions for the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" * The {@code Ui} class is responsible for displaying messages,","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":" * formatting output, and reading user input.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"public class Ui {","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"    private static final String line \u003d \"    _______________________________________\\n\";","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Ui} instance and immediately","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"     * shows the startup message.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"    public Ui() {","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"        showStartupMessage();","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"     * Displays the startup message when the program begins.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"    public void showStartupMessage() {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"        System.out.println(line","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"                + \"    Hello! I\u0027m cate.ui.Cate\\n\"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"                + \"    What can I do for you?\\n\"","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"                + line);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"     * Prints a horizontal line for separating sections of output.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"        System.out.print(line);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"     * Displays a message to the user in a formatted box.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"        System.out.println(line + \"    \" + message + \"\\n\" + line);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"     * Displays the farewell message when the program ends.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"    public void showBye() {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"        System.out.print(line + \"    Bye. Hope to see you again soon!\\n\" + line);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"     * @param scanner The {@link Scanner} object used to read input.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"     * @return The line of text entered by the user.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"    public String readCommand(Scanner scanner) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-26T20:28:08","isFullCredit":false}],"authorContributionMap":{"lkxben":63}},{"path":"src/main/java/cate/util/CateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.util;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":" * Represents a custom exception used in the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":" * A {@code CateException} is thrown when the user provides","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":" * invalid input or when an error occurs during command processing.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"public class CateException extends Exception {","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code CateException} with the specified detail message.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"     * @param message The detail message describing the cause of the exception.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"    public CateException(String message) {","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"        super(message);","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false}],"authorContributionMap":{"lkxben":18}},{"path":"src/main/java/cate/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.util;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import cate.task.*;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":" * Handles parsing and execution of user commands in the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":" * The {@code Parser} interprets user input, updates the {@link TaskList},","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":" * and saves tasks through {@link Storage}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"public class Parser {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"     * Parses a user input command and executes the corresponding action.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"     * Supported commands include:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code list} – Shows all tasks.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code todo \u003cdescription\u003e} – Adds a new {@link Todo}.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e} – Adds a new {@link Deadline}.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e} – Adds a new {@link Event}.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code mark \u003cindex\u003e} – Marks a task as done.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code unmark \u003cindex\u003e} – Marks a task as not done.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"     *     \u003cli\u003e{@code delete \u003cindex\u003e} – Deletes a task.\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"     * @param input   The raw user input string.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"     * @param tasks   The {@link TaskList} that stores tasks.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"     * @param storage The {@link Storage} used for saving tasks persistently.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"     * @throws CateException If the command is invalid, malformed, or incomplete.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"    public static void parse(String input, TaskList tasks, Storage storage) throws CateException {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"            tasks.printList();","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"        } else if (input.equals(\"todo\")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"            throw new CateException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"            String number \u003d input.split(\" \")[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"            int value \u003d Integer.parseInt(number);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"            tasks.markTask(value);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"            String number \u003d input.split(\" \")[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"            int value \u003d Integer.parseInt(number);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"            tasks.unmarkTask(value);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"            String number \u003d input.split(\" \")[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"            int value \u003d Integer.parseInt(number);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"            tasks.deleteTask(value);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"            String query \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"            tasks.findTasks(query);","lastModifiedDate":"2025-08-27T23:03:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"            String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"            Task newTask \u003d new Todo(description);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"            storage.saveTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"            String text \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"            String[] parts \u003d text.split(\" /by \", 2);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"            Task newTask \u003d new Deadline(parts[0], LocalDateTime.parse(parts[1], formatter));","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lkxben"},"content":"            storage.saveTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lkxben"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lkxben"},"content":"            String text \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lkxben"},"content":"            String[] parts \u003d text.split(\" /from \", 2);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lkxben"},"content":"            String[] time \u003d parts[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lkxben"},"content":"            Task newTask \u003d new Event(parts[0], time[0], time[1]);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lkxben"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lkxben"},"content":"            storage.saveTask(newTask);","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lkxben"},"content":"        } else {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lkxben"},"content":"            throw new CateException(\"I\u0027m sorry I don\u0027t understand!\");","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false}],"authorContributionMap":{"lkxben":76}},{"path":"src/main/java/cate/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.util;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import cate.task.Deadline;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"import cate.task.Event;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"import cate.task.Task;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"import cate.task.Todo;","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"import java.io.File;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"/**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":" * Handles persistent storage of tasks for the Cate application.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":" * The {@code Storage} class loads tasks from a file at startup","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"lkxben"},"content":" * and saves tasks to the file when new tasks are added.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"lkxben"},"content":" */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"lkxben"},"content":"public class Storage {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"lkxben"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"lkxben"},"content":"     * Constructs a {@code Storage} instance with the given file path.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"lkxben"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"lkxben"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"lkxben"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"lkxben"},"content":"     * Loads tasks from the file into memory.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"lkxben"},"content":"     * Each line in the file corresponds to one task in the format:","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"lkxben"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"lkxben"},"content":"     *   \u003cli\u003e{@code T,doneFlag,description}\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"lkxben"},"content":"     *   \u003cli\u003e{@code D,doneFlag,description,yyyy-MM-dd HHmm}\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"lkxben"},"content":"     *   \u003cli\u003e{@code E,doneFlag,description,start,end}\u003c/li\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"lkxben"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"lkxben"},"content":"     * where {@code doneFlag} is {@code 1} if the task is completed, otherwise {@code 0}.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"lkxben"},"content":"     * @return An {@link ArrayList} containing the loaded tasks.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"lkxben"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"lkxben"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"lkxben"},"content":"        try {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"lkxben"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"lkxben"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"lkxben"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"lkxben"},"content":"                String line \u003d sc.nextLine().trim();","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"lkxben"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"lkxben"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"lkxben"},"content":"                String desc \u003d parts[2];","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"lkxben"},"content":"                Task t \u003d null;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"lkxben"},"content":"                if (parts[0].equals(\"T\")) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"lkxben"},"content":"                    t \u003d new Todo(desc);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"lkxben"},"content":"                } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"lkxben"},"content":"                    t \u003d new Deadline(desc, LocalDateTime.parse(parts[3], formatter));","lastModifiedDate":"2025-08-26T20:16:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"lkxben"},"content":"                } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"lkxben"},"content":"                    t \u003d new Event(desc, parts[3], parts[4]);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"lkxben"},"content":"                }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"lkxben"},"content":"                boolean done \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"lkxben"},"content":"                if (done \u0026\u0026 t !\u003d null) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"lkxben"},"content":"                    t.markDone();","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"lkxben"},"content":"                }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"lkxben"},"content":"                output.add(t);","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"lkxben"},"content":"            }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"lkxben"},"content":"            sc.close();","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"lkxben"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"lkxben"},"content":"            return output;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"lkxben"},"content":"        return output;","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"lkxben"},"content":"    /**","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"lkxben"},"content":"     * Appends a single task to the file in its storage format.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"lkxben"},"content":"     *","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"lkxben"},"content":"     * @param task The {@link Task} to be saved.","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"lkxben"},"content":"     */","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"lkxben"},"content":"    public void saveTask(Task task) {","lastModifiedDate":"2025-08-26T20:53:22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"lkxben"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath, true)) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"lkxben"},"content":"            writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"lkxben"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"lkxben"},"content":"            // Ignored silently","lastModifiedDate":"2025-08-27T22:33:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"lkxben"},"content":"        }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-26T19:42:32","isFullCredit":false}],"authorContributionMap":{"lkxben":90}},{"path":"src/test/java/cate/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.task;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"    @Test","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"    public void taskList_addTask(){","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"        Task task \u003d new Todo(\"new\");","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"        output.add(task);","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"lkxben"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"lkxben"},"content":"        assertEquals(tasks.getList(), output);","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false}],"authorContributionMap":{"lkxben":19}},{"path":"src/test/java/cate/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"package cate.util;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"lkxben"},"content":"","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"lkxben"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"lkxben"},"content":"    @Test","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"lkxben"},"content":"    public void storage_fileNotFound_emtpyArray(){","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"lkxben"},"content":"        Storage storage \u003d new Storage(\"file.txt\");","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"lkxben"},"content":"        assertEquals(storage.load(), new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"lkxben"},"content":"    }","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"lkxben"},"content":"}","lastModifiedDate":"2025-08-27T16:24:44","isFullCredit":false}],"authorContributionMap":{"lkxben":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lkxben"},"content":"todo borrow book","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"lkxben"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"lkxben"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"lkxben"},"content":"list","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"lkxben"},"content":"mark 1","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"lkxben"},"content":"unmark 1","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"lkxben"},"content":"bye","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false}],"authorContributionMap":{"lkxben":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"lkxben"},"content":"java -classpath ..\\bin cate.ui.Cate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-27T15:21:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"lkxben":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"lkxben"},"content":"java -classpath ../bin Cate \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-19T18:31:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"lkxben":1,"-":37}}]
