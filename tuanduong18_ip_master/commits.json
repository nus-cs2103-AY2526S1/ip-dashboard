{"authorDailyContributionsMap":{"tuanduong18":[{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"a98cf168448ab751b48900b59575b52eee000419","isMergeCommit":false,"messageTitle":"Initialize chatbot: name it","messageBody":"Chatbot initial name is universal: \"Duke\".\n\nRename chatbot to \"Barry\", rename the file and the class\ncorrespondingly.Add 1 question message at the beginning and 1 \"Goodbye\"\nmessage before shutting down.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"9ff1b67cd30f4bc6b1182c3dcc9a19fbb2f7230d","isMergeCommit":false,"messageTitle":"Modularization the code in Barry:main","messageBody":"There are many lines for differect jobs in the same main function.\n\nLet\u0027s divide the code into \"greetings\", \"startSession\" and \"endSession\"\nfunctions, each has separate mission.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"844d5d9e898ba903d163a7a08f34efd4bd8caa4f","isMergeCommit":false,"messageTitle":"Add support for Echo","messageBody":"Add an infinite loop with break option to echo User\u0027s input.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"6626d488757a10c4989edb69dc5fe08b95319365","isMergeCommit":false,"messageTitle":"Add indentations","messageBody":"Add indentations to every line that the chatbot prints out.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"74d0e30c7ab63a0e73cab369ff80b1eb3d1cc363","isMergeCommit":false,"messageTitle":"Add support for list","messageBody":"Add a new private static field to store, change and retrieve the data\nbased on user\u0027s session.\nAdd a new private static method to print all elements in the list.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"7bbb632776292b87a08729bdc8a141d457669a98","isMergeCommit":false,"messageTitle":"Add new class \"Todo\"","messageBody":"The stored information requires state (boolean) and name (string).\n\nLet\u0027s create a new class to store these information.\n\"Todo\" class has 2 fields (string, boolean), 1 setter method and 1\ntoString overridden method.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4}}},{"hash":"996d6339c6e9d4e07a3eec570976781960ad0d3a","isMergeCommit":false,"messageTitle":"Rename the class for futher convention","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"f3e786391865a56ee5138385b716160d8898ac5b","isMergeCommit":false,"messageTitle":"Add support to Mark as Done","messageBody":"Rename the class static fields to align with new class: \"Task\".\nCreate new static method to handle mark tasks as done or undone.\nUse regression to match patterns: \"mark\" or \"unmark\" followed by a number.\nHandle negative number input or number that is bigger than the size of\nthe list in the new class method.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":5}}},{"hash":"5ac34b443e133b3f37b426184a4115d4a0e8e57e","isMergeCommit":false,"messageTitle":"Fix: invalid mark command","messageBody":"Return Invalid message when mark or unmark task 0.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"dca69dee68e4bf6a146b21295791db5eb3118913","isMergeCommit":false,"messageTitle":"Add new class \"Todo\"","messageBody":"Task have different types (todos, deadlines, events).\n\nLet\u0027s create multiple classes inherit from Task class.\nImplement class \"Todo\" and change the \"addTask\" static method in \"Barry\" class.\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":25}}},{"hash":"ee1467632e803f52a724df1af16397708b9cb105","isMergeCommit":false,"messageTitle":"Add suport for Deadline","messageBody":"Add new class: \"Deadline\" inherits from \"Task\".\nAdd new clause to handle adding new \"Deadline\" task.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":3}}},{"hash":"9abf3b0db25a8b0bd8e96f77179fe5f376a727da","isMergeCommit":false,"messageTitle":"Add suport for Event","messageBody":"Add new class: \"Event\" inherits from \"Task\".\nAdd new clause to handle adding new \"Event\" task.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"501c1a7473817325b8500ffeaaca16e54eddb5d9","isMergeCommit":false,"messageTitle":"Add new comments","messageBody":"Add new comments for all methods in class: \"Barry\";\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"42497ee4f028809d81961e73ca63f5dbf50e1910","isMergeCommit":false,"messageTitle":"Add ASCII art for the chatbot name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":3}}},{"hash":"96b2d615dc571a3b9a40e65ffa8f4fde1214138f","isMergeCommit":false,"messageTitle":"Add support Automated Text UI Testing","messageBody":"Change the name of the file from \"Duke\" to \"Barry\" in testing files.\nAdd multiple lines of input and expected output correspondingly.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"bat":{"insertions":3,"deletions":3},"sh":{"insertions":1,"deletions":1}}},{"hash":"b7ab0fe5d68e1f70788ea5e4a00218c2f13e3cc3","isMergeCommit":false,"messageTitle":"Add new Exception class","messageBody":"There are many potential incorrect inputs entered by the user.\n\nLet\u0027s teach the chatbot to handle them.\nCreate \"BarryException\" class with multiple static method to create\ndifferent instance of this class corresponding to differnt type of\nincorrect inputs.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}}]},{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"1ca0b7365992a01d73cc58cba72d328676397cf8","isMergeCommit":false,"messageTitle":"Add Exception handling logic","messageBody":"There are many ways that inputs are incorrectly typed in by users.\nIncorect inputs are handled in different methods, which is inconvenient.\n\nLet\u0027s use try-catch block to handle the exception (incorrect inputs) ONLY in the main loop.\nOther methods should be able to throw that captured exception.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":24}}},{"hash":"e2341c9b221bda39e4d86da56ca9398c4eee6656","isMergeCommit":false,"messageTitle":"Add support for delete Task","messageBody":"Create a new class method to handle deleting existed task.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"cbcf1135f9d7f91042701cea7c2c7c59d1dc340e","isMergeCommit":false,"messageTitle":"Refactor: cleanup code","messageBody":"Remove unused import, use string block instead of multiple concatenation, rename the field (tasksList -\u003e taskList).\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":28}}},{"hash":"f888038d0a3afe0e010782537a14d6ced7e45fdd","isMergeCommit":false,"messageTitle":"Add support for Enum class","messageBody":"There are many commands and can be more in the future, which will cause\ngreat inconvenience.\n\nLet\u0027s create an Enum class called \"Command\" to store all possible\ncommands and some common behaviors.\nAdd support for this enum class in both class methods and exception\nhandling logic.\n","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":39}}},{"hash":"1f3fcddf62081befbb8418cd105ed3c1c8204dd3","isMergeCommit":false,"messageTitle":"Update Automated Text UI Testing","messageBody":"Update EXPECTED.txt file\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":45,"deletions":6}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"2e145dbf5d277078429faeb93786fc219223922f","isMergeCommit":false,"messageTitle":"Refactor: switch-case indentations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":33}}},{"hash":"63290f3c93b231c99a379f6947768f98fb3abeb4","isMergeCommit":false,"messageTitle":"Add support to save data","messageBody":"On local machine, the needs of storing and retrieving data of the same\nuser is appealing.\n\nLet\u0027s add support to store this data in a txt file.\nAdd 2 functions: writing and reading from the file to Barry\u0027s methods.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":112,"deletions":3}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"708596bc4defb2213f34e4b0adf7056e8f43eb32","isMergeCommit":false,"messageTitle":"Fix: location of data files","messageBody":"Move the location of data files to the outside of the project.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"java":{"insertions":2,"deletions":3}}},{"hash":"897e83cfa44ff408a44850c2fd7279779624ee60","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"681012a913e04d44a628f9d22ee58a6f74a40a8a","isMergeCommit":false,"messageTitle":"Add support for deadline\u0027s due date","messageBody":"Deadlines should have due date in Datetime format to be easier to\nconvert into string back and forth and also to compare timestamp easier.\n\nLet\u0027s change the due date field of deadline from String to LocalDateTime\ntype.\nAdd the pattern convert and parsing into barry\u0027s method and the\nDeadline class itself.\nAdd Barry exception for incorrect time format.\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":5}}},{"hash":"022e94cfece5f90f6c466980acc2ef15e6abdea4","isMergeCommit":false,"messageTitle":"Add support for date format printing","messageBody":"Add new date format for better visual (data format is different from UI\nformat).\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"03df9aaafaa2abddee55d26eade63ee1c290c867","isMergeCommit":false,"messageTitle":"Add support for events\u0027 start and end time","messageBody":"Events should have start time and end time in Datetime format to be easier to convert into string back and forth and also to compare timestamp easier.\n\nLet\u0027s change the start time and end time field of Event class from String to LocalDateTime type.\nAdd the pattern convert and parsing into Barry\u0027s method and the Event class itself.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":13}}},{"hash":"d14771ff3caa9dad68d4e7f228d00949ab6df9b8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"b5609d942dc93170f694db03b1e8d1a25c20e3bf","isMergeCommit":false,"messageTitle":"Rename the Enum class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"7d9c99b69883f54044c2712bec7f906a381d4915","isMergeCommit":false,"messageTitle":"Refactor change the name of class Command -\u003e CommandType","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17}}},{"hash":"56f76a51e845d5c23b184014c710f691f17c0842","isMergeCommit":false,"messageTitle":"Add Ui class to handle printing messages","messageBody":"All printed out messages have some common pattern.\nThis printing logic should be separated from running logic.\n\nLet\u0027s create a new class to handle printing out messages.\n","fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":84}}},{"hash":"9e3fb0dff319656c963b6abf92b9068f3db7505c","isMergeCommit":false,"messageTitle":"Add new class to handle data and actions separately","messageBody":"Handling storing all Tasks data and making action (add, mark, remove) in Barry class is\nnot scalable and messy.\n\nLet\u0027s create a new class to handle all these logic.\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":25}}},{"hash":"dc19d8f8380ea99cfc53e9d6408b5c344a12f8b5","isMergeCommit":false,"messageTitle":"Refactor: divide files into packages","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":177,"deletions":81}}},{"hash":"3ad1f935732cff3bd540f0c39c42d45e89d12fa8","isMergeCommit":false,"messageTitle":"Add new class for each type of command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":172,"deletions":162}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"cf9ff241c2cace1dd550ede6dd5dd0e1342b9e5a","isMergeCommit":false,"messageTitle":"Add new class to handle Read - Write to local file","messageBody":"Add new print method in Ui class.\nAdd new files handling encoding and decoding when reading and writing to\nlocal data file.\nAdd support to save to local file only when user finished the session.\nAdd new Exceptions.\n","fileTypesAndContributionMap":{"java":{"insertions":326,"deletions":156}}},{"hash":"3565c6d66ba8c47a3814be124e24e561dd18bbef","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"7503a470274dd8382f67dac0f24105c7819359d1","isMergeCommit":false,"messageTitle":"Fix input file for automatic testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":11}}},{"hash":"1f915498fc7422b63dfbff96db781eeafccf3d4a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"59cd31e0dac04d8f7651bce5843690e74e04b7ab","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"96b0063b3b2b36ba255b610a1326babf20c1a6d2","isMergeCommit":false,"messageTitle":"Update main class path in Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"322d6870e5c177262db6d977552be4d5ca7fc99a","isMergeCommit":false,"messageTitle":"Add some JUnit to test methods from classes","messageBody":"Add Overriden \"equals\" method in some class to use JUnit \"assetEquals\".\nAdd some testing files.\n","fileTypesAndContributionMap":{"java":{"insertions":141,"deletions":4}}},{"hash":"39525b3e8c33f67533c2dc73e6db4a943a2aa7cd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"156b7552afe602a72c01cb82e45aafb8183566bd","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to all Command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":234,"deletions":11}}},{"hash":"d4c8dbb390d0909f533ee60bd54d0f9464d8695c","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to all Task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":130,"deletions":9}}},{"hash":"504d463f3477391f485b3e2f1a7011b09222e81f","isMergeCommit":false,"messageTitle":"Remove unused imports","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":13}}},{"hash":"79a37c5d4028341daf6106e7ecbdfc34c0c702b0","isMergeCommit":false,"messageTitle":"Refactor: rearrange import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":17}}},{"hash":"7060d729230775b26dc4761d74a8fc780a1bad5b","isMergeCommit":false,"messageTitle":"Refactor: change the classes\u0027 field from \"name\" to \"description\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":11}}},{"hash":"7e56796367b79cc3c2651c10cb5adec7a51588ea","isMergeCommit":false,"messageTitle":"Add support for find Task with description","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"88f407cac9da7f97d50c2022f1d4747d0c612189","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"a03d049e8df3c85abec6c85bdf7c08651bf62817","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"9095a29966b6884de6531efa3f1c4214e3707663","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"bbec70c71b79ccb72b5bc0a14437bea5cee7bc36","isMergeCommit":false,"messageTitle":"Add support to handle no Task found","messageBody":"When using \"find\" command, Barry should print a different message if\nthere is no task match the pattern.\n\nLet\u0027s add an if-else check in Ui class method.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"1d089c1cb12fad6d13339423b9886c6d73768fff","isMergeCommit":false,"messageTitle":"Update import statements and add some comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":3}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"17606a561899940045f060d4f2ebc27754fb6093","isMergeCommit":false,"messageTitle":"Refactor: move enum class \"CommandType\" to \"common\" package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":14}}}]},{"date":"2025-09-04T00:00:00","commitResults":[{"hash":"1fe7cdc6b6c613d1cd6dadba908a2f7c90481cb6","isMergeCommit":false,"messageTitle":"Refactor: put the regex logic in separate files","messageBody":"Managing the regex logic in the same parsing file is complicated. When\nthe regex is changed, the code method has to be changed.\n\nLet\u0027s create new files to put the regex logic.\nRename the files for clarity.\n","fileTypesAndContributionMap":{"java":{"insertions":239,"deletions":191}}},{"hash":"c7b1bec274f17f4ff22a87c1d0dffa8a7dd0447b","isMergeCommit":false,"messageTitle":"Update the name of classes\u0027 fields and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":18}}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"f954306850dc4c6188e37afec7ec9efc4fb34296","isMergeCommit":false,"messageTitle":"Fix marking task feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"04272469ecc29ec88667eadb68af35e76593386e","isMergeCommit":false,"messageTitle":"Refactor code to satify java coding styles","messageBody":"Add more Javadoc comment.\nUpdate some fields and methods\u0027 name.\nChange the indentations from tabs to spaces.\n","fileTypesAndContributionMap":{"java":{"insertions":1555,"deletions":907}}},{"hash":"d72313555b65a9d6e035b5e4367fbb9c22980806","isMergeCommit":false,"messageTitle":"Fix parsing command errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":17}}},{"hash":"7472807b397af56dc51984d8281ac8f7de7cf395","isMergeCommit":false,"messageTitle":"Add more Junit tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":173,"deletions":100}}},{"hash":"651795ffc3dd91bab85ad5a9443dddc3654e654b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-06T00:00:00","commitResults":[{"hash":"8123ac53dfb91ae9fb1cc8a96dfb51a0d60e9d57","isMergeCommit":false,"messageTitle":"Add initial support for GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":51,"deletions":0},"java":{"insertions":287,"deletions":118},"bat":{"insertions":1,"deletions":1}}},{"hash":"08c3fbbd060262637b860058d05016527ce8c1d3","isMergeCommit":false,"messageTitle":"Add full support for GUI","messageBody":"Add new class in Ui package to handle returning strings insead of\nprinting them out.\nAdd new abstract method in Command class and implements overridden concrete methods\nto return String.\nFix CommandRegex parseCommand method to return more informative\nException.\nAdd an option to terminate the GUI by user\u0027s input.\n","fileTypesAndContributionMap":{"java":{"insertions":212,"deletions":7}}}]},{"date":"2025-09-07T00:00:00","commitResults":[{"hash":"e118bb36df223bd0f594e2cdbe605cd24f341548","isMergeCommit":false,"messageTitle":"Add JavaDoc comments and update GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":174,"deletions":7}}},{"hash":"1ea3db73bce7a07bd7b8a799b966fe585e0028a1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"3724dfccc26b361b91dfdc939ec7fc5b1c676541","isMergeCommit":false,"messageTitle":"Delete unused file and comments","messageBody":"Need to build a jar file with all javaFx library.\n\nBuild jar file with CLI (gradlew), so that .MF file which is only used\nfor buidling jar file within IDE should be deleted.\nClean up, delete the comment part that contains bug/special characters.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"28c3a78256073f7796a2655360d085167e86f90f","isMergeCommit":false,"messageTitle":"Add support for java assert","messageBody":"At many places in the code, there are some conditions to be met. Most of\nthese conditions are checked in a different place from the code itself.\n\nLet\u0027s add some java assert statement to ensure the validations are\nhandled correctly from a different code.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":10}}},{"hash":"c581dfad2b501e85c50b01c4dc36e5df68215846","isMergeCommit":false,"messageTitle":"Refactor: improve code quality","messageBody":"Code quality needs to be improved.\n\nRename the package gui -\u003e javaFX for more clarity.\nReplace magic literals by static fields in classes in package\n\"data.common\".\nApply SLAP by extracting the static methods in \"TaskParser and Storage\" class.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":195,"deletions":125}}}]},{"date":"2025-09-13T00:00:00","commitResults":[{"hash":"e93c7ccecc8b0deb9f9b3d6ac871ad2da2fb52a6","isMergeCommit":false,"messageTitle":"Refactor: improve code quality","messageBody":"Apply SLAP by adding multiple private methods.\nRemove magic numbers by static fields.\n","fileTypesAndContributionMap":{"java":{"insertions":203,"deletions":88}}}]},{"date":"2025-09-14T00:00:00","commitResults":[{"hash":"4782901c90be7846b011f0da2739b4218572b5d9","isMergeCommit":true,"messageTitle":"Merge pull request #2 from tuanduong18/branch-A-Assertions","messageBody":"Add support for java assert.","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"cf825118ee6382c90cf0698d6a1fe045283fdff8","isMergeCommit":false,"messageTitle":"Add support for java stream","messageBody":"Replace some for loops by java stream.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":34}}},{"hash":"da58e82344f9a6d6d2de5366efe06c36b3e75e55","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"Apply SLAP, add more private methods.\nRemove magic numbers\n","fileTypesAndContributionMap":{}},{"hash":"f9f6e5d822f77daf5d12d5775efd94c22187e65b","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"Add some java streams to replace loops.\n","fileTypesAndContributionMap":{}},{"hash":"20d41f921b6ab40f8504c780c2eec73d00b91948","isMergeCommit":true,"messageTitle":"Merge pull request #3 from tuanduong18/branch-A-CodeQuality","messageBody":"Improve code quality, apply SLAP.","tags":["A-FullCommitMessage","A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"a1a5a0d6f26941c167e925984810b891f2b31811","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"Resolve merge conflicts.\n","fileTypesAndContributionMap":{}},{"hash":"0f19e5b2d74d0e48a93bfe5726bbef090a46b388","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Streams\u0027","messageBody":"Replace loops by java streams for cleaner code.\n","tags":["A-Streams"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-16T00:00:00","commitResults":[{"hash":"b3fbdffc7d4ce338d614525b1a1ebc04157b6a06","isMergeCommit":false,"messageTitle":"Add support for alias","messageBody":"Create a file to store default aliases.\nAdd an alias package contains storage and expander class.\nAdd expand method to expand alias to full command to\nbe parsed in CommandParser.\n","fileTypesAndContributionMap":{"java":{"insertions":330,"deletions":6}}},{"hash":"fe469e1f9bf3a23ffa770cf1535d8bdfededd3b1","isMergeCommit":false,"messageTitle":"Add new command to show all aliases","messageBody":"Aliases should be visible to users.\n\nAdd new command to show all aliases.\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":3}}},{"hash":"84b9ad318c2a31f3d2cddd9319367a2eea6077ec","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-FriendlierSyntax\u0027","messageBody":"Add support for aliases.\nAdd more flexibility in CLI command.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"1876c7be84609f60a702c505c77b9661ce7432ad","isMergeCommit":false,"messageTitle":"Update GUI responses and text display","messageBody":"Add a different color text box to display BarryException.\nUse a different font for Barry\u0027s text and user\u0027s text.\n","tags":["A-BetterGui","A-AiAssisted"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":18}}}]},{"date":"2025-09-17T00:00:00","commitResults":[{"hash":"666dfc56514d1e1e686491d4be52c57e34d250db","isMergeCommit":false,"messageTitle":"Update UX and refactor code","messageBody":"Update the name of package javaFX -\u003e javafx to match the package name\nformat.\nUpdate GUI: app icon, app name, textbox colors.\nAdd javadoc comments to multiple files.\nFix the bug in returning help messages.\nRename duke -\u003e barry in all the src files.\n","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":373,"deletions":183}}},{"hash":"4c36ff1194460e6247204f3848fba37bb358ffd5","isMergeCommit":false,"messageTitle":"Refactor code and fix GUI bug","messageBody":"Rename the multiple class in barry.command package for more clarity and\nfurther development.\nRename the field of Task status -\u003e isDone for more clarity.\nAdd the missing Images objects in MainWindow.java.\n","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":93}}},{"hash":"75ec484e84a137ef6469ceb86ec02a8a5203f522","isMergeCommit":false,"messageTitle":"Add support for pre-defined aliases","messageBody":"Add default.barryrc in resources/config to store pre-defined aliases.\nAdd method to copy this file to the outside of the jar when the program\nstarts and \"Barry data\"/.barryrc has not existed yet.\nAdd more clarity to the text when printing out all aliases.\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":22}}},{"hash":"70daad375eccb14c4f16c16ecfc69b9f2c62e572","isMergeCommit":false,"messageTitle":"Update User Guide and jar","messageBody":"Update the UG so that it contains all features and\nensure that UG is user-friendly.\nUpdate the jar config and rebuild it.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"md":{"insertions":293,"deletions":14}}},{"hash":"5d4db689a2fbd42358985e65eef058699fc9f77c","isMergeCommit":false,"messageTitle":"Update Developer guide","messageBody":"Update the developer guide, explain project structure and what can be\nfurther improved.\n","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":274,"deletions":26}}},{"hash":"31de6869d6ad3412429de846a2dd97cd9895c9fe","isMergeCommit":false,"messageTitle":"Update Junit test case","messageBody":"Update the method setStatus -\u003e setIsDone.\n","tags":["A-Release"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2025-09-19T00:00:00","commitResults":[{"hash":"873d8ee8698ae8570f360da08711b7e17c38fd61","isMergeCommit":false,"messageTitle":"Fix the file path bug","messageBody":"Change the data file path to absolute path.\nUpdate the jar.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2},"java":{"insertions":76,"deletions":23}}}]}]},"authorFileTypeContributionMap":{"tuanduong18":{"java":3684,"md":555,"fxml":51,"sh":1,"bat":2,"gradle":17,"txt":52}},"authorContributionVariance":{"tuanduong18":245506.89},"authorDisplayNameMap":{"tuanduong18":"CS2103T-F08b-1 NGUY..UONG"}}
