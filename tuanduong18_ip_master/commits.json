{"authorDailyContributionsMap":{"tuanduong18":[{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"a98cf168448ab751b48900b59575b52eee000419","isMergeCommit":false,"messageTitle":"Initialize chatbot: name it","messageBody":"Chatbot initial name is universal: \"Duke\".\n\nRename chatbot to \"Barry\", rename the file and the class\ncorrespondingly.Add 1 question message at the beginning and 1 \"Goodbye\"\nmessage before shutting down.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"9ff1b67cd30f4bc6b1182c3dcc9a19fbb2f7230d","isMergeCommit":false,"messageTitle":"Modularization the code in Barry:main","messageBody":"There are many lines for differect jobs in the same main function.\n\nLet\u0027s divide the code into \"greetings\", \"startSession\" and \"endSession\"\nfunctions, each has separate mission.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"844d5d9e898ba903d163a7a08f34efd4bd8caa4f","isMergeCommit":false,"messageTitle":"Add support for Echo","messageBody":"Add an infinite loop with break option to echo User\u0027s input.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"6626d488757a10c4989edb69dc5fe08b95319365","isMergeCommit":false,"messageTitle":"Add indentations","messageBody":"Add indentations to every line that the chatbot prints out.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"74d0e30c7ab63a0e73cab369ff80b1eb3d1cc363","isMergeCommit":false,"messageTitle":"Add support for list","messageBody":"Add a new private static field to store, change and retrieve the data\nbased on user\u0027s session.\nAdd a new private static method to print all elements in the list.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"7bbb632776292b87a08729bdc8a141d457669a98","isMergeCommit":false,"messageTitle":"Add new class \"Todo\"","messageBody":"The stored information requires state (boolean) and name (string).\n\nLet\u0027s create a new class to store these information.\n\"Todo\" class has 2 fields (string, boolean), 1 setter method and 1\ntoString overridden method.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4}}},{"hash":"996d6339c6e9d4e07a3eec570976781960ad0d3a","isMergeCommit":false,"messageTitle":"Rename the class for futher convention","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"f3e786391865a56ee5138385b716160d8898ac5b","isMergeCommit":false,"messageTitle":"Add support to Mark as Done","messageBody":"Rename the class static fields to align with new class: \"Task\".\nCreate new static method to handle mark tasks as done or undone.\nUse regression to match patterns: \"mark\" or \"unmark\" followed by a number.\nHandle negative number input or number that is bigger than the size of\nthe list in the new class method.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":5}}},{"hash":"5ac34b443e133b3f37b426184a4115d4a0e8e57e","isMergeCommit":false,"messageTitle":"Fix: invalid mark command","messageBody":"Return Invalid message when mark or unmark task 0.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"dca69dee68e4bf6a146b21295791db5eb3118913","isMergeCommit":false,"messageTitle":"Add new class \"Todo\"","messageBody":"Task have different types (todos, deadlines, events).\n\nLet\u0027s create multiple classes inherit from Task class.\nImplement class \"Todo\" and change the \"addTask\" static method in \"Barry\" class.\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":25}}},{"hash":"ee1467632e803f52a724df1af16397708b9cb105","isMergeCommit":false,"messageTitle":"Add suport for Deadline","messageBody":"Add new class: \"Deadline\" inherits from \"Task\".\nAdd new clause to handle adding new \"Deadline\" task.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":3}}},{"hash":"9abf3b0db25a8b0bd8e96f77179fe5f376a727da","isMergeCommit":false,"messageTitle":"Add suport for Event","messageBody":"Add new class: \"Event\" inherits from \"Task\".\nAdd new clause to handle adding new \"Event\" task.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"501c1a7473817325b8500ffeaaca16e54eddb5d9","isMergeCommit":false,"messageTitle":"Add new comments","messageBody":"Add new comments for all methods in class: \"Barry\";\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"42497ee4f028809d81961e73ca63f5dbf50e1910","isMergeCommit":false,"messageTitle":"Add ASCII art for the chatbot name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":3}}},{"hash":"96b2d615dc571a3b9a40e65ffa8f4fde1214138f","isMergeCommit":false,"messageTitle":"Add support Automated Text UI Testing","messageBody":"Change the name of the file from \"Duke\" to \"Barry\" in testing files.\nAdd multiple lines of input and expected output correspondingly.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"bat":{"insertions":3,"deletions":3},"sh":{"insertions":1,"deletions":1}}},{"hash":"b7ab0fe5d68e1f70788ea5e4a00218c2f13e3cc3","isMergeCommit":false,"messageTitle":"Add new Exception class","messageBody":"There are many potential incorrect inputs entered by the user.\n\nLet\u0027s teach the chatbot to handle them.\nCreate \"BarryException\" class with multiple static method to create\ndifferent instance of this class corresponding to differnt type of\nincorrect inputs.\n","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}}]},{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"1ca0b7365992a01d73cc58cba72d328676397cf8","isMergeCommit":false,"messageTitle":"Add Exception handling logic","messageBody":"There are many ways that inputs are incorrectly typed in by users.\nIncorect inputs are handled in different methods, which is inconvenient.\n\nLet\u0027s use try-catch block to handle the exception (incorrect inputs) ONLY in the main loop.\nOther methods should be able to throw that captured exception.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":24}}},{"hash":"e2341c9b221bda39e4d86da56ca9398c4eee6656","isMergeCommit":false,"messageTitle":"Add support for delete Task","messageBody":"Create a new class method to handle deleting existed task.\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"cbcf1135f9d7f91042701cea7c2c7c59d1dc340e","isMergeCommit":false,"messageTitle":"Refactor: cleanup code","messageBody":"Remove unused import, use string block instead of multiple concatenation, rename the field (tasksList -\u003e taskList).\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":28}}},{"hash":"f888038d0a3afe0e010782537a14d6ced7e45fdd","isMergeCommit":false,"messageTitle":"Add support for Enum class","messageBody":"There are many commands and can be more in the future, which will cause\ngreat inconvenience.\n\nLet\u0027s create an Enum class called \"Command\" to store all possible\ncommands and some common behaviors.\nAdd support for this enum class in both class methods and exception\nhandling logic.\n","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":39}}},{"hash":"1f3fcddf62081befbb8418cd105ed3c1c8204dd3","isMergeCommit":false,"messageTitle":"Update Automated Text UI Testing","messageBody":"Update EXPECTED.txt file\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"txt":{"insertions":45,"deletions":6}}}]}]},"authorFileTypeContributionMap":{"tuanduong18":{"java":397,"md":0,"fxml":0,"sh":1,"bat":2,"gradle":0,"txt":52}},"authorContributionVariance":{"tuanduong18":18511.535},"authorDisplayNameMap":{"tuanduong18":"NGUY..UONG"}}
