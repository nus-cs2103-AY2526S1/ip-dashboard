[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    mainClass \u003d \"barry.gui.Launcher\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"    archiveBaseName \u003d \"barry\"","lastModifiedDate":"2025-08-29T10:53:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"tuanduong18":17,"-":39}},{"path":"src/main/java/barry/Barry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.Command;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"import barry.parser.CommandParser;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * Entry point and top-level coordinator for the Barry.Barry CLI task manager.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * {@code Barry.Barry} wires together the user interface ({@link Ui}), command parsing","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" * ({@link CommandParser}), in-memory task state ({@link TaskList}), and","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * persistence ({@link Storage}). On startup, it attempts to load tasks from the","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" * provided storage path; if loading fails, a concise error is shown and an empty","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * task list is used.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"public class Barry {","lastModifiedDate":"2025-08-20T12:46:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    private static final Path path \u003d Paths.get(\"..\", \"data\", \"Barry.txt\");","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    // Print messages from Barry.Barry","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    private final Gui gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    // Store all tasks in the session","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"    // Parse the command","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    private final CommandParser parser;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    // Interact with local storage","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    public Barry() {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        this(Barry.path);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * Creates a new {@code Barry.Barry} application bound to the given storage path.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * The constructor initializes the UI, parser, and storage handler, then tries","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * to load tasks from disk via {@link Storage#load()}. If loading fails with a","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     * {@link BarryException}, a loading error is printed and the task list starts empty.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * @param path the file path used to persist and load tasks","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"    public Barry(Path path) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        this.gui \u003d new Gui();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        this.parser \u003d new CommandParser();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        TaskList stored \u003d new TaskList();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"            stored \u003d storage.load();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"        } catch (BarryException e) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"        } finally {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"            taskList \u003d stored;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     * Runs the main REPL loop for the Barry.Barry application.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     * After printing a greeting, this method reads user input line-by-line from","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"     * standard input, parses it into a {@link Command}, executes the command,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     * and continues until a command sets the {@code isExit} flag. Any","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"     * {@link BarryException} thrown during parsing or execution is caught and","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"     * displayed through the {@link Ui}. A goodbye message is printed on exit.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"        ui.printGreetings();","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"            try {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"                String temp \u003d scan.nextLine();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"                Command c \u003d parser.parseCommand(temp);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"                isExit \u003d c.isExit;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"            } catch (BarryException e) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"                ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"                s.add(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"                ui.print(s);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"        ui.printGoodbye();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T12:56:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T12:56:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"            Command c \u003d parser.parseCommand(input);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"            return c.execute(taskList, gui, storage);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"        } catch (BarryException e) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"            ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"            return gui.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"        return gui.printGreetings(); // returns the greeting string for GUI","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"     * Program entry point.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"     * Launches Barry.Barry with the default storage path {@code ../data/Barry.Barry.txt}","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"     * (relative to the working directory).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"     * @param args command-line arguments (unused)","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"        new Barry(Paths.get(\"..\", \"data\", \"Barry.txt\")).run();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T12:46:16","isFullCredit":false}],"authorContributionMap":{"tuanduong18":127}},{"path":"src/main/java/barry/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that adds a {@link Task} to the {@link TaskList}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * The {@code AddCommand} encapsulates the {@link Task} to be added and, when executed,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * updates the task list, saves the change to storage, and displays a confirmation","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * message to the user via the {@link Ui}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * The task to be added to the task list.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    private final Task task;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * Creates an {@code AddCommand} with the specified task.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * @param t the task to be added to the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    public AddCommand(Task t) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"        this.task \u003d t;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * Executes the command by adding the task to the task list,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * saving the updated list to storage, and showing feedback to the user.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to which the task will be added","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to show the add confirmation","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"        ui.printAddTask(task.toString(), taskList.size());","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to which the task will be added","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the task list","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     * @return the confirmation message including the added task and updated count","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        return gui.printAddTask(task.toString(), taskList.size());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof AddCommand) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"            Task t \u003d ((AddCommand) o).task;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"            return t.equals(this.task);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":72}},{"path":"src/main/java/barry/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * Represents an abstract command that can be executed by the chatbot.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * Each {@code Command} encapsulates a user instruction and defines","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * how it should affect the {@link TaskList}, {@link Ui}, and {@link Storage}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * Subclasses of {@code Command} implement the {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * method to provide specific behavior (e.g., adding a task, listing tasks, exiting the program).","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     * Indicates whether this command will cause the program to exit after execution.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    public final boolean isExit;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * Constructs a {@code Command}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * @param isExit {@code true} if this command should terminate the application","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     *               after execution, {@code false} otherwise.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list that the command operates on","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to display messages to the user","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to load and save task data","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if an error specific to command execution occurs","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws BarryException;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * Executes the command for a GUI flow and returns the user-facing message.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}: implementations","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * must perform the same side effects on the {@link TaskList} and interact with","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * {@link Storage} in the same way. The only difference is output handling—no console","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     * printing should occur here. Instead, produce the message using the analogous","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * {@link Gui} methods (which mirror {@link Ui} but return strings) and return the","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     * resulting text for the caller to render.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * Callers may consult {@link #isExit} to decide whether to terminate afterward.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list the command operates on","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (same API as {@link Ui} but methods return strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to load and save task data","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     * @return the message to display in the GUI (may be multi-line)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if a command-specific error occurs during execution","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * @see #execute(TaskList, Ui, Storage)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"    public abstract String execute(TaskList taskList, Gui gui, Storage storage) throws BarryException;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false}],"authorContributionMap":{"tuanduong18":65}},{"path":"src/main/java/barry/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that deletes a {@link Task} from the {@link TaskList}.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * The {@code DeleteCommand} identifies a task by its one-based index","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * in the displayed task list. When executed, it removes the task,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * saves the updated list to storage, and displays a confirmation message","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * to the user via the {@link Ui}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * The one-based index of the task to be deleted.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    private final int id;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code DeleteCommand} to delete the task at the specified index.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     * @param id the one-based index of the task in the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * Executes the command by removing the task at the specified index","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * from the task list, saving the updated list to storage, and","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * showing feedback to the user.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list from which the task will be deleted","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to show the delete confirmation","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the updated task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index is invalid (≤ 0 or greater than the task list size)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws BarryException {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        if (id \u003c\u003d 0 || id \u003e taskList.size()) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"            String task \u003d taskList.deleteTask(id - 1);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"            storage.save(taskList);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"            ui.printDeleteTask(task, taskList.size());","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"            // Should not go into this line","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list from which the task will be deleted","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the updated task list","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     * @return the confirmation message including the added task and updated count","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index is invalid (≤ 0 or greater than the task list size)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) throws BarryException {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"        if (id \u003c\u003d 0 || id \u003e taskList.size()) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"            String task \u003d taskList.deleteTask(id - 1);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"            storage.save(taskList);","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"            return gui.printDeleteTask(task, taskList.size());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"            // Should not go into this line","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof DeleteCommand) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"            int oId \u003d ((DeleteCommand) o).id;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"            return oId \u003d\u003d id;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":93}},{"path":"src/main/java/barry/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that exits the application.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * The {@code ExitCommand} signals the application to terminate.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * When executed, it saves the current {@link TaskList} to persistent storage","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * before the program exits. This command is always marked as an exit command.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     * Creates an {@code ExitCommand}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     * The {@code isExit} flag is always set to {@code true} for this command,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * indicating that executing it will terminate the application.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"        super(true);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * Executes the exit command by saving the current task list to storage.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     * After this method is run, the application is expected to terminate.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to be saved before exit","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface (not used in this command, but required by signature)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to be saved before exit","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the task list","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @return the farewell message to display in the GUI","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        return gui.printGoodbye();","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        return o instanceof ExitCommand;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":60}},{"path":"src/main/java/barry/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that finds tasks in the {@link TaskList} that match a search pattern.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * The {@code FindCommand} searches the current tasks for entries matching the provided","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * {@code pattern} and displays them to the user through the {@link Ui}.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * It does not modify the task list or storage, and it does not cause the program to exit.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    private final String pattern;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code FindCommand} with the specified search pattern.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * The {@code isExit} flag is always set to {@code false} for this command,","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * as finding tasks does not terminate the program.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     * @param pattern the search term or pattern used to filter tasks","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    public FindCommand(String pattern) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * Executes the find command by searching the task list for tasks that match the stored","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * {@code pattern} and displaying the results through the user interface.","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to search for matching tasks","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to display the matching tasks","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command,","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     *                 but required by the method signature)","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-01T09:39:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e tasks \u003d taskList.findMatchingTasks(pattern);","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        ui.printMatchingTasks(tasks);","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list to search for matching tasks","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command, required by signature)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted message listing the matching tasks for display in the GUI","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e tasks \u003d taskList.findMatchingTasks(pattern);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"        return gui.printMatchingTasks(tasks);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof FindCommand) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"            String p \u003d ((FindCommand) o).pattern;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"            return p.equals(this.pattern);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false}],"authorContributionMap":{"tuanduong18":73}},{"path":"src/main/java/barry/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that displays usage information to the user.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * The {@code HelpCommand} can either show a concise help message","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * or a detailed help message, depending on the {@code detailed} flag.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * This command does not modify the {@link TaskList} or {@link Storage}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     * Determines whether the detailed help message should be shown.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * If {@code true}, a detailed help message is displayed;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     * otherwise, a concise help message is displayed.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    private final boolean isDetailed;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code HelpCommand}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * @param detailed {@code true} to show the detailed help message,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     *                 {@code false} to show the concise help message","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    public HelpCommand(boolean detailed) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"        this.isDetailed \u003d detailed;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * Executes the help command by displaying the appropriate help message","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * through the {@link Ui}. This command does not affect the task list or storage.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list (not used in this command, but required by signature)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to display the help message","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command, but required by signature)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"        if (isDetailed) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"            ui.printHelp();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        } else {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"            ui.printDetailedHelp();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list (not used in this command, required by signature)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command, required by signature)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"     * @return the help message text (concise or detailed, depending on {@code isDetailed})","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"        if (isDetailed) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"            return gui.printHelp();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"        } else {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"            return gui.printDetailedHelp();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof HelpCommand) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"            boolean oDetails \u003d ((HelpCommand) o).isDetailed;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"            return oDetails \u003d\u003d isDetailed;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":78}},{"path":"src/main/java/barry/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that lists all tasks in the {@link TaskList}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * The {@code ListCommand} displays the current tasks to the user","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * through the {@link Ui}. It does not modify the task list or storage,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * and it does not cause the program to exit.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code ListCommand}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     * The {@code isExit} flag is always set to {@code false}","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * for this command, as listing tasks does not terminate the program.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    public ListCommand() {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * Executes the list command by displaying all tasks in the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     * through the user interface.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list containing tasks to be listed","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to display the tasks","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     *                 but required by the method signature)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"        ui.printListTask(taskList.listTasks());","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list containing tasks to be listed","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler (not used in this command, required by signature)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted list of tasks for display in the GUI","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        return gui.printListTask(taskList.listTasks());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        return o instanceof ListCommand;","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":60}},{"path":"src/main/java/barry/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.commands;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.storage.Storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Gui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.ui.Ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * Represents a command that marks or unmarks a {@link Task} in the {@link TaskList}.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * The {@code MarkCommand} identifies a task by its one-based index","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * in the displayed task list. When executed, it updates the marked","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * status of the specified task, saves the change to storage, and","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * displays a confirmation message to the user via the {@link Ui}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * The one-based index of the task to be marked or unmarked.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    private final int id;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * Indicates whether the task should be marked or unmarked.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * {@code true} means mark the task, {@code false} means unmark the task.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    private final boolean isMarked;","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code MarkCommand}.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * @param id       the one-based index of the task in the task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * @param isMarked {@code true} if the task should be marked as done,","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     *                 {@code false} if the task should be unmarked","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    public MarkCommand(int id, boolean isMarked) {","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"        super(false);","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * Executes the mark command by marking or unmarking the specified task,","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * saving the updated list to storage, and showing feedback to the user.","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list containing the task to be marked/unmarked","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * @param ui       the user interface used to show the mark/unmark confirmation","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the updated task list","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index is invalid (≤ 0 or greater than the task list size)","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws BarryException {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        if (id \u003c\u003d 0 || id \u003e taskList.size()) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        String task \u003d taskList.markTask(id - 1, isMarked);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        ui.printMarkTask(task, isMarked);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * Semantics are identical to {@link #execute(TaskList, Ui, Storage)}.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the task list containing the task to be marked/unmarked","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     * @param gui      the GUI facade (analogous to {@link Ui} but returning strings)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"     * @param storage  the storage handler used to persist the updated task list","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"     * @return the confirmation message indicating the task and its updated marked status","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index is invalid (≤ 0 or greater than the task list size)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"    public String execute(TaskList taskList, Gui gui, Storage storage) throws BarryException {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"        if (id \u003c\u003d 0 || id \u003e taskList.size()) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.taskNotFound(taskList.size());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"        String task \u003d taskList.markTask(id - 1, isMarked);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"        return gui.printMarkTask(task, isMarked);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof MarkCommand) {","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"            MarkCommand n \u003d (MarkCommand) o;","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"            return n.isMarked \u003d\u003d this.isMarked \u0026\u0026 n.id \u003d\u003d this.id;","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false}],"authorContributionMap":{"tuanduong18":92}},{"path":"src/main/java/barry/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.data;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * Represents a mutable, in-memory list of {@link Task} objects and provides","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * utilities to add, remove, update, and query tasks.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * This class stores tasks in insertion order and exposes convenience methods","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * that return a string view of tasks via each task’s {@link Task#toString()}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * It is not thread-safe.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code TaskList} backed by the provided list.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * Note: the provided list is used directly (no defensive copy).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * Mutations through this {@code TaskList} will affect the given list.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the underlying list of tasks to use","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * Appends a task to the end of the list.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * @param t the task to add","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"        this.taskList.add(t);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * Removes and returns the string representation of the task at the given index.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @param index zero-based index of the task to remove","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @return the removed task’s {@link Task#toString() toString()} value","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * @throws IndexOutOfBoundsException if {@code index} is out of range","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        Task t \u003d taskList.get(index);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        return t.toString();","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     * Sets the completion status of the task at the given index and returns its string representation.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * @param index  zero-based index of the task to update","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * @param marked {@code true} to mark as done; {@code false} to unmark","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @return the updated task’s {@link Task#toString() toString()} value","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @throws IndexOutOfBoundsException if {@code index} is out of range","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"    public String markTask(int index, boolean marked) {","lastModifiedDate":"2025-08-28T23:26:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"        this.taskList.get(index).setStatus(marked);","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        return taskList.get(index).toString();","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"     * @return the task count","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"     * Returns a snapshot of all tasks as strings, in list order.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"     * @return an {@link ArrayList} of {@code toString()} values for each task","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"    public ArrayList\u003cString\u003e listTasks() {","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T11:36:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"            s.add(t.toString());","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"        return s;","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"     * Finds tasks whose descriptions contain the given pattern (case-insensitive)","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"     * and returns their string representations.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"     * @param pattern the substring to search for within each task’s description","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"     * @return an {@link ArrayList} of matching tasks’ {@code toString()} values","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"    public ArrayList\u003cString\u003e findMatchingTasks(String pattern) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-05T11:36:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-09-04T10:28:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"            if (t.getDescription().toLowerCase().contains(pattern.toLowerCase())) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"                s.add(t.toString());","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"        return s;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T20:31:42","isFullCredit":false}],"authorContributionMap":{"tuanduong18":111}},{"path":"src/main/java/barry/data/common/CommandRegex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.data.common;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * Defines the set of command tags and their full-line regular expressions","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * for parsing user input.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * Each enum constant pairs a command {@code tag} (the first token in the input)","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * with a compiled {@link Pattern} that is used to validate and extract arguments","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * from the complete command line via {@link Matcher#matches() matches()}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * Some commands share the same tag but have different patterns (e.g.,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * {@code HELP} and {@code DETAILED_HELP} both use {@code \"help\"}), allowing","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * multiple syntaxes under a single verb.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"public enum CommandRegex {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    TODO(\"todo\", Pattern.compile(\"todo (.*)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    DEADLINE(\"deadline\", Pattern.compile(\"deadline (.*) /by (.*)\")),","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    EVENT(\"event\", Pattern.compile(\"event (.*) /from (.*) /to (.*)\")),","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    MARK(\"mark\", Pattern.compile(\"mark ([0-9]+)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    UNMARK(\"unmark\", Pattern.compile(\"unmark ([0-9]+)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    LIST(\"list\", Pattern.compile(\"list\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    DELETE(\"delete\", Pattern.compile(\"delete ([0-9]+)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    FIND(\"find\", Pattern.compile(\"find (.*)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    HELP(\"help\", Pattern.compile(\"help( --details|)\")),","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    BYE(\"bye\", Pattern.compile(\"bye\"));","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    private final String tag;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    private final Pattern pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code CommandRegex} with the given {@code tag} and compiled {@code pattern}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * @param tag     the leading token used to identify the command (e.g., {@code \"todo\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param pattern the compiled regular expression that must match the entire input line","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    CommandRegex(String tag, Pattern pattern) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * Resolves the given input line to a {@link CommandRegex} by tag and full-pattern match.","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * Steps:","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eExtract the first whitespace-delimited token of {@code command} as the tag.\u003c/li\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eIterate over enum constants; for those whose {@code tag} equals the extracted tag,","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     *       return the first whose pattern \u003cem\u003efully\u003c/em\u003e matches the entire input","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     *       (via {@link java.util.regex.Matcher#matches()}).\u003c/li\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eIf the tag is recognized but none of its patterns match the full input,","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     *       throw a {@link BarryException} that suggests the corresponding {@link CommandType}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eIf no enum constant shares the tag (i.e., the tag is unknown), throw a generic","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"     *       invalid-command {@link BarryException}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * @param command the complete user input line to parse","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @return the matching {@code CommandRegex} enum constant","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the tag is unknown, or if the tag is known but the input does not","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     *                        satisfy any expected pattern for that tag","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"    public static CommandRegex parseCommand(String command) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        String commandTag \u003d command.split(\" \")[0];","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        for (CommandRegex t : CommandRegex.values()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"            if (commandTag.equals(t.tag)) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"                if (t.pattern.matcher(command).matches()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"                    return t;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"                } else {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"                    CommandType c \u003d CommandType.parseCommand(commandTag);","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"                    throw BarryException.commandException(new CommandType[]{c});","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"                }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"        throw BarryException.commandException();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"     * Extracts structured components from {@code command} according to this entry\u0027s pattern.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"     * The returned list always includes the command {@code tag} as the first element.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"     * If the input fully matches the pattern, subsequent elements correspond to each","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"     * capturing group in order (from group 1 to {@link Matcher#groupCount()}), with","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"     * leading and trailing whitespace trimmed. If a capturing group matches an empty","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"     * string, the corresponding element will be {@code \"\"}. If the input does not","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"     * match the pattern, only the {@code tag} is returned.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"     * @param command the complete user input line to extract from","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"     * @return an {@link ArrayList} where index 0 is the command tag and subsequent indices","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"     *     are the trimmed contents of each capturing group (if any)","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"    public ArrayList\u003cString\u003e extractComponents(String command) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e components \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"        Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"        components.add(this.tag);","lastModifiedDate":"2025-09-05T11:36:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"            for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"                components.add(matcher.group(i).trim());","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"        return components;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false}],"authorContributionMap":{"tuanduong18":109}},{"path":"src/main/java/barry/data/common/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.data.common;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":" * Represents the set of supported command types and their usage metadata.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * Each enum constant encapsulates:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003etype\u003c/b\u003e – the command keyword (first token, e.g., {@code \"todo\"})\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eformula\u003c/b\u003e – the canonical usage with placeholders","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" *   (e.g., {@code \"deadline {description} /by {datetime}\"})\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eexample\u003c/b\u003e – a concrete example demonstrating valid syntax\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * This enum is used for lightweight validation, help text generation, and mapping a tag","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * to a known command family.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"public enum CommandType {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    TODO(\"todo\",","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"            \"todo {description}\",","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"            \"todo Do the laundry\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    DEADLINE(\"deadline\",","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"            \"deadline {description} /by {datetime}\",","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"            \"deadline CS2103T /by 30/08/2025 16:00\"),","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    EVENT(\"event\",","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"            \"event {description} /from {datetime} /to {datetime}\",","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"            \"event Orbital Splashdown /from 27/08/2025 18:00 /to 27/08/2025 21:00\"),","lastModifiedDate":"2025-08-30T11:40:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    MARK(\"mark\", \"mark {id}\", \"mark 2\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    UNMARK(\"unmark\", \"unmark {id}\", \"unmark 3\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    LIST(\"list\", \"list\", \"list\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    DELETE(\"delete\", \"delete {id}\", \"delete 2\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    FIND(\"find\", \"find {description}\", \"find book\"),","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    BYE(\"bye\", \"bye\", \"bye\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    HELP(\"help\", \"help\", \"help\"),","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    DETAILED_HELP(\"help --details\", \"help --details\", \"help --details\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    private final String type;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    private final String formula;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    private final String example;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code CommandType} with its display {@code type}, usage {@code formula},","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * and illustrative {@code example}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * @param type    the command keyword (e.g., {@code \"todo\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @param formula the canonical usage with placeholders","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @param example an example demonstrating valid syntax","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    CommandType(String type, String formula, String example) {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        this.formula \u003d formula;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        this.example \u003d example;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     * Parses a command tag and returns the corresponding {@code CommandType}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     * This method expects the first whitespace-delimited token (e.g., from user input)","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * and matches it exactly against the {@code type} of each enum constant.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @param s the command tag to parse (e.g., {@code \"todo\"}, {@code \"list\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @return the matching {@code CommandType}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the tag does not correspond to any known command","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"    public static CommandType parseCommand(String s) throws BarryException {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        for (CommandType c : CommandType.values()) {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"            if (c.getType().equals(s)) {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"                return c;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"        throw BarryException.commandException();","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"     * Builds a simple, human-readable listing of all supported command types.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"     * The returned string contains one command per line, each prefixed with a tab.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"     * @return a formatted string enumerating all command tags","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"    public static String allCommands() {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"        for (CommandType c : CommandType.values()) {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\t\");","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"            s.append(c.getType());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"        return s.toString();","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"     * Builds a detailed usage guide for all commands, including their formulas and examples.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"     * The returned string lists each command’s formula on one line (prefixed with a tab),","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"     * followed by an indented example line.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"     * @return a formatted string with each command’s formula and example","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"    public static String allCommandsDetailed() {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"        for (CommandType c : CommandType.values()) {","lastModifiedDate":"2025-08-28T12:17:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\t\");","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"            s.append(c.getFormula());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\t\\te.g.: \");","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"            s.append(c.getExample());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\n\\n\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"        return s.toString();","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"    public String getType() {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"        return type;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"    public String getFormula() {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"        return formula;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"    public String getExample() {","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"        return example;","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false}],"authorContributionMap":{"tuanduong18":128}},{"path":"src/main/java/barry/data/common/TaskRegex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.data.common;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * Defines full-line regular expressions for task-creation commands and utilities","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * to parse and extract their components.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * Supported forms are:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eTODO\u003c/b\u003e: {@code todo {description}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eDEADLINE\u003c/b\u003e: {@code deadline {description} /by {datetime}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eEVENT\u003c/b\u003e: {@code event {description} /from {datetime} /to {datetime}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * Each enum constant stores a compiled {@link Pattern} that must match the entire","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" * input (via {@link Matcher#matches()}), ensuring exact—not partial—matches.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * Capturing groups correspond to the placeholders in order. If a group matches an","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" * empty string, the extracted component will be {@code \"\"} (after {@link String#trim()}).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"public enum TaskRegex {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    TODO(Pattern.compile(\"todo ([^|]*)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    DEADLINE(Pattern.compile(\"deadline ([^|]*) /by ([^|]*)\")),","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    EVENT(Pattern.compile(\"event ([^|]*) /from ([^|]*) /to ([^|]*)\"));","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    private final Pattern pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code TaskRegex} bound to a compiled, full-line pattern.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * @param pattern the compiled regex for this task syntax","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"    TaskRegex(Pattern pattern) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * Determines which task pattern (TODO, DEADLINE, EVENT) matches the given input.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * Iterates over all enum constants and returns the first whose pattern fully matches","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * the {@code command}. If none match, a {@link BarryException} is thrown.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @param command the raw task command line (e.g., {@code \"deadline CS2103T /by 30/08/2025 16:00\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @return the {@code TaskRegex} variant that matches the input","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the input does not conform to any supported task pattern","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public static TaskRegex parseTask(String command) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        for (TaskRegex t : TaskRegex.values()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"            if (t.pattern.matcher(command).matches()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"                return t;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        throw BarryException.commandException();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * Extracts the captured components from the input according to this pattern.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * On a full match, returns a list containing, in order:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code description} (for all types)\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code /by datetime} (for DEADLINE)\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code /from datetime}, {@code /to datetime} (for EVENT)\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"     * Whitespace around each captured group is trimmed. If a group matches nothing,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"     * the corresponding element is the empty string. If the input does not match,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     * an empty list is returned.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"     * @param command the raw task command line to extract from","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     * @return an {@link ArrayList} of trimmed capturing-group values in positional order","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"    public ArrayList\u003cString\u003e extractComponents(String command) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e components \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"        Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"            for (int i \u003d 1; i \u003c\u003d matcher.groupCount(); i++) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"                components.add(matcher.group(i).trim());","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"        return components;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false}],"authorContributionMap":{"tuanduong18":89}},{"path":"src/main/java/barry/data/exceptions/BarryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.data.exceptions;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.CommandType;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":" * Application-specific exception type for Barry.Barry.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * {@code BarryException} centralizes construction of user-facing error messages","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * for invalid commands, missing arguments, malformed timestamps, out-of-range","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * indices, and I/O-related issues. Prefer using the provided static factory","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * methods to ensure consistent wording across the application.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"public class BarryException extends Exception {","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code BarryException} with the given message.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"     * @param message the human-readable error message","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    public BarryException(String message) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"        super(message);","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating that the input command is invalid.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * The message suggests using {@code help} or {@code help --details} to discover","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * the list of supported commands.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing an invalid command","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException commandException() {","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"Invalid command, Type \u0027help\u0027 or \u0027help --details\u0027 for more information\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} for an invalid command that closely matches","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * one or more known command types.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * The message includes suggested formulas for the provided command types to guide","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * the user toward the correct syntax.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * @param cmds candidate command types that may match the user\u0027s intent","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing an invalid command with suggestions","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * @see CommandType","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException commandException(CommandType[] cmds) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder s \u003d new StringBuilder(\"Invalid command. Perhaps, you are mentioning one of these below:\\n\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"        for (CommandType cmd : cmds) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\t\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"            s.append(cmd.getFormula());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        s.append(\"Type \u0027help\u0027 or \u0027help --details\u0027 for more information about the valid commands\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(s.toString());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating a missing task description.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * @param c the command type for which a non-empty description is required","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing a missing task description","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @see CommandType","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException missingTaskDescription(CommandType c) {","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"The description of a \" + c.getType() + \" cannot be empty.\");","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating that a required timestamp-like","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * attribute is missing (e.g., {@code /by}, {@code /from}, {@code /to}).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"     * @param c    the command type requiring the attribute","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     * @param attr the human-readable name of the missing attribute","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing the missing attribute","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"     * @see CommandType","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException missingTimestamp(CommandType c, String attr) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"Missing the \" + attr + \" of the \" + c.getType());","lastModifiedDate":"2025-08-21T19:32:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating that the provided task index","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"     * is out of the valid range.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"     * @param total the total number of tasks currently available","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing the valid index range","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException taskNotFound(int total) {","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"Invalid index, task\u0027s index should be an int between 0 and \" + (total + 1));","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating that a timestamp-like argument","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"     * does not conform to the expected format.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"     * @param c    the command type whose argument is invalid","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"     * @param s    the argument name (e.g., {@code \"/by\"}, {@code \"/from\"}, {@code \"/to\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"     * @param regx the expected format description or regex","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing the invalid time format","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"     * @see CommandType","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException invalidTimestamp(CommandType c, String s, String regx) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"Invalid time format of the \" + c.getType() + \"\u0027s \" + s + \". It should be \" + regx);","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"     * Returns a {@code BarryException} indicating that the provided source file path","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"     * is invalid or not usable.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"     * @return an exception describing an invalid source file path","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"    public static BarryException invalidSourceFilePath() {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"        return new BarryException(\"Invalid source file path\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof BarryException) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"            return o.toString().equals(this.toString());","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T22:59:03","isFullCredit":false}],"authorContributionMap":{"tuanduong18":126}},{"path":"src/main/java/barry/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.gui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"    private void flip() {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        db.flip();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        return db;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":61}},{"path":"src/main/java/barry/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.gui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":12}},{"path":"src/main/java/barry/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.gui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.Barry;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * A GUI for Source.Barry using FXML.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"    private Barry barry \u003d new Barry();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBarry(barry); // inject the Source.Barry instance","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"            stage.show();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":32}},{"path":"src/main/java/barry/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.gui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import barry.Barry;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    private Barry barry;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    /** Injects the Source.Duke instance */","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"    public void setBarry(Barry barry) {","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"        this.barry \u003d barry;","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"        // show initial message from Barry/Gui","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"                DialogBox.getDukeDialog(barry.getGreeting(), dukeImage)","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        );","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        String response \u003d barry.getResponse(input);","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        );","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.millis(1000));","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"            delay.setOnFinished(e -\u003e {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"                Platform.exit();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"            });","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"            delay.play();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":65}},{"path":"src/main/java/barry/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.parser;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.AddCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.Command;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.DeleteCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.ExitCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.FindCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.HelpCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.ListCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.MarkCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.CommandRegex;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * Parses raw user input into executable {@link Command} objects.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" * {@code CommandParser} acts as a thin coordinator:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * it first identifies the command shape via {@link CommandRegex#parseCommand(String)},","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" * then extracts any parameters and constructs the appropriate concrete command","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * (e.g., {@link AddCommand}, {@link MarkCommand}, {@link DeleteCommand}, etc.).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * This class is stateless and thread-unsafe by default.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"public class CommandParser {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * Parses a full command line and returns the corresponding {@link Command}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     * The method:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eResolves the command pattern with {@link CommandRegex#parseCommand(String)}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eExtracts parameters using {@link CommandRegex#extractComponents(String)}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eDispatches to helper methods that instantiate the concrete command.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * Examples:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code \"todo Read book\"} → {@link AddCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code \"mark 2\"} → {@link MarkCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code \"find book\"} → {@link FindCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003e{@code \"help --details\"} → {@link HelpCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * @param fullCommand the raw, full user input line","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * @return a concrete {@link Command} ready for execution","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the input does not match any known command","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     *                        or required arguments are missing/invalid","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public Command parseCommand(String fullCommand) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        CommandRegex c \u003d CommandRegex.parseCommand(fullCommand); // Can throw BarryException","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e params \u003d c.extractComponents(fullCommand);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        return switch (c) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        case TODO, DEADLINE, EVENT -\u003e addTask(fullCommand);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        case MARK, UNMARK -\u003e markTask(params.get(0), params.get(1));","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"        case DELETE -\u003e deleteTask(params.get(1));","lastModifiedDate":"2025-09-05T11:36:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        case LIST -\u003e listTask();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"        case FIND -\u003e findTask(params.get(1));","lastModifiedDate":"2025-09-05T11:36:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        case BYE -\u003e new ExitCommand();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"        case HELP-\u003e help(fullCommand);","lastModifiedDate":"2025-09-05T22:08:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"        default -\u003e throw BarryException.commandException();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"        };","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     * Builds an {@link AddCommand} by delegating to {@link TaskParser} to parse","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"     * the task payload from the raw input.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"     * @param command the full add-type command (e.g., {@code \"todo ...\"}, {@code \"deadline ...\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link AddCommand} wrapping the parsed {@link Task}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the task payload is invalid or missing fields","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"    public Command addTask(String command) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"        Task temp \u003d TaskParser.parseTask(command);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"        return new AddCommand(temp);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"     * Builds a {@link MarkCommand} for {@code mark} or {@code unmark}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"     * The {@code type} should be either {@code \"mark\"} or {@code \"unmark\"} and the position","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"     * is the 1-based task index as a string. Number format errors are not expected here","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"     * because the input should have been validated by {@link CommandRegex}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"     * @param type     the verb indicating mark/unmark","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"     * @param position the task index as a string","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link MarkCommand} with the parsed index and action","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index cannot be parsed (unexpected) or is invalid","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"    public Command markTask(String type, String position) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"            int id \u003d Integer.parseInt(position);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"            return new MarkCommand(id, type.equals(\"mark\"));","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"            // Should not go to this line","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.commandException();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@link ListCommand} that lists all tasks.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link ListCommand}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"    public Command listTask() {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"        return new ListCommand();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"     * Builds a {@link DeleteCommand} for the given position.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"     * Number format errors are not expected here because the input should have been","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"     * validated by {@link CommandRegex}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"     * @param position the task index to delete, as a string","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link DeleteCommand} for the parsed index","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the index cannot be parsed (unexpected) or is invalid","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"    public Command deleteTask(String position) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"            int id \u003d Integer.parseInt(position);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"            return new DeleteCommand(id);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tuanduong18"},"content":"            // Should not go to this line","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.commandException();","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tuanduong18"},"content":"     * Builds a {@link HelpCommand} based on the raw input string.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tuanduong18"},"content":"     * If the command equals {@code \"help --details\"}, the detailed flag is set; otherwise","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tuanduong18"},"content":"     * a concise help is returned.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tuanduong18"},"content":"     * @param command either {@code \"help\"} or {@code \"help --details\"}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link HelpCommand} with the appropriate verbosity flag","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException never thrown in current implementation","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tuanduong18"},"content":"    public Command help(String command) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tuanduong18"},"content":"        return new HelpCommand(command.equals(\"help --details\"));","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tuanduong18"},"content":"     * Builds a {@link FindCommand} that searches for tasks whose descriptions","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tuanduong18"},"content":"     * contain the given pattern (case-insensitive).","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tuanduong18"},"content":"     * @param pattern the substring to search for","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tuanduong18"},"content":"     * @return a new {@link FindCommand} configured with the pattern","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tuanduong18"},"content":"    public Command findTask(String pattern) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tuanduong18"},"content":"        return new FindCommand(pattern);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false}],"authorContributionMap":{"tuanduong18":159}},{"path":"src/main/java/barry/parser/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.parser;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import static barry.data.common.CommandType.DEADLINE;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import static barry.data.common.CommandType.EVENT;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import static barry.data.common.CommandType.TODO;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.CommandType;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.TaskRegex;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Deadline;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Event;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Todo;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * Parses raw task-creation commands into concrete {@link Task} instances.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * {@code TaskParser} delegates the syntactic recognition to {@link TaskRegex},","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * extracts the captured components (e.g., description and timestamps), validates","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" * required fields, and constructs the appropriate {@link Todo}, {@link Deadline},","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":" * or {@link Event}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eSupported forms\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eTODO\u003c/b\u003e — {@code todo {description}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eDEADLINE\u003c/b\u003e — {@code deadline {description} /by {dd/MM/yyyy HH:mm}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eEVENT\u003c/b\u003e — {@code event {description} /from {dd/MM/yyyy HH:mm} /to {dd/MM/yyyy HH:mm}}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eValidation \u0026amp; errors\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eEmpty descriptions or missing timestamps result in a {@link BarryException} with a","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":" *       user-friendly message (e.g., “missing ...”).\u003c/li\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eTimestamps must follow {@link #DATE_FORMAT} exactly; otherwise a {@link BarryException}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":" *       describing the expected format is thrown.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eIf the input does not match any supported task pattern, a generic invalid-command","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":" *       {@link BarryException} is thrown, optionally hinting valid task commands.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eExamples\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":" * Task t1 \u003d TaskParser.parseTask(\"todo Read CS2103T notes\");","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":" * Task t2 \u003d TaskParser.parseTask(\"deadline iP /by 30/08/2025 16:00\");","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":" * Task t3 \u003d TaskParser.parseTask(\"event Splashdown /from 27/08/2025 18:00 /to 27/08/2025 21:00\");","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"public class TaskParser {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     * The expected timestamp pattern for {@code /by}, {@code /from}, and {@code /to} fields.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     * Example: {@code 30/08/2025 16:00}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    static final String DATE_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * Parses a full task command line into a concrete {@link Task}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * Steps:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eDetermine the task type using {@link TaskRegex#parseTask(String)}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eExtract the captured components in order (description, then any timestamps).\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eValidate required components and timestamp formats via {@link DateTimeFormatter}.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     *   \u003cli\u003eInstantiate and return the corresponding {@link Task} subtype.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"     * @param command the raw task command (e.g., {@code \"deadline iP /by 30/08/2025 16:00\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"     * @return a {@link Todo}, {@link Deadline}, or {@link Event} constructed from the input","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the input does not match any supported pattern,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"     *                        required fields are missing, or timestamps are malformed","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"    public static Task parseTask(String command) throws BarryException {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"        TaskRegex t \u003d TaskRegex.parseTask(command); // This line can throw Barry.Barry Exception","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e params \u003d t.extractComponents(command); // Extract parameters","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"        String description \u003d params.get(0);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"        switch (t) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"        case TODO:","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTaskDescription(TODO);","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"            return new Todo(description);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTaskDescription(DEADLINE);","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"            } else if (params.get(1).trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTimestamp(DEADLINE, \"due date\");","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"            LocalDateTime due;","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"            try {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"                due \u003d LocalDateTime.parse(params.get(1).trim(), formatter);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.invalidTimestamp(DEADLINE, \"due date\", DATE_FORMAT);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"            return new Deadline(description, due);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"        case EVENT:","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTaskDescription(EVENT);","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"            } else if (params.get(1).trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTimestamp(EVENT, \"starting time\");","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"            } else if (params.get(2).trim().isEmpty()) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.missingTimestamp(EVENT, \"ending time\");","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"            LocalDateTime start;","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"            LocalDateTime end;","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"            try {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"                start \u003d LocalDateTime.parse(params.get(1), formatter);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.invalidTimestamp(EVENT, \"start time\", DATE_FORMAT);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"            try {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"                end \u003d LocalDateTime.parse(params.get(2), formatter);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.invalidTimestamp(EVENT, \"end time\", DATE_FORMAT);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"            return new Event(description, start, end);","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"        default:","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.commandException(new CommandType[]{TODO, DEADLINE, EVENT});","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-04T10:16:34","isFullCredit":false}],"authorContributionMap":{"tuanduong18":127}},{"path":"src/main/java/barry/storage/Decode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Deadline;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Event;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Todo;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * Decodes a single persisted task record into a concrete {@link Task}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * The input line is expected to be pipe-delimited with spaces on both sides, using one of:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eTodo\u003c/b\u003e: {@code T | \u003c0|1\u003e | \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eDeadline\u003c/b\u003e: {@code D | \u003c0|1\u003e | \u003cdescription\u003e | \u003cdd/MM/yyyy HH:mm\u003e}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eEvent\u003c/b\u003e: {@code E | \u003c0|1\u003e | \u003cdescription\u003e | \u003cdd/MM/yyyy HH:mm\u003e | \u003cdd/MM/yyyy HH:mm\u003e}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * A value of {@code \"1\"} marks the task as done; {@code \"0\"} marks it as not done.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * Timestamps are parsed with the pattern {@code dd/MM/yyyy HH:mm}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eExamples\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":" * T | 1 | Read book","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":" * D | 0 | iP | 30/08/2025 16:00","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":" * E | 1 | Splashdown | 27/08/2025 18:00 | 27/08/2025 21:00","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"public class Decode {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * Decodes a pipe-delimited record into a {@link Task} and applies its completion status.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * The method splits the input into at most five fields (to preserve the trailing time field for events),","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * constructs the appropriate task subtype, and sets the done/undone status based on the second field.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * @param content the persisted record line (e.g., {@code \"D | 1 | iP | 30/08/2025 16:00\"})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * @return a {@link Todo}, {@link Deadline}, or {@link Event} representing the decoded record","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the line is malformed, contains an unknown type, or has an invalid date","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    public static Task decode(String content) throws BarryException {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"        Task t;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        String[] cmd \u003d content.split(\" \\\\| \", 5);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"            String type \u003d cmd[0];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"            String marked \u003d cmd[1];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"            String name \u003d cmd[2];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"            switch (type) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"            case \"T\":","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"                t \u003d new Todo(name);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"                t.setStatus(marked.equals(\"1\"));","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"                break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"            case \"D\":","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"                String by \u003d cmd[3];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"                LocalDateTime due \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"                t \u003d new Deadline(name, due);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"                t.setStatus(marked.equals(\"1\"));","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"                break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"            case \"E\":","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(cmd[3], formatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(cmd[4], formatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"                t \u003d new Event(name, start, end);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"                t.setStatus(marked.equals(\"1\"));","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"                break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"            default:","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"                throw new BarryException(\"Invalid data source\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"            // Should not go to this line","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"            throw BarryException.invalidSourceFilePath();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"        return t;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false}],"authorContributionMap":{"tuanduong18":80}},{"path":"src/main/java/barry/storage/Encode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * Encodes a task\u0027s display string (as produced by {@code Task.toString()})","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * into the canonical, pipe-delimited storage format.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * This is the logical inverse of {@link Decode#decode(String)}:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * it reads the UI-facing representation, extracts type, status, description,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * and any timestamps, and emits a single storage line terminated with","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * {@link System#lineSeparator()}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eExpected input (examples of {@code Task.toString()})\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eTodo: {@code [T][X] Read book}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eDeadline: {@code [D][ ] iP (by: 4:00 PM 30 Aug, 2025)}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eEvent: {@code [E][X] Splashdown (from: 6:00 PM 27 Aug, 2025 to: 9:00 PM 27 Aug, 2025)}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eOutput storage format\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eTodo: {@code T | 1 | Read book}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eDeadline: {@code D | 0 | iP | 30/08/2025 16:00}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eEvent: {@code E | 1 | Splashdown | 27/08/2025 18:00 | 27/08/2025 21:00}\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":" *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":" * \u003ch3\u003eDate/time handling\u003c/h3\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eAppearance (input) format: {@code h:mm a d MMM, yyyy} (e.g., {@code 4:00 PM 30 Aug, 2025})\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003eStored (output) format: {@code dd/MM/yyyy HH:mm} (e.g., {@code 30/08/2025 16:00})\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":" * \u003cb\u003eNote:\u003c/b\u003e This method assumes the input string strictly follows the current","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":" * {@code Task.toString()} format. It does not perform defensive validation and may","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":" * throw runtime exceptions if the structure deviates.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"public class Encode {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * Converts a task\u0027s display string into its persisted line format.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * @param task the UI-facing {@code Task.toString()} output to encode","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * @return a pipe-delimited storage line, ending with {@link System#lineSeparator()}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"    public static String encode(String task) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        char type \u003d task.charAt(1);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"        boolean marked \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"        String command \u003d task.substring(7);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter appearanceFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM, yyyy\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter storedFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"            s.append(type);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"            s.append(marked ? \"1\" : \"0\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"            s.append(command);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"            s.append(System.lineSeparator());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"            break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"            String[] details \u003d command.split(\" \\\\(by: \", 2);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"            s.append(type);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"            s.append(marked ? \"1\" : \"0\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"            s.append(details[0]);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"            String due \u003d details[1].substring(0, details[1].length() - 1);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"            LocalDateTime dueParsed \u003d LocalDateTime.parse(due, appearanceFormatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"            due \u003d dueParsed.format(storedFormatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"            s.append(due);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"            s.append(System.lineSeparator());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"            break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"            String name \u003d command.split(\" \\\\(from: \", 2)[0];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"            String start \u003d command.split(\" \\\\(from: \", 2)[1].split(\" to: \", 2)[0];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"            String end \u003d command.split(\" \\\\(from: \", 2)[1].split(\" to: \", 2)[1];","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"            end \u003d end.substring(0, end.length() - 1);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"            start \u003d LocalDateTime.parse(start, appearanceFormatter).format(storedFormatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"            end \u003d LocalDateTime.parse(end, appearanceFormatter).format(storedFormatter);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"            s.append(type);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"            s.append(marked ? \"1\" : \"0\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"            s.append(name);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"            s.append(start);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"            s.append(\" | \");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"            s.append(end);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"            s.append(System.lineSeparator());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"            break;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"        default:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"            break;","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"        return s.toString();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false}],"authorContributionMap":{"tuanduong18":101}},{"path":"src/main/java/barry/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.storage;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import barry.data.TaskList;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Task;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:24:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" * Handles persistence of the {@link TaskList} to and from disk.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":" * A {@code Storage} instance points to a single file path and can:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003eload\u003c/b\u003e tasks by reading each line and turning it into a {@link Task}","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":" *       via {@link Decode#decode(String)}, and\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":" *   \u003cli\u003e\u003cb\u003esave\u003c/b\u003e tasks by writing each task’s string form through","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":" *       {@link Encode#encode(String)} in a pipe-delimited format.\u003c/li\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":" * If the backing file does not exist on load, this class attempts to create","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":" * the parent directories and an empty file at the configured path.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code Storage} handler for the given file path.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * @param filePath the path of the file used to persist tasks","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * Loads tasks from the configured file into a new {@link TaskList}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * Each line is decoded with {@link Decode#decode(String)}. If the file is missing,","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * this method attempts to create the necessary parent directories and an empty file.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     * @return a {@link TaskList} populated with tasks decoded from the file","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * @throws BarryException if the file cannot be created/read or if a line is malformed","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    public TaskList load() throws BarryException {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        TaskList re \u003d new TaskList();","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        File f \u003d filePath.toFile();","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"                String command \u003d s.nextLine();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"                Task t \u003d Decode.decode(command);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"                re.addTask(t);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"            try {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"                boolean mkdirs \u003d f.getParentFile().mkdirs();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"                boolean create \u003d f.createNewFile();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"                if (!mkdirs || !create) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"                    // Should not go to this line","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"                    throw BarryException.invalidSourceFilePath();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"                }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"            } catch (IOException ee) {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"                // Should not go to this line","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"                throw BarryException.invalidSourceFilePath();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"            }","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"        return re;","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     * Saves the provided {@link TaskList} to the configured file, overwriting any existing content.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"     * Each task is converted to the storage line format using {@link Encode#encode(String)}.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"     * Errors are caught and printed to standard output.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the tasks to be persisted","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"        for (String t : taskList.listTasks()) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"            s.append(Encode.encode(t));","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"        try {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"            File f \u003d filePath.toFile();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"            fw.write(s.toString());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"            fw.close();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false}],"authorContributionMap":{"tuanduong18":101}},{"path":"src/main/java/barry/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.tasks;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * Represents a deadline task with a due date and time.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * A {@code Deadline} is a type of {@link Task} that must be","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * completed before a specific date and time. Its string representation","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * includes the deadline in a human-readable format.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"     * The due date and time of the deadline.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    private final LocalDateTime dueAt;","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code Deadline} with the specified description","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * and due date/time.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2025-08-30T14:04:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * @param dueAt       the due date and time of the task","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    public Deadline(String description, LocalDateTime dueAt) {","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"        this.dueAt \u003d dueAt;","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     * Returns a string representation of the deadline task,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * showing its type, completion status, description,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * and due date/time.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * The format is:","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * [D][ ] Task description (by: 4:00 PM 30 Aug, 2025)","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted string representation of the deadline task","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM, yyyy\");","lastModifiedDate":"2025-08-27T14:49:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"        String formatted \u003d dueAt.format(formatter);","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatted + \")\";","lastModifiedDate":"2025-08-27T14:32:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T16:18:05","isFullCredit":false}],"authorContributionMap":{"tuanduong18":52}},{"path":"src/main/java/barry/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.tasks;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * Represents an event task with a start and end time.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * An {@code Event} is a type of {@link Task} that has a duration,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * defined by a {@link LocalDateTime} start and end. Its string","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * representation includes the start and end times in a readable format.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"     * The starting date and time of the event.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * The ending date and time of the event.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * Creates an {@code Event} with the specified description,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-08-30T14:04:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     * @param start       the start date and time of the event","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     * @param end         the end date and time of the event","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    public Event(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * Returns a string representation of the event, showing its type,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     * completion status, description, and time range.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"     * The format is:","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     * [E][ ] Event description (from: 6:00 PM 27 Aug, 2025 to: 9:00 PM 27 Aug, 2025)","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted string representation of the event","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM, yyyy\");","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        String from \u003d start.format(formatter);","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        String to \u003d end.format(formatter);","lastModifiedDate":"2025-08-27T15:06:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T16:28:44","isFullCredit":false}],"authorContributionMap":{"tuanduong18":59}},{"path":"src/main/java/barry/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.tasks;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":" * A {@code Task} has a description and a boolean status","lastModifiedDate":"2025-08-30T14:04:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * indicating whether it is marked as completed. The status is","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * {@code false} (not completed) by default.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"public class Task {","lastModifiedDate":"2025-08-20T14:45:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"     * The description of the task.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    private final String description;","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     * The completion status of the task.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    private boolean status \u003d false;","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code Task} with the given description.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * By default, the task is uncompleted.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-30T14:04:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * @param status {@code true} to mark the task as completed,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     *               {@code false} to mark it as uncompleted","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"        this.status \u003d status;","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-02T12:22:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"     * @return the string representation of the task\u0027s description","lastModifiedDate":"2025-09-02T12:22:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-02T12:22:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"        return this.description;","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-02T12:22:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     * showing its completion status and description.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"     *     \u003cli\u003e{@code \"[X] taskName\"} if the task is completed\u003c/li\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"     *     \u003cli\u003e{@code \"[ ] taskName\"} if the task is not completed\u003c/li\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"     * @return the string representation of the task","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"        return this.status","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"                ? \"[X] \" + this.description","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"                : \"[ ] \" + this.description;","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        if (o instanceof Task) {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"            return o.toString().equals(this.toString());","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"        return false;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T14:09:14","isFullCredit":false}],"authorContributionMap":{"tuanduong18":75}},{"path":"src/main/java/barry/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.tasks;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":" * Represents a to-do task without any specific date or time attached.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":" * A {@code Todo} is the simplest type of {@link Task}, consisting only of","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":" * a description and a completion status. Its string representation","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * is prefixed with {@code [T]} to indicate that it is a to-do task.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-08-21T09:45:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"     * Creates a {@code Todo} with the specified description.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"     * @param description the description of the to-do task","lastModifiedDate":"2025-08-30T14:04:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"        super(description);","lastModifiedDate":"2025-08-30T12:44:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * Returns a string representation of the to-do task, showing its type,","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     * completion status, and description.","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * The format is:","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     * [T][ ] Task description","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted string representation of the to-do task","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-08-30T11:41:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    @Override","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-20T15:46:47","isFullCredit":false}],"authorContributionMap":{"tuanduong18":38}},{"path":"src/main/java/barry/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.ui;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.CommandType;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * Builds user-facing messages for a graphical interface.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * {@code Gui} mirrors the API of {@link Ui} but \u003cem\u003ereturns\u003c/em\u003e formatted text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * instead of printing to the console. Each method constructs a multi-line response","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * string that callers can render in a GUI component.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"public class Gui {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    private static final String greeting \u003d \"Hello from Barry, what can I do for you?\";","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"     * Joins the given lines into a single response string.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"     * Each element is appended in order with a trailing line break, and existing","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"     * line breaks inside an element are preserved. The final response is trimmed","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"     * of trailing whitespace.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"     * @param strings the lines to include in the response","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"     * @return the concatenated, newline-separated response string","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    public String print(ArrayList\u003cString\u003e strings) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"        for (String s : strings) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"            response.append(s);","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"            response.append(\"\\n\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"        return response.toString().trim();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     * Returns the startup greeting message.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     * @return the greeting text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"    public String printGreetings() {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"        s.add(greeting);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"     * Returns a generic loading error message for data file access issues.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"     * @return the loading error text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    public String showLoadingError() {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Cannot access data file\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"     * Returns a confirmation message after adding a task, including the updated count.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"     * @param task the string representation of the added task","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"     * @param n    the total number of tasks after the addition","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"     * @return the add-confirmation text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"    public String printAddTask(String task, int n) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Now you have \" + n + (n \u003e 1 ? \"tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     * Returns a formatted listing of all tasks, numbered from 1.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the list of task strings to display","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     * @return the formatted task list text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    public String printListTask(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"        for (String item : taskList) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"\\t\" + i + \".\" + item);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"            i++;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"     * Returns a confirmation message after marking or unmarking a task.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"     * @param task   the string representation of the affected task","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"     * @param marked {@code true} if the task is now marked as done; {@code false} if unmarked","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"     * @return the mark/unmark confirmation text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"    public String printMarkTask(String task, boolean marked) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"        String comment \u003d marked","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"                : \"Ok! I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"        s.add(comment);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"     * Returns a confirmation message after deleting a task, including the updated count.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"     * @param task the string representation of the removed task","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"     * @param n    the total number of remaining tasks","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"     * @return the delete-confirmation text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"    public String printDeleteTask(String task, int n) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Now you have \" + n + (n \u003e 1 ? \"tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"     * Returns the farewell message.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tuanduong18"},"content":"     * @return the goodbye text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tuanduong18"},"content":"    public String printGoodbye() {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tuanduong18"},"content":"     * Returns a concise help message listing all supported command tags.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tuanduong18"},"content":"     * Uses {@link CommandType#allCommands()} to generate the content.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tuanduong18"},"content":"     * @return the concise help text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tuanduong18"},"content":"    public String printHelp() {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"The command must start with one of these below:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tuanduong18"},"content":"        s.add(CommandType.allCommands());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tuanduong18"},"content":"     * Returns a detailed help message showing command formulas and examples.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tuanduong18"},"content":"     * Uses {@link CommandType#allCommandsDetailed()} to generate the content.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tuanduong18"},"content":"     * @return the detailed help text","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tuanduong18"},"content":"    public String printDetailedHelp() {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"The command must have the formula as one of these below:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tuanduong18"},"content":"        s.add(CommandType.allCommandsDetailed());","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tuanduong18"},"content":"     * Returns a formatted listing of tasks that match a search query,","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tuanduong18"},"content":"     * or an empty-result message if none match.","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the list of matching task strings","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tuanduong18"},"content":"     * @return the matching-tasks text, or a not-found message when the list is empty","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-07T00:08:49","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tuanduong18"},"content":"    public String printMatchingTasks(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tuanduong18"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"Oops! There isn\u0027t any task match your search\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tuanduong18"},"content":"            return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tuanduong18"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tuanduong18"},"content":"        for (String item : taskList) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"\\t\" + i + \".\" + item);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tuanduong18"},"content":"            i++;","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tuanduong18"},"content":"        return this.print(s);","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false}],"authorContributionMap":{"tuanduong18":187}},{"path":"src/main/java/barry/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package barry.ui;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import barry.data.common.CommandType;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"/**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":" * Console-based user interface for rendering messages and task lists.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":" * {@code Ui} prints framed output to standard out with a consistent style:","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":" * each message block is wrapped between lines of underscores and each line","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":" * is indented with a tab. Multi-line strings are re-indented so that line breaks","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":" * remain aligned.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":" */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"    private static final String name \u003d \"\"\"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"            $$$$$$$\\\\","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"            $$  __$$\\\\","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"            $$ |  $$ | $$$$$$\\\\   $$$$$$\\\\   $$$$$$\\\\  $$\\\\   $$\\\\","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"            $$$$$$$\\\\ | \\\\____$$\\\\ $$  __$$\\\\ $$  __$$\\\\ $$ |  $$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"            $$  __$$\\\\  $$$$$$$ |$$ |  \\\\__|$$ |  \\\\__|$$ |  $$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"            $$ |  $$ |$$  __$$ |$$ |      $$ |      $$ |  $$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"            $$$$$$$  |\\\\$$$$$$$ |$$ |      $$ |      \\\\$$$$$$$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"            \\\\_______/  \\\\_______|\\\\__|      \\\\__|       \\\\____$$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"                                                    $$\\\\   $$ |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"                                                    \\\\$$$$$$  |","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"                                                     \\\\______/\"\"\";","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    private static final String greeting \u003d \"Hello from Barry, what can I do for you?\";","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"     * Prints the given lines inside a framed block with uniform indentation.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"     * For each string in {@code strings}, all newline characters are replaced with","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"     * {@code \"\\n\\t\"} to maintain indentation across lines. A separator line of 50","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"     * underscores is printed before and after the block.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"     * @param strings the lines to print, in order","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"    public void print(ArrayList\u003cString\u003e strings) {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"        System.out.println(\"\\t\" + \"_\".repeat(50));","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        for (String s : strings) {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"            // Replace all \u0027\\n\u0027 with \u0027\\n\\t\u0027","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"            String formatted \u003d s.replace(\"\\n\", \"\\n\\t\");","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"            // Format the first line","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"            formatted \u003d \"\\t\" + formatted;","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"            System.out.println(formatted);","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        System.out.println(\"\\t\" + \"_\".repeat(50));","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"     * Prints the startup banner and greeting message.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"    public void printGreetings() {","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"        s.add(name);","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"        s.add(greeting);","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"     * Prints a generic loading error message for data file access issues.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Cannot access data file\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"     * Prints a confirmation message after adding a task, including the updated count.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"     * @param task the string representation of the added task","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"     * @param n    the total number of tasks after the addition","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"    public void printAddTask(String task, int n) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Now you have \" + n + (n \u003e 1 ? \"tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"     * Prints all tasks in the list, numbered starting from 1.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the list of task strings to display","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"    public void printListTask(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"        for (String item : taskList) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"\\t\" + i + \".\" + item);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"            i++;","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"     * Prints a confirmation message after marking or unmarking a task.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"     * @param task   the string representation of the affected task","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"     * @param marked {@code true} if the task is now marked as done; {@code false} if unmarked","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"    public void printMarkTask(String task, boolean marked) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"        String comment \u003d marked","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"                ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"                : \"Ok! I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"        s.add(comment);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"     * Prints a confirmation message after deleting a task, including the updated count.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"     * @param task the string representation of the removed task","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"     * @param n    the total number of remaining tasks","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tuanduong18"},"content":"    public void printDeleteTask(String task, int n) {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"\\t\" + task);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Now you have \" + n + (n \u003e 1 ? \"tasks \" : \" task \") + \"in the list.\");","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tuanduong18"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tuanduong18"},"content":"    public void printGoodbye() {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tuanduong18"},"content":"     * Prints a concise help message listing all supported command tags.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tuanduong18"},"content":"     * Uses {@link CommandType#allCommands()} to generate the content.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tuanduong18"},"content":"    public void printHelp() {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"The command must start with one of these below:\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tuanduong18"},"content":"        s.add(CommandType.allCommands());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tuanduong18"},"content":"     * Prints a detailed help message showing command formulas and examples.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tuanduong18"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tuanduong18"},"content":"     * Uses {@link CommandType#allCommandsDetailed()} to generate the content.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tuanduong18"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tuanduong18"},"content":"    public void printDetailedHelp() {","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"The command must have the formula as one of these below:\");","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tuanduong18"},"content":"        s.add(CommandType.allCommandsDetailed());","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T00:03:21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tuanduong18"},"content":"    /**","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tuanduong18"},"content":"     * Prints matching tasks for a search query, or an empty-result message if none match.","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tuanduong18"},"content":"     *","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tuanduong18"},"content":"     * @param taskList the list of matching task strings","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tuanduong18"},"content":"     */","lastModifiedDate":"2025-09-05T21:32:21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tuanduong18"},"content":"    public void printMatchingTasks(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tuanduong18"},"content":"        ArrayList\u003cString\u003e s \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tuanduong18"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-09-06T16:31:30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"Oops! There isn\u0027t any task match your search\");","lastModifiedDate":"2025-08-30T14:13:47","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tuanduong18"},"content":"            this.print(s);","lastModifiedDate":"2025-08-30T14:13:47","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tuanduong18"},"content":"            return;","lastModifiedDate":"2025-08-30T14:13:47","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-30T14:13:47","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tuanduong18"},"content":"        s.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tuanduong18"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tuanduong18"},"content":"        for (String item : taskList) {","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tuanduong18"},"content":"            s.add(\"\\t\" + i + \".\" + item);","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tuanduong18"},"content":"            i++;","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tuanduong18"},"content":"        }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tuanduong18"},"content":"        this.print(s);","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-30T12:45:35","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-28T18:27:48","isFullCredit":false}],"authorContributionMap":{"tuanduong18":191}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"barry.gui.MainWindow\" \u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"        \u003cTextField","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"                AnchorPane.leftAnchor\u003d\"10.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"                AnchorPane.rightAnchor\u003d\"76.0\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"                promptText\u003d\"Type your message here...\"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"        /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false}],"authorContributionMap":{"tuanduong18":29}},{"path":"src/test/java/parser/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package parser;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.AddCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.Command;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.DeleteCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.ExitCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.FindCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.HelpCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.ListCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"import barry.commands.MarkCommand;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"import barry.data.exceptions.BarryException;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"import barry.parser.CommandParser;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Deadline;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Event;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Todo;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"public class CommandParserTest {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"    private final CommandParser parser \u003d new CommandParser();","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"    private final DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"    // -------- happy paths --------","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"    void todo_parse_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"        Command expected \u003d new AddCommand(new Todo(\"read book\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(expected, parser.parseCommand(input));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"    void deadline_parse_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"        String input \u003d \"deadline CS2103T /by 29/08/2025 16:00\";","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"        LocalDateTime due \u003d LocalDateTime.parse(\"29/08/2025 16:00\", fmt);","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"        Command expected \u003d new AddCommand(new Deadline(\"CS2103T\", due));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(expected, parser.parseCommand(input));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"    void event_parse_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"        String input \u003d \"event Splashdown /from 27/08/2025 18:00 /to 27/08/2025 21:00\";","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(\"27/08/2025 18:00\", fmt);","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(\"27/08/2025 21:00\", fmt);","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tuanduong18"},"content":"        Command expected \u003d new AddCommand(new Event(\"Splashdown\", start, end));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(expected, parser.parseCommand(input));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tuanduong18"},"content":"    void mark_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new MarkCommand(2, true), parser.parseCommand(\"mark 2\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tuanduong18"},"content":"    void unmark_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new MarkCommand(3, false), parser.parseCommand(\"unmark 3\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tuanduong18"},"content":"    void delete_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new DeleteCommand(5), parser.parseCommand(\"delete 5\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tuanduong18"},"content":"    void list_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new ListCommand(), parser.parseCommand(\"list\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tuanduong18"},"content":"    void help_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new HelpCommand(false), parser.parseCommand(\"help\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tuanduong18"},"content":"    void help_details_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(new HelpCommand(true), parser.parseCommand(\"help --details\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tuanduong18"},"content":"    void find_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tuanduong18"},"content":"        assertInstanceOf(FindCommand.class, parser.parseCommand(\"find book\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tuanduong18"},"content":"    void bye_ok() throws BarryException {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tuanduong18"},"content":"        assertInstanceOf(ExitCommand.class, parser.parseCommand(\"bye\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tuanduong18"},"content":"    // -------- error cases (assert on message to avoid static-factory drift) --------","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tuanduong18"},"content":"    void todo_missing_desc() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tuanduong18"},"content":"        ) -\u003e parser.parseCommand(\"todo    \"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"The description of a todo cannot be empty.\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tuanduong18"},"content":"    void deadline_missing_due() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"deadline Project /by   \"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Missing the due date of the deadline\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tuanduong18"},"content":"    void deadline_bad_format() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"deadline iP /by 29-08-2025 16:00\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Invalid time format of the deadline\u0027s due date. It should be dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tuanduong18"},"content":"                ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tuanduong18"},"content":"    void event_missing_desc() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"event  /from 27/08/2025 18:00 /to 27/08/2025 19:00\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"The description of a event cannot be empty.\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tuanduong18"},"content":"    void event_missing_start() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"event Meeting /from   /to 27/08/2025 19:00\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Missing the starting time of the event\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tuanduong18"},"content":"    void event_missing_end() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"event Meeting /from 27/08/2025 18:00 /to   \"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Missing the ending time of the event\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tuanduong18"},"content":"    void event_bad_format() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"event Meeting /from 27-08-2025 18:00 /to 27/08/2025 19:00\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Invalid time format of the event\u0027s start time. It should be dd/MM/yyyy HH:mm\",","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tuanduong18"},"content":"                ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tuanduong18"},"content":"    void unknown_cmd_throws() {","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tuanduong18"},"content":"        BarryException ex \u003d assertThrows(BarryException.class, (","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tuanduong18"},"content":"                ) -\u003e parser.parseCommand(\"blah\"));","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(\"Invalid command, Type \u0027help\u0027 or \u0027help --details\u0027 for more information\", ex.getMessage());","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false}],"authorContributionMap":{"tuanduong18":156}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"package tasks;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"import barry.tasks.Deadline;","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mm a d MMM, yyyy\");","lastModifiedDate":"2025-09-05T22:09:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"    void create_deadline() {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"        LocalDateTime due \u003d LocalDateTime.now();","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"        Deadline actual \u003d new Deadline(\"CS2103T\", due);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"        String expected \u003d String.format(\"[D][ ] CS2103T (by: %s)\", formatter.format(due));","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(actual.toString(), expected);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"    @Test","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"    void mark_deadline() {","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"        LocalDateTime due \u003d LocalDateTime.now();","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"        Deadline actual \u003d new Deadline(\"CS2103T\", due);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"        actual.setStatus(true);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"        String expected \u003d String.format(\"[D][X] CS2103T (by: %s)\", formatter.format(due));","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"        assertEquals(actual.toString(), expected);","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"    }","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"}","lastModifiedDate":"2025-08-29T15:15:53","isFullCredit":false}],"authorContributionMap":{"tuanduong18":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tuanduong18"},"content":"blah","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tuanduong18"},"content":"help","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tuanduong18"},"content":"help --details","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tuanduong18"},"content":"todo read book","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tuanduong18"},"content":"deadline submit assignment /by 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"event CS lecture /from 22/05/2025 16:00 /to 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tuanduong18"},"content":"mark 1","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tuanduong18"},"content":"unmark 1","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tuanduong18"},"content":"mark 3","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tuanduong18"},"content":"delete 2","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tuanduong18"},"content":"todo","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tuanduong18"},"content":"todo","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tuanduong18"},"content":"deadline project","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tuanduong18"},"content":"event party","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"deadline pay bills /by","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tuanduong18"},"content":"event dinner /from 19:00","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tuanduong18"},"content":"event dinner /from 19:00 /to","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tuanduong18"},"content":"event  /from 10am /to 11am","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tuanduong18"},"content":"mark 99","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"delete -1","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tuanduong18"},"content":"delete 0","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tuanduong18"},"content":"mark 0","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tuanduong18"},"content":"mark one","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tuanduong18"},"content":"todo play football","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tuanduong18"},"content":"event hackathon /from 22/05/2025 16:00 /to 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tuanduong18"},"content":"deadline finish report /by 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tuanduong18"},"content":"help me","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tuanduong18"},"content":"help --details","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tuanduong18"},"content":"list now","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tuanduong18"},"content":"bye now","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tuanduong18"},"content":"tasks.Todo buy milk","lastModifiedDate":"2025-08-28T21:45:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tuanduong18"},"content":"deadline    lots of    spaces   /by    22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tuanduong18"},"content":"event Spaced tasks.Event   /from   22/05/2025 16:00   /to    22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tuanduong18"},"content":"mark 2","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tuanduong18"},"content":"unmark 2","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tuanduong18"},"content":"delete 2","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tuanduong18"},"content":"deadline  /by 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tuanduong18"},"content":"event Meeting /from  /to 22/05/2025 16:00","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tuanduong18"},"content":"event Meeting2 /from 22/05/2025 16:00 /to","lastModifiedDate":"2025-08-29T00:30:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tuanduong18"},"content":"delete 1","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tuanduong18"},"content":"delete 1","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tuanduong18"},"content":"list","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tuanduong18"},"content":"help","lastModifiedDate":"2025-08-21T19:51:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tuanduong18"},"content":"bye","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false}],"authorContributionMap":{"tuanduong18":52}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tuanduong18"},"content":"del ACTUAL.TXT","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tuanduong18"},"content":"java -classpath ..\\bin barry.barry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-06T14:52:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tuanduong18":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tuanduong18"},"content":"java -classpath ../bin Barry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T22:02:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tuanduong18":1,"-":37}}]
