[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"jar {","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"    manifest {","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"        attributes \u0027Main-Class\u0027: \u0027mryapper.MrYapper\u0027","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"    mainClass.set(\"mryapper.MrYapper\")","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"    archiveBaseName \u003d \"mryapper\"","lastModifiedDate":"2025-08-25T17:26:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"Jiru-code":7}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"D | 0 | return book | 2019-12-02T18:00","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"D | 0 | return laptop | June 6th","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"E | 0 | tyedye | 2019-10-15T00:00 | 2019-12-02T18:00","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"E | 0 | dyetye | Monday | Friday","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"T | 0 | activity 1","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false}],"authorContributionMap":{"Jiru-code":5}},{"path":"src/main/java/mryapper/MrYapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package mryapper;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.Deadline;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.Event;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.Storage;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.Task;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.TaskList;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.ToDo;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T20:45:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":" * Kickstarts the chatbot up and running.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"public class MrYapper {","lastModifiedDate":"2025-08-17T20:23:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    /** Filepath of where the tasks are stored relative to project root directory */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"    private Parser parser;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new chatbot instance, with new Ui, Parser and Storage classes initialised. ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"     * Also retrieves the tasks that have been stored previously into the current \u0027tasks\u0027 field.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"    public MrYapper() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"        try {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"        } catch (YapperException e) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T20:59:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"     * Runs the chatbot method","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"    public void run() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"        ui.showGreeting(); ","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"        boolean isExit \u003d false; // variable to determine whether the chatbot continues running in a loop","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"            //reads the incoming command, and then parse and split it up into the main command (the first word)","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"            //and the rest of the command (the rest of the words)","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"            String fullCommand \u003d ui.readCommand(); ","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"            String[] parsedCommand \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"            String command \u003d parsedCommand[0].toLowerCase();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"            String args \u003d parsedCommand[1];","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T20:45:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"            try {","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"                switch (command) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"                case \"bye\":","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"                    storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-17T20:45:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"                case \"list\":","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"                    ui.showTaskList(tasks.getTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"                case \"mark\":","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"                case \"unmark\":","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"                    handleMarkCommand(command, args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"                case \"todo\":","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"                case \"deadline\":","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"                case \"event\":","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"                    handleTaskCommand(command, args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"                case \"delete\":","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"                    handleDeleteCommand(args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"                case \"find\":","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"                    handleFindCommand(args);","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"                    break;","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"                default:","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"                    throw new YapperException(\"Unknown command.\");","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jiru-code"},"content":"                }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jiru-code"},"content":"            } catch (YapperException e) {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jiru-code"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jiru-code"},"content":"    private void handleMarkCommand(String command, String args) throws YapperException {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jiru-code"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Please provide a task number to \" + command + \".\");","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jiru-code"},"content":"        int taskNumber \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jiru-code"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jiru-code"},"content":"            ui.showMarkedTask(tasks.markTaskAsDone(taskNumber));","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jiru-code"},"content":"            ui.showMarkedTask(tasks.markTaskAsUndone(taskNumber));","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jiru-code"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jiru-code"},"content":"    private void handleTaskCommand(String command, String args) throws YapperException {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jiru-code"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jiru-code"},"content":"        Task newTask;","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jiru-code"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jiru-code"},"content":"            newTask \u003d new ToDo(args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jiru-code"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jiru-code"},"content":"            if (!args.contains(\"/by\")) {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jiru-code"},"content":"                throw new YapperException(\"Have you told me when your task is /by??\");","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jiru-code"},"content":"            newTask \u003d new Deadline(args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jiru-code"},"content":"            if (!args.contains(\"/from\") || !args.contains(\"/to\")) {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jiru-code"},"content":"                throw new YapperException(\"Have you told me when your task is /from when /to when??\");","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jiru-code"},"content":"            newTask \u003d new Event(args);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-21T15:19:53","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jiru-code"},"content":"        tasks.add(newTask);","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jiru-code"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jiru-code"},"content":"        ui.showTaskAdded(newTask, tasks.getSize());","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jiru-code"},"content":"    private void handleDeleteCommand(String args) throws YapperException {","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jiru-code"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Please provide a task number to delete.\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-21T15:19:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jiru-code"},"content":"        int taskIndex \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jiru-code"},"content":"        Task removedTask \u003d tasks.delete(taskIndex);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jiru-code"},"content":"        storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jiru-code"},"content":"        ui.showTaskRemoved(removedTask, tasks.getSize());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T20:45:47","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jiru-code"},"content":"     * Handle the right logic when the command \"find\" is entered.","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jiru-code"},"content":"     * @param args String words we want to find in our Task description.","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException the user does not include keywords.","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jiru-code"},"content":"    private void handleFindCommand(String args) throws YapperException {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jiru-code"},"content":"        if(args.isEmpty()) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Stop clowning and include a keyword for me to search for\");","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jiru-code"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasks(args);","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jiru-code"},"content":"        ui.showTasksFound(foundTasks);","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:26:53","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jiru-code"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jiru-code"},"content":"        new MrYapper().run();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T20:23:01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-17T20:23:01","isFullCredit":false}],"authorContributionMap":{"Jiru-code":150}},{"path":"src/main/java/mryapper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package mryapper;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"public class Parser {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"     * Returns a String array, where the first element is the command handle","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"     * and the second element would be the rest of the user input","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"     * @param fullCommand The entire user input entered in","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"     * @return Two-element String array","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    public String[] parseCommand(String fullCommand) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"        String[] parts \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"        return new String[]{command, args};","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false}],"authorContributionMap":{"Jiru-code":18}},{"path":"src/main/java/mryapper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package mryapper;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import taskmanager.Task;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":" * Handles all interactions with user, including reading input and printing outputs.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"public class Ui {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"    /** Placeholder line to segment out the output from the chatbot */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    private static final String LINE \u003d \"_\".repeat(50);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new Ui instance with a Scanner for reading user input.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"    public Ui() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"Hello! I\u0027m Mr Yapper \\n\" +","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"                \"What can I do for you?\" + \"\\n\" + LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"Bye. Hope to see you again soon!\" + \"\\n\" + LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"     * Displays an error message when tasks fail to load from the file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"Error loading tasks: \" + message + \"\\n\" + LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"     * Displays a confirmation message after a task has been successfully added.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"     * @param task       The task that was added.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"     * @param totalTasks The total number of tasks in the list after adding.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"    public void showTaskRemoved(Task task, int totalTasks) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"The task has been removed:\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"     * Displays the current list of tasks.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"     * @param tasks The ArrayList of tasks to be displayed.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"            System.out.println(\"Empty tasks.\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jiru-code"},"content":"     * Displays the tasks which includes certain keyword(s).","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException none of the Tasks contain a matching description.","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jiru-code"},"content":"    public void showTasksFound(ArrayList\u003cTask\u003e foundTasks) throws YapperException {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jiru-code"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jiru-code"},"content":"            System.out.println(\"No matching keyword found among tasks! Try something else.\");","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jiru-code"},"content":"            System.out.println(\"I found the following matches! \");","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jiru-code"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jiru-code"},"content":"                System.out.println((i + 1) + \". \" + foundTasks.get(i).toString());","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jiru-code"},"content":"     * * Displays a confirmation message after a task has been marked or unmarked.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jiru-code"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jiru-code"},"content":"    public void showMarkedTask(String message) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + message + \"\\n\" + LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jiru-code"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jiru-code"},"content":"        System.out.println(LINE + \"\\n\" + \"Error: \" + message + \"\\n\" + LINE);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jiru-code"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jiru-code"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false}],"authorContributionMap":{"Jiru-code":112}},{"path":"src/main/java/mryapper/YapperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package mryapper;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"public class YapperException extends Exception {","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"    public YapperException(String message) {","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"        super(message);","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false}],"authorContributionMap":{"Jiru-code":7}},{"path":"src/main/java/taskmanager/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":" * Represents a deadline task on the task list","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    protected LocalDateTime duration;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"    // Formats in which we recognise dates and time by the User and stored as a LocalDateTime object.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_WITH_TIME \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_WITHOUT_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    // If not recognised in suitable DateTime format, we will simply store the deadline as a string ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    protected String stringDuration;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new Deadline using user\u0027s input. Uses the keyword \"/by\" to","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"     * split up the user\u0027s input. Stores the Deadline details as two parts: its description ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"     * and its duration.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"     * @param input The entire string that the user keyed in, less the command.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"    public Deadline(String input) {","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"        super(input.split(\"/by\")[0].trim());","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"        String dateString \u003d input.split(\"/by\")[1].trim();","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"        try {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"            if (dateString.contains(\" \")) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"                this.duration \u003d LocalDateTime.parse(dateString, INPUT_FORMATTER_WITH_TIME);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"            } else {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"                this.duration \u003d LocalDate.parse(dateString, INPUT_FORMATTER_WITHOUT_TIME).atStartOfDay();","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"            this.stringDuration \u003d dateString;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new Deadline using format of tasks stored in .txt file","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"     * @param description String description of the task ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"     * @param durationString String duration stored in .txt file. Tries to convert into LocalDateTime format else stored as a string","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"    public Deadline(String description, String durationString) {","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"        super(description);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"        try {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"            this.duration \u003d LocalDateTime.parse(durationString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"            this.stringDuration \u003d durationString;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"    @Override ","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.stringDuration + \")\";","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + this.duration.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\")) + \")\";","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"    }   ","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"     * Returns deadline task as a formatted string to be saved in a ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"     * .txt file","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"     * @return String written in format saved in file, with the duration in proper format.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"    @Override","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"            return \"D\" + super.toFileString() + \" | \" + this.stringDuration;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"            return \"D\" + super.toFileString() + \" | \" + this.duration.toString();","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false}],"authorContributionMap":{"Jiru-code":78}},{"path":"src/main/java/taskmanager/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import mryapper.YapperException;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":" * Represents an Event task on the tasklist.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"    // If not recognised in suitable DateTime format, we will simply store the deadline as a string ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"    protected String stringDuration;","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    protected String stringFrom;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"    protected String stringTo;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"    // Formats in which we recognise dates and time by the User and stored as a LocalDateTime object.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_WITH_TIME \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER_WITHOUT_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new Event using user\u0027s input. Uses the keyword \"/from\" and \"/to\" to","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"     * split up the user\u0027s input. Stores the Task details as three parts: its description, ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"     * from when, and to when.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"     * @param input The entire string that the user keyed in, less the command.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"    public Event(String input) throws YapperException {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"        super(input.split(\"/from\")[0].trim());","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"        String[] parts \u003d input.split(\"/from\")[1].split(\"/to\");","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"        this.stringFrom \u003d parts[0].trim();","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"        this.stringTo \u003d parts[1].trim();","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"        try {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"            if (this.stringFrom.contains(\" \")) {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"                this.from \u003d LocalDateTime.parse(this.stringFrom, INPUT_FORMATTER_WITH_TIME);","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"            } else {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"                this.from \u003d LocalDate.parse(this.stringFrom, INPUT_FORMATTER_WITHOUT_TIME).atStartOfDay();","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"            if (this.stringTo.contains(\" \")) {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"                this.to \u003d LocalDateTime.parse(this.stringTo, INPUT_FORMATTER_WITH_TIME);","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"            } else {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"                this.to \u003d LocalDate.parse(this.stringTo, INPUT_FORMATTER_WITHOUT_TIME).atStartOfDay();","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"            this.from \u003d null;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"            this.to \u003d null;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new Event using format of tasks stored in .txt file","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"     * @param description String description of the task. ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"     * @param fromString String from when the event started is stored in .txt file. Tries to convert into LocalDateTime format else stored as a string.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"     * @param toString String to when the event ends is stored in .txt file. Tries to convert into LocalDateTime format else stored as a string.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"    public Event(String description, String fromString, String toString) throws YapperException {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"        super(description);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"        this.stringFrom \u003d fromString;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"        this.stringTo \u003d toString;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"        try {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"            this.from \u003d LocalDateTime.parse(fromString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"            this.to \u003d LocalDateTime.parse(toString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"            this.from \u003d null;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"            this.to \u003d null;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"    @Override ","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.stringFrom + \" to: \" + this.stringTo + \")\";","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jiru-code"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\")) +","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jiru-code"},"content":"                \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\")) + \")\";","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jiru-code"},"content":"     * Returns event task as a formatted string to be saved in a ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jiru-code"},"content":"     * .txt file","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jiru-code"},"content":"     * @return String written in format saved in file, with the from and to in proper format.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jiru-code"},"content":"    @Override","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jiru-code"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jiru-code"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null) {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jiru-code"},"content":"            return \"E\" + super.toFileString() + \" | \" + this.stringFrom + \" | \" + this.stringTo;","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jiru-code"},"content":"            return \"E\" + super.toFileString() + \" | \" + this.from.toString() + \" | \" + this.to.toString();","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-24T22:41:25","isFullCredit":false}],"authorContributionMap":{"Jiru-code":99}},{"path":"src/main/java/taskmanager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import mryapper.YapperException;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import java.io.File;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":" * Control all functionalities of storing the lists of tasks offline on the device.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"public class Storage {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"     * @param filePath The path to the data file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"     * Loads tasks from the data file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"     * If the file does not exist, it creates a new one and returns an empty list.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException If there is an error creating or reading the file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws YapperException {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"        File taskFile \u003d this.filePath.toFile();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"            try {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"                Files.createDirectories(this.filePath.getParent());","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"                throw new YapperException(\"Could not create data file: \" + e.getMessage());","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"            return tasks;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"        try (Scanner fileScanner \u003d new Scanner(taskFile)) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"                tasks.add(parseLine(line));","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Error loading tasks! \" + e.getMessage());","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"        return tasks;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"     * Saves the current list of tasks to the data file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException If there is an error writing to the file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws YapperException {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filePath.toString())) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Error saving tasks to a file! \" + e.getMessage());","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"     * Parses a single line from the data file and creates a Task object.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"     * The line format is expected to be \"Type | isDone | Description | ...\".","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jiru-code"},"content":"     *","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jiru-code"},"content":"     * @param line The string line to be parsed.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jiru-code"},"content":"     * @return A Task object corresponding to the parsed line.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException If the task type is invalid.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jiru-code"},"content":"    private Task parseLine(String line) throws YapperException {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jiru-code"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jiru-code"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jiru-code"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jiru-code"},"content":"        switch (type) {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jiru-code"},"content":"        case \"T\":","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jiru-code"},"content":"            ToDo todo \u003d new ToDo(parts[2]);","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jiru-code"},"content":"            if (isDone) todo.markDone();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jiru-code"},"content":"            return todo;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jiru-code"},"content":"        case \"D\":","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jiru-code"},"content":"            Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jiru-code"},"content":"            if (isDone) deadline.markDone();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jiru-code"},"content":"            return deadline;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jiru-code"},"content":"        case \"E\":","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jiru-code"},"content":"            Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jiru-code"},"content":"            if (isDone) event.markDone();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jiru-code"},"content":"            return event;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jiru-code"},"content":"        default:","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Invalid task type! Task type was recognised as: \" + type);","lastModifiedDate":"2025-08-24T22:17:40","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false}],"authorContributionMap":{"Jiru-code":106}},{"path":"src/main/java/taskmanager/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":" * Represents a task on the task list which could be either a","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":" * todo, deadline or an event task","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"public class Task {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"    protected String description;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"    //Flag to know if a task is marked done or undone","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"    protected boolean isDone; ","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    ","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"        return this.description;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"        return isDone","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"                ? \"X\" ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"                : \" \";","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"     * Checks if a task has already been marked as done before and if not,","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"     * mark it as done. A corresponding message to update the user on the status of the Task will be returned.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"     * @return String that will be displayed to the user regarding the status of task.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"    public String markDone() {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"            return \"Task has already been marked done!\";","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"            String beDone \u003d \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"                            + \"  [\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"            return beDone;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"    /** ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"     * Checks if a task has already been marked as done before, and if so,","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"     * unmark it. A corresponding message to update the user on the status of the task Task will be returned.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"     * @return String that will be displayed to the user regarding the status of the task.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"    public String markUndone() {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"        if(isDone) {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"            String beUndone \u003d \"Ok, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"                             + \"  [\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"            return beUndone;","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"        } else {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"            return \"Task has not been marked done!\";","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"    @Override","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"     * Returns task as a formatted string to be saved in a ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"     * .txt file that stores 1 task per line.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"     * @return String written in format saved in file.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-17T21:45:27","isFullCredit":false}],"authorContributionMap":{"Jiru-code":75}},{"path":"src/main/java/taskmanager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import mryapper.YapperException;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":" * Represents the lists of tasks and functions operation on a the task list","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"public class TaskList {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new TaskList assuming no TaskList can be found from existing data.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"     * Constructs a new TaskList given that tasks can be found from existing data","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"     * @param tasks Tasks found from existing data.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"     * Add a task called by TaskList","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"     * @param task A Task object","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"     * Delete a task on the TaskList called by the command \"delete\"","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"     * @param index The index number of the task on the TaskList. You may check the index number using the command \"list\"","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"     * @return The Task at the specified index number.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException when index is invalid. Valid range: 0 \u003c\u003d index \u003c number of tasks. Error-by-one handled by main code on MrYapper.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"    public Task delete(int index) throws YapperException {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jiru-code"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Task number out of bounds!\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jiru-code"},"content":"        return tasks.remove(index);","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jiru-code"},"content":"     * Mark a task as done and display accordingly.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jiru-code"},"content":"     * @param index The index number of a task when you call the command \"list\".","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jiru-code"},"content":"     * @return String that is returned by the markDone() function when a Task calls it.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException when invalid index number is given.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jiru-code"},"content":"    public String markTaskAsDone(int index) throws YapperException {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jiru-code"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Task number out of bounds!\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jiru-code"},"content":"        return tasks.get(index).markDone();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jiru-code"},"content":"     * Unmark a task on the TaskList as undone, from the command \"unmark\"","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jiru-code"},"content":"     * @param index The index number of the task to be unmarked on the TaskList. ","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jiru-code"},"content":"     * @return a string representation when the method markUndone() is called on the Task specified.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jiru-code"},"content":"     * @throws YapperException when index is invalid. Valid range: 0 \u003c\u003d index \u003c number of tasks.","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jiru-code"},"content":"    public String markTaskAsUndone(int index) throws YapperException {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jiru-code"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jiru-code"},"content":"            throw new YapperException(\"Task number out of bounds!\");","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jiru-code"},"content":"        return tasks.get(index).markUndone();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jiru-code"},"content":"    /**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jiru-code"},"content":"     * Find all the tasks in a tasklist that has the specified keyword.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jiru-code"},"content":"     * ","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jiru-code"},"content":"     * @param keyword The keyword we are searching for in the task description.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jiru-code"},"content":"     * @return a mataching ArrayList of tasks.","lastModifiedDate":"2025-08-26T13:47:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jiru-code"},"content":"     */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jiru-code"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jiru-code"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jiru-code"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jiru-code"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jiru-code"},"content":"                found.add(task);","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jiru-code"},"content":"            }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jiru-code"},"content":"        }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jiru-code"},"content":"        return found;","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-26T13:24:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jiru-code"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jiru-code"},"content":"        return tasks;","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jiru-code"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jiru-code"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T10:35:17","isFullCredit":false}],"authorContributionMap":{"Jiru-code":101}},{"path":"src/main/java/taskmanager/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T11:21:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"/**","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":" * Represents a ToDo task on task list!","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":" */","lastModifiedDate":"2025-08-26T12:17:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"public class ToDo extends Task{","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"        super(description);","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"    @Override ","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    public String toString() {","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    @Override","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-24T20:22:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-17T23:03:21","isFullCredit":false}],"authorContributionMap":{"Jiru-code":20}},{"path":"src/test/java/mryapper/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package mryapper;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"class ParserTest {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"    @Test","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"    void testParseCommand_withArgs_shouldReturnCorrectArray() {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"        String fullCommand \u003d \"deadline read book /by 2023-10-15\";","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"        String[] result \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"deadline\", result[0]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"read book /by 2023-10-15\", result[1]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"    @Test","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"    void testParseCommand_withoutArgs_shouldReturnEmptyStringAsArgs() {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"        String fullCommand \u003d \"list\";","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"        String[] result \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"list\", result[0]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"\", result[1]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"    @Test","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"    void testParseCommand_withOneArg_shouldReturnCorrectArray() {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"        String fullCommand \u003d \"todo buy milk\";","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"        String[] result \u003d parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"todo\", result[0]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"buy milk\", result[1]);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false}],"authorContributionMap":{"Jiru-code":33}},{"path":"src/test/java/taskmanager/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"package taskmanager;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"import mryapper.YapperException;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jiru-code"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jiru-code"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jiru-code"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jiru-code"},"content":"    // This method runs before each test to set up a clean list","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jiru-code"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jiru-code"},"content":"    void setUp() {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jiru-code"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jiru-code"},"content":"        tasks.add(new ToDo(\"task1\"));","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jiru-code"},"content":"        tasks.add(new ToDo(\"task2\"));","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jiru-code"},"content":"        tasks.add(new ToDo(\"task3\"));","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jiru-code"},"content":"        taskList \u003d new TaskList(tasks);","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jiru-code"},"content":"    @Test","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jiru-code"},"content":"    void testDelete_validIndex_shouldRemoveTaskAndReturnCorrectTask() throws YapperException {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jiru-code"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jiru-code"},"content":"        Task removedTask \u003d taskList.delete(1); // Deleting \"task2\"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(initialSize - 1, taskList.getSize());","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"task2\", removedTask.getDescription());","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"task3\", taskList.getTasks().get(1).getDescription());","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jiru-code"},"content":"","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jiru-code"},"content":"    @Test","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jiru-code"},"content":"    void testDelete_invalidIndex_shouldThrowYapperException() {","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jiru-code"},"content":"        // Test an index that is too large","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jiru-code"},"content":"        YapperException exception1 \u003d assertThrows(YapperException.class, () -\u003e taskList.delete(100));","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"Task number out of bounds!\", exception1.getMessage());","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jiru-code"},"content":"        ","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jiru-code"},"content":"        // Test a negative index","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jiru-code"},"content":"        YapperException exception2 \u003d assertThrows(YapperException.class, () -\u003e taskList.delete(-1));","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jiru-code"},"content":"        assertEquals(\"Task number out of bounds!\", exception2.getMessage());","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jiru-code"},"content":"    }","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jiru-code"},"content":"}","lastModifiedDate":"2025-08-25T17:11:55","isFullCredit":false}],"authorContributionMap":{"Jiru-code":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jiru-code"},"content":"todo read book","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jiru-code"},"content":"deadline submit report /by tomorrow","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jiru-code"},"content":"list","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jiru-code"},"content":"mark 1","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jiru-code"},"content":"list","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jiru-code"},"content":"mark 3","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jiru-code"},"content":"list","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jiru-code"},"content":"bye","lastModifiedDate":"2025-08-23T23:02:36","isFullCredit":false}],"authorContributionMap":{"Jiru-code":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jiru-code"},"content":"java -classpath ../bin MrYapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-17T23:52:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":37,"Jiru-code":1}}]
