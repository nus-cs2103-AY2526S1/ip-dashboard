[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"    mainClass.set(\"mortis.Mortis\")","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"    archiveFileName \u003d \u0027mortis.jar\u0027  // The name of the output JAR file","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"YH-100203":2,"-":40}},{"path":"src/main/java/mortis/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T21:11:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:11:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T21:11:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":" * Represents a Deadline task, which has a specific due date.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":" * Extends the Task class and adds a field for the deadline date.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    protected String by;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"     * Creates a Deadline task with a description and due date.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"     * Converts the due date stored in the \u0027by\u0027 field into a formatted string.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"     * If the date is valid and can be parsed, it returns the date in the format \"MMM d yyyy\" (e.g., \"Oct 15 2019\").","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"     * If the date cannot be parsed, it returns the original string stored in the \u0027by\u0027 field.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing the formatted due date if successful, or the original \u0027by\u0027 string if parsing fails.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"            LocalDate d1 \u003d LocalDate.parse(this.by);","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"            return d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"            return this.by;","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T21:11:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"     * Provides a string representation of the deadline, including its status, description and due date.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing the deadline.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDate() + \")\";","lastModifiedDate":"2025-08-27T22:00:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":49}},{"path":"src/main/java/mortis/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":" * Represents an Event task, which has a start and end time.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":" * Extends the Task class and adds additional properties for the event times.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    protected String from;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"    protected String to;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"     * Creates an Event task with a description, start time and end time.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"            LocalDate d1 \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"            this.from \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"            this.from \u003d from;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"            LocalDateTime d2 \u003d LocalDateTime.parse(to);","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"            this.to \u003d d2.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"            this.to \u003d to;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-27T22:14:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"     * Provides a string representation of the event, including its status, description and times.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing the event.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to:\" + to + \")\";","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":46}},{"path":"src/main/java/mortis/Mortis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":" * Main class for running the Duke application.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":" * Responsible for initializing the storage, task list, and UI, and running the application loop.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"public class Mortis {","lastModifiedDate":"2025-08-21T16:26:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"     * Constructs a Mortis instance with the specified file path.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"     * @param filePath The path to the file to load/save tasks.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"    public Mortis(String filePath) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"        TaskList loaded;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"            loaded \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        } catch (MortisException e) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"            loaded \u003d new TaskList();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"        this.tasks \u003d loaded;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"     * Starts the application by running the main loop.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"        while (!exit) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"            String input \u003d ui.readCommand().trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"            try {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"                if (Parser.isBye(input)) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"                    ui.showBye();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"                    exit \u003d true;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"                } else if (Parser.isList(input)) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"                    ui.showList(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"                    int idx \u003d Parser.parseIndexAfter(input, \"mark\", tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"                    Task t \u003d tasks.mark(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"                    ui.showMarked(t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"                    int idx \u003d Parser.parseIndexAfter(input, \"unmark\", tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"                    Task t \u003d tasks.unmark(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"                    ui.showUnmarked(t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"                    int idx \u003d Parser.parseIndexAfter(input, \"delete\", tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"                    Task deleted \u003d tasks.delete(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"                    ui.showDelete(deleted, tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"                    String desc \u003d Parser.parseTodoDesc(input);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"                    Task added \u003d tasks.add(new Todo(desc));","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"                    ui.showAdd(added, tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"                    String[] p \u003d Parser.parseDeadline(input);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"                    Task added \u003d tasks.add(new Deadline(p[0], p[1]));","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"                    ui.showAdd(added, tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"                    String[] p \u003d Parser.parseEvent(input);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"                    Task added \u003d tasks.add(new Event(p[0], p[1], p[2]));","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"                    storage.save(tasks);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"                    ui.showAdd(added, tasks.size());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"                } else {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"                    throw new MortisException(\"I know not what you mean... try again, mortal.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"            } catch (MortisException e) {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YH-100203"},"content":"     * Main method to run the application.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YH-100203"},"content":"     * @param args Command-line arguments (not used in this version).","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YH-100203"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YH-100203"},"content":"        // Keep relative, cross-OS safe path","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YH-100203"},"content":"        new Mortis(\"data/duke.txt\").run();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"YH-100203":92,"-":2}},{"path":"src/main/java/mortis/MortisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"public class MortisException extends Exception {","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"    // Standard exception code","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"    public MortisException(String error) {","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"        super(error);","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false}],"authorContributionMap":{"YH-100203":8}},{"path":"src/main/java/mortis/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":" * Parses user commands into executable commands.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":" * Converts user input into an appropriate Command object.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    public static boolean isBye(String input) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"    public static boolean isList(String input) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"    public static int parseIndexAfter(String input, String cmd, int taskCount) throws MortisException {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"        // e.g., \"mark 2\" \u003d\u003e returns 1; validates bounds","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"You must provide a task number to \" + cmd + \".\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"        int idx;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"            idx \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"That is not a valid number, mortal.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"        if (idx \u003c 0 || idx \u003e\u003d taskCount) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"That task does not exist, mortal.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"        return idx;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"    public static String parseTodoDesc(String input) throws MortisException {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        if (!input.startsWith(\"todo\")) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"I know not what you mean... try again, mortal.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"        String desc \u003d (input.length() \u003e\u003d 5) ? input.substring(5).trim() : \"\";","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"        return desc;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"    public static String[] parseDeadline(String input) throws MortisException {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"        // \"deadline \u003cdesc\u003e /by \u003cby\u003e\"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"        if (!input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"I know not what you mean... try again, mortal.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"        String[] parts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Deadline must include a /by clause.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"        String desc \u003d (parts[0].length() \u003e\u003d 9) ? parts[0].substring(9).trim() : \"\";","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"        return new String[]{desc, by};","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"    public static String[] parseEvent(String input) throws MortisException {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"        // \"event \u003cdesc\u003e /from \u003cfrom\u003e /to \u003cto\u003e\"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"        if (!input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"I know not what you mean... try again, mortal.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"        String[] first \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"        if (first.length \u003c 2) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Event must include a /from time.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"        String desc \u003d (first[0].length() \u003e\u003d 6) ? first[0].substring(6).trim() : \"\";","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"        String[] second \u003d first[1].split(\" /to\", 2);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"        if (second.length \u003c 2) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Event must include a /to time.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"        String from \u003d second[0].trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"        String to \u003d second[1].trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YH-100203"},"content":"        return new String[]{desc, from, to};","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false}],"authorContributionMap":{"YH-100203":85}},{"path":"src/main/java/mortis/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":" * Handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":" * It manages file operations such as creating directories, reading and writing data, and handling errors.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"    private final Path path;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"     * Constructs a Storage object that handles file operations at the specified path.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"     * @param filePath The path to the file where task data will be stored or retrieved.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"     * Loads tasks from the file specified by the path.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"     * If the file does not exist, a new file will be created.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"     * @throws MortisException If an error occurs while loading tasks from the file.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"    public ArrayList\u003cTask\u003e load() throws MortisException {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"            if (path.getParent() !\u003d null) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"                Files.createFile(path);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"                return tasks;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"            try (BufferedReader reader \u003d Files.newBufferedReader(path)) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"                String line;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"                    // Expected formats:","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"                    // T | 1 | desc","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"                    // D | 0 | desc | by","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"                    // E | 1 | desc | from | to","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 3) continue; // skip malformed","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"                    String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"                    boolean done \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"                    String desc \u003d parts[2].trim();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"                    Task t;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"                    switch (type) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"                        case \"T\":","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"                            t \u003d new Todo(desc);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"                            break;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"                        case \"D\":","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"                            if (parts.length \u003c 4) continue;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"                            t \u003d new Deadline(desc, parts[3].trim());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"                            break;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"                        case \"E\":","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"                            if (parts.length \u003c 5) continue;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"                            t \u003d new Event(desc, parts[3].trim(), parts[4].trim());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"                            break;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"                        default:","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"                            continue; // unknown type","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"                    if (done) t.markAsDone();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"                    tasks.add(t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"            throw new MortisException(\"Error loading task data.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"     * Saves the given list of tasks to the file.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YH-100203"},"content":"     * @param list The list of tasks to be saved to the file.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YH-100203"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YH-100203"},"content":"            if (path.getParent() !\u003d null) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YH-100203"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YH-100203"},"content":"            try (BufferedWriter writer \u003d Files.newBufferedWriter(path)) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YH-100203"},"content":"                for (Task task : list.asList()) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YH-100203"},"content":"                    if (task instanceof Todo) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YH-100203"},"content":"                        writer.write(\"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription());","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YH-100203"},"content":"                    } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YH-100203"},"content":"                        writer.write(\"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription()","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YH-100203"},"content":"                                + \" | \" + ((Deadline) task).by);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YH-100203"},"content":"                    } else if (task instanceof Event) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YH-100203"},"content":"                        writer.write(\"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription()","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YH-100203"},"content":"                                + \" | \" + ((Event) task).from + \" | \" + ((Event) task).to);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YH-100203"},"content":"                    } else {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YH-100203"},"content":"                        continue;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YH-100203"},"content":"                    writer.newLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YH-100203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"     An error occurred while saving the task data.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false}],"authorContributionMap":{"YH-100203":117}},{"path":"src/main/java/mortis/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":" * Represents a Task with a description and a status (done or not).","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":" * Provides methods to mark the task as done or undone, get the status, and get the task description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"public class Task {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    protected String description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"     * Constructor to create a new Task with the given description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"     * Initially, the task is not marked as done.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"     * Unmarks the task, setting its status to undone.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"     * Returns the icon representing the task status.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"     * \u0027X\u0027 if the task is done, a space if the task is not done.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing the task status icon.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"     * Gets the description of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"     * @return The description of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"        return description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"     * Provides a string representation of the task, including its status and description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing the task in the format [status] description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false}],"authorContributionMap":{"YH-100203":67}},{"path":"src/main/java/mortis/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    public TaskList(ArrayList\u003cTask\u003e initial) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"        this.tasks \u003d (initial \u003d\u003d null) ? new ArrayList\u003c\u003e() : initial;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"    public int size() { return tasks.size(); }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"    public boolean isEmpty() { return tasks.isEmpty(); }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"    public Task get(int idx) { return tasks.get(idx); }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"    public Task add(Task t) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"        return t;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"    public Task delete(int idx) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"        return tasks.remove(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"    public Task mark(int idx) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"        Task t \u003d tasks.get(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"        t.markAsDone();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"        return t;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"    public Task unmark(int idx) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        Task t \u003d tasks.get(idx);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        t.unmark();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"        return t;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"    public ArrayList\u003cTask\u003e asList() { return tasks; }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false}],"authorContributionMap":{"YH-100203":42}},{"path":"src/main/java/mortis/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":" * Represents a Todo task, which has no specific due date.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":" * A simple task with a description and status (done or not)","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"     * Creates a Todo task with a description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"    // tasks without any date/time attached to it","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"     * Provides a string representation of the Todo task, including its status and description.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"     * @return A string representing a Todo task.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":28}},{"path":"src/main/java/mortis/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:22:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"/**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":" * Handles the interaction with the user via the console.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":" * It displays messages to the user and reads input from the user.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":" */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\" Greetings, mortal. I am Mortis, your eternal assistant.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\" What dark secret may I help you uncover today?\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"     * Displays a line separator.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"     * Displays an error message if loading tasks fails.","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     \" + message);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"    /**","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"     * Reads the command input by the user","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"     *","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"     * @return the full command entered by the user","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"     */","lastModifiedDate":"2025-08-28T21:43:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"     Mortis has not yet received any tasks... *sadness*\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"        } else {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"     Mortis’ records of your tasks:\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"    public void showAdd(Task added, int newCount) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Mortis notes your tasks:\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"       \" + added);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Now you have \" + newCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"    public void showDelete(Task deleted, int newCount) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task from the abyss\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"       \" + deleted);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Now you have \" + newCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"    public void showMarked(Task t) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Ah... the task is now done. The darkness has claimed it:\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"       \" + t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"    public void showUnmarked(Task t) {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     OK... I\u0027ve pulled the task back from the abyss. It is undone now:\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"       \" + t);","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YH-100203"},"content":"    public void showBye() {","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"     Farewell, traveler. Mortis shall await your return...\");","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YH-100203"},"content":"        showLine();","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T01:03:47","isFullCredit":false}],"authorContributionMap":{"YH-100203":97}},{"path":"src/test/java/mortis/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    // Test save() method from Storage","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    public void testSaveTasksToFile() throws IOException, MortisException {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"        // Given","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"        Task task1 \u003d new Todo(\"Complete homework\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"        task1.markAsDone();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"        Task task2 \u003d new Deadline(\"Return book\", \"2023-10-10\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"        task2.unmark();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        Task task3 \u003d new Event(\"Project meeting\", \"2023-10-01 10:00\", \"2023-10-01 12:00\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"        task3.markAsDone();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"        taskList.add(task3);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"        // When: Save the tasks to file","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure that the tasks are saved correctly","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"        // Reload the tasks","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"        assertEquals(3, loadedTasks.size(), \"The number of tasks loaded should match the number saved\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"        // Validate individual tasks","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"        assertTrue(loadedTasks.get(0) instanceof Todo, \"First task should be a Todo\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\"Complete homework\", loadedTasks.get(0).getDescription(), \"The description of the first task should match\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"        assertTrue(loadedTasks.get(1) instanceof Deadline, \"Second task should be a Deadline\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\"Return book\", loadedTasks.get(1).getDescription(), \"The description of the second task should match\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"        assertTrue(loadedTasks.get(2) instanceof Event, \"Third task should be an Event\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\"Project meeting\", loadedTasks.get(2).getDescription(), \"The description of the third task should match\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"        // Clean up: Remove the temporary file after the test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"            file.delete();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"    // Test load() with an empty file","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"    public void testLoadEmptyFile() throws IOException, MortisException {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"        // Given: An empty file (create a new file for the test)","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"        String filePath \u003d \"data/empty.txt\";","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"        // When: Load tasks from the empty file","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure that no tasks are loaded","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"        assertNotNull(tasks, \"Tasks should be loaded from the file\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"        assertTrue(tasks.isEmpty(), \"The loaded tasks should be empty if the file is empty\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"        // Clean up: Remove the empty test file after the test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"            file.delete();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"    // Test save() with an empty list of tasks","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"    public void testSaveEmptyTaskList() throws IOException, MortisException {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"        // Given: An empty task list","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YH-100203"},"content":"        // When: Save the empty task list to file","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"        storage.save(taskList);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure the file is empty","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YH-100203"},"content":"        assertTrue(tasks.isEmpty(), \"The file should be empty when no tasks are saved\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YH-100203"},"content":"        // Clean up: Remove the temporary file after the test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YH-100203"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YH-100203"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YH-100203"},"content":"            file.delete();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false}],"authorContributionMap":{"YH-100203":97}},{"path":"src/test/java/mortis/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"package mortis;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"    // Test markAsDone() method","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"        // Given","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"        Task task \u003d new Task(\"Complete homework\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"        // When","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure task is marked as done","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"        assertTrue(task.isDone, \"Task should be marked as done after calling markAsDone()\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\"X\", task.getStatusIcon(), \"The status icon should be \u0027X\u0027 when task is done\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"    // Test unmark() method","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"    public void testUnmark() {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"        // Given","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"        Task task \u003d new Task(\"Complete homework\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"        task.markAsDone(); // Mark the task as done","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"        // When","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"        task.unmark(); // Unmark it","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure task is marked as not done","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"        assertFalse(task.isDone, \"Task should be marked as not done after calling unmark()\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\" \", task.getStatusIcon(), \"The status icon should be \u0027 \u0027 (space) when task is not done\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"    // Test markAsDone() after unmark() to ensure the state persists correctly","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"    public void testMarkAsDoneAfterUnmark() {","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"        // Given","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"        Task task \u003d new Task(\"Complete homework\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"        task.markAsDone(); // Mark the task as done","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"        task.unmark();     // Unmark the task","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"        // When","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"        task.markAsDone(); // Mark it as done again","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"        // Then: Ensure task is marked as done again","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"        assertTrue(task.isDone, \"Task should be marked as done after calling markAsDone() again\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"        assertEquals(\"X\", task.getStatusIcon(), \"The status icon should be \u0027X\u0027 when task is done again\");","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-28T18:42:49","isFullCredit":false}],"authorContributionMap":{"YH-100203":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"todo read book","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"mark 1","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"mark 2","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"unmark 1","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"bye","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false}],"authorContributionMap":{"YH-100203":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"java -classpath ../bin Mortis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"YH-100203":1,"-":37}}]
