[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"    protected String by;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"    protected String from;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"    protected String to;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to:\" + to + \")\";","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":15}},{"path":"src/main/java/Mortis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"import java.io.*;","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"public class Mortis {","lastModifiedDate":"2025-08-21T16:26:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:27:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\" Greetings, mortal. I am Mortis, your eternal assistant.\");","lastModifiedDate":"2025-08-21T16:46:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\" What dark secret may I help you uncover today?\");","lastModifiedDate":"2025-08-21T16:46:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:27:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"        // Use ArrayList to store tasks (instead of fixed-size array)","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d loadTasksFromFile();","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"        // Echo loop","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"        while (true) {","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"            // Standard code for input","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"            try {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:27:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Farewell, traveler. Mortis shall await your return...\");","lastModifiedDate":"2025-08-21T16:46:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"                    break;","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-08-21T17:06:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T17:06:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"                        System.out.println(\"     Mortis has not yet received any tasks... *sadness*\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"                    } else {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YH-100203"},"content":"                        System.out.println(\"     Mortisâ€™ records of your tasks:\");","lastModifiedDate":"2025-08-21T17:06:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YH-100203"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YH-100203"},"content":"                            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YH-100203"},"content":"                        }","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-21T17:06:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T17:06:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"mark\")) { // Usage of startsWith to get keyword","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YH-100203"},"content":"                    int taskId \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // Get task ID","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"You must provide a task number to mark.\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YH-100203"},"content":"                    if (taskId \u003c 0 || taskId \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"That task does not exist, mortal.\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YH-100203"},"content":"                    tasks.get(taskId).markAsDone();","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Ah... the task is now done. The darkness has claimed it:\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + tasks.get(taskId).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YH-100203"},"content":"                    // Unmark task as not done","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YH-100203"},"content":"                    int taskId \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // Get task ID","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"You must provide a task number to unmark.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YH-100203"},"content":"                    if (taskId \u003c 0 || taskId \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"That task does not exist, mortal.\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YH-100203"},"content":"                    tasks.get(taskId).unmark();","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     OK... I\u0027ve pulled the task back from the abyss. It is undone now:\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + tasks.get(taskId).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YH-100203"},"content":"                    int taskId \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // Get task ID","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"You must provide a task number to delete.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YH-100203"},"content":"                    if (taskId \u003c 0 || taskId \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"That task does not exist, mortal.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YH-100203"},"content":"                    Task deletedTask \u003d tasks.remove(taskId);","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Noted. I\u0027ve removed this task from the abyss\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + deletedTask.toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T18:01:11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YH-100203"},"content":"                    String taskDescription \u003d input.substring(5); // Extract description","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YH-100203"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YH-100203"},"content":"                    tasks.add(new Todo(taskDescription));","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Mortis notes your tasks:\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"Deadline must include a /by clause.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YH-100203"},"content":"                    String taskDescription \u003d parts[0].substring(9); // Extract description","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YH-100203"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YH-100203"},"content":"                    String deadline \u003d parts[1]; // Extract deadline time","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YH-100203"},"content":"                    tasks.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Mortis notes your tasks:\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YH-100203"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d input.split(\" /from \");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"Event must include a /from time.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YH-100203"},"content":"                    String taskDescription \u003d parts[0].substring(6); // Extract description","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YH-100203"},"content":"                    if (taskDescription.isEmpty()) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YH-100203"},"content":"                    String[] timeParts \u003d parts[1].split(\" /to\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YH-100203"},"content":"                    if (timeParts.length \u003c 2) {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YH-100203"},"content":"                        throw new MortisException(\"Event must include a /to time.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YH-100203"},"content":"                    String fromTime \u003d timeParts[0]; // Extract start time","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YH-100203"},"content":"                    String toTime \u003d timeParts[1]; // Extract end time","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YH-100203"},"content":"                    tasks.add(new Event(taskDescription, fromTime, toTime));","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Mortis notes your tasks:\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"       \" + tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"     Now you have \" + tasks.size()+ \" tasks in the list.\");","lastModifiedDate":"2025-08-22T15:56:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YH-100203"},"content":"                    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YH-100203"},"content":"                    saveTasksToFile(tasks);","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YH-100203"},"content":"                } else {","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YH-100203"},"content":"                    throw new MortisException(\"I know not what you mean... try again, mortal.\");","lastModifiedDate":"2025-08-22T15:33:24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YH-100203"},"content":"            } catch (MortisException e) {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"     \" + e.getMessage());","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YH-100203"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"     That is not a valid number, mortal.\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YH-100203"},"content":"                System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-22T15:28:17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T16:42:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YH-100203"},"content":"        sc.close();","lastModifiedDate":"2025-08-21T16:43:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YH-100203"},"content":"    // Method to save tasks to file","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YH-100203"},"content":"    private static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YH-100203"},"content":"            Path path \u003d Paths.get(\"./data/duke.txt\"); // Create a path object pointing to that path","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YH-100203"},"content":"            Files.createDirectories(path.getParent());  // Ensure the directory exists, if not create it","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YH-100203"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(path); // Creates a buffered writer for writing to file","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YH-100203"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YH-100203"},"content":"                // Handling each type of event","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YH-100203"},"content":"                // Can also just use task.toString() but will be different format","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YH-100203"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YH-100203"},"content":"                    writer.write(\"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YH-100203"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YH-100203"},"content":"                    writer.write(\"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + ((Deadline) task).by + \"\\n\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YH-100203"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YH-100203"},"content":"                    writer.write(\"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + ((Event) task).from + \" | \" + ((Event) task).to + \"\\n\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YH-100203"},"content":"            writer.close();","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YH-100203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YH-100203"},"content":"            // If any IOException occurs during the file handling process","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YH-100203"},"content":"            // (e.g., if the file is not writable or if there\u0027s an issue with the file system),","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YH-100203"},"content":"            // the program will catch the exception and print an error message.","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"     An error occurred while saving the task data.\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-27T19:01:35","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YH-100203"},"content":"    // Method to load tasks from file","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YH-100203"},"content":"    private static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YH-100203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YH-100203"},"content":"        try {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YH-100203"},"content":"            Path path \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YH-100203"},"content":"            if (Files.exists(path)) {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YH-100203"},"content":"                BufferedReader reader \u003d Files.newBufferedReader(path); // creates a Buffered reader to read the contents","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YH-100203"},"content":"                String line; // Used to store each line read from the file","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YH-100203"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) { // Reads the file line by line until there are no more lines","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YH-100203"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YH-100203"},"content":"                    if (parts.length \u003c 3) continue;  // Skip malformed lines","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YH-100203"},"content":"                    // processing the tasks and repopulating the tasks array","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YH-100203"},"content":"                    String taskType \u003d parts[0];","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YH-100203"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YH-100203"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YH-100203"},"content":"                    if (taskType.equals(\"T\")) {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YH-100203"},"content":"                        tasks.add(new Todo(description));","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YH-100203"},"content":"                    } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YH-100203"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YH-100203"},"content":"                        tasks.add(new Deadline(description, by));","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YH-100203"},"content":"                    } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YH-100203"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"YH-100203"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"YH-100203"},"content":"                        tasks.add(new Event(description, from, to));","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"YH-100203"},"content":"                    }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"YH-100203"},"content":"                }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"YH-100203"},"content":"                reader.close();","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"YH-100203"},"content":"            }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"YH-100203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"     Error loading task data.\");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"YH-100203"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"YH-100203"},"content":"        }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"YH-100203"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-27T19:31:43","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false}],"authorContributionMap":{"YH-100203":220,"-":3}},{"path":"src/main/java/MortisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"public class MortisException extends Exception {","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"    // Standard exception code","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"    public MortisException(String error) {","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"        super(error);","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-22T15:20:22","isFullCredit":false}],"authorContributionMap":{"YH-100203":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"public class Task {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"    protected String description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YH-100203"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YH-100203"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YH-100203"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YH-100203"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YH-100203"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"        return description;","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YH-100203"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T19:07:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T17:49:09","isFullCredit":false}],"authorContributionMap":{"YH-100203":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"    // tasks without any date/time attached to it","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"        super(description);","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"    @Override","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"    }","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"}","lastModifiedDate":"2025-08-21T18:40:37","isFullCredit":false}],"authorContributionMap":{"YH-100203":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YH-100203"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YH-100203"},"content":"todo read book","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YH-100203"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YH-100203"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YH-100203"},"content":"mark 1","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YH-100203"},"content":"mark 2","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YH-100203"},"content":"unmark 1","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YH-100203"},"content":"list","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YH-100203"},"content":"bye","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false}],"authorContributionMap":{"YH-100203":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YH-100203"},"content":"java -classpath ../bin Mortis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T14:00:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"YH-100203":1,"-":37}}]
