[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"# Sid project template","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"1. After that, locate the `src/main/java/sid.Sid.java` file, right-click it, and choose `Run sid.Sid.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"   Hello! I\u0027m Sid","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"   What can I do for you?","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":6,"-":18}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    mainClass.set(\"sid.Sid\")","lastModifiedDate":"2025-08-28T15:17:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    archiveBaseName \u003d \"sid\"","lastModifiedDate":"2025-08-28T15:17:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":2,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"# Sid User Guide","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":1,"-":29}},{"path":"src/main/java/sid/Sid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.parser.Parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.ui.Ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T01:57:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Application entry point that wires UI, storage, parser, and task list,","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * then runs a simple REPL loop.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public class Sid {","lastModifiedDate":"2025-08-22T01:51:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private final TodoList todoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private final Parser parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T01:57:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private boolean running \u003d true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs the Sid application with the given save file path.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param filePath Relative path (e.g., {@code data/sid.txt}).","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public Sid(String filePath) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d storage.load();   // Storage returns a TodoList bound to itself","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    /** Runs the REPL until the user exits. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"            while (running \u0026\u0026 ui.hasNextLine()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"                String input \u003d ui.readLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"                try {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"                    boolean keepGoing \u003d parser.parseAndExecute(input, todoList, ui);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"                    if (!keepGoing) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"                        running \u003d false;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"                    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"                } catch (SidException e) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"                    String msg \u003d (e.getMessage() \u003d\u003d null || e.getMessage().trim().isEmpty())","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"                            ? \"Something went wrong.\"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"                            : e.getMessage();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"                    ui.showError(msg);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        } finally {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"            ui.close();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        new Sid(\"data/sid.txt\").run();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T01:51:36","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":63}},{"path":"src/main/java/sid/enums/SidMsg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.enums;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Defines predefined system messages used by Sid for formatted console output.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEach enum constant carries a display string that is printed to the console.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * Typical uses include a horizontal rule, a greeting on startup, and a farewell on exit.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"public enum SidMsg {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"    /** 60-character horizontal rule used to frame output. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    HR(\"_\".repeat(60)),","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    /** Greeting shown at startup. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    GREETING(\"Hello! I\u0027m Sid\\nWhat can I do for you?\"),","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    /** Farewell shown on exit. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    GOODBYE(\"ByeByeBye\");","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    /** Display text associated with this message. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private final String text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    SidMsg(String text) {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        this.text \u003d text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        return text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":30}},{"path":"src/main/java/sid/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.enums;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Enumerates supported task types and their one-letter codes used in storage.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eCodes:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code T} – To-do\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code D} – Deadline\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code E} – Event\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    TODO(\"T\"),","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    EVENT(\"E\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    /** One-letter code used in save files. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    private final String code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    TaskType(String code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        this.code \u003d code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * Parses a one-letter code into a {@link TaskType}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eAccepted values are {@code \"T\"}, {@code \"D\"}, and {@code \"E\"}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * @param code One-letter task type code.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     * @return Matching {@link TaskType}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"     * @throws IllegalArgumentException If {@code code} is null or unrecognized.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    public static TaskType fromCode(String code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"            throw new IllegalArgumentException(\"code is null\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        switch (code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        case \"T\": return TODO;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        case \"D\": return DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        case \"E\": return EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        default: throw new IllegalArgumentException(\"Unknown task type code: \" + code);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        return code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":50}},{"path":"src/main/java/sid/exceptions/SidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.exceptions;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Application-specific checked exception for the Sid chatbot.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eUpon construction, the message is immediately printed using","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * This constructor therefore has a side effect (console output).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"public class SidException extends Exception {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a {@code SidException} with the specified detail message.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"     * @param message Detail message describing the error.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    public SidException(String message) {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        super(message);","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":20}},{"path":"src/main/java/sid/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Represents a task with a due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eStores a {@link LocalDateTime} and formats it for display as","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * {@code \"MMM dd yyyy\"} or {@code \"MMM dd yyyy HH:mm\"} when time is present.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class Deadline extends ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_TIME_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     * @param dueDate     Due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Completion flag.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public Deadline(String description, LocalDateTime dueDate, boolean isDone) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"     * @return Due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        return this.dueDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    private static String format(LocalDateTime dt) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        return (dt.getHour() \u003d\u003d 0 \u0026\u0026 dt.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"                ? dt.toLocalDate().format(DATE_FMT)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"                : dt.format(DATE_TIME_FMT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        return super.toString() + \" (by: \" + format(this.dueDate) + \")\";","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":52}},{"path":"src/main/java/sid/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Represents an event task that spans a start and end time.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAn {@code Event} is a specialized {@link ToDo} whose type is {@link TaskType#EVENT}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * and which carries two additional labels: {@code startDate} and {@code endDate}. These","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * are free-form strings used for display and persistence (e.g., {@code \"Aug 6th 2pm\"}).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"public class Event extends ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_TIME_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs an event task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * @param startDate   Start date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * @param endDate     End date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Completion flag.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate, boolean isDone) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        return this.startDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        return this.endDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    private static String format(LocalDateTime dt) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        return (dt.getHour() \u003d\u003d 0 \u0026\u0026 dt.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"                ? dt.toLocalDate().format(DATE_FMT)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"                : dt.format(DATE_TIME_FMT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        return super.toString() + \" (from: \" + format(this.startDate) + \", to: \" + format(this.endDate) + \")\";","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":55}},{"path":"src/main/java/sid/models/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * Represents a basic to-do task with a description and completion state.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eThe default task {@link #type} is {@link TaskType#TODO}. Instances can be marked","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * done/undone and are rendered in a Duke-style format, e.g.,","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * {@code [T][ ] read book} or {@code [T][X] read book}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"public class ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    /** Human-readable description of the task. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    private String description;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    /** Whether the task has been completed. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    /** Categorical task type; defaults to {@link TaskType#TODO}. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    protected TaskType type \u003d TaskType.TODO;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a to-do task with the given description and completion flag.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Text describing what the task is about.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Whether the task is initially marked as completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    public void markTask() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    ","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        return this.description;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        return \"[\" + this.type + \"][\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":59}},{"path":"src/main/java/sid/models/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * Holds an in-memory list of tasks and provides user-facing operations.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAll mutating operations ({@code add}, {@code delete}, {@code markDone}, {@code unmarkDone})","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" * automatically persist the updated list via the injected {@link Storage}","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eUnless stated otherwise, user-facing task indices are 1-based (as shown in {@link #toString()}).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"public class TodoList {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private final ArrayList\u003cToDo\u003e todoList;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a task list initialized with the given tasks and bound storage.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * @param initialList Initial tasks to populate the list with.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * @param storage     Storage used to persist changes after mutations.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList(List\u003cToDo\u003e initialList, Storage storage) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e(initialList);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList(List\u003cToDo\u003e initialList) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e(initialList);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d null;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"     * Marks the specified task as done (1-based index), saves, and prints a confirmation.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo markDone(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        // Convert to 0 based index","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Not a valid task number!\");","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d todoList.get(i);","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask();","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        return t;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"     * Marks the specified task as not done yet (1-based index), saves, and prints a confirmation.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo unmarkDone(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        // Convert to 0 based index","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Not a valid task number!\");","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d this.todoList.get(i);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask();","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        return t;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.size();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    public void add(ToDo task) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        todoList.add(task);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"     * Deletes the task at the given one-based index","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    public void delete(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Not a valid task number!\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        ToDo deletedTask \u003d this.todoList.remove(i);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the task at the given one-based index","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo getTodo(int id) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        // For one-based indexing","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"        id -\u003d 1;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        if  (id \u003c 0 || id \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Not a valid task number!\");","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        } else {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"            return this.todoList.get(id);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList findTodos(String keyword) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"            return new TodoList(results); // empty","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        String query \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"        for (ToDo t : this.todoList) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"            if ((t.getDescription() !\u003d null \u0026\u0026","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"                    t.getDescription().toLowerCase().contains(query))","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"                    || (t.toString() !\u003d null \u0026\u0026","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"                    t.toString().toLowerCase().contains(query))) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"                results.add(t);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(results);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.isEmpty();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"        for (int i \u003d 0; i \u003c this.todoList.size(); i++) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"            output.append((i + 1)).append(\". \").append(this.todoList.get(i));","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"            if (i \u003c this.todoList.size() - 1) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"        return output.toString();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":153}},{"path":"src/main/java/sid/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Deadline;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Event;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.ui.Ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" * Parses user commands and executes them against the task list.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eLevel 8: Dates/times are parsed into {@link LocalDateTime}. Accepted input","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * formats include {@code yyyy-MM-dd[ HHmm]} and {@code d/M/yyyy[ HHmm]}; ISO","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" * {@code yyyy-MM-dd\u0027T\u0027HH:mm} is also supported. Date-only inputs default to","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":" * {@code 00:00}.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * Parses and executes a single command line.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eReturns {@code false} when the session should end (on {@code bye});","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * returns {@code true} otherwise.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"     * @param input Raw user input.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks Task list to operate on.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     * @param ui    UI for user-visible output.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     * @return {@code false} to terminate; {@code true} to continue.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the command/arguments are invalid.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    public boolean parseAndExecute(String input, TodoList tasks, Ui ui) throws SidException {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"No input provided.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        String line \u003d input.trim();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"            return true; // ignore empty lines","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        String[] parts \u003d line.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        String cmd \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        String arg \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        switch (cmd) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"            return false;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"            ui.showList(tasks);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        case \"todo\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: todo \u003cdescription\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"            ToDo todo \u003d new ToDo(arg, false);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"            tasks.add(todo);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskAdded(todo, tasks.getSize());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        case \"deadline\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"            String[] seg \u003d arg.split(\"\\\\s*/by\\\\s+\", 2);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"            if (seg.length \u003c 2 || seg[0].isBlank() || seg[1].isBlank()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"            String desc \u003d seg[0].trim();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime when \u003d parseFlexibleDateTime(seg[1].trim());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"            Deadline d \u003d new Deadline(desc, when, false);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"            tasks.add(d);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskAdded(d, tasks.getSize());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"        case \"event\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: event \u003cdescription\u003e /from \u003cyyyy-MM-dd[ HHmm]\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"            String[] a \u003d arg.split(\"(?i)\\\\s*/from\\\\s+\", 2);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"            if (a.length \u003c 2 || a[0].isBlank()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: event \u003cdescription\u003e /from \u003cyyyy-MM-dd[ HHmm]\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"            String desc \u003d a[0].trim();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"            String[] b \u003d a[1].split(\"(?i)\\\\s*/to\\\\s+\", 2);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            if (b.length \u003c 2 || b[0].isBlank() || b[1].isBlank()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime start \u003d parseFlexibleDateTime(b[0].trim());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime end \u003d parseFlexibleDateTime(b[1].trim());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"            if (end.isBefore(start)) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Event end must be on/after start.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"            Event e \u003d new Event(desc, start, end, false);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"            tasks.add(e);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskAdded(e, tasks.getSize());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        case \"mark\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: mark \u003ctask-number\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"            int id \u003d parseIndex(arg, \"Please provide a valid number after \u0027mark\u0027.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"            ToDo updated \u003d tasks.markDone(id);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskMarked(updated);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: unmark \u003ctask-number\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"            int id \u003d parseIndex(arg, \"Please provide a valid number after \u0027unmark\u0027.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"            ToDo updated \u003d tasks.unmarkDone(id);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskUnmarked(updated);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"        case \"delete\": {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: delete \u003ctask-number\u003e\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"            int id \u003d parseIndex(arg, \"Please provide a valid number after \u0027delete\u0027.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"            // capture the item first so we can show it after deletion","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"            ToDo toRemove \u003d tasks.getTodo(id);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"            tasks.delete(id);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskDeleted(toRemove, tasks.getSize());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"        case \"find\": {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"            TodoList foundTodos \u003d tasks.findTodos(arg);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"            if (foundTodos.isEmpty()) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"                ui.showError(\"No tasks found.\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"            } else {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"                ui.showFind(foundTodos);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"            return true;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"        default:","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"                    \"Unknown command. Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e | bye\"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"            );","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"    // ---- helpers ------------------------------------------------------------","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"    private int parseIndex(String s, String errorMsg) throws SidException {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"            return Integer.parseInt(s.trim());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(errorMsg);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"    /** Tries several patterns; if only a date is present, time defaults to 00:00. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime parseFlexibleDateTime(String text) throws SidException {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"        // date + time","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"        DateTimeFormatter[] dateTimePatterns \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE_TIME // e.g., 2019-12-02T18:00","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"        };","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"        for (DateTimeFormatter f : dateTimePatterns) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"                return LocalDateTime.parse(text, f);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"            } catch (DateTimeParseException ignore) { /* try next */ }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"        // date only -\u003e midnight","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"        DateTimeFormatter[] dateOnlyPatterns \u003d new DateTimeFormatter[] {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DonLeeHH"},"content":"        };","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DonLeeHH"},"content":"        for (DateTimeFormatter f : dateOnlyPatterns) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DonLeeHH"},"content":"                LocalDate d \u003d LocalDate.parse(text, f);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DonLeeHH"},"content":"                return LocalDateTime.of(d, LocalTime.MIDNIGHT);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DonLeeHH"},"content":"            } catch (DateTimeParseException ignore) { /* try next */ }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DonLeeHH"},"content":"        throw new SidException(","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DonLeeHH"},"content":"                \"Could not parse date/time: \" + text +","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DonLeeHH"},"content":"                        \"\\nTry: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":204}},{"path":"src/main/java/sid/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Deadline;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Event;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" * Persists and retrieves tasks in a pipe-separated flat file.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEach record occupies one line; optional whitespace is allowed around","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":" * the {@code |} separators. The second field is a done flag","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":" * ({@code 1} \u003d done, {@code 0} \u003d not done).","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eLevel 8 dates/times are stored in ISO-8601 {@code LocalDateTime} format","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":" * (e.g., {@code 2019-12-02T18:00}) for unambiguous parsing. Examples:","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":" * T | 1 | read book","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":" * D | 0 | return book | 2019-12-02T18:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":" * E | 0 | project meeting | 2019-08-06T14:00 | 2019-08-06T16:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eOn load, a missing file is treated as empty; malformed lines are skipped","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":" * with a warning to {@code System.err}. On save, the parent directory is","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":" * created if it does not exist.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter ISO_DT \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    private final File file;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a storage backed by the specified file path.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     * @param relativePath Path to save file (e.g., {@code data/sid.txt}).","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    public Storage(String relativePath) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        this.file \u003d new File(relativePath);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"     * Loads tasks from disk into a new {@link TodoList}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eIf the file does not exist, an empty list is returned. Corrupted lines are skipped with a warning.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"     * @return A {@link TodoList} containing all successfully parsed tasks; empty if no file exists.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList load() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e initialList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"            // First run, nothing to load yet.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"            return new TodoList(initialList, this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"                String line \u003d s.nextLine().trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"                    continue;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"                try {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"                    ToDo todo \u003d deserializeToDo(line);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"                    initialList.add(todo);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"                } catch (SidException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"                    System.err.println(\"Skipping corrupted line: \" + line + \": \" + e.getMessage());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"            System.err.println(\"Load failed (not found): \" + file.getAbsolutePath());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(initialList, this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"     * Saves the current list into the disk","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"     * @param list The current list","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"    public void save(TodoList list) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        // Ensure ./data exists","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"        File parent \u003d this.file.getParentFile();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            parent.mkdirs(); // safe even if it already exists","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        try (FileWriter fw \u003d new FileWriter(this.file, false)) { // overwrite mode","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"            for (int i \u003d 1; i \u003c\u003d list.getSize(); i++) {","lastModifiedDate":"2025-08-28T16:32:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"                ToDo t \u003d list.getTodo(i);","lastModifiedDate":"2025-08-28T16:32:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"                fw.write(serializeTodo(t));","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        } catch (SidException | IOException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"            System.err.println(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the serialized string representing a todo to be saved onto the disk","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"     * @param t The task to be serialized into a string","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"     * @return a serialized string","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If task is of unknown type","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"     * @see sid.enums.TaskType","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"    private String serializeTodo(ToDo t) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"        TaskType type;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"        String extra \u003d \"\";","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"            extra \u003d deadline.getDueDate().format(ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"            extra \u003d event.getStartDate().format(ISO_DT) + \" | \" + event.getEndDate().format(ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"        } else if (t instanceof ToDo) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.TODO;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        } else {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Unknown task type: \" + t.getClass().getName());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        int done \u003d t.isDone() ? 1 : 0;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"        String base \u003d type.toString() + \" | \" + done + \" | \" + t.getDescription();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"        return extra.isEmpty() ? base : base + \" | \" + extra;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"     * Parses a line into a task instance.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eExpected formats (ISO date-times for D/E):","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"     * T | 0|1 | description","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"     * D | 0|1 | description | 2019-12-02T18:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"     * E | 0|1 | description | 2019-12-02T18:00 | 2019-12-02T20:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"    private ToDo deserializeToDo(String line) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"            throw new IllegalArgumentException(\"Too few fields\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"        String doneFlag \u003d parts[1].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"        if (!doneFlag.equals(\"1\") \u0026\u0026 !doneFlag.equals(\"0\")) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Invalid done flag\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"        boolean isDone \u003d doneFlag.equals(\"1\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"        ToDo task;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"        switch (TaskType.fromCode(type)) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"        case TODO:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new ToDo(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Deadline missing \u0027by\u0027 field\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"        case EVENT:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Event missing start/end fields\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parts[3].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parts[4].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new Event(description, start, end, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DonLeeHH"},"content":"        default:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Unsupported type: \" + type);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DonLeeHH"},"content":"        return task;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":195}},{"path":"src/main/java/sid/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.SidMsg;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Handles user interaction: reading input and printing formatted output.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAll messages are framed by a horizontal rule for consistency.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    /** Constructs a UI bound to standard input. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows the startup greeting. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        frame(SidMsg.GREETING.toString());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows the farewell message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        frame(SidMsg.GOODBYE.toString());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows a normal informational message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        frame(message);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows an error message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        frame(message);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    // ---------- High-level task messages (used by Parser) ----------","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    public void showList(TodoList tasks) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Here are your tasks:\\n\" + tasks.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskAdded(ToDo task, int total) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"                + \"\\nNow you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskDeleted(ToDo task, int total) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Successfully deleted this task:\\n  \" + task","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"                + \"\\nNow you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskMarked(ToDo task) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"YAY! You\u0027ve completed this task:\\n  \" + task);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskUnmarked(ToDo task) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    public void showFind(TodoList foundTasks) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Here are the tasks I found:\\n\" + foundTasks.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    // ---------- Input plumbing ----------","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"    /** Returns true if there is another line available from input. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    /** Reads the next input line (may be empty). */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    public String readLine() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"    /** Closes the underlying scanner. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    public void close() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        scanner.close();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    private void frame(String msg) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(SidMsg.HR);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(SidMsg.HR);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":92}},{"path":"src/test/java/sid/SidTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"public class SidTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":4}},{"path":"src/test/java/sid/models/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Tests for the Deadline task model","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDateTime_rendersWithTime() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 30, 18, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"a deadline\", dt, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(dt, d.getDueDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().startsWith(\"[D][\"), \"Type tag should be [D]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[D][ ] a deadline (by: Aug 30 2025 18:00)\", d.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_midnight_rendersDateOnly() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime midnight \u003d LocalDateTime.of(2025, 12, 30, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"last deadline\", midnight, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(midnight, d.getDueDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[D][ ] last deadline (by: Dec 30 2025)\", d.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    void markAndUnmark_toggleDoneStateInOutput() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime midnight \u003d LocalDateTime.of(2025, 12, 30, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"read book\", midnight, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        // mark","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        d.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[D][X] read book (by: Dec 30 2025)\", d.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        // unmark","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        d.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(d.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[D][ ] read book (by: Dec 30 2025)\", d.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":48}},{"path":"src/test/java/sid/models/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Tests for the Event task model (Level 8 date/time formatting).","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"class EventTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDateTimes_rendersWithTimes() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 8, 30, 18, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end   \u003d LocalDateTime.of(2025, 8, 30, 20, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"an event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(start, e.getStartDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(end, e.getEndDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().startsWith(\"[E][\"), \"Type tag should be [E]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)\", e.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_midnightDates_rendersDateOnlyOnBothSides() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 9, 1, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end   \u003d LocalDateTime.of(2025, 9, 2, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"another event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[E][ ] another event (from: Sep 01 2025, to: Sep 02 2025)\", e.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_mixedDateAndDateTime_formatsEachSideIndependently() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 12, 30, 0, 0);   // date only","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end   \u003d LocalDateTime.of(2025, 12, 30, 15, 45); // with time","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"mixed event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[E][ ] mixed event (from: Dec 30 2025, to: Dec 30 2025 15:45)\", e.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    void markAndUnmark_toggleDoneStateInOutput() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 9, 1, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end   \u003d LocalDateTime.of(2025, 9, 2, 0, 0);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"trip\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        e.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[E][X] trip (from: Sep 01 2025, to: Sep 02 2025)\", e.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        e.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(e.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[E][ ] trip (from: Sep 01 2025, to: Sep 02 2025)\", e.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":62}},{"path":"src/test/java/sid/models/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"class ToDoTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDoneTrue_rendersChecked() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Read book\", true);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][X] Read book\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    void getters_reflectStateAndDescription() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Alpha\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(t.isDone(), \"isDone should reflect initial state\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Alpha\", t.getDescription(), \"description should be returned as-is\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    void mark_isIdempotent() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Task\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask(); // call again","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(t.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][X] Task\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    void unmark_isIdempotent() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Task\", true);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask(); // call again","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(t.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] Task\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    void toString_preservesWhitespaceInDescription() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"  spaced  \", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        // Class does not trim; ensure output preserves spaces","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ]   spaced  \", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    void toString_alwaysUsesTypeT() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"X\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(t.toString().startsWith(\"[T][\"), \"Type tag should be [T]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":53}},{"path":"src/test/java/sid/models/TodoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * Tests for TodoList behavior (mutations, indexing, and findTodos).","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"class TodoListTest {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    void add_marksAndUnmarksAndDelete_triggerSaves_andUpdateState() throws SidException {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e seed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(seed, storage);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        // add","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"alpha\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, storage.saveCalls);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(0).contains(\"[T][ ] alpha\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        // add second, then mark #2","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"beta\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, storage.saveCalls);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        ToDo marked \u003d list.markDone(2); // 1-based index","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(marked.isDone());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, storage.saveCalls);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(2).contains(\"[T][X] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        // unmark #2","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        ToDo unmarked \u003d list.unmarkDone(2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(unmarked.isDone());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(4, storage.saveCalls);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(3).contains(\"[T][ ] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        // delete #1","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        list.delete(1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(5, storage.saveCalls);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(4).contains(\"[T][ ] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    void getTodo_usesOneBasedIndex_andBoundsCheck() throws SidException {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"first\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"second\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        // one-based access","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] first\", list.getTodo(1).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] second\", list.getTodo(2).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        // out of range throws","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(SidException.class, () -\u003e list.getTodo(0));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(SidException.class, () -\u003e list.getTodo(3));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_substringCaseInsensitive_andLiteralSpecialChars() throws Exception {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        // No storage needed; this constructor does not save.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"Read book\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"read email\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"Call (Alice)\", false)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        // substring, case-insensitive: \"read\" matches \"Read book\" and \"read email\"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results1 \u003d list.findTodos(\"read\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, results1.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        // literal special char \"(\" should match \"Call (Alice)\"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results2 \u003d list.findTodos(\"(\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, results2.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] Call (Alice)\",","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"                results2.getTodo(1).toString()); // one-based indexing","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_matchesAgainstToString_forDateBasedTasks() throws Exception {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"        // Include a Deadline so the formatted date appears in toString()","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dt \u003d LocalDateTime.of(2025, 8, 30, 18, 0);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"                new Deadline(\"return book\", dt, false) // toString contains \"Aug 30 2025 18:00\"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results \u003d list.findTodos(\"Aug 30 2025 18:00\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, results.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(results.getTodo(1).toString().contains(\"(by: Aug 30 2025 18:00)\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_returnsEmptyList_onNullOrEmptyKeyword_orNoMatches() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"beta\", false)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r1 \u003d list.findTodos(null);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r2 \u003d list.findTodos(\"   \");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r3 \u003d list.findTodos(\"zzz-not-present\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r3);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r1.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r2.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r3.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"    void toString_listsTasksOnePerLine_withOneBasedNumbers() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"beta\", true)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"        String out \u003d list.toString();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.contains(\"1. [T][ ] alpha\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.contains(\"2. [T][X] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        // exactly one newline between lines, none at end","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.split(\"\\n\").length \u003e\u003d 2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(out.endsWith(\"\\n\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":139}},{"path":"src/test/java/sid/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.stubs;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * Test double for Storage that avoids disk I/O and records save() calls.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    public int saveCalls \u003d 0;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    public final List\u003cString\u003e snapshots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    public StorageStub() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        // Path is unused; superclass requires a constructor arg.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        super(\"build/test-tmp/unused.txt\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList load() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        // Not needed for these tests; return an empty list bound to this stub.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(new ArrayList\u003cToDo\u003e(), this);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    public void save(TodoList list) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        saveCalls++;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        // Capture a lightweight snapshot: size and string forms of tasks (1-based).","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        StringBuilder sb \u003d new StringBuilder(\"size\u003d\").append(list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        for (int i \u003d 1; i \u003c\u003d list.getSize(); i++) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"                sb.append(\"|\").append(list.getTodo(i).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"            } catch (SidException ignored) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"                // Should not happen if TodoList invariants are correct.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        snapshots.add(sb.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":43}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"Hello! I\u0027m Sid","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"What can I do for you?","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"  [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"1. [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"2. [D][ ] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"3. [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"4. [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"5. [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"6. [E][ ] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"  [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"1. [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"2. [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"3. [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"4. [D][X] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"5. [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"6. [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"Unknown command. Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e | bye","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"  [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"  [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"ByeByeBye","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":108}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"todo something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"deadline a deadline /by 2025-08-30 1800","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"deadline another deadline /by 09/01/2025 2000","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"deadline last deadline /by 30/12/2025","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"event an event /from 2025-08-30 1800 /to 2025-08-30 2000","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"event another event /from 2025-09-01 /to 2025-09-02","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"mark 2","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"mark 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"mark 6","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"unmark 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"notvalidinput","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"delete 6","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"delete 5","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"delete 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"delete 3","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"delete 2","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"delete 1","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"bye","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"java -classpath ..\\bin sid.Sid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"# ----- Colors (TTY + tput) -----","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"if [ -t 1 ] \u0026\u0026 command -v tput \u003e/dev/null 2\u003e\u00261 \u0026\u0026 [ \"$(tput colors 2\u003e/dev/null)\" -ge 8 ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"  RED\u003d\"$(tput setaf 1)\"; GREEN\u003d\"$(tput setaf 2)\"; BOLD\u003d\"$(tput bold)\"; RESET\u003d\"$(tput sgr0)\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"else","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"  RED\u003d\"\"; GREEN\u003d\"\"; BOLD\u003d\"\"; RESET\u003d\"\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"fi","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"if [ ! -d \"../bin\" ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"[ -e \"./ACTUAL.TXT\" ] \u0026\u0026 rm ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"# compile the code into the bin folder, terminate if error occurred","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/sid/*.java; then","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%s********** BUILD FAILURE **********%s\\n\" \"$RED\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"# run the program, feed commands from input.txt file and redirect the output to ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"java -classpath ../bin Sid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"# convert to UNIX format (fallback if dos2unix is missing)","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"if command -v dos2unix \u003e/dev/null 2\u003e\u00261; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"  dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT \u003e/dev/null 2\u003e\u00261","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"else","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"  # strip CRs","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"  tr -d \u0027\\r\u0027 \u003c ACTUAL.TXT \u003e ACTUAL.tmp \u0026\u0026 mv ACTUAL.tmp ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"  tr -d \u0027\\r\u0027 \u003c EXPECTED-UNIX.TXT \u003e EXPECTED-UNIX.tmp \u0026\u0026 mv EXPECTED-UNIX.tmp EXPECTED-UNIX.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"fi","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"status\u003d$?","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"if [ $status -eq 0 ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%sTest result: PASSED%s\\n\" \"$GREEN\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%sTest result: FAILED%s\\n\" \"$RED\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"exit $status","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":28,"-":18}}]
