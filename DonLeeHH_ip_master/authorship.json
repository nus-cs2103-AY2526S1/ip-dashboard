[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"# Sid project template","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"1. After that, locate the `src/main/java/sid.Sid.java` file, right-click it, and choose `Run sid.Sid.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"   Hello! I\u0027m Sid","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"   What can I do for you?","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"   ____________________________________________________________","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":6,"-":18}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-02T18:01:34","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"checkstyle {","lastModifiedDate":"2025-09-02T18:01:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-02T18:01:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-02T18:01:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:01:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"   ","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    mainClass.set(\"sid.Launcher\")","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    archiveBaseName \u003d \"sid\"","lastModifiedDate":"2025-08-28T15:17:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":21,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"# Sid User Guide","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"Sid is a personal task management chatbot that helps you track your todos, deadlines, and events. It provides a simple command-line interface to manage your daily tasks efficiently.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"## Quick Start","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"Type commands in the format: `command \u003carguments\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"For help at any time, try typing an invalid command to see available options.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"## Available Commands","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"### Adding Tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"#### `todo` - Add a simple todo task","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"Add a basic task without any time constraints.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `todo \u003cdescription\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `todo read book`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"Alright! I\u0027ve got that down for you:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"[T][ ] read book","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"#### `deadline` - Add a task with deadline","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"Add a task that must be completed by a specific date and time.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"**Date Formats:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"- `yyyy-MM-dd HHmm` (e.g., `2024-12-25 1800`)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"- `yyyy-MM-dd` (defaults to 00:00)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"- `d/M/yyyy HHmm` (e.g., `25/12/2024 1800`)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"- ISO format: `yyyy-MM-ddTHH:mm`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `deadline submit assignment /by 2024-12-15 2359`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"Successfully added","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"Deadline: [D][ ] submit assignment (by: Dec 15 2024, 11:59 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"#### `event` - Add a time-blocked event","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"Add an event that occurs within a specific time period.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `event \u003cdescription\u003e /from \u003cstart-date\u003e /to \u003cend-date\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `event team meeting /from 2024-12-10 1400 /to 2024-12-10 1500`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"Got it! I\u0027ve blocked out this time for you:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"[E][ ] team meeting (from: Dec 10 2024, 2:00 PM to: Dec 10 2024, 3:00 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"### Managing Tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"#### `list` - View all tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"Display all tasks in your list with their status.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `list`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"Here\u0027s what\u0027s keeping you busy:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"2. [D][X] submit assignment (by: Dec 15 2024, 11:59 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"3. [E][ ] team meeting (from: Dec 10 2024, 2:00 PM to: Dec 10 2024, 3:00 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"#### `mark` - Mark task as completed","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"Mark a specific task as done using its number from the list.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `mark \u003ctask-number\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `mark 2`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"Sweet! Marking this one as done:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"[D][X] submit assignment (by: Dec 15 2024, 11:59 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"#### `unmark` - Mark task as not completed","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"Unmark a specific task using its number from the list.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `unmark \u003ctask-number\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `unmark 2`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"Oops, not done yet? I\u0027ve unmarked:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"[D][ ] submit assignment (by: Dec 15 2024, 11:59 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"#### `delete` - Remove a task","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"Permanently remove a task from your list using its number.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `delete \u003ctask-number\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `delete 1`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"Deleted your task:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"[T][ ] read book","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"### Finding Tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"#### `find` - Search for tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"Find tasks that contain specific keywords in their description.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `find \u003ckeyword\u003e`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"**Example:** `find assignment`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"Found some matches! Here\u0027s what I dug up:","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"1. [D][ ] submit assignment (by: Dec 15 2024, 11:59 PM)","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"### Exiting","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"#### `bye` - Exit the application","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"Quit Sid and end your session.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"**Usage:** `bye`","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"Byebye! See you next time!","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"```","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"## Task Status Symbols","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"- `[T]` - Todo task","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"- `[D]` - Deadline task","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"- `[E]` - Event task","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"- `[ ]` - Not completed","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"- `[X]` - Completed","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"## Navigation","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"#### Command History","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"Use the **up arrow** and **down arrow** keys to navigate through your previously entered commands in the current session. This allows you to quickly repeat or modify recent commands without retyping them.","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"## Tips","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"- Task numbers change when you delete tasks, so always check the current list before marking/unmarking/deleting","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"- Date parsing is flexible - use the format that works best for you","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"- All commands are case-insensitive","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"- Empty commands are ignored","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"- Events cannot end before they start","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"- Past dates are not allowed for new tasks","lastModifiedDate":"2025-09-16T14:45:08","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":145,"-":16}},{"path":"src/main/java/sid/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        assert text !\u003d null : \"Dialog text cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        assert img !\u003d null : \"Dialog image cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        makeImageCircular();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"     * Makes the profile picture circular by applying a circular clip.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     * Centers the image properly to fill the circular area.","lastModifiedDate":"2025-09-16T15:10:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    private void makeImageCircular() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        // Set the image to fill the entire ImageView area without preserving ratio","lastModifiedDate":"2025-09-16T15:10:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        displayPicture.setPreserveRatio(false);","lastModifiedDate":"2025-09-16T15:10:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T15:10:22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        Circle clip \u003d new Circle(radius);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        clip.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        clip.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    private void flip() {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    public static DialogBox getSidDialog(String text, Image img) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        db.flip();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        return db;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":80}},{"path":"src/main/java/sid/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"public class Launcher {","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":13}},{"path":"src/main/java/sid/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * A GUI for Sid using FXML.","lastModifiedDate":"2025-09-16T14:20:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private Sid sid \u003d new Sid(\"data/sid.txt\");","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"            stage.setTitle(\"Sid - Your Todo Tracker\");","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"            stage.setMinHeight(400);","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"            stage.setMinWidth(350);","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"            stage.setResizable(true);","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSid(sid); // inject the Sid instance","lastModifiedDate":"2025-09-16T14:20:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"            stage.show();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-02T19:14:15","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":35}},{"path":"src/main/java/sid/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    private Sid sid;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    private Image sidImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaSid.png\"));","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    // Command history functionality","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    private List\u003cString\u003e commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    private int historyIndex \u003d -1;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    /** Initializes the controller and sets up responsive layout bindings. */","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty().subtract(5));","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        setupCommandHistory();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    /** Injects the Sid instance */","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    public void setSid(Sid s) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        assert s !\u003d null : \"Sid instance cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        sid \u003d s;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        showWelcomeMessage();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows the welcome message when the app starts */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Sid\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"            DialogBox.getSidDialog(welcomeMessage, sidImage)","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    /** Sets up command history functionality with up/down arrow navigation. */","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    private void setupCommandHistory() {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        userInput.setOnKeyPressed(this::handleKeyPress);","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    /** Handles key press events for command history navigation. */","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    private void handleKeyPress(KeyEvent event) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"            navigateHistoryUp();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"            event.consume();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        } else if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"            navigateHistoryDown();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"            event.consume();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    /** Navigates up in command history (older commands). */","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    private void navigateHistoryUp() {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        if (commandHistory.isEmpty()) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"            return;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        if (historyIndex \u003d\u003d -1) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"            historyIndex \u003d commandHistory.size() - 1;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        } else if (historyIndex \u003e 0) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"            historyIndex--;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        userInput.setText(commandHistory.get(historyIndex));","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        userInput.positionCaret(userInput.getText().length());","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    /** Navigates down in command history (newer commands). */","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"    private void navigateHistoryDown() {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        if (commandHistory.isEmpty() || historyIndex \u003d\u003d -1) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"            return;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        if (historyIndex \u003c commandHistory.size() - 1) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"            historyIndex++;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"            userInput.setText(commandHistory.get(historyIndex));","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        } else {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"            historyIndex \u003d -1;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"            userInput.clear();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"        userInput.positionCaret(userInput.getText().length());","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Sid\u0027s reply and then appends them to","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"    @FXML","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        assert input !\u003d null : \"User input text cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"        // Only process non-empty input","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"            return;","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        // Add to command history (avoid duplicate consecutive commands)","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"        if (commandHistory.isEmpty() || !commandHistory.get(commandHistory.size() - 1).equals(input)) {","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"            commandHistory.add(input);","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        historyIndex \u003d -1; // Reset history navigation","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:32:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        String response \u003d sid.getResponse(input);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"        assert response !\u003d null : \"Sid response cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"                DialogBox.getSidDialog(response, sidImage)","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        if (response.contains(\"bye!\")) {","lastModifiedDate":"2025-09-16T02:08:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"            // Create a thread to handle the delayed exit","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"            new Thread(() -\u003e {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"                try {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"                    Thread.sleep(500); // 0.5 second delay","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"                    System.exit(0);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"                    System.exit(0);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"            }).start();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":147}},{"path":"src/main/java/sid/Sid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.parser.Parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.ui.Ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T01:57:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Application entry point that wires UI, storage, parser, and task list,","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * then runs a simple REPL loop.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public class Sid {","lastModifiedDate":"2025-08-22T01:51:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private final TodoList todoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private final Parser parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T01:57:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2025-09-15T23:36:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs the Sid application with the given save file path.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param filePath Relative path (e.g., {@code data/sid.txt}).","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public Sid(String filePath) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d storage.load(); // Storage returns a TodoList bound to itself","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assert this.todoList !\u003d null : \"Loaded TodoList cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    /** Runs the REPL until the user exits. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"            while (isRunning \u0026\u0026 ui.hasNextLine()) {","lastModifiedDate":"2025-09-15T23:36:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"                String input \u003d ui.readLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"                try {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"                    boolean keepGoing \u003d parser.parseAndExecute(input, todoList, ui);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"                    if (!keepGoing) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"                        isRunning \u003d false;","lastModifiedDate":"2025-09-15T23:36:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"                    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"                } catch (SidException e) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"                    String msg \u003d (e.getMessage() \u003d\u003d null || e.getMessage().trim().isEmpty())","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"                            ? \"Something went wrong.\"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"                            : e.getMessage();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"                    ui.showError(msg);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        } finally {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"            ui.close();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        new Sid(\"data/sid.txt\").run();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        String response \u003d parser.parseAndExecute(input, todoList);","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        assert response !\u003d null : \"Parser response cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        return response;","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T01:51:36","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":75}},{"path":"src/main/java/sid/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" * Command to exit the application.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(false, ResponseMessage.BYE_MESSAGE.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":15}},{"path":"src/main/java/sid/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * Interface for all commands that can be executed by the application.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEach command is responsible for validating its arguments and executing","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * the appropriate business logic on the given TodoList.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"public interface Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"     * Executes the command with the given arguments.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"     * @param arg The argument string for the command (may be empty).","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks The TodoList to operate on.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"     * @return The result of command execution.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the command arguments are invalid or execution fails.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    CommandResult execute(String arg, TodoList tasks) throws SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":22}},{"path":"src/main/java/sid/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * Result of executing a command.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEncapsulates the outcome of a command execution including whether the program","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * should continue running, a message for display, and any relevant task data.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"public class CommandResult {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    private final boolean shouldContinue;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    private final String message;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private final ToDo task;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private final int totalTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private final TodoList foundTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"     * Constructor for simple messages.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"     * @param shouldContinue Whether the program should continue running.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult(boolean shouldContinue, String message) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        this(shouldContinue, message, null, 0, null);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * Constructor for task operations.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"     * @param shouldContinue Whether the program should continue running.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     * @param task The task that was operated on.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     * @param totalTasks The total number of tasks after the operation.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult(boolean shouldContinue, String message, ToDo task, int totalTasks) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        this(shouldContinue, message, task, totalTasks, null);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"     * Constructor for find operations.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"     * @param shouldContinue Whether the program should continue running.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"     * @param foundTasks The list of tasks found by the search.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult(boolean shouldContinue, String message, TodoList foundTasks) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        this(shouldContinue, message, null, 0, foundTasks);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"     * Full constructor.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"     * @param shouldContinue Whether the program should continue running.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"     * @param task The task that was operated on (may be null).","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"     * @param totalTasks The total number of tasks after the operation.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"     * @param foundTasks The list of tasks found by search (may be null).","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult(boolean shouldContinue, String message, ToDo task, int totalTasks, TodoList foundTasks) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        this.shouldContinue \u003d shouldContinue;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        this.totalTasks \u003d totalTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        this.foundTasks \u003d foundTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"     * Returns whether the program should continue running.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"     * @return true if the program should continue, false to terminate.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    public boolean shouldContinue() {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        return shouldContinue;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the message to display.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"     * @return The display message.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    public String getMessage() {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        return message;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the task that was operated on.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task, or null if not applicable.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo getTask() {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"        return task;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"     * @return The total task count.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        return totalTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the list of tasks found by search.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"     * @return The found tasks, or null if not applicable.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList getFoundTasks() {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        return foundTasks;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":113}},{"path":"src/main/java/sid/commands/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * Utility class for parsing date and time strings into LocalDateTime objects.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"     * Tries several patterns; if only a date is present, time defaults to 00:00.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"     * @param text The date/time string to parse.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"     * @return Parsed LocalDateTime.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the text cannot be parsed.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    public static LocalDateTime parseFlexibleDateTime(String text) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        // Try date + time patterns first","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dateTime \u003d tryParseDateTime(text,","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ISO_LOCAL_DATE_TIME // e.g., 2019-12-02T18:00","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"            return dateTime;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        // Try date only patterns -\u003e midnight","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dateOnly \u003d tryParseDateOnly(text,","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        if (dateOnly !\u003d null) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"            return dateOnly;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        throw new SidException(","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"                \"Could not parse date/time: \" + text","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"                        + \"\\nTry: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        );","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"     * Tries to parse text as LocalDateTime using the given formatters.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"     * @param text the text to parse","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"     * @param formatters formatters to try in order","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"     * @return parsed LocalDateTime or null if none work","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    private static LocalDateTime tryParseDateTime(String text, DateTimeFormatter... formatters) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"                return LocalDateTime.parse(text, formatter);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"            } catch (DateTimeParseException ignore) { /* try next */ }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        return null;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"     * Tries to parse text as LocalDate and converts to midnight LocalDateTime.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"     * @param text the text to parse","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"     * @param formatters formatters to try in order","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"     * @return parsed LocalDateTime at midnight or null if none work","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"    private static LocalDateTime tryParseDateOnly(String text, DateTimeFormatter... formatters) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"                LocalDate date \u003d LocalDate.parse(text, formatter);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"                return LocalDateTime.of(date, LocalTime.MIDNIGHT);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"            } catch (DateTimeParseException ignore) { /* try next */ }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        return null;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":81}},{"path":"src/main/java/sid/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Deadline;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Command to create a new deadline task.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    /** Required number of parts after splitting by \"/by\": description and deadline. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private static final int REQUIRED_DEADLINE_PARTS \u003d 2;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.DEADLINE_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        String[] seg \u003d arg.split(\"\\\\s*/by\\\\s+\", REQUIRED_DEADLINE_PARTS);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        if (seg.length \u003c REQUIRED_DEADLINE_PARTS || seg[0].isBlank() || seg[1].isBlank()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.DEADLINE_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        String desc \u003d seg[0].trim();","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime when \u003d DateTimeParser.parseFlexibleDateTime(seg[1].trim());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(desc, when, false);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(d);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.DEADLINE_SUCCESS.getMessageWith(d), d, tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":31}},{"path":"src/main/java/sid/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Command to delete a task.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.DELETE_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        int id \u003d IndexParser.parseIndex(arg, ResponseMessage.DELETE_INVALID_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        ToDo toRemove \u003d tasks.getTodo(id);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        tasks.delete(id);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.DELETE_SUCCESS.getMessageWith(toRemove), toRemove,","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"                tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":23}},{"path":"src/main/java/sid/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Event;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Command to create a new event task.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    /** Required number of parts after splitting by \"/from\" or \"/to\": description and time. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private static final int REQUIRED_EVENT_PARTS \u003d 2;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.EVENT_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        String[] a \u003d arg.split(\"(?i)\\\\s*/from\\\\s+\", REQUIRED_EVENT_PARTS);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        if (a.length \u003c REQUIRED_EVENT_PARTS || a[0].isBlank()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.EVENT_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        String desc \u003d a[0].trim();","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        String[] b \u003d a[1].split(\"(?i)\\\\s*/to\\\\s+\", REQUIRED_EVENT_PARTS);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        if (b.length \u003c REQUIRED_EVENT_PARTS || b[0].isBlank() || b[1].isBlank()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.EVENT_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d DateTimeParser.parseFlexibleDateTime(b[0].trim());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end \u003d DateTimeParser.parseFlexibleDateTime(b[1].trim());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(desc, start, end, false);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(e);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.EVENT_SUCCESS.getMessageWith(e), e, tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":36}},{"path":"src/main/java/sid/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" * Command to find tasks matching a keyword.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.FIND_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        TodoList foundTodos \u003d tasks.findTodos(arg);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        if (foundTodos.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"            return new CommandResult(true, ResponseMessage.FIND_NO_RESULTS.getMessage(), foundTodos);","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        } else {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"            return new CommandResult(true, ResponseMessage.FIND_SUCCESS.getMessageWith(foundTodos), foundTodos);","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":23}},{"path":"src/main/java/sid/commands/IndexParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * Utility class for parsing task indices from strings.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"public class IndexParser {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"     * Parses a string to an integer index.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"     * @param s The string to parse.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"     * @param errorMsg The error message to use if parsing fails.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"     * @return The parsed integer.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the string cannot be parsed or is not positive.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    public static int parseIndex(String s, String errorMsg) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        assert s !\u003d null : \"String to parse cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        assert errorMsg !\u003d null : \"Error message cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"            int result \u003d Integer.parseInt(s.trim());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"            assert result \u003e 0 : \"Parsed task ID must be positive (1-based indexing)\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"            return result;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(errorMsg);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":29}},{"path":"src/main/java/sid/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" * Command to list all tasks.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"            return new CommandResult(true, ResponseMessage.LIST_EMPTY.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.LIST_WITH_TASKS.getMessageWith(tasks));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":18}},{"path":"src/main/java/sid/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.MARK_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        int id \u003d IndexParser.parseIndex(arg, ResponseMessage.MARK_INVALID_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        ToDo updated \u003d tasks.markDone(id);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.MARK_SUCCESS.getMessageWith(updated), updated, tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":21}},{"path":"src/main/java/sid/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Command to create a new todo task.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.TODO_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        ToDo todo \u003d new ToDo(arg, false);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.TODO_SUCCESS.getMessageWith(todo), todo, tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":21}},{"path":"src/main/java/sid/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * Command to unmark a task (mark as not done).","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    public CommandResult execute(String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.UNMARK_USAGE_ERROR.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"        int id \u003d IndexParser.parseIndex(arg, ResponseMessage.UNMARK_INVALID_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        ToDo updated \u003d tasks.unmarkDone(id);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        return new CommandResult(true, ResponseMessage.UNMARK_SUCCESS.getMessageWith(updated), updated,","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"                tasks.getSize());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":22}},{"path":"src/main/java/sid/enums/SidMsg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.enums;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Defines predefined system messages used by Sid for formatted console output.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEach enum constant carries a display string that is printed to the console.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * Typical uses include a horizontal rule, a greeting on startup, and a farewell on exit.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"public enum SidMsg {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"    /** 60-character horizontal rule used to frame output. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    HR(\"_\".repeat(60)),","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    /** Greeting shown at startup. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    GREETING(\"Hello! I\u0027m Sid\\nWhat can I do for you?\"),","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    /** Farewell shown on exit. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    GOODBYE(\"ByeByeBye\");","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    /** Display text associated with this message. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private final String text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    SidMsg(String text) {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        this.text \u003d text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        return text;","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T04:54:14","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":30}},{"path":"src/main/java/sid/enums/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.enums;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Enumerates supported task types and their one-letter codes used in storage.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eCodes:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code T} – To-do\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code D} – Deadline\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" *   \u003cli\u003e{@code E} – Event\u003c/li\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"public enum TaskType {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    TODO(\"T\"),","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    EVENT(\"E\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    /** One-letter code used in save files. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    private final String code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    TaskType(String code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        this.code \u003d code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * Parses a one-letter code into a {@link TaskType}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eAccepted values are {@code \"T\"}, {@code \"D\"}, and {@code \"E\"}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * @param code One-letter task type code.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     * @return Matching {@link TaskType}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"     * @throws IllegalArgumentException If {@code code} is null or unrecognized.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    public static TaskType fromCode(String code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"            throw new IllegalArgumentException(\"code is null\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        switch (code) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        case \"T\": return TODO;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        case \"D\": return DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        case \"E\": return EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        default: throw new IllegalArgumentException(\"Unknown task type code: \" + code);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        return code;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":50}},{"path":"src/main/java/sid/exceptions/SidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.exceptions;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Application-specific checked exception for the Sid chatbot.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eUpon construction, the message is immediately printed using","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" * This constructor therefore has a side effect (console output).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"public class SidException extends Exception {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a {@code SidException} with the specified detail message.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"     * @param message Detail message describing the error.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    public SidException(String message) {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"        super(message);","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":20}},{"path":"src/main/java/sid/messages/ResponseMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.messages;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":" * Centralized enum for all chatbot response messages.","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":" * This provides consistent messaging across commands and makes testing easier.","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"public enum ResponseMessage {","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"    // Todo command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"    TODO_SUCCESS(\"Alright! I\u0027ve got that down for you:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"    TODO_USAGE_ERROR(\"Usage: todo \u003cdescription\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    // Mark command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    MARK_SUCCESS(\"Sweet! Marking this one as done:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    MARK_USAGE_ERROR(\"Usage: mark \u003ctask-number\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    MARK_INVALID_NUMBER(\"Please provide a valid number after \u0027mark\u0027.\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    // Unmark command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    UNMARK_SUCCESS(\"Oops, not done yet? I\u0027ve unmarked:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    UNMARK_USAGE_ERROR(\"Usage: unmark \u003ctask-number\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    UNMARK_INVALID_NUMBER(\"Please provide a valid number after \u0027unmark\u0027.\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    // Delete command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    DELETE_SUCCESS(\"Deleted your task:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    DELETE_USAGE_ERROR(\"What do you want me to delete?\\nUsage: delete \u003ctask-number\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    DELETE_INVALID_NUMBER(\"Please provide a valid number after \u0027delete\u0027.\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    // List command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    LIST_EMPTY(\"Nothing on your agenda right now! Ready to get busy?\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    LIST_WITH_TASKS(\"Here\u0027s what\u0027s keeping you busy:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    // Event command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    EVENT_SUCCESS(\"Got it! I\u0027ve blocked out this time for you:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    EVENT_USAGE_ERROR(\"Usage: event \u003cdescription\u003e /from \u003cyyyy-MM-dd[ HHmm]\u003e /to \u003cyyyy-MM-dd HHmm\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    EVENT_INVALID_TIME_ORDER(\"Event end must be on/after start.\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    EVENT_PAST_DATE(\"That datetime doesn\u0027t make sense, unless you can timetravel o.o\"),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    // Deadline command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    DEADLINE_SUCCESS(\"Successfully added\\nDeadline: \"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    DEADLINE_USAGE_ERROR(\"You typed it wrong!\\nProper usage: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    DEADLINE_PAST_DATE(\"That datetime doesn\u0027t make sense, unless you can timetravel o.o\"),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    // Find command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    FIND_SUCCESS(\"Found some matches! Here\u0027s what I dug up:\\n\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    FIND_NO_RESULTS(\"Hmm, I couldn\u0027t find any tasks matching that. Try a different keyword?\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    FIND_USAGE_ERROR(\"Usage: find \u003ckeyword\u003e\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    // Bye command messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    BYE_MESSAGE(\"Byebye! See you next time!\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    // General error messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    INVALID_TASK_NUMBER(\"Not a valid task number!\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    NO_INPUT_PROVIDED(\"No input provided.\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    // Parser error messages","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    UNKNOWN_COMMAND(\"Sorry! Can\u0027t understand you.\\nTry: todo | deadline | event | list | mark \u003cn\u003e | \"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        + \"unmark \u003cn\u003e | delete \u003cn\u003e | bye\"),","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    HELP_MESSAGE(\"Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e\");","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    private final String message;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    ResponseMessage(String message) {","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        this.message \u003d message;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    public String getMessage() {","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        return message;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the message with the provided object\u0027s toString() appended.","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"     * Useful for messages that include task details.","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    public String getMessageWith(Object obj) {","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        return message + obj.toString();","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":77}},{"path":"src/main/java/sid/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Represents a task with a due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eStores a {@link LocalDateTime} and formats it for display as","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * {@code \"MMM dd yyyy\"} or {@code \"MMM dd yyyy HH:mm\"} when time is present.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"public class Deadline extends ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_TIME_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a deadline task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     * @param dueDate     Due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Completion flag.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the due date is in the past.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    public Deadline(String description, LocalDateTime dueDate, boolean isDone) throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assert dueDate !\u003d null : \"Due date cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        checkNotPastDate(dueDate);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"     * Validates that the given date/time is not in the past.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"     * @param dateTime The date/time to validate.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the date/time is in the past.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    private static void checkNotPastDate(LocalDateTime dateTime) throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.DEADLINE_PAST_DATE.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"     * @return Due date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        return this.dueDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    private static String format(LocalDateTime dt) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        assert dt !\u003d null : \"DateTime to format cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        return (dt.getHour() \u003d\u003d 0 \u0026\u0026 dt.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"                ? dt.toLocalDate().format(DATE_FMT)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"                : dt.format(DATE_TIME_FMT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        return super.toString() + \" (by: \" + format(this.dueDate) + \")\";","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":70}},{"path":"src/main/java/sid/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Represents an event task that spans a start and end time.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAn {@code Event} is a specialized {@link ToDo} whose type is {@link TaskType#EVENT}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * and which carries two additional labels: {@code startDate} and {@code endDate}. These","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" * are free-form strings used for display and persistence (e.g., {@code \"Aug 6th 2pm\"}).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"public class Event extends ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter DATE_TIME_FMT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs an event task.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     * @param startDate   Start date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     * @param endDate     End date/time.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Completion flag.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the start date is in the past or end date is before start date.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate, boolean isDone)","lastModifiedDate":"2025-09-16T14:09:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"            throws SidException {","lastModifiedDate":"2025-09-16T14:09:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        assert startDate !\u003d null : \"Start date cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assert endDate !\u003d null : \"End date cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        checkNotPastDate(startDate);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        checkTimeOrder(startDate, endDate);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        assert !startDate.isAfter(endDate) : \"Start date must be before or equal to end date\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     * Validates that the given date/time is not in the past.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"     * @param dateTime The date/time to validate.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the date/time is in the past.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    private static void checkNotPastDate(LocalDateTime dateTime) throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        if (dateTime.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.EVENT_PAST_DATE.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"     * Validates that the end date/time is not before the start date/time.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"     * @param startDate The start date/time.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"     * @param endDate The end date/time.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the end date is before the start date.","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    private static void checkTimeOrder(LocalDateTime startDate, LocalDateTime endDate) throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        if (endDate.isBefore(startDate)) {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.EVENT_INVALID_TIME_ORDER.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        return this.startDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        return this.endDate;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"    private static String format(LocalDateTime dt) {","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        assert dt !\u003d null : \"DateTime to format cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        return (dt.getHour() \u003d\u003d 0 \u0026\u0026 dt.getMinute() \u003d\u003d 0)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"                ? dt.toLocalDate().format(DATE_FMT)","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"                : dt.format(DATE_TIME_FMT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        return super.toString() + \" (from: \" + format(this.startDate) + \", to: \" + format(this.endDate) + \")\";","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":90}},{"path":"src/main/java/sid/models/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":" * Represents a basic to-do task with a description and completion state.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eThe default task {@link #type} is {@link TaskType#TODO}. Instances can be marked","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":" * done/undone and are rendered in a Sid-style format, e.g.,","lastModifiedDate":"2025-09-16T14:20:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * {@code [T][ ] read book} or {@code [T][X] read book}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"public class ToDo {","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"    private static final String DONE_FLAG \u003d \"X\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private static final String NOT_DONE_FLAG \u003d \" \";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    /** Categorical task type; defaults to {@link TaskType#TODO}. */","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    protected TaskType type \u003d TaskType.TODO;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    /** Human-readable description of the task. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    private String description;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    /** Whether the task has been completed. */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a to-do task with the given description and completion flag.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     * @param description Text describing what the task is about.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * @param isDone      Whether the task is initially marked as completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        assert description !\u003d null : \"Task description cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        assert !description.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"     * Marks this task as completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    public void markTask() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     * Marks this task as not completed.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    public void unmarkTask() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        return this.description;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        return \"[\" + this.type + \"][\" + (this.isDone ? DONE_FLAG : NOT_DONE_FLAG) + \"] \" + this.description;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":65}},{"path":"src/main/java/sid/models/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Holds an in-memory list of tasks and provides user-facing operations.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAll mutating operations ({@code add}, {@code delete}, {@code markDone}, {@code unmarkDone})","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * automatically persist the updated list via the injected {@link Storage}","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eUnless stated otherwise, user-facing task indices are 1-based (as shown in {@link #toString()}).","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"public class TodoList {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private final ArrayList\u003cToDo\u003e todoList;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a task list initialized with the given tasks and bound storage.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"     * @param initialList Initial tasks to populate the list with.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"     * @param storage     Storage used to persist changes after mutations.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList(List\u003cToDo\u003e initialList, Storage storage) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e(initialList);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a task list initalized with the given tasks without a bounded storage, for read-only purposes.","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     * @param initialList Initial tasks to populate the list with.","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList(List\u003cToDo\u003e initialList) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e(initialList);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        this.storage \u003d null;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"     * Marks the specified task as done (1-based index), saves, and prints a confirmation.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task that was marked as done.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo markDone(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        // Convert to 0 based index","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize() : \"Index must be within valid range after validation\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d todoList.get(i);","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask();","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        return t;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"     * Marks the specified task as not done yet (1-based index), saves, and prints a confirmation.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task that was unmarked.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo unmarkDone(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        // Convert to 0 based index","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize() : \"Index must be within valid range after validation\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d this.todoList.get(i);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask();","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        return t;","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.size();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"     * Adds the task to the end of the current list and saves it to the storage.","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"     * @param task - the task to be added","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"    public void add(ToDo task) throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        assert task !\u003d null : \"Cannot add null task to list\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            List\u003cEvent\u003e clashingEvents \u003d detectScheduleConflicts((Event) task);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"            if (!clashingEvents.isEmpty()) {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Scheduling conflict detected! This event overlaps with:\\n\"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"                        + new TodoList(new ArrayList\u003cToDo\u003e(clashingEvents)).toString());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        todoList.add(task);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        assert storage !\u003d null : \"Storage must be available for persistent operations\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"     * Deletes the task at the given one-based index","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"    public void delete(int id) throws SidException {","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        int i \u003d id - 1;","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"        if (i \u003c 0 || i \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c this.getSize() : \"Index must be within valid range after validation\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"        ToDo deletedTask \u003d this.todoList.remove(i);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        assert storage !\u003d null : \"Storage must be available for persistent operations\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        storage.save(this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the task at the given one-based index","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"     * @param id 1-based task number as displayed to the user.","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"     * @return The task at the specified position.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If {@code id} is out of range.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"    public ToDo getTodo(int id) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        // For one-based indexing","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        id -\u003d 1;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        if (id \u003c 0 || id \u003e\u003d this.getSize()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.INVALID_TASK_NUMBER.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"        assert id \u003e\u003d 0 \u0026\u0026 id \u003c this.getSize() : \"Index must be within valid range after validation\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.get(id);","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:43:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the found tasks matching the given keyword","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"     * @param keyword The keyword to search for","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"     * @return A TodoList of the tasks that have matched the keyword","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList findTodos(String keyword) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"            return new TodoList(new ArrayList\u003cToDo\u003e()); // empty","lastModifiedDate":"2025-09-09T19:33:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"        String query \u003d keyword.trim().toLowerCase();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"        assert !query.isEmpty() : \"Query should not be empty after trimming non-empty keyword\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e results \u003d this.todoList.stream()","lastModifiedDate":"2025-09-09T19:33:36","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"            .filter(t -\u003e t.toString().toLowerCase().contains(query))","lastModifiedDate":"2025-09-09T19:33:36","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"            .toList();","lastModifiedDate":"2025-09-09T19:33:36","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(results);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.isEmpty();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"    private List\u003cEvent\u003e detectScheduleConflicts(Event newEvent) {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"        return this.todoList.stream()","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"            .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"            .map(task -\u003e (Event) task)","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"            .filter(existingEvent -\u003e eventsOverlap(newEvent, existingEvent))","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"            .toList();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"    private boolean eventsOverlap(Event event1, Event event2) {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"        return event1.getStartDate().isBefore(event2.getEndDate())","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"            \u0026\u0026 event2.getStartDate().isBefore(event1.getEndDate());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"        for (int i \u003d 0; i \u003c this.todoList.size(); i++) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"            output.append((i + 1)).append(\". \").append(this.todoList.get(i));","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"            if (i \u003c this.todoList.size() - 1) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-22T03:57:06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"        return output.toString();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-22T02:51:39","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":189}},{"path":"src/main/java/sid/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.parser;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Map;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.ByeCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.Command;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.CommandResult;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.DeadlineCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.DeleteCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.EventCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.FindCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.ListCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.MarkCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.TodoCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import sid.commands.UnmarkCommand;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"import sid.ui.Ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":" * Parses user commands and executes them against the task list.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eLevel 8: Dates/times are parsed into {@link LocalDateTime}. Accepted inpu","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":" * formats include {@code yyyy-MM-dd[ HHmm]} and {@code d/M/yyyy[ HHmm]}; ISO","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":" * {@code yyyy-MM-dd\u0027T\u0027HH:mm} is also supported. Date-only inputs default to","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":" * {@code 00:00}.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    /** Split limit for command parsing: command + arguments. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    private static final int COMMAND_SPLIT_LIMIT \u003d 2;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    private final Map\u003cString, Command\u003e commands \u003d Map.of(","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        \"list\", new ListCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        \"todo\", new TodoCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        \"deadline\", new DeadlineCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        \"event\", new EventCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        \"mark\", new MarkCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        \"unmark\", new UnmarkCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        \"delete\", new DeleteCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        \"find\", new FindCommand(),","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        \"bye\", new ByeCommand()","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    );","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"     * Parses and executes a single command line.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eReturns {@code false} when the session should end (on {@code bye});","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"     * returns {@code true} otherwise.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"     * @param input Raw user input.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks Task list to operate on.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"     * @param ui    UI for user-visible output.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"     * @return {@code false} to terminate; {@code true} to continue.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the command/arguments are invalid.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    public boolean parseAndExecute(String input, TodoList tasks, Ui ui) throws SidException {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        assert tasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"No input provided.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        String line \u003d input.trim();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"            return true; // ignore empty lines","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        String[] parts \u003d line.split(\"\\\\s+\", COMMAND_SPLIT_LIMIT);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        String cmd \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        String arg \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        // Handle special case for bye command that needs UI interaction","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"            return false;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        // Execute the command and display results","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d executeCommand(cmd, arg, tasks);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        displayCommandResult(cmd, result, tasks, ui);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        return result.shouldContinue();","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"     * Parses and executes the command input from JavaFX GUI.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eReturns response string","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"     * @param input Raw user input.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks Task list to operate on.","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    public String parseAndExecute(String input, TodoList tasks) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        assert tasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"        String line \u003d input.trim();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"            return \"Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e\";","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        String[] parts \u003d line.split(\"\\\\s+\", COMMAND_SPLIT_LIMIT);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        String cmd \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        String arg \u003d (parts.length \u003e 1) ? parts[1].trim() : \"\";","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"            CommandResult result \u003d executeCommand(cmd, arg, tasks);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"            return result.getMessage();","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        } catch (SidException error) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"            return error.getMessage();","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"    // ---- Command execution methods ----","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"     * Executes a command and returns the result.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"     * @param cmd The command to execute.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"     * @param arg The argument for the command.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"     * @return The result of command execution.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If the command is invalid or execution fails.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"    private CommandResult executeCommand(String cmd, String arg, TodoList tasks) throws SidException {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        assert cmd !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"        assert arg !\u003d null : \"Argument cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        assert tasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"        Command command \u003d commands.get(cmd);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(ResponseMessage.UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        return command.execute(arg, tasks);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"     * Displays the command result through the UI based on command type.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"     * @param cmd The command that was executed.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"     * @param result The result of command execution.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"     * @param tasks The task list (needed for displaying list).","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"     * @param ui The UI for output.","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"    private void displayCommandResult(String cmd, CommandResult result, TodoList tasks, Ui ui) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"        assert cmd !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"        assert result !\u003d null : \"CommandResult cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"        assert tasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"        switch (cmd) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"        case \"list\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"            ui.showList(tasks);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"        case \"event\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskAdded(result.getTask(), result.getTotalTasks());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskMarked(result.getTask());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskUnmarked(result.getTask());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"            ui.showTaskDeleted(result.getTask(), result.getTotalTasks());","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:53:20","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"        case \"find\":","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"            // Guard clause: handle empty results early","lastModifiedDate":"2025-09-09T19:07:37","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"            if (result.getFoundTasks().isEmpty()) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"                ui.showError(\"No tasks found.\");","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"                break;","lastModifiedDate":"2025-09-09T19:07:37","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-09-03T02:53:20","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"            ui.showFind(result.getFoundTasks());","lastModifiedDate":"2025-09-09T19:07:37","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:53:20","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"        default:","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"            // Should never reach here as executeCommand handles unknown commands","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-09-03T02:53:20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-03T02:53:20","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":189}},{"path":"src/main/java/sid/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.storage;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.TaskType;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Deadline;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.Event;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" * Persists and retrieves tasks in a pipe-separated flat file.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eEach record occupies one line; optional whitespace is allowed around","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":" * the {@code |} separators. The second field is a done flag","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":" * ({@code 1} \u003d done, {@code 0} \u003d not done).","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eLevel 8 dates/times are stored in ISO-8601 {@code LocalDateTime} format","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":" * (e.g., {@code 2019-12-02T18:00}) for unambiguous parsing. Examples:","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":" * T | 1 | read book","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":" * D | 0 | return book | 2019-12-02T18:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":" * E | 0 | project meeting | 2019-08-06T14:00 | 2019-08-06T16:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eOn load, a missing file is treated as empty; malformed lines are skipped","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":" * with a warning to {@code System.err}. On save, the parent directory is","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":" * created if it does not exist.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    private static final DateTimeFormatter ISO_DT \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    /** Minimum fields required in storage format: type, done flag, description. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    private static final int MIN_STORAGE_FIELDS \u003d 3;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    /** Fields required for deadline tasks: type, done flag, description, due date. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    private static final int DEADLINE_FIELDS \u003d 4;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    /** Fields required for event tasks: type, done flag, description, start date, end date. */","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    private static final int EVENT_FIELDS \u003d 5;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    private static final String DONE_FLAG \u003d \"1\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    private static final String NOT_DONE_FLAG \u003d \"0\";","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    private final File file;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a storage backed by the specified file path.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"     * @param relativePath Path to save file (e.g., {@code data/sid.txt}).","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    public Storage(String relativePath) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        assert relativePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        assert !relativePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        this.file \u003d new File(relativePath);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"     * Loads tasks from disk into a new {@link TodoList}.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eIf the file does not exist, an empty list is returned. Corrupted lines are skipped with a warning.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"     * @return A {@link TodoList} containing all successfully parsed tasks; empty if no file exists.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList load() {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e initialList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"            // First run, nothing to load yet.","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"            return new TodoList(initialList, this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        try {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"                String line \u003d s.nextLine().trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"                if (line.isEmpty()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"                    continue;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"                try {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"                    ToDo todo \u003d deserializeToDo(line);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"                    initialList.add(todo);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"                } catch (SidException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"                    System.err.println(\"Skipping corrupted line: \" + line + \": \" + e.getMessage());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"                }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"            System.err.println(\"Load failed (not found): \" + file.getAbsolutePath());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(initialList, this);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"     * Saves the current list into the disk","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"     * @param list The current list","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"    public void save(TodoList list) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        assert list !\u003d null : \"TodoList to save cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"        // Ensure ./data exists","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        File parent \u003d this.file.getParentFile();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"        if (parent !\u003d null \u0026\u0026 !parent.exists()) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"            parent.mkdirs(); // safe even if it already exists","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"        try (FileWriter fw \u003d new FileWriter(this.file, false)) { // overwrite mode","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"            for (int i \u003d 1; i \u003c\u003d list.getSize(); i++) {","lastModifiedDate":"2025-08-28T16:32:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"                ToDo t \u003d list.getTodo(i);","lastModifiedDate":"2025-08-28T16:32:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"                fw.write(serializeTodo(t));","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        } catch (SidException | IOException e) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"            System.err.println(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the serialized string representing a todo to be saved onto the disk","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"     * @param t The task to be serialized into a string","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"     * @return a serialized string","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"     * @throws SidException If task is of unknown type","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"     * @see sid.enums.TaskType","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-28T17:31:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"    private String serializeTodo(ToDo t) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        TaskType type;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"        String extra \u003d \"\";","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"            Deadline deadline \u003d (Deadline) t;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.DEADLINE;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"            extra \u003d deadline.getDueDate().format(ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"            Event event \u003d (Event) t;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.EVENT;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"            extra \u003d event.getStartDate().format(ISO_DT) + \" | \" + event.getEndDate().format(ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"        } else if (t instanceof ToDo) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"            type \u003d TaskType.TODO;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"        } else {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Unknown task type: \" + t.getClass().getName());","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"        String done \u003d t.isDone() ? DONE_FLAG : NOT_DONE_FLAG;","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"        String base \u003d type.toString() + \" | \" + done + \" | \" + t.getDescription();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"        return extra.isEmpty() ? base : base + \" | \" + extra;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"     * Parses a line into a task instance.","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"     *","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cp\u003eExpected formats (ISO date-times for D/E):","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"     * T | 0|1 | description","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"     * D | 0|1 | description | 2019-12-02T18:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"     * E | 0|1 | description | 2019-12-02T18:00 | 2019-12-02T20:00","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"    private ToDo deserializeToDo(String line) throws SidException {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"        assert line !\u003d null : \"Line to deserialize cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"        if (parts.length \u003c MIN_STORAGE_FIELDS) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"            throw new IllegalArgumentException(\"Too few fields\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"        String doneFlag \u003d parts[1].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"        if (!doneFlag.equals(DONE_FLAG) \u0026\u0026 !doneFlag.equals(NOT_DONE_FLAG)) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Invalid done flag\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"        boolean isDone \u003d doneFlag.equals(DONE_FLAG);","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"        ToDo task;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"        switch (TaskType.fromCode(type)) {","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"        case TODO:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new ToDo(description, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DonLeeHH"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DonLeeHH"},"content":"            // Guard clause for validation","lastModifiedDate":"2025-09-09T19:07:37","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DonLeeHH"},"content":"            if (parts.length \u003c DEADLINE_FIELDS) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Deadline missing \u0027by\u0027 field\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DonLeeHH"},"content":"        case EVENT:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DonLeeHH"},"content":"            // Guard clause for validation","lastModifiedDate":"2025-09-09T19:07:37","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DonLeeHH"},"content":"            if (parts.length \u003c EVENT_FIELDS) {","lastModifiedDate":"2025-09-09T18:55:18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DonLeeHH"},"content":"                throw new SidException(\"Event missing start/end fields\");","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(parts[3].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(parts[4].trim(), ISO_DT);","lastModifiedDate":"2025-08-27T23:08:21","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"DonLeeHH"},"content":"            task \u003d new Event(description, start, end, isDone);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"DonLeeHH"},"content":"            break;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DonLeeHH"},"content":"        default:","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"DonLeeHH"},"content":"            throw new SidException(\"Unsupported type: \" + type);","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"DonLeeHH"},"content":"        return task;","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-27T21:47:32","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":214}},{"path":"src/main/java/sid/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.ui;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import sid.enums.SidMsg;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":" * Handles user interaction: reading input and printing formatted output.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * \u003cp\u003eAll messages are framed by a horizontal rule for consistency.","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    /** Constructs a UI bound to standard input. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows the startup greeting. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        frame(SidMsg.GREETING.toString());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows the farewell message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        frame(SidMsg.GOODBYE.toString());","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows a normal informational message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        frame(message);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows an error message. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        frame(message);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    // ---------- High-level task messages (used by Parser) ----------","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    /** Displays the current task list. */","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    public void showList(TodoList tasks) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        assert tasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Here are your tasks:\\n\" + tasks.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows confirmation that a task has been added successfully*/","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskAdded(ToDo task, int total) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assert total \u003e\u003d 0 : \"Total task count must be non-negative\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Got it. I\u0027ve added this task:\\n  \" + task","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"                + \"\\nNow you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows confirmation that a task has been deleted successfully*/","lastModifiedDate":"2025-09-02T18:38:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskDeleted(ToDo task, int total) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        assert total \u003e\u003d 0 : \"Total task count must be non-negative\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Successfully deleted this task:\\n  \" + task","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"                + \"\\nNow you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows confirmation that a task has been marked as done. */","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskMarked(ToDo task) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"YAY! You\u0027ve completed this task:\\n  \" + task);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"    /** Shows confirmation that a task has been unmarked. */","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskUnmarked(ToDo task) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    /** Displays search results. */","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"    public void showFind(TodoList foundTasks) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        assert foundTasks !\u003d null : \"TodoList cannot be null\";","lastModifiedDate":"2025-09-09T17:35:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        frame(\"Here are the tasks I found:\\n\" + foundTasks.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"    // ---------- Input plumbing ----------","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    /** Returns true if there is another line available from input. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        return scanner.hasNextLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"    /** Reads the next input line (may be empty). */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    public String readLine() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"    /** Closes the underlying scanner. */","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"    public void close() {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        scanner.close();","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"    private void frame(String msg) {","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(SidMsg.HR);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        System.out.println(SidMsg.HR);","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T03:51:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":106}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\"/\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"false\" /\u003e","lastModifiedDate":"2025-09-16T15:10:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"\u003cAnchorPane minHeight\u003d\"400.0\" minWidth\u003d\"350.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/24.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sid.MainWindow\"\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"77.0\"\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"            \u003cFont name\u003d\"Al Nile\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#3177d3\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"         \u003cfont\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"            \u003cFont name\u003d\"Al Nile\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2025-09-15T22:23:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-03T02:40:41","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":26}},{"path":"src/test/java/sid/SidTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"public class SidTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":4}},{"path":"src/test/java/sid/commands/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for DateTimeParser utility class.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure comprehensive coverage","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" * of date/time parsing functionality including edge cases and error handling.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_validDateTime_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        // Test yyyy-MM-dd HHmm format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result1 \u003d DateTimeParser.parseFlexibleDateTime(\"2025-12-02 1800\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 2, 18, 0), result1);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        // Test d/M/yyyy HHmm format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result2 \u003d DateTimeParser.parseFlexibleDateTime(\"2/12/2025 1800\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 2, 18, 0), result2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        // Test ISO format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result3 \u003d DateTimeParser.parseFlexibleDateTime(\"2025-12-02T18:00\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 2, 18, 0), result3);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_validDateOnly_defaultsToMidnight() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        // Test yyyy-MM-dd format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result1 \u003d DateTimeParser.parseFlexibleDateTime(\"2025-12-02\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 2, 0, 0), result1);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        // Test d/M/yyyy format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result2 \u003d DateTimeParser.parseFlexibleDateTime(\"2/12/2025\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 2, 0, 0), result2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_edgeCases_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        // Test single digit day/month","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result1 \u003d DateTimeParser.parseFlexibleDateTime(\"1/1/2025\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 1, 1, 0, 0), result1);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        // Test with time","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result2 \u003d DateTimeParser.parseFlexibleDateTime(\"1/1/2025 0000\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 1, 1, 0, 0), result2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        // Test end of year","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result3 \u003d DateTimeParser.parseFlexibleDateTime(\"31/12/2025 2359\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2025, 12, 31, 23, 59), result3);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_invalidFormat_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        // Test completely invalid format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception1 \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"            DateTimeParser.parseFlexibleDateTime(\"not-a-date\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Could not parse date/time: not-a-date\\n\"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"                + \"Try: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\",","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"                exception1.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        // Test invalid date","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception2 \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"            DateTimeParser.parseFlexibleDateTime(\"32/12/2025\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Could not parse date/time: 32/12/2025\\n\"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"                + \"Try: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\",","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"                exception2.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        // Test invalid time","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception3 \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"            DateTimeParser.parseFlexibleDateTime(\"2025-12-02 2500\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Could not parse date/time: 2025-12-02 2500\\n\"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"                + \"Try: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\",","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"                exception3.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_emptyInput_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"            DateTimeParser.parseFlexibleDateTime(\"\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Could not parse date/time: \\n\"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"                + \"Try: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\",","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_leapYear_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        // Test leap year date","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime result \u003d DateTimeParser.parseFlexibleDateTime(\"29/2/2024\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(LocalDateTime.of(2024, 2, 29, 0, 0), result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"    public void parseFlexibleDateTime_invalidDateFormat_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        // Test completely invalid date format","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"            DateTimeParser.parseFlexibleDateTime(\"32/13/2023\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Could not parse date/time: 32/13/2023\\n\"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"                + \"Try: 2025-12-02 1800, 2025-12-02, 2/12/2025 1800, or 2/12/2025\",","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"                exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":115}},{"path":"src/test/java/sid/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for DeleteCommand class.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure comprehensive coverage","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * of task deletion functionality with proper validation and error handling.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    private DeleteCommand deleteCommand;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private TodoList tasks;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    private StorageStub storage;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public void setUp() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        storage \u003d new StorageStub();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        // Add some test tasks","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"First task\", false));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"Second task\", true));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"Third task\", false));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validTaskNumber_deletesTask() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"2\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Second task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getTask().isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, result.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().contains(ResponseMessage.DELETE_SUCCESS.getMessage()));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().contains(\"Second task\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        // Verify remaining tasks shifted correctly","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Third task\", tasks.getTodo(2).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_firstTask_deletesCorrectly() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Second task\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Third task\", tasks.getTodo(2).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_lastTask_deletesCorrectly() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"3\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Third task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Second task\", tasks.getTodo(2).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_emptyArgument_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.DELETE_USAGE_ERROR.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_whitespaceOnlyArgument_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"   \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.DELETE_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_invalidNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"abc\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.DELETE_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_zeroTaskNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"0\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_negativeTaskNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"-1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_taskNumberTooLarge_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"10\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.INVALID_TASK_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validNumberWithWhitespace_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"  1  \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_deleteAllTasksSequentially_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"        // Delete from the end to avoid index shifting issues","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        deleteCommand.execute(\"3\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"        deleteCommand.execute(\"2\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, result.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_deleteFromEmptyList_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"        TodoList emptyTasks \u003d storage.load(); // Fresh empty list","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"1\", emptyTasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.INVALID_TASK_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_deleteSingleItemList_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"        TodoList singleTask \u003d storage.load();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"        singleTask.add(new ToDo(\"Only task\", false));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d deleteCommand.execute(\"1\", singleTask);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, singleTask.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Only task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, result.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_decimalNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"            deleteCommand.execute(\"1.5\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.DELETE_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize()); // List unchanged","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":180}},{"path":"src/test/java/sid/commands/IndexParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for IndexParser utility class.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure robust parsing","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * of task indices with proper error handling and validation.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"public class IndexParserTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_validPositiveInteger_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, IndexParser.parseIndex(\"1\", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(5, IndexParser.parseIndex(\"5\", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(100, IndexParser.parseIndex(\"100\", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_validIntegerWithWhitespace_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, IndexParser.parseIndex(\" 1 \", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(42, IndexParser.parseIndex(\"  42  \", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(7, IndexParser.parseIndex(\"\\t7\\n\", \"Invalid index\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_nonNumericString_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"abc\", \"Custom error message\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Custom error message\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_emptyString_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"\", \"Empty input error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Empty input error\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_whitespaceOnlyString_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"   \", \"Whitespace error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Whitespace error\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_zeroValue_throwsAssertionError() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        // The method has an assertion that requires positive values","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"0\", \"Zero error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_negativeValue_throwsAssertionError() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        // The method has an assertion that requires positive values","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"-1\", \"Negative error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"-42\", \"Negative error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_decimalNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"1.5\", \"Decimal error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Decimal error\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_numberWithLeadingZeros_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, IndexParser.parseIndex(\"01\", \"Leading zero error\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(123, IndexParser.parseIndex(\"000123\", \"Leading zero error\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_largeNumber_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(999999, IndexParser.parseIndex(\"999999\", \"Large number error\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_numberOutOfIntegerRange_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"99999999999999999999\", \"Out of range error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Out of range error\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_mixedContent_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"1abc\", \"Mixed content error\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Mixed content error\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"    public void parseIndex_customErrorMessage_preservesMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"        String customMessage \u003d \"Please provide a valid task number.\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"            IndexParser.parseIndex(\"invalid\", customMessage);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(customMessage, exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":118}},{"path":"src/test/java/sid/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for MarkCommand class.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure robust handling","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * of task marking functionality with proper validation and error handling.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    private MarkCommand markCommand;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private TodoList tasks;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    private StorageStub storage;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public void setUp() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        markCommand \u003d new MarkCommand();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        storage \u003d new StorageStub();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        // Add some test tasks","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"First task\", false));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"Second task\", false));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        tasks.add(new ToDo(\"Third task\", true)); // Already marked","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validTaskNumber_marksTaskAsDone() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d markCommand.execute(\"1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(tasks.getTodo(1).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getTask().isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, result.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().contains(ResponseMessage.MARK_SUCCESS.getMessage()));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_alreadyMarkedTask_marksAgain() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d markCommand.execute(\"3\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(tasks.getTodo(3).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Third task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getTask().isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_emptyArgument_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.MARK_USAGE_ERROR.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_whitespaceOnlyArgument_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"   \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.MARK_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_invalidNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"abc\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.MARK_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_zeroTaskNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"0\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_negativeTaskNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"-1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_taskNumberTooLarge_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"10\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.INVALID_TASK_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validNumberWithWhitespace_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d markCommand.execute(\"  2  \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(tasks.getTodo(2).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Second task\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_decimalNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"1.5\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.MARK_INVALID_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_largeValidNumber_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"999\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.INVALID_TASK_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validTaskOnEmptyList_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        TodoList emptyTasks \u003d storage.load(); // Fresh empty list","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"            markCommand.execute(\"1\", emptyTasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.INVALID_TASK_NUMBER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_multipleMarksOnSameTask_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result1 \u003d markCommand.execute(\"1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result2 \u003d markCommand.execute(\"1\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(tasks.getTodo(1).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result1.getTask().isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result2.getTask().isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", result1.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", result2.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":153}},{"path":"src/test/java/sid/commands/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.commands;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for TodoCommand class.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure comprehensive coverage","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * of todo task creation including edge cases and error handling.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"public class TodoCommandTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    private TodoCommand todoCommand;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private TodoList tasks;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    private StorageStub storage;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        todoCommand \u003d new TodoCommand();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        storage \u003d new StorageStub();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_validDescription_createsTask() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(\"Buy groceries\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Buy groceries\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(tasks.getTodo(1).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Buy groceries\", result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, result.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().contains(ResponseMessage.TODO_SUCCESS.getMessage()));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_emptyDescription_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"            todoCommand.execute(\"\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.TODO_USAGE_ERROR.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_whitespaceOnlyDescription_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(AssertionError.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"            todoCommand.execute(\"   \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_longDescription_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        String longDescription \u003d \"This is a very long task description that contains many words \"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"                + \"and should still be handled correctly by the todo command without any issues\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(longDescription, tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(longDescription, tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(longDescription, result.getTask().getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_specialCharacters_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        String specialDescription \u003d \"Buy @#$% groceries \u0026 prepare for 100% test coverage!\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(specialDescription, tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(specialDescription, tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_multipleTasksSequentially_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result1 \u003d todoCommand.execute(\"First task\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result2 \u003d todoCommand.execute(\"Second task\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result3 \u003d todoCommand.execute(\"Third task\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, result1.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, result2.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, result3.getTotalTasks());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"First task\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Second task\", tasks.getTodo(2).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Third task\", tasks.getTodo(3).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_unicodeCharacters_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        String unicodeDescription \u003d \"学习中文 and eat 🍕 for dinner\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(unicodeDescription, tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(unicodeDescription, tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_numbersInDescription_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"        String numericDescription \u003d \"Complete 42 exercises by 2025-12-31\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(numericDescription, tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(numericDescription, tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_descriptionWithNewlines_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        String descriptionWithNewlines \u003d \"Line 1\\nLine 2\\nLine 3\";","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(descriptionWithNewlines, tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.shouldContinue());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(descriptionWithNewlines, tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"    public void execute_resultMessageFormat_correctFormat() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        CommandResult result \u003d todoCommand.execute(\"Test task\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().startsWith(ResponseMessage.TODO_SUCCESS.getMessage()));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.getMessage().contains(\"[T][ ] Test task\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":144}},{"path":"src/test/java/sid/models/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" * Tests for the Deadline task model","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"class DeadlineTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDateTime_rendersWithTime() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dt \u003d LocalDateTime.now().plusDays(5).withHour(18).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"a deadline\", dt, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(dt, d.getDueDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().startsWith(\"[D][\"), \"Type tag should be [D]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().contains(\"a deadline\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().contains(\"18:00\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_midnight_rendersDateOnly() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime midnight \u003d LocalDateTime.now().plusDays(10).withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"last deadline\", midnight, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(midnight, d.getDueDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().contains(\"last deadline\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().startsWith(\"[D][ ]\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    void markAndUnmark_toggleDoneStateInOutput() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime midnight \u003d LocalDateTime.now().plusDays(15).withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        Deadline d \u003d new Deadline(\"read book\", midnight, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        // mark","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        d.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().contains(\"[D][X] read book\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        // unmark","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        d.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(d.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(d.toString().contains(\"[D][ ] read book\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_pastDate_throwsException() {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime pastDate \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"            new Deadline(\"Submit assignment\", pastDate, false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.DEADLINE_PAST_DATE.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_futureDate_success() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureDate \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        Deadline deadline \u003d new Deadline(\"Submit assignment\", futureDate, false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(futureDate, deadline.getDueDate());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Submit assignment\", deadline.getDescription());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(deadline.isDone());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":78}},{"path":"src/test/java/sid/models/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":" * Tests for the Event task model (Level 8 date/time formatting).","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"class EventTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDateTimes_rendersWithTimes() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(5).withHour(18).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end \u003d start.plusHours(2);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"an event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(start, e.getStartDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(end, e.getEndDate());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().startsWith(\"[E][\"), \"Type tag should be [E]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"an event\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"18:00\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"20:00\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_midnightDates_rendersDateOnlyOnBothSides() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(10).withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end \u003d start.plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"another event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"another event\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().startsWith(\"[E][ ]\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        // Should render date only (no time) for midnight","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_mixedDateAndDateTime_formatsEachSideIndependently() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(15).withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end \u003d start.withHour(15).withMinute(45);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"mixed event\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"mixed event\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"15:45\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().startsWith(\"[E][ ]\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    void markAndUnmark_toggleDoneStateInOutput() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(20).withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime end \u003d start.plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"        Event e \u003d new Event(\"trip\", start, end, false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        e.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"[E][X] trip\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        e.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(e.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(e.toString().contains(\"[E][ ] trip\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_pastStartDate_throwsException() {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime pastStart \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureEnd \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"            new Event(\"Meeting\", pastStart, futureEnd, false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.EVENT_PAST_DATE.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_endBeforeStart_throwsException() {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureStart \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureEnd \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"            new Event(\"Meeting\", futureStart, futureEnd, false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.EVENT_INVALID_TIME_ORDER.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_futureDate_success() throws SidException {","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureStart \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime futureEnd \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"        Event event \u003d new Event(\"Meeting\", futureStart, futureEnd, false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(futureStart, event.getStartDate());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(futureEnd, event.getEndDate());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Meeting\", event.getDescription());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(event.isDone());","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":111}},{"path":"src/test/java/sid/models/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"class ToDoTest {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"    void constructor_withDoneTrue_rendersChecked() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Read book\", true);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][X] Read book\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"    void getters_reflectStateAndDescription() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Alpha\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(t.isDone(), \"isDone should reflect initial state\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Alpha\", t.getDescription(), \"description should be returned as-is\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    void mark_isIdempotent() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Task\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        t.markTask(); // call again","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(t.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][X] Task\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    void unmark_isIdempotent() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"Task\", true);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask();","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        t.unmarkTask(); // call again","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(t.isDone());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] Task\", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    void toString_preservesWhitespaceInDescription() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"  spaced  \", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        // Class does not trim; ensure output preserves spaces","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ]   spaced  \", t.toString());","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    void toString_alwaysUsesTypeT() {","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        ToDo t \u003d new ToDo(\"X\", false);","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(t.toString().startsWith(\"[T][\"), \"Type tag should be [T]\");","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":55}},{"path":"src/test/java/sid/models/TodoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.models;","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" * Tests for TodoList behavior (mutations, indexing, and findTodos).","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"class TodoListTest {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    void add_marksAndUnmarks_triggerSaves() throws SidException {","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"        List\u003cToDo\u003e seed \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(seed, storage);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        // add","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"alpha\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, storage.getSaveCalls());","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(0).contains(\"[T][ ] alpha\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"        // add second, then mark #2","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"beta\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, storage.getSaveCalls());","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        ToDo marked \u003d list.markDone(2); // 1-based index","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(marked.isDone());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, storage.getSaveCalls());","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(2).contains(\"[T][X] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        // unmark #2","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        ToDo unmarked \u003d list.unmarkDone(2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(unmarked.isDone());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(4, storage.getSaveCalls());","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(3).contains(\"[T][ ] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        // delete #1","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        list.delete(1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(5, storage.getSaveCalls());","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(storage.snapshots.get(4).contains(\"[T][ ] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"    void getTodo_usesOneBasedIndex_andBoundsCheck() throws SidException {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"first\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"second\", false));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"        // one-based access","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] first\", list.getTodo(1).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] second\", list.getTodo(2).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        // out of range throws","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(SidException.class, () -\u003e list.getTodo(0));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"        assertThrows(SidException.class, () -\u003e list.getTodo(3));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_substringCaseInsensitive_andLiteralSpecialChars() throws Exception {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"        // No storage needed; this constructor does not save.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"Read book\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"read email\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"Call (Alice)\", false)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"        // substring, case-insensitive: \"read\" matches \"Read book\" and \"read email\"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results1 \u003d list.findTodos(\"read\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, results1.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        // literal special char \"(\" should match \"Call (Alice)\"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results2 \u003d list.findTodos(\"(\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, results2.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"[T][ ] Call (Alice)\",","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"                results2.getTodo(1).toString()); // one-based indexing","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_matchesAgainstToString_forDateBasedTasks() throws Exception {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"        // Include a Deadline so the formatted date appears in toString()","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        LocalDateTime dt \u003d LocalDateTime.now().plusDays(30).withHour(18).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"                new Deadline(\"return book\", dt, false)","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"        // Search for the formatted date string that would actually be generated","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        String expectedDateFormat \u003d dt.format(java.time.format.DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        TodoList results \u003d list.findTodos(expectedDateFormat);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(results);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, results.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(results.getTodo(1).toString().contains(\"(by: \" + expectedDateFormat + \")\"));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"    void findTodos_returnsEmptyList_onNullOrEmpty() {","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"beta\", false)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r1 \u003d list.findTodos(null);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r2 \u003d list.findTodos(\"   \");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"        TodoList r3 \u003d list.findTodos(\"zzz-not-present\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r1);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        assertNotNull(r3);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r1.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r2.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, r3.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"    void toString_listsTasksOnePerLine_withOneBasedNumbers() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(List.of(","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"alpha\", false),","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"                new ToDo(\"beta\", true)","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"        ));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        String out \u003d list.toString();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.contains(\"1. [T][ ] alpha\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.contains(\"2. [T][X] beta\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"        // exactly one newline between lines, none at end","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(out.split(\"\\n\").length \u003e\u003d 2);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(out.endsWith(\"\\n\"));","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"    // ---- Schedule Conflict Detection Tests ----","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"    void add_allowsNonEventTasks_withoutConflictCheck() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"        // Adding non-Event tasks should never trigger conflict detection","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"task1\", false));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new Deadline(\"deadline1\", LocalDateTime.now().plusDays(1), false));","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, storage.getSaveCalls());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"    void add_allowsNonOverlappingEvents() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"        // Non-overlapping events should be added successfully","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Meeting A\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Meeting B\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(11).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(12).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event2);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, storage.getSaveCalls());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"    void add_throwsException_whenEventsOverlapCompletely() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"        // Add first event","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Meeting A\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(11).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DonLeeHH"},"content":"        // Try to add completely overlapping event","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Meeting B\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(30).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(30).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e list.add(event2));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Scheduling conflict detected!\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Meeting A\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DonLeeHH"},"content":"        // First event should still be in list, second should not be added","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"DonLeeHH"},"content":"    void add_throwsException_whenEventsOverlapPartially() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"DonLeeHH"},"content":"        // Add first event: 9:00-11:00","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Morning Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(11).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"DonLeeHH"},"content":"        // Try to add partially overlapping event: 10:30-12:30","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Lunch Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(30).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(12).withMinute(30).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e list.add(event2));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Scheduling conflict detected!\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Morning Meeting\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"DonLeeHH"},"content":"    void add_throwsException_whenEventStartsExactlyWhenAnotherEnds() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"DonLeeHH"},"content":"        // Add first event: 9:00-10:00","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Meeting A\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"DonLeeHH"},"content":"        // Try to add event that starts exactly when first ends: 10:00-11:00","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"DonLeeHH"},"content":"        // This should NOT conflict (end time is exclusive)","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Meeting B\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(11).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"DonLeeHH"},"content":"        // This should succeed - events that touch at endpoints don\u0027t conflict","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event2);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"DonLeeHH"},"content":"    void add_throwsException_withMultipleConflictingEvents() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"DonLeeHH"},"content":"        // Add multiple existing events","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Meeting A\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(30).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Meeting B\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(11).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(12).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"DonLeeHH"},"content":"        Event event3 \u003d new Event(\"Meeting C\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(14).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(15).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event2);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event3);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"DonLeeHH"},"content":"        // Try to add event that conflicts with multiple events: 10:00-14:30","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"DonLeeHH"},"content":"        Event conflictingEvent \u003d new Event(\"Long Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(14).withMinute(30).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e list.add(conflictingEvent));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Scheduling conflict detected!\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"DonLeeHH"},"content":"        // Should mention both conflicting events","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Meeting A\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Meeting B\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(exception.getMessage().contains(\"Meeting C\"));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"DonLeeHH"},"content":"    void add_allowsEventsOnDifferentDays() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"DonLeeHH"},"content":"        // Events with same times but different days should not conflict","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"DonLeeHH"},"content":"        Event event1 \u003d new Event(\"Monday Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(15).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(15).withHour(10).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"DonLeeHH"},"content":"        Event event2 \u003d new Event(\"Tuesday Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(16).withHour(9).withMinute(0).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(16).withHour(10).withMinute(0).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event1);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event2);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(2, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"DonLeeHH"},"content":"    void add_conflictDetection_ignoresNonEventTasks() throws SidException {","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"DonLeeHH"},"content":"        StorageStub storage \u003d new StorageStub();","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"DonLeeHH"},"content":"        TodoList list \u003d new TodoList(new ArrayList\u003cToDo\u003e(), storage);","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"DonLeeHH"},"content":"        // Add mixed task types","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new ToDo(\"Regular task\", false));","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"DonLeeHH"},"content":"        list.add(new Deadline(\"Deadline task\",","lastModifiedDate":"2025-09-16T14:09:34","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"DonLeeHH"},"content":"                LocalDateTime.now().plusDays(10).withHour(10).withMinute(0).withSecond(0).withNano(0), false));","lastModifiedDate":"2025-09-16T14:09:34","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"DonLeeHH"},"content":"        // Add event that would overlap with deadline time - should not conflict","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"DonLeeHH"},"content":"        Event event \u003d new Event(\"Meeting\",","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(9).withMinute(30).withSecond(0).withNano(0),","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"DonLeeHH"},"content":"            LocalDateTime.now().plusDays(10).withHour(10).withMinute(30).withSecond(0).withNano(0), false);","lastModifiedDate":"2025-09-16T14:03:55","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"DonLeeHH"},"content":"        list.add(event); // Should succeed","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(3, list.getSize());","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-10T01:21:40","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T15:49:12","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":319}},{"path":"src/test/java/sid/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.parser;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"import sid.messages.ResponseMessage;","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.StorageStub;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"import sid.stubs.UiStub;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":" * Test cases for Parser class functionality.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":" * Tests created with assistance from Claude AI to ensure comprehensive coverage","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":" * of command parsing, execution, and UI interaction scenarios.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    private Parser parser;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"    private TodoList tasks;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    private UiStub ui;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    private StorageStub storage;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"        storage \u003d new StorageStub();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"        ui \u003d new UiStub();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_byeCommand_returnsFalseAndShowsGoodbye() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"bye\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        assertFalse(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(ui.isGoodbyeCalled());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_emptyInput_returnsTrue() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_whitespaceOnlyInput_returnsTrue() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"   \", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_nullInput_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"            parser.parseAndExecute(null, tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"No input provided.\", exception.getMessage());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_unknownCommand_throwsException() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        SidException exception \u003d assertThrows(SidException.class, () -\u003e {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"            parser.parseAndExecute(\"unknown\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"        });","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.UNKNOWN_COMMAND.getMessage(), exception.getMessage());","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_todoCommand_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"todo test task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, storage.getSaveCalls());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(ui.getCapturedMessages().get(0).startsWith(\"ADDED:\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_listCommand_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"        // Add a task first","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"        parser.parseAndExecute(\"todo test task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"        ui.reset();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"list\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"LIST: 1 tasks\", ui.getCapturedMessages().get(0));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_markCommand_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"        // Add a task first","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"        parser.parseAndExecute(\"todo test task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"        ui.reset();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"mark 1\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(tasks.getTodo(1).isDone());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(ui.getCapturedMessages().get(0).startsWith(\"MARKED:\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_caseInsensitiveCommands_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"DonLeeHH"},"content":"        boolean result1 \u003d parser.parseAndExecute(\"TODO test task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"DonLeeHH"},"content":"        boolean result2 \u003d parser.parseAndExecute(\"List\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result1);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result2);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"DonLeeHH"},"content":"    // Tests for JavaFX version of parseAndExecute","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecuteJavaFX_validTodoCommand_returnsSuccessMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"DonLeeHH"},"content":"        String result \u003d parser.parseAndExecute(\"todo test task\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result.contains(ResponseMessage.TODO_SUCCESS.getMessage()));","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecuteJavaFX_emptyInput_returnsHelpMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"DonLeeHH"},"content":"        String result \u003d parser.parseAndExecute(\"\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e\", result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecuteJavaFX_whitespaceInput_returnsHelpMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"DonLeeHH"},"content":"        String result \u003d parser.parseAndExecute(\"   \", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e\", result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecuteJavaFX_unknownCommand_returnsErrorMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"DonLeeHH"},"content":"        String result \u003d parser.parseAndExecute(\"unknown\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.UNKNOWN_COMMAND.getMessage(), result);","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecuteJavaFX_invalidCommandArguments_returnsErrorMessage() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"DonLeeHH"},"content":"        String result \u003d parser.parseAndExecute(\"todo\", tasks);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(ResponseMessage.TODO_USAGE_ERROR.getMessage(), result);","lastModifiedDate":"2025-09-16T03:23:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_commandWithExtraSpaces_handledCorrectly() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"  todo   test task with spaces  \", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"test task with spaces\", tasks.getTodo(1).getDescription());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_findCommand_emptyResults() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"DonLeeHH"},"content":"        parser.parseAndExecute(\"todo sample task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"DonLeeHH"},"content":"        ui.reset();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"find nonexistent\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"ERROR: No tasks found.\", ui.getCapturedMessages().get(0));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_findCommand_withResults() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"DonLeeHH"},"content":"        parser.parseAndExecute(\"todo find this task\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"DonLeeHH"},"content":"        ui.reset();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"find this\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(\"FOUND: 1 matching tasks\", ui.getCapturedMessages().get(0));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"DonLeeHH"},"content":"    @Test","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"DonLeeHH"},"content":"    public void parseAndExecute_deleteCommand_success() throws SidException {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"DonLeeHH"},"content":"        parser.parseAndExecute(\"todo task to delete\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"DonLeeHH"},"content":"        ui.reset();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"DonLeeHH"},"content":"        boolean result \u003d parser.parseAndExecute(\"delete 1\", tasks, ui);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(result);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(0, tasks.getSize());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"DonLeeHH"},"content":"        assertEquals(1, ui.getCapturedMessages().size());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"DonLeeHH"},"content":"        assertTrue(ui.getCapturedMessages().get(0).startsWith(\"DELETED:\"));","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":203}},{"path":"src/test/java/sid/stubs/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.stubs;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.exceptions.SidException;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"import sid.storage.Storage;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" * Test double for Storage that avoids disk I/O and records save() calls.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"    public final List\u003cString\u003e snapshots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"    private int saveCalls \u003d 0;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"     * Constructs a StorageStub for testing purposes.","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"    public StorageStub() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"        // Path is unused; superclass requires a constructor arg.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"        super(\"build/test-tmp/unused.txt\");","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"    public TodoList load() {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"        // Not needed for these tests; return an empty list bound to this stub.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"        return new TodoList(new ArrayList\u003cToDo\u003e(), this);","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"     * Returns the number of times save() has been called.","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"     * @return number of save calls","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    public int getSaveCalls() {","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"        return saveCalls;","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-02T18:53:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"    public void save(TodoList list) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"        saveCalls++;","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"        // Capture a lightweight snapshot: size and string forms of tasks (1-based).","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"        StringBuilder sb \u003d new StringBuilder(\"size\u003d\").append(list.getSize());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"        for (int i \u003d 1; i \u003c\u003d list.getSize(); i++) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"            try {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"                sb.append(\"|\").append(list.getTodo(i).toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"            } catch (SidException ignored) {","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"                // Should not happen if TodoList invariants are correct.","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"            }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"        }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        snapshots.add(sb.toString());","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-08-28T17:17:44","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":54}},{"path":"src/test/java/sid/stubs/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"package sid.stubs;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"import java.util.List;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.ToDo;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"import sid.models.TodoList;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"import sid.ui.Ui;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"/**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":" * Test double for UI that captures output calls for verification.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":" *","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":" * Created with assistance from Claude AI to provide comprehensive","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":" * UI testing capabilities without actual user interaction.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":" */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"    private final List\u003cString\u003e capturedMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"    private boolean goodbyeCalled \u003d false;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"     * Returns all captured messages in order.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"     * @return list of captured messages","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"    public List\u003cString\u003e getCapturedMessages() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"        return new ArrayList\u003c\u003e(capturedMessages);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"     * Returns whether showGoodbye was called.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"     * @return true if goodbye was shown","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"    public boolean isGoodbyeCalled() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"        return goodbyeCalled;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"    /**","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"     * Clears all captured state for reuse in multiple tests.","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"     */","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"    public void reset() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.clear();","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"        goodbyeCalled \u003d false;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"        goodbyeCalled \u003d true;","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"GOODBYE\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"ERROR: \" + message);","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"    public void showList(TodoList tasks) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"LIST: \" + tasks.getSize() + \" tasks\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskAdded(ToDo task, int totalTasks) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"ADDED: \" + task.toString() + \" (total: \" + totalTasks + \")\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskMarked(ToDo task) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"MARKED: \" + task.toString());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskUnmarked(ToDo task) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"UNMARKED: \" + task.toString());","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"    public void showTaskDeleted(ToDo task, int totalTasks) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"DELETED: \" + task.toString() + \" (total: \" + totalTasks + \")\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"    @Override","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"    public void showFind(TodoList foundTasks) {","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"        capturedMessages.add(\"FOUND: \" + foundTasks.getSize() + \" matching tasks\");","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"    }","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"}","lastModifiedDate":"2025-09-15T22:04:57","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":84}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"Hello! I\u0027m Sid","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"What can I do for you?","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"  [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"DonLeeHH"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"DonLeeHH"},"content":"1. [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"DonLeeHH"},"content":"2. [D][ ] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"3. [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"4. [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"5. [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"6. [E][ ] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"DonLeeHH"},"content":"YAY! You\u0027ve completed this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"DonLeeHH"},"content":"  [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"DonLeeHH"},"content":"1. [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"DonLeeHH"},"content":"2. [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"DonLeeHH"},"content":"3. [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"DonLeeHH"},"content":"4. [D][X] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"DonLeeHH"},"content":"5. [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"DonLeeHH"},"content":"6. [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"DonLeeHH"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"DonLeeHH"},"content":"Unknown command. Try: todo | deadline | event | list | mark \u003cn\u003e | unmark \u003cn\u003e | delete \u003cn\u003e | bye","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"DonLeeHH"},"content":"  [E][X] another event (from: Sep 01 2025, to: Sep 02 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"DonLeeHH"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"DonLeeHH"},"content":"  [E][ ] an event (from: Aug 30 2025 18:00, to: Aug 30 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"DonLeeHH"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] last deadline (by: Dec 30 2025)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"DonLeeHH"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"DonLeeHH"},"content":"  [D][ ] another deadline (by: Jan 09 2025 20:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"DonLeeHH"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"DonLeeHH"},"content":"  [D][X] a deadline (by: Aug 30 2025 18:00)","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"DonLeeHH"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"DonLeeHH"},"content":"Successfully deleted this task:","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"DonLeeHH"},"content":"  [T][ ] something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"DonLeeHH"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"DonLeeHH"},"content":"Here are your tasks:","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"DonLeeHH"},"content":"ByeByeBye","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"DonLeeHH"},"content":"____________________________________________________________","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":108}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DonLeeHH"},"content":"todo something","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"DonLeeHH"},"content":"deadline a deadline /by 2025-08-30 1800","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"deadline another deadline /by 09/01/2025 2000","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"deadline last deadline /by 30/12/2025","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"event an event /from 2025-08-30 1800 /to 2025-08-30 2000","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"event another event /from 2025-09-01 /to 2025-09-02","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"mark 2","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"mark 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"mark 6","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"DonLeeHH"},"content":"unmark 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"DonLeeHH"},"content":"notvalidinput","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"DonLeeHH"},"content":"delete 6","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"DonLeeHH"},"content":"delete 5","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"delete 4","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"DonLeeHH"},"content":"delete 3","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"delete 2","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"delete 1","lastModifiedDate":"2025-08-28T04:11:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"list","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"bye","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"DonLeeHH"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\sid\\*.java","lastModifiedDate":"2025-09-10T01:38:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"java -classpath ..\\bin sid.Sid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-10T01:42:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"DonLeeHH"},"content":"FC ACTUAL.TXT EXPECTED.txt","lastModifiedDate":"2025-09-10T01:38:51","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":3,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"DonLeeHH"},"content":"# ----- Colors (TTY + tput) -----","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"DonLeeHH"},"content":"if [ -t 1 ] \u0026\u0026 command -v tput \u003e/dev/null 2\u003e\u00261 \u0026\u0026 [ \"$(tput colors 2\u003e/dev/null)\" -ge 8 ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"DonLeeHH"},"content":"  RED\u003d\"$(tput setaf 1)\"; GREEN\u003d\"$(tput setaf 2)\"; BOLD\u003d\"$(tput bold)\"; RESET\u003d\"$(tput sgr0)\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"DonLeeHH"},"content":"else","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"DonLeeHH"},"content":"  RED\u003d\"\"; GREEN\u003d\"\"; BOLD\u003d\"\"; RESET\u003d\"\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"DonLeeHH"},"content":"fi","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"DonLeeHH"},"content":"if [ ! -d \"../bin\" ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"DonLeeHH"},"content":"[ -e \"./ACTUAL.TXT\" ] \u0026\u0026 rm ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"DonLeeHH"},"content":"# compile the code into the bin folder, terminate if error occurred","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"DonLeeHH"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/sid/*.java; then","lastModifiedDate":"2025-08-27T13:57:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%s********** BUILD FAILURE **********%s\\n\" \"$RED\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"DonLeeHH"},"content":"# run the program, feed commands from input.txt file and redirect the output to ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"DonLeeHH"},"content":"java -classpath ../bin sid.Sid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-10T01:42:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"DonLeeHH"},"content":"# convert to UNIX format (fallback if dos2unix is missing)","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"DonLeeHH"},"content":"cp EXPECTED.txt EXPECTED-UNIX.TXT","lastModifiedDate":"2025-09-10T01:38:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"DonLeeHH"},"content":"if command -v dos2unix \u003e/dev/null 2\u003e\u00261; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"DonLeeHH"},"content":"  dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT \u003e/dev/null 2\u003e\u00261","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"DonLeeHH"},"content":"else","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"DonLeeHH"},"content":"  # strip CRs","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"DonLeeHH"},"content":"  tr -d \u0027\\r\u0027 \u003c ACTUAL.TXT \u003e ACTUAL.tmp \u0026\u0026 mv ACTUAL.tmp ACTUAL.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"DonLeeHH"},"content":"  tr -d \u0027\\r\u0027 \u003c EXPECTED-UNIX.TXT \u003e EXPECTED-UNIX.tmp \u0026\u0026 mv EXPECTED-UNIX.tmp EXPECTED-UNIX.TXT","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"DonLeeHH"},"content":"fi","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"DonLeeHH"},"content":"status\u003d$?","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"DonLeeHH"},"content":"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"DonLeeHH"},"content":"if [ $status -eq 0 ]; then","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%sTest result: PASSED%s\\n\" \"$GREEN\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"DonLeeHH"},"content":"  printf \"%s%sTest result: FAILED%s\\n\" \"$RED\" \"$BOLD\" \"$RESET\"","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"DonLeeHH"},"content":"exit $status","lastModifiedDate":"2025-08-22T04:25:52","isFullCredit":false}],"authorContributionMap":{"DonLeeHH":29,"-":17}}]
