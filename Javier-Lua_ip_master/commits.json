{"authorDailyContributionsMap":{"Javier-Lua":[{"date":"2025-08-18T00:00:00","commitResults":[{"hash":"07bebd46f9efd0f4d732218954c0ffcae4f332b8","isMergeCommit":false,"messageTitle":"Renamed chatbot, greets user and exits.","messageBody":"Removed all traces of old name and replaced with \"Milo\".\nInitial skeletal version implemented via System.out.println.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"12257a232c67532cf40b126c9188b9082cd8e57a","isMergeCommit":false,"messageTitle":"Chatbot echoes commands.","messageBody":"Milo now echoes commands entered by the user, and\nexits when the user says \"bye\".\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"0192c049e697175f420db0226d88ffd005d49876","isMergeCommit":false,"messageTitle":"Store \u0026 display text","messageBody":"Chatbot now stores input given by user\nand displays it back to the user\nwhen \"list\" is entered.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":6}}},{"hash":"714239fca60a007e0c4adfffc3f2f91d14ee8b5a","isMergeCommit":false,"messageTitle":"Mark and unmark tasks","messageBody":"Integrate Task class and allow users\nto mark and unmark tasks.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":13}}},{"hash":"ba260c7ed16b6f36055f1005560c4b6e2c3ee3d4","isMergeCommit":false,"messageTitle":"Tasks can now only be added using Todo, Deadline, Event","messageBody":"Also implement date and time for Deadline\nand Event.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":12}}},{"hash":"e0dc0005dee7a8741869f0871c4d1b7c380fa5a8","isMergeCommit":false,"messageTitle":"Test using I/O redirection","messageBody":"Test typical user commands to reduce\nneed for manual testing.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"37d6440abcd61f1af22a1765d716643f1d726e5b","isMergeCommit":false,"messageTitle":"Handle Errors","messageBody":"Throw error when command format\nis incorrect.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":1},"java":{"insertions":74,"deletions":47}}},{"hash":"619da0aaca85f9f66c1cf19cbf14931162e74fd2","isMergeCommit":false,"messageTitle":"Delete tasks","messageBody":"Add support for deleting\ntasks from the list.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":30,"deletions":11}}}]},{"date":"2025-08-19T00:00:00","commitResults":[{"hash":"c0d2a6df1e68e0bd03131375e62953d172174311","isMergeCommit":false,"messageTitle":"Add Enums","messageBody":"Incorporate TaskType and Status enums\nand organised files in src code.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":12}}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"8bb7d4574833c3267458d1f050c4167fda34aa0e","isMergeCommit":false,"messageTitle":"Save and load tasks to disk on exit","messageBody":"Tasks in the chatbot are not persistent across sessions. Users\nhave to re-enter tasks everytime the chatbot starts.\n\nLet\u0027s update Milo to read tasks from the hard disk when it starts\nand write all changes back to the file when the user types \"bye\"\nor exits.\n\nThis ensures that the task list is preserved between sessions,\nbut note that changes are only saved at the end of the session,\nnot whenever the task list is updated.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":141,"deletions":12},"sh":{"insertions":1,"deletions":1}}},{"hash":"5bd5aec7762bf3cd9ab629c2383ccb4cd7ccb17d","isMergeCommit":false,"messageTitle":"Save tasks to disk immediately after changes","messageBody":"Tasks were only saved to the hard disk when the user exited\nthe chatbot with \"bye\". Any changes during the session were\nlost if the program unexpectedly terminates.\n\nLet\u0027s update Milo to save task list immediately after\nany changes are made, ensuring data loss is minimised\nand keeping tasks up-to-date in real time.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":20}}},{"hash":"a072adeb6662eb53441fb1641630aef2350562e2","isMergeCommit":true,"messageTitle":"Merge \u0027branch-Level-7\u0027 into \u0027master\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"8a477de61c385f7a648f026f1eecb154f05b5ae6","isMergeCommit":false,"messageTitle":"Task list: fix numbering after deletion","messageBody":"When a task is deleted, the numbering shown\nby the \u0027list\u0027 command skips the removed task,\nresulting in non-sequential numbering\n(e.g. 1, 2, 4, 5 if task 3 was removed).\n\nThis is confusing for users and breaks\nthe expectation that task numbers are always contiguous.\n\nLet\u0027s update the list command to that numbering\nis always sequential.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":9}}},{"hash":"dff412921a2a9d7951878f4de473574700a9c95d","isMergeCommit":false,"messageTitle":"Task dates: parse and store date and time","messageBody":"Currently, dates are stored as Strings.\n\nThis makes it harder to process or display\ndates in a consistent format.\n\nLet\u0027s parse Deadline and Event date and time\ninputs into actual date and time that\ncan be understood by the chatbot.\n\nAs an aside, add a new \u0027reset\u0027 command to\nclear all tasks from the list.\n\nUsing LocalDateTime instead of Strings enables\nfuture features such as listing tasks by date\nor sorting tasks chronologically.\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":4},"java":{"insertions":94,"deletions":34}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"091cf8cfea9882f149a14c353dfa076b88c185e1","isMergeCommit":false,"messageTitle":"Add commands: sort, show and help","messageBody":"Users currently cannot check tasks\nby date, sort them in chronological\norder, or discover all available\ncommands easily.\n\nLet\u0027s,\n* add \u0027sort\u0027 to arrange tasks chronologically\n* add \u0027show \u003cyyyy-MM-dd\u003e\u0027 to display tasks for\na specific date\n* add \u0027help\u0027 to list available commands\n","fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":4},"java":{"insertions":89,"deletions":13}}},{"hash":"21ca669eae728deda6edb31321d3ff59527dd34a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"e6f6ff1c296dc96b97f97bd12f18bd1ca769d3a2","isMergeCommit":false,"messageTitle":"Refactor: UI, Storage, Parser, TaskList","messageBody":"Extract user interaction, file I/O, and parsing\nlogic into separate classes (Ui, Storage, Parser).\nCreate TaskList to encapsulate task operations.\nIntroduce Command classes.\n\nThis improves separation of concerns, simplifies\nthe main application of logic, and makes it\neasier to extend with new commands in future.\n","fileTypesAndContributionMap":{"java":{"insertions":733,"deletions":302}}},{"hash":"5763976b47d40caa3146ca3a6796318dcd081750","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"cc54d8566562962a2107ae8a8dfad6ce6d99bda1","isMergeCommit":false,"messageTitle":"Refactor: organize code into packages","messageBody":"Group classes into packages for better structure:\n* command: Command classes\n* storage: Storage and file I/O\n* enums: shared enums\n* exception: custom exceptions\n* logic: Parser logic\n* model: TaskList, Task, Deadline, Event, Todo\n* ui: User display\n\nImproves modularity, readability.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":62,"deletions":61},"sh":{"insertions":1,"deletions":1}}},{"hash":"9a01d52984bbc84424b7f011f089b7be53071437","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"bd8249f43694682553d56cd15b7397c6070acc05","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"312cd65855cdd623a8eada14974cde64c61e48d9","isMergeCommit":false,"messageTitle":"Implement Gradle build","messageBody":"Add Checkstyle configuration.\nConfigure application plugin\nwith mainClass set to Milo.\n","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":1},"txt":{"insertions":5,"deletions":0},"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"7dc90220b46f2a1c4b59e6b5abec64c2b52dacd9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"d1e8d05433e332a52cb007e12764b5aec90d5759","isMergeCommit":false,"messageTitle":"Test Task.makeTask and Storage.readFile","messageBody":"Add JUnit tests to test valid and edge\ncases for Task.makeTask, as well as\ninvalid and valid file lines in\nStorage.readFile. Ensure\nexceptions are thrown for\nmalformed or missing data.\n","fileTypesAndContributionMap":{"java":{"insertions":171,"deletions":6}}},{"hash":"b0685c1c58a1225626882c7f9f66eb21bd8de4d0","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"c2824d5918e28a86b369ff241c9ed78ec538793e","isMergeCommit":false,"messageTitle":"Rename JAR name to milo","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"764df5030258398e79bf94e4b815b09db8fbdbc1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"b1663cc79c24d700f1364f1be5ec18d73d1c3d2c","isMergeCommit":false,"messageTitle":"Add JavaDoc to methods and classes","messageBody":"Improves readability and\nmaintainability of code by\nproviding clear documentation\nfor all methods and classes.\n","fileTypesAndContributionMap":{"java":{"insertions":502,"deletions":5}}},{"hash":"126c4f052a2c90497c080719c1aa34cdfd6185bd","isMergeCommit":false,"messageTitle":"Apply coding style fixes","messageBody":"Reformat code to comply with\nCheckstyle rules.\n","fileTypesAndContributionMap":{"java":{"insertions":138,"deletions":138}}},{"hash":"5f4a2d62570bd6f43942a3be921f4601c0446567","isMergeCommit":false,"messageTitle":"Implement \u0027find\u0027 command to search tasks","messageBody":"The search is case-sensitive.\n\nThis improves task retrieval and user\nconvenience.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":5},"java":{"insertions":60,"deletions":2}}},{"hash":"50ec965b832321a2aa8ca5693b6060aeaf619779","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"d1f6144ebaedde4c262dcac93eaab4f1349f90c5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"dc3d4d31ad832c85b58f53df7c197a5a1d927c7c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"5326c7c8894f45ed206b166c15b68c48a76a67e7","isMergeCommit":true,"messageTitle":"Enforce Checkstyle and clean up code","messageBody":"Some parts of the codebase\ndid not fully adhere to Checkstyle\nrules. There were also typos in\ncode and comments, and a few\nvariables that were unused or\nirrelevant.\n\nLet\u0027s fix the style violations,\ncorrect the typos, and remove\nunused variables. This improves\ncode readability, maintainability,\nand ensures consistent coding\nstandards across the project.\n","fileTypesAndContributionMap":{}},{"hash":"5e6fddb103cb438beff41a5ef774c3f2e0771759","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"ed95e8bd5fa3f7473b3925fce78fcadcdcd1e4bd","isMergeCommit":false,"messageTitle":"Integrate GUI with JavaFX","messageBody":"Set up the main window and dialog\ncomponents using JavaFX controls.\nThis connects the UI to the Milo\nbackend.\n","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":2},"txt":{"insertions":0,"deletions":5},"fxml":{"insertions":44,"deletions":0},"java":{"insertions":336,"deletions":102}}},{"hash":"77d3a0de6cf63cc4d9c7cda89fe362b67d9bee02","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10","A-Varargs"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"f88d42daae0f67099376f0dfe20528fae46ea63b","isMergeCommit":false,"messageTitle":"Add assertions to validate internal invariants","messageBody":"The codebase currently lacks assertions to\ncatch programming errors during development.\nThis makes it harder to detect bugs related to\ninvalid internal state and incorrect method\nusage.\n\nLet\u0027s add assertions to validate internal\ninvariants in key classes:\n* Storage class: validate contructor\nparameters and task state in saveTasks\n* Milo class: validate parameters in\nconstructor, getResponse, run, and main\n* Parser class: ensure input string is\nnot null\n* Command class: validate parameters\nin all factory methods\n\nUsing assertions is appropriate as they\ncan be disabled in production and are\nsuitable for checking conditions that\nshould never occur if the code is\ncorrect. They help catch programming\nerrors early without affecting\nproduction performance when\ndisabled.\n\nNote: Assertions should be enabled during\ndevelopment using the -ea JVM flag to\nbenefit from these checks.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":2}}},{"hash":"939dddd2e45b5e92c856fedd73ba42dfa16be71a","isMergeCommit":false,"messageTitle":"Refactor: apply SLAP, KISS, remove magic literals","messageBody":"Some methods and logic mixes high-level steps\nwith low-level details and uses raw numeric\nliterals for configuration.\n\nThis violates the SLAP and KISS principles,\nmaking the code difficult to reason about\nand modify. The magic literals are also\nduplicated in multiple places.\n\nLet\u0027s refactor to:\n* Extract low-level details into separate,\nwell-named methods to adhere to SLAP\n* Replace magic numbers and strings with\nnamed constants to clarify intent\n* Simplify complex conditional checks by\nbreaking them down\n\nThis restructuring improves\nmaintainability by isolating concerns.\nUsing named constants eliminates the\nrisk of inconsistencies when a value\nneeds to be changed.\n","fileTypesAndContributionMap":{"java":{"insertions":531,"deletions":258}}},{"hash":"f36e1fe764fc189a04c484445fef98f5f6bb1112","isMergeCommit":false,"messageTitle":"Refactor TaskList filter methods to use Streams","messageBody":"The imperative for-loops in the filter methods\nobscure the high-level purpose of the\noperation, which is simply to select matching\ntasks.\n\nThis refactoring replaces the loops with a\nmore declarative approach. The new\nimplementation expresses the filtering logic\nmore directly, making the code easier to read\nand maintain.\n\nThe behavior of the methods remains identical,\nensuring no regressions are introduced by this\nquality improvement.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":14}}},{"hash":"2b23becaa4cc2616c4cbcf47d59fe4ed4196ec18","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Javier-Lua/branch-A-Assertions","messageBody":"Add assertions to validate internal invariants","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"6f34dccbc95c245116ad4cebf395ce2a27912aa5","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"9c82f5a4a4383416ac7fa8493e241d9dff9ccb2a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"92cd0587ead6fb640d682f1f6a5a36d5596d2adc","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Javier-Lua/branch-A-CodeQuality","messageBody":"Refactor: apply SLAP, KISS, remove magic literals","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"55c5eba1b9ba627e62c99b28221e58be2e9f2c9a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6bb029708d39dc13b5ec619c4330f2d3c3753a8e","isMergeCommit":true,"messageTitle":"Merge pull request #3 from Javier-Lua/branch-A-Streams","messageBody":"Refactor TaskList filter methods to use Streams","tags":["A-Streams"],"fileTypesAndContributionMap":{}},{"hash":"0b1a413962a3e5014cd17d87a164232ced5ffb78","isMergeCommit":false,"messageTitle":"Fix Checkstyle in test files","messageBody":"Minor missing whitespace\nfor StorageTest file.\n","tags":["A-CI"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"dd094855c46fcee71ad87e5c743ea52ea3283a20","isMergeCommit":false,"messageTitle":"Implement undo command","messageBody":"The application currently lacks\nthe ability to reverse accidental\nchanges, which can lead to user\nfrustration when commands are\nexecuted by mistake.\n\nThis commit introduces a comprehensive\nundo system that allows users to revert\ntheir most recent action. The implementation\nfollows the Command Pattern, where each\ncommand is responsible for its own undo\noperation.\n\nKey changes include:\n* Added CommandHistory class to maintain stack\nof executed commands\n* Modified all command classes to implement undo\nfunctionality\n* Created UndoCommand class to handle undo requests\n* Updated parser to recognize undo commands\n* Integrated command history into main\napplication flow\n\nThe undo system supports reversal of all task\noperations including add, delete, mark, unmark\nand reset commands. Users can now type \u0027undo\u0027\nto revert their last action, with appropriate\nfeedback messages for successful undo operations\nand error cases when nothing remains to undo.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":2},"java":{"insertions":344,"deletions":26}}},{"hash":"3a5f51ede2974b7d47d6fd355c08e31a910c9abd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-Undo\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-14T00:00:00","commitResults":[{"hash":"210260941ec3d0a449b768f962167c36f29d675d","isMergeCommit":false,"messageTitle":"Command history: Ignore non-state commands","messageBody":"Commands like \u0027find\u0027 and \u0027help\u0027 are recorded\nin the command history and therefore\nbecome eligible for \u0027undo\u0027.\n\nThis is unintuitive because these are query/\nutility commands that do not modify\napplication state; users expect \u0027undo\u0027 to\nonly revert state-changing actions.\n\nLet\u0027s stop recording non-state-changing\ncommands in the history used by \u0027undo\u0027.\nUpdate the history filter to check\nwhether a command mutates state before\nadding it.\n\nThis keeps \u0027undo\u0027 focused on meaningful\nchanges and prevents accidental reversions\ncaused by running utility commands.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":1}}},{"hash":"af73caff66ec488d0815b0a174507819e327d9be","isMergeCommit":false,"messageTitle":"Storage \u0026 Parser: Improve error handling \u0026 tests","messageBody":"The Storage class previously had weak error\nhandling and unsafe file operations.\nParser class also lacked handling for empty\ninputs, which could cause unexpected\nexceptions.\n\nTests for Storage were minimal and did not\ncover permission errors, empty files, or\nskipped invalid lines.\n\nLet\u0027s improve the code by:\n* trimming and validating task fields,\nskipping invalid/empty lines\n* checking read/write permissions before\noperations\n* saving tasks via a temporary file to\nprevent corruption\n* handling IO and Security exceptions\n* modularizing file operations\n* enhancing StorageTest with permissions,\nempty file, invalid line, and file\ncreation scenarios\n* adding empty input handling in Parser\n\nThese changes make storage operations safer,\nparsing more robust, errors more informative,\nand tests more comprehensive.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":298,"deletions":57},"md":{"insertions":3,"deletions":0}}},{"hash":"69426dc51d3c8b8d9b409211dae7f159f6559602","isMergeCommit":false,"messageTitle":"TaskList: Add tests \u0026 fix filter bugs","messageBody":"Add the first set of test cases for\nTaskList class, covering:\n* adding, deleting and retrieving\ntasks\n* marking and unmarking tasks\n* sorting tasks by date\n* filtering tasks by date and desc,\nincluding empty or whitespace desc.\n\nFix bugs in TaskList.filter(String)\nto correctly handle empty strings\nto avoid returning incorrect\nresults.\n","fileTypesAndContributionMap":{"java":{"insertions":301,"deletions":0},"md":{"insertions":2,"deletions":1}}},{"hash":"aad6bd072f609e7b5bc3421658bb9349bc9aa9e1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreErrorHandling\u0027","messageBody":"","tags":["A-MoreTesting","A-MoreErrorHandling","A-AiAssisted"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-15T00:00:00","commitResults":[{"hash":"496ded90e4a398bdef3417585af6dfc99e4b17cc","isMergeCommit":false,"messageTitle":"docs: Update README and ensure AI.md is complete","messageBody":"The README file has some unclear instructions,\nand AI.md required additional content to\ncover relevant AI usage examples.\n\nLet\u0027s,\n* improve readability and instructions in README\n* expand AI.md to include necessary examples\n\nThis ensures the documentation is comprehensive\nand consistent for users.\n","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":9}}},{"hash":"a75607b088c0cdfa069a802c526f2f6abd60f6a5","isMergeCommit":false,"messageTitle":"Remove unused methods \u0026 set chatbot window title","messageBody":"The codebase contains methods that are not used\nanywhere in the application. The chatbot GUI\nwindow lacks a title, making it less\nuser-friendly.\n\nUnused methods increase code complexity and\nmaintenance overhead. A window without a\ntitle can confuse users as it lacks content.\n\nLet\u0027s,\n* remove all unused methods to clean up the code\n* add a title to the chatbot GUI window for\nbetter usability\n\nThis improves code quality and enhances the user\ninterface.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":36}}}]}]},"authorFileTypeContributionMap":{"Javier-Lua":{"java":3068,"md":13,"fxml":44,"sh":1,"bat":1,"gradle":23,"txt":39}},"authorContributionVariance":{"Javier-Lua":182532.19},"authorDisplayNameMap":{"Javier-Lua":"CS2103T-T15-4 LUA ..VIER"}}
