{"authorDailyContributionsMap":{"vanphuc1201":[{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"33bac6af4df590f9d4184d42699b2199c497153c","isMergeCommit":false,"messageTitle":"Rename main class to Launcher, add Phuc class for chat bot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":10}}},{"hash":"2f0f56eae5ceb1e9ace470b26a9e7cf1f7db0a0f","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"1f01ba5dfa06af8dc5cb3b801c150bcf7affb8e8","isMergeCommit":false,"messageTitle":"Make the echo method in Userinterface and change Phuc to read the user input and respond echo or bye","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":6}}},{"hash":"664087b90f1492b63b6371e921a9bcc9bd86d2db","isMergeCommit":false,"messageTitle":"Modified the action to addlist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"66b412ef0fab2d1868fc15c8f58fee72ff2cf826","isMergeCommit":false,"messageTitle":"Add the methods for add and list action in Ui","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"57e911682fd79dbdf9b58e40a4890bda2adb563e","isMergeCommit":false,"messageTitle":"Change the method to only recieve the command from people then process it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"3f487e5a47ac424586e23195ee9c73d3ac8faa85","isMergeCommit":false,"messageTitle":"Take the command from Phuc chat bot and then parse the command then answer throught Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"fd3c5dce3307e177405725c7a61d7d56643b5b41","isMergeCommit":false,"messageTitle":"Describe a task and some method in it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}},{"hash":"5c5c0cb951f2e4e3448bfaf7ee6a104b53bbd39a","isMergeCommit":false,"messageTitle":"I change some methods to meet the need of the command","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":18}}},{"hash":"b5a39e758bdc1696ca0e616c64c90683dec2446d","isMergeCommit":false,"messageTitle":"I change some name to meet the OOP name\u0027s rule","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":11}}},{"hash":"ba35a36fc48127875a1ce96cdeb53b3227bc813b","isMergeCommit":false,"messageTitle":"i make the ToDoTask.java extends from Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":2}}},{"hash":"22fb8b1a086c1164a2096f9d8021170e13329ce0","isMergeCommit":false,"messageTitle":"i make the DeadlineTask.java extends from Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"852a57f09423e6ddd105909c47aff3fbba9bfbc7","isMergeCommit":false,"messageTitle":"i make the EventTask.java extends from Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"027f7d80749c0a3c9cf8bf8a7e4a131476ccb80b","isMergeCommit":false,"messageTitle":"i modify the ProcessInput.java to process the command and UserInterface.java to respond the corresponded command.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":8}}},{"hash":"7f57e67397945b8fee7859a73aa96f773ca40e71","isMergeCommit":false,"messageTitle":"TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"0f00f40569c66cdcd82a004ca0fbaffc97e7b0fa","isMergeCommit":false,"messageTitle":"I make PhucException.java to handle exception of Phuc chat bot.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"1ebf243ff99ca26b3bac00fc1cda240670302cfc","isMergeCommit":false,"messageTitle":"I modify every class to make the chat bot handle all the exception until now, i also add some emoji to make the chat bot not too boring.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":15}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"4d2f388b575bfeb97ee1a798198960aa33c75480","isMergeCommit":false,"messageTitle":"i have change the task list in UserInterface.java to ArrayList and also impliment the method delete in UserInterface.java","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":19}}},{"hash":"8709346b8e7332865328112b269ff5db37e902c1","isMergeCommit":false,"messageTitle":"Do the input and output to become the test cases of the chat bot","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"e04d86fe072128e23bdbeec7fefe95ee03a3bc10","isMergeCommit":false,"messageTitle":"Add Storage class: add file persistence layer","messageBody":"- Implement Storage class with save/load functionality\n- Add file format handling for all task types (T|D|E)\n- Create data directory automatically if missing\n- Use pipe-separated format: T|true|description\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":0}}},{"hash":"54bc3bcecdbf156d6fc658c22702d0a60ac8346c","isMergeCommit":false,"messageTitle":"Update Tasks: add constructors with isDone parameter","messageBody":"Since when i read the input file from phuc.txt, there are many information that need to add in a task while the constructor right now haven\u0027t have the method to take in the isDone parameter so i need to add another way to construct a task\n\nLet\u0027s\n* add new constructors to Task, DeadlineTask, EventTask, ToDoTask\n* accept isDone parameter for loading from storage\n* maintain backward compatibility with existing code\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":10}}},{"hash":"0bcc1a405a3aecbcf7c8bac8970d1cfa236c63c6","isMergeCommit":false,"messageTitle":"Update UserInterface.java, ProcessInput.java and Phuc.java: integrate storage with user interface","messageBody":"Since the storage need to behave and do many actions like load the data from hardcode or save the new data to hard code so i need to change the ProcessInput and UserInterface as well as Phuc to meet the require action to the data file\n\nLet\u0027s\n* add Storage dependency to UserInterface\n* implement load() method to load tasks from file\n* implement saveToStorage() method for automatic saving\n* update task counting to use ArrayList size instead of manual count\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":78}}},{"hash":"0c7d3021844312a285c5b99d28de327161a9c38b","isMergeCommit":false,"messageTitle":"Update ErrorHandler.java: enhance error handling for storage operations","messageBody":"Since reading a file or save the data to the file may cause many exception so i need to update it to handle these situation\n\nLet\u0027s\n* add IOException handling for file operations\n* create custom PhucException for storage errors\n* improve error messages for file operations\n* add input validation and trimming in Storage.load()\n","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":0}}},{"hash":"b5b66083c4cfec84db303222e2cef6cd350c1ade","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 into master","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"4d8b6585e8a14a6c174cbb61f806939b8e20ba16","isMergeCommit":false,"messageTitle":"Add DateTimeProcess.java for date parsing and formatting","messageBody":"Add DateTimeProcess class for date/time handling\n\nSince we have to deal with the Date and Time, make the data more meaningful, i make this class to handle these data\n\nLetâ€™s\n* Implement comprehensive date parsing with multiple input formats\n* Add output formatting for display and file storage\n* Support both date-only and date-time inputs\n* Include ISO format support for compatibility\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"e3074cca78dbc64e054bc5e635280dcfbd3c19b6","isMergeCommit":false,"messageTitle":"Update task classes to use LocalDateTime","messageBody":"Update task: migrate from String to LocalDateTime for dates to make it more meaningful\n\nLet\u0027s\n* modify DeadlineTask to use LocalDateTime instead of String\n* modify EventTask to use LocalDateTime for start/end times\n* update constructors to accept LocalDateTime parameters\n* implement new writeToFile() methods using DateTimeProcess\n* maintain backward compatibility with existing functionality\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":15}}},{"hash":"7bc764329cf61e4ac5629168d6c3a1fe1df51134","isMergeCommit":false,"messageTitle":"Enhance ErrorHandler with date validation","messageBody":"Add date format validation and error handling\n\nLet\u0027s\n* add ERROR_DATE_FORMAT constant for user-friendly messages\n* implement validateAndParseDateTime() method in ErrorHandler\n* add date format validation to event and deadline validation\n* include time order validation for events (end after start)\n* provide clear error messages for invalid date formats\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"860c17a65bb970d9c087705dcd3f6393d5a1188d","isMergeCommit":false,"messageTitle":"Update ProcessInput to handle date parsing","messageBody":"Integrate date parsing in ProcessInput\n\nLet\u0027s\n* modify handleEvent() to parse and validate date strings\n* update handleDeadline() to use DateTimeProcess for parsing\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"cdfebf5ddeb8be5f61260938d59d37fe8a02c0e4","isMergeCommit":false,"messageTitle":"Update UserInterface for LocalDateTime support","messageBody":"Update the UserInterface to make it appropriate with other class\n\nLet\u0027s\n* change deadline() method to accept LocalDateTime instead of String\n* modify event() method to use LocalDateTime for start/end times\n* remove redundant date parsing from UI methods\n* maintain existing user output format and messaging\n* ensure consistent date display across the application\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"50da227502850e780956eef111eebf61bd743cc5","isMergeCommit":false,"messageTitle":"Enhance Storage class for date serialization","messageBody":"Update the storage to read new file and also load new kind of fil\n\nLet\u0027s\n* modify load() method to parse date strings from file using DateTimeProcess\n* update save() method to use DateTimeProcess.formatForFile()\n* add error handling for corrupted date entries in storage file\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":9}}},{"hash":"788cd80e775e7cd12c8bca225fc547e28d852976","isMergeCommit":false,"messageTitle":"Update automatic testing","messageBody":"Update the input and output to check with new format of time\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":10}}},{"hash":"3e7363699baf580277244c30daa67da8f5d3b9f6","isMergeCommit":false,"messageTitle":"Add TaskList for control the list of tasks","messageBody":"Since the ArrayList\u003cTask\u003e may cause some type error when the project is bigger, i add the TaskList class for type safe\n\nLet\u0027s\n* implement basic TaskList class with ArrayList backing\n* add core methods: add, get, remove, size, isEmpty, clear\n","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":0}}},{"hash":"14cf493a6cfc01876bc7cd11b31074079763912a","isMergeCommit":false,"messageTitle":"Update Storage and UserInterface for fit the TaskList","messageBody":"Since the last time, it is ArrayList\u003cTask\u003e so i change everything to TaskList type and change some method to meet the new TaskList method\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"7430544851d80e381818f5e540cc55fdff94d1d2","isMergeCommit":false,"messageTitle":"Create file packages for all the file","messageBody":"Organize the classes into suitable java packages and also import each class with the needed path\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":673}}},{"hash":"d945b5d943691e831f40966bd162b5cb3ad99342","isMergeCommit":false,"messageTitle":"Change filepath and import the useful packages for each file","messageBody":"Add package and import in each file\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":731,"deletions":0}}},{"hash":"70ddca00b304db7b5decaa32a1a2339e725a34fc","isMergeCommit":false,"messageTitle":"Fix some import for the file that the class do not need","messageBody":"Modify the import statement to make the code more clean\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":7}}},{"hash":"2487982ed2317c523e08807c4b7ebb70ffebb174","isMergeCommit":true,"messageTitle":"Merge A-MoreOOP and Packages increment into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1dea0561d988f6e837d2b3b40a063cc075771d84","isMergeCommit":true,"messageTitle":"Add add-gradle-support branch","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"7ecbfa02bff73ac55bc96971c7bd79218a29d762","isMergeCommit":false,"messageTitle":"Import Gradle to the project","messageBody":"Need to use a tool to help that handles compiling, testing, packaging, and running my code â€” all in one consistent way\n\nHave import Gradle to the project\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2}}},{"hash":"9a234d591eefc1c5309f52d844cf7c8025e47a2e","isMergeCommit":false,"messageTitle":"Add Junit tests for DateTimeProcess class","messageBody":"Add DateTimeProcessTest class to test many methods:\n* parseDateTime\n* formatForDisplay\n* formatForFile\n* roundTripFormatting\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}},{"hash":"728d853ff2a645134846f7cfcf4984e90cc666f7","isMergeCommit":false,"messageTitle":"Add Junit tests for ErrorHandler class","messageBody":"Add ErrorHandlerTest class to test many methods:\n* validateTaskIndex so that it can check if the index is suitable or not\n* validateDescription so that it can check if the description is correct format or not\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}},{"hash":"604c86704508be6c3fa4e3a96db5757028e38c69","isMergeCommit":false,"messageTitle":"Add Junit tests for processInput class","messageBody":"Add ProcessInputTest class to test many methods:\n* start\n* end\n* load\n* process\nSo that these method don\u0027t throw an exception\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"5fdbf82b86474c18559c284334c0b3d2daf8c406","isMergeCommit":false,"messageTitle":"Add Junit tests for TaskList class","messageBody":"Add TaskListTest class to test many methods:\n* add\n* get\n* size\n* remove\n* isEmpty\nTo check whether these methods have run right or not\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":2}}},{"hash":"e8ab9c51b48629a6f0f44fcde281c2cd9f672ce8","isMergeCommit":false,"messageTitle":"Make a Phuc.jar file in build/libs/ that can run","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":2}}},{"hash":"3345e5a31eb9f993bcb8ca9add258958d93278f9","isMergeCommit":true,"messageTitle":"Merge Jnuit branch and Jar branch to the master branch","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"232a74ecaa47175c234aed58f465664054ca35e8","isMergeCommit":false,"messageTitle":"Add detailed JavaDoc documentation for all the methods and classes","messageBody":"To make it easier to understand, all the methods and classes have been added a javadoc for description of that methods\n","fileTypesAndContributionMap":{"java":{"insertions":421,"deletions":5}}},{"hash":"602adc49995fb271dedc62c2fd0f6da661169609","isMergeCommit":false,"messageTitle":"Change name and some format to meet coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":20}}},{"hash":"bc21e077bd4fe229b038687597141923d4cae99c","isMergeCommit":true,"messageTitle":"Merge the A-JavaDoc branch to master","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"f146ff73368421c97f743dbd4e974dd040f8219f","isMergeCommit":false,"messageTitle":"Add find command to search tasks by keyword","messageBody":"Update feature find to Phuc by update these following:\n* update TaskList to have a method to find keyword\n* update UI to print the task that contain keyword to the user\n* update ProcessInput to read the command find\n","fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":74,"deletions":26}}},{"hash":"7dfd223b0e0d4be149054575d1bece94d8ea38f7","isMergeCommit":true,"messageTitle":"Merge branch A-CodingStandard to master","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"cbbda0ff098a1b93fb128c7299490402b7a3b213","isMergeCommit":true,"messageTitle":"Merge the branch-Level-9 to master and resolve the conflicts","messageBody":"Resolve the conflict in UI and TaskList\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-04T00:00:00","commitResults":[{"hash":"a479b1d8deb50d950d481ae7d00620ac545cb59d","isMergeCommit":false,"messageTitle":"Add checkstyle.xml and suppressions.xml file","messageBody":"Since i want to check style of the code automatically, i add two files one for checks the main code complies with the style rules and other for checks the test code complies with the style rules\n","fileTypesAndContributionMap":{"gradle":{"insertions":9,"deletions":0}}},{"hash":"906a1cb19874d70c08338ff66c9f553d3928412b","isMergeCommit":false,"messageTitle":"Update all the .java file to make it correct with the coding standard","messageBody":"Mostly update with the import things and for the white space between the arithmetic and the operands\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":77,"deletions":55}}},{"hash":"bbfa0d40488c72899c2a9e47964355408288eff2","isMergeCommit":true,"messageTitle":"Merge the branch for checkstyle and the master branch","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"778101563cd00c5cd92bf8fa49284c560e7ee872","isMergeCommit":false,"messageTitle":"Add 2 fxml file for the design of the GUI","messageBody":"Since design the window and dialog box in the same class make it long and hard to read, make 2 these to make it more clean code\n","fileTypesAndContributionMap":{"fxml":{"insertions":41,"deletions":0}}},{"hash":"4318787de08f0277b54fff9173588a36f59b01f9","isMergeCommit":false,"messageTitle":"Update file and add file for the GUI","messageBody":"For the GUI, these class help to design the GUI as intend from the dialog box to the scence and stage\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"txt":{"insertions":4,"deletions":13},"java":{"insertions":319,"deletions":2}}},{"hash":"f3b8a926e7e8c593d6bb83ff443ee8009843ec60","isMergeCommit":true,"messageTitle":"Merge branch-GUI with master branch","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"vanphuc1201":{"java":1717,"md":3,"fxml":41,"sh":1,"bat":1,"gradle":41,"txt":23}},"authorContributionVariance":{"vanphuc1201":175738.72},"authorDisplayNameMap":{"vanphuc1201":"CS2103T-F12-1 HOAN..PHUC"}}
