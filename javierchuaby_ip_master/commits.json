{"authorDailyContributionsMap":{"javierchuaby":[{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"eb82a6a4213d89d705a8ef39b54638ecb538498b","isMergeCommit":false,"messageTitle":"Added greeting and changed name","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"b71df07db1a80039a27010f0548f7f0b2cedbfe5","isMergeCommit":false,"messageTitle":"added horizontal lines to output","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"552d748da3cf71ba4581fff560096c33687b9701","isMergeCommit":false,"messageTitle":"Mr Moon can now echo user input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":3}}},{"hash":"92291ba69f6deeea9d6dc3740bae6645c38095e9","isMergeCommit":false,"messageTitle":"Added indentation to bot messages","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":4}}},{"hash":"f0650ecbd26935ec64d7d902578b3ec0985dc482","isMergeCommit":false,"messageTitle":"added ability to store input and display when \u0027list\u0027 is used","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"c6abfab1c1d838390fcc6b01c31c125cfea317a7","isMergeCommit":false,"messageTitle":"made code cleaner, shortened length of horizontal line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":11}}},{"hash":"b38178b7e0d701a973aeefe9034dfc19bea4790a","isMergeCommit":false,"messageTitle":"added the ability to mark tasks as done, and change status back to not done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":6}}},{"hash":"146208ffb2ac3d939b1b3f60e4faeb3eb735dcd3","isMergeCommit":false,"messageTitle":"added support for tracking 3 types of tasks, amended such that Mr Moon will ONLY accept these 3 tasks and nothing else","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":6}}},{"hash":"560438cfd12e86d7f6eeffc321dc9c4c11f9e326","isMergeCommit":false,"messageTitle":"added UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":34,"deletions":26}}},{"hash":"396903dcf42ac44248e7a2276c1f1a660aea67c6","isMergeCommit":false,"messageTitle":"error handling for incorrect inputs","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fd907f47c82ee782ef6b8e280c111c09d9671270","isMergeCommit":false,"messageTitle":"changed goodbye message :)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"df4f7cef9f02baac977786ef62dad7bbbac90254","isMergeCommit":false,"messageTitle":"added function to delete task","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"0718ab8a5de048f87474e2de7cd62032ed5b5250","isMergeCommit":false,"messageTitle":"Refactored some UI elements into Ui.java file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":42}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"6130e720bbae39500fc3f47b371b3828366335bd","isMergeCommit":false,"messageTitle":"Refactor parsing logic","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":165,"deletions":96}}},{"hash":"ee94c2637c2e1ddaa0b8eec9db1c1ddc4e6fb494","isMergeCommit":false,"messageTitle":"More refactoring","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":195,"deletions":177}}},{"hash":"b05ecb05984859538c47ed1eb7c3d6894932c7ea","isMergeCommit":false,"messageTitle":"Implement save","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":307,"deletions":99}}},{"hash":"229124ba1da9d0c1b6be23ca4eb234b112f0367b","isMergeCommit":false,"messageTitle":"Add dates and times","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":2},"java":{"insertions":357,"deletions":224}}},{"hash":"a7cd929b1dc2c21f330a27415dcdcee57affc75d","isMergeCommit":false,"messageTitle":"add \u0027on\u0027 and \u0027clear\u0027 function","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":6},"java":{"insertions":178,"deletions":6}}},{"hash":"0045cdb4e54ec1c7059960f02b3901f39aeb1812","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"d99414ff367cccd7ccc04d1bed7ff8e53a8d6104","isMergeCommit":false,"messageTitle":"refactor for more oop","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":5},"java":{"insertions":349,"deletions":259}}},{"hash":"88145e3d7d18984a3e289cafd8663f30a13a90bc","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"087bb181931e567a7841479db2af44a4802a6fef","isMergeCommit":false,"messageTitle":"organise into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":122,"deletions":11},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":16,"deletions":15}}},{"hash":"23d9717569035138ced98443da1d5a0b00f9c41e","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"585228a45c0335a104c8be9a2aa229a43a431a3b","isMergeCommit":false,"messageTitle":"Add gradle support","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":9,"deletions":1},"java":{"insertions":910,"deletions":828}}},{"hash":"e7a248abc3858e56a2e962f3e23ed368e451f98d","isMergeCommit":false,"messageTitle":"Add JUnit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":0},"java":{"insertions":334,"deletions":0}}},{"hash":"578b29e2e344527450b3eaff6969c04f24639d09","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"md":{"insertions":13,"deletions":0}}},{"hash":"190ab0a59858c59fe58229a66729cde3092230ae","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to all Command classes","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":3},"java":{"insertions":327,"deletions":133}}},{"hash":"8af5b25bb09dff924d0533fb7ad4d6832225211a","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to all task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":408,"deletions":175}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"42ec83ff9bf532acf6010a8f3487e4f5baa57370","isMergeCommit":false,"messageTitle":"Add JavaDoc comments to rest of the files","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":881,"deletions":580}}},{"hash":"ee8d23b9d928e4237d2e6413ea19306d9ba94abf","isMergeCommit":false,"messageTitle":"Implement find command for task search","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":0}}},{"hash":"828130065818097a523e8bdd2f3f5179d789af69","isMergeCommit":true,"messageTitle":"Resolve merge conflicts","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"546b3954eb76b1dc668c31bf19c1b9b3523e53e2","isMergeCommit":false,"messageTitle":"Change code style of switch statement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":27}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"a9192886eaa229ae1d60a2a829a6a774ecf6a5ad","isMergeCommit":false,"messageTitle":"Add checkstyle","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0},"java":{"insertions":371,"deletions":246}}}]},{"date":"2025-09-03T00:00:00","commitResults":[{"hash":"3e010788cc9884fc313cbffb029106a216ad4209","isMergeCommit":false,"messageTitle":"Add Gui to chatbot","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":1},"fxml":{"insertions":57,"deletions":0},"java":{"insertions":563,"deletions":25}}},{"hash":"22aa4e8935197de263a27e17a5caf21b0cd2e48a","isMergeCommit":false,"messageTitle":"Add Java varargs","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":11}}}]},{"date":"2025-09-11T00:00:00","commitResults":[{"hash":"f190bb9d50a19eba309a661e0293515009e673f3","isMergeCommit":false,"messageTitle":"Implement comprehensive assertions for defensive programming","messageBody":"* Add precondition assertions to MrMoon constructor to validate filePath parameter\n* Add postcondition assertions in MrMoon to verify component initialization (UI, parser, scanner)\n* Add null-safety assertions in MrMoon.getResponse() to validate input parameter\n* Add index bounds checking assertions in TaskList.get() to prevent array access errors\n* Add null parameter validation assertions in TaskList.add() and findByKeyword() methods\n* Add size invariant assertions in TaskList.add() to verify list operations maintain consistency\n* Add input validation assertions in Parser.parseCommand() for null-safety\n* Add format validation assertions in Parser.parseDeadlineArgs() and parseEventArgs()\n* Add postcondition assertions in parser methods to verify parsed array structure\n* Add constructor validation assertions in Task class for description parameter\n* Add parsing safety assertions in DateTimeUtil.parseLenientResult() method\n* Document assumption that Storage.load() should never return null\n* Document assumption that tasks in collections should never be null\n* Document assumption that command parsing should never return null\n\nUsing Java\u0027s assert feature rather than exception handling is appropriate\nhere because these checks document programming assumptions that should never\nbe violated if the code is correct. The assertions can be easily enabled\nduring development (-ea flag) and disabled in production for performance.\n\nThis defensive programming approach improves code reliability, makes debugging\neasier, and clearly documents expected program behavior for future developers.\n\nResolves: A-Assertions coding standard requirement\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"7e4c70795829c8e6c3f17e3228397ea5e4680ec6","isMergeCommit":false,"messageTitle":"Refactor codebase for improved type safety and code quality standards","messageBody":"* Create TaskType enum to replace magic strings (\"T\", \"D\", \"E\") with type-safe constants\n* Add getTaskType() abstract method to Task class for consistent type identification\n* Implement getTaskType() method in Todo, Deadline, and Event classes returning appropriate enum values\n* Refactor Storage.encode() method to use TaskType enum instead of instanceof checks with magic strings\n* Refactor Storage.parseLine() method to use TaskType.fromStorageCode() for type-safe parsing\n* Extract Storage helper methods (validateLineParts, isDoneFromString, createTaskByType) for better readability\n* Add constants for magic numbers and strings in Storage class (MINIMUM_PARTS_COUNT, DONE_FLAG, etc.)\n* Create specialized task creation methods (createDeadlineTask, createEventTask) in Storage\n* Extract date/time parsing logic into reusable parseStorageDateTime() method\n* Add command name constants to Parser class (CMD_TODO, CMD_DEADLINE, etc.)\n* Add parsing delimiter constants to Parser class (BY_DELIMITER, FROM_DELIMITER, TO_DELIMITER)\n* Add magic number constants for parsing offsets (BY_OFFSET, FROM_OFFSET, TO_OFFSET)\n* Refactor Parser.parseCommand() to use switch expression with constants instead of magic strings\n* Extract command parsing logic into separate methods (parseTodoCommand, parseDeadlineCommand, parseEventCommand)\n* Add comprehensive assertions throughout Storage and Parser classes for defensive programming\n* Add input validation assertions for null checks and parameter validation\n* Add postcondition assertions to verify method return values and object states\n\nThe codebase previously relied heavily on magic strings and numbers, making it error-prone\nand difficult to maintain. Type checking was done using string comparisons which could\nlead to runtime errors due to typos or incorrect case sensitivity.\n\nThis refactoring introduces the TaskType enum to provide compile-time type safety and\neliminate magic strings throughout the codebase. The enum centralizes task type definitions\nand provides clear, self-documenting code with better IDE support.\n\nThe Storage and Parser classes are decomposed into smaller, focused methods following the\nSingle Responsibility Principle. Magic numbers are replaced with named constants, making\nthe code more readable and maintainable.\n\nComprehensive assertions are added to document important assumptions and catch programming\nerrors during development. The assertions validate preconditions, postconditions, and\ninvariants throughout the codebase.\n\nThis change significantly improves code quality by enhancing type safety, readability,\nmaintainability, and robustness while following established coding standards and best\npractices for defensive programming.\n\nResolves: A-CodeQuality and A-Assertions requirements for improved code standards\n","fileTypesAndContributionMap":{"java":{"insertions":331,"deletions":166}}},{"hash":"91cb99a4aceb4236a462352870548c5eee206e98","isMergeCommit":true,"messageTitle":"Merge pull request #1 from javierchuaby/branch-A-Assertions","messageBody":"Implement Comprehensive Assertions for Defensive Programming","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"e55aa5b9fb03e41a9e9ceca8bc9da5ed63418d42","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"dedf385dc54c2005e36a33cab9973384e3c982bd","isMergeCommit":true,"messageTitle":"Merge pull request #2 from javierchuaby/branch-A-CodeQuality","messageBody":"Implement TaskType Enum and Improve Code Quality Standards","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"6e8ace05a81b292629dd2a7df0986c066a031c89","isMergeCommit":false,"messageTitle":"Add interactive task update functionality","messageBody":"- Implement conversational update flow for CLI and GUI\n- Support updating task descriptions and date/time properties\n- Add comprehensive validation and error handling\n- Enable guided user interaction with prompts and confirmations\n\nUsers can now update existing tasks using \u0027update \u003cindex\u003e\u0027 command\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":590,"deletions":28}}},{"hash":"5ae1dc5fd7079ae1d97ea083bb8d2e2056720a5d","isMergeCommit":false,"messageTitle":"Change duration of exit app","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"29887cda1fe3c9288796ad44038d7415aca06ef9","isMergeCommit":false,"messageTitle":"Change bot responses","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":3,"deletions":3}}}]},{"date":"2025-09-15T00:00:00","commitResults":[{"hash":"5d06a84ae837deea5c382938519fa9486d128f8a","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":255,"deletions":28}}}]}]},"authorFileTypeContributionMap":{"javierchuaby":{"java":3758,"md":256,"fxml":57,"sh":26,"bat":1,"gradle":34,"txt":13}},"authorContributionVariance":{"javierchuaby":901049.9},"authorDisplayNameMap":{"javierchuaby":"CS2103T-W10-4 JAVI.. YAN"}}
