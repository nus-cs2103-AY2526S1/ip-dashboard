{"authorDailyContributionsMap":{"K0p1-Git":[{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"c630e175987b871815d90900a4e06f4b51fab3ad","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit","messageBody":"Rename Duke to ChattyBot across code and documentation\n\nThe bot has been renamed from Duke to ChattyBot to better reflect its\npurpose and provide a more user-friendly identity.\n\nThis change includes:\n- Updating the class name from Duke to ChattyBot\n- Renaming references in documentation and comments\n- Ensuring consistency in usage across the codebase\n\nThis unification prevents confusion between the old and new names and\naligns both the code and the docs under the updated ChattyBot branding.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"cdc6957e0e9aecc6c5742d5656892eb3aafc9982","isMergeCommit":false,"messageTitle":"Level 1. Echo","messageBody":"Implement Level 1: Echo functionality\n\nExtend the skeletal version of ChattyBot to support basic interaction\nwith the user. The bot now echoes any command entered by the user,\nproviding immediate feedback in a consistent response format.\n\nAdditionally, the bot terminates gracefully when the user enters the\n\"bye\" command, displaying a farewell message before exiting.\n\nThis change establishes the foundational input/output loop upon which\nsubsequent features (such as task management) can be built.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4}}},{"hash":"e0fed1624501e63a807aadb7f006a07c90c7b2fc","isMergeCommit":false,"messageTitle":"Level 2. Add, List","messageBody":"Refactor task storage to use ArrayList\n\nReplace the fixed-size String array with an ArrayList for storing tasks.\nThis removes the artificial limit of 100 tasks and eliminates the need\nto manually track the task count.\n\nUsing ArrayList simplifies task management and provides greater\nflexibility for future enhancements, such as task deletion or marking\ntasks as completed.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}},{"hash":"8d0ec85bf5beeca462c6c741bdb66937f8a611ff","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done","messageBody":"Implement Level 3: Mark and Unmark with Task class\n\nIntroduce a Task class to represent individual tasks with a description\nand completion status. ChattyBot now supports marking tasks as done and\nreverting them back to not done via the \"mark N\" and \"unmark N\"\ncommands, respectively.\n\nThe in-memory task list has been migrated from plain strings to\nArrayList\u003cTask\u003e, enabling clearer modeling of task state and easier\nextensibility for future features.\n\nThe \"list\" command now prints each task with a status icon:\n[X] for completed tasks and [ ] for pending tasks, matching the\nexpected output format.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":12}}},{"hash":"2126fd76213f6e008a2f91da935694d8a4a2e19f","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"Implement Level 4: ToDos, Deadlines, and Events (A-Inheritance)\n\nIntroduce task subtypes Todo, Deadline, and Event that inherit from the\nbase Task class. ChattyBot now supports creating tasks via:\n\n- \"todo \u003cdesc\u003e\"\n- \"deadline \u003cdesc\u003e /by \u003cwhen\u003e\"\n- \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\"\n\nAll tasks are stored polymorphically in an ArrayList\u003cTask\u003e. The \"list\"\ncommand shows each task prefixed with its type ([T]/[D]/[E]) and status\n([ ] or [X]), matching the required output format. Dates/times are\ntreated as plain strings at this stage.\n\nThis change lays the groundwork for future enhancements such as date\nparsing, persistence, and richer task operations.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":6}}},{"hash":"0daac10ce18a4dc98062c659cb9d7f7f755aa120","isMergeCommit":false,"messageTitle":"Level 5. Handle Errors","messageBody":"Chatty Level-5: Handle Errors\n\nImplement error handling using custom exceptions:\n- Added ChattyException base class.\n- Added specialized exceptions:\n  * EmptyDescriptionException for missing task descriptions.\n  * MalformedArgumentsException for incorrect/missing arguments.\n  * UnknownCommandException for unrecognized commands.\n- Updated ChattyBot to catch exceptions and show clear error messages.\n- Error messages now guide users with usage hints\n  (e.g., todo \u003cdesc\u003e, deadline \u003cdesc\u003e /by \u003cwhen\u003e, etc.).\n- Improved resilience against invalid task numbers in mark/unmark.\n\nUsers now receive informative feedback instead of silent failures or crashes.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":90}}},{"hash":"4330104a8830670698707ce08371bb210f198f02","isMergeCommit":false,"messageTitle":"Update testcases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":25,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"3185538df4031e9fb864e0e6cfb2d8cb9edfd387","isMergeCommit":false,"messageTitle":"Level 6. Delete","messageBody":"Chatty Level-6: Delete\n\nAdd support for deleting tasks with \"delete N\". On success, Chatty shows\nthe removed task and the updated task count. Reuses existing index\nvalidation (missing/invalid/out-of-range) for consistent error handling.\n\nThis continues to use ArrayList\u003cTask\u003e (A-Collections) for dynamic,\nsimple add/remove operations.\n\nUpdated new testcases that includes testing for delete.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":1}}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"8be92f80d700787bf9bbe03032d1563ce8a7b355","isMergeCommit":false,"messageTitle":"Chatty Level-6: Delete (reintroduce)","messageBody":"Add support for deleting tasks with the \"delete N\" command.\n\n- Implemented deletion logic in ChattyBot.\n- Added exception handling for:\n  * Missing index → \"Task number is missing.\"\n  * Non-integer index → \"Task number must be an integer.\"\n  * Out-of-range index → \"Task number out of range.\"\n- On successful delete, Chatty shows the removed task and updates the\n  remaining task count.\n\nThis commit reintroduces the delete feature after it was omitted in the\nearlier Level-6 push.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"4e3ada91449979fa62231d50f6503dde179bee90","isMergeCommit":false,"messageTitle":"Chatty Level-7: Save tasks to disk","messageBody":"Introduce persistent storage so that tasks are saved to disk and reloaded\nwhen ChattyBot starts.\n\n- Added Storage class to manage ./data/chatty.txt with OS-independent paths.\n- Implemented toDataString() in Task, Todo, Deadline, and Event to serialize\n  tasks in a consistent \"/-/\" delimited format.\n- Load tasks at startup; create data directory/file if they do not exist.\n- Save tasks after every change (add, delete, mark, unmark).\n- Introduced ChattyFileException to wrap file I/O errors, ensuring consistent\n  handling with other ChattyExceptions.\n- Corrupted/malformed lines are skipped gracefully, allowing recovery without\n  crashing.\n\nThis ensures the user’s task list persists across sessions while keeping error\nhandling unified.\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":163,"deletions":10}}},{"hash":"e6898e9aa63c05d2ba339eae68551d2305a78f1c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"1300bc0e928fd49fe9ad4d4dc0ee7200e06a7d5e","isMergeCommit":false,"messageTitle":"Chatty Level-8: Support dates and times","messageBody":"Enhance Deadline and Event tasks to handle real date/time values using\njava.time.LocalDateTime.\n\n- Accept date/time in format dd-MM-yyyy HHmm (e.g., 12-08-2025 1800).\n- Store deadlines/events as LocalDateTime instead of raw Strings.\n- Print deadlines/events back to users in the same dd-MM-yyyy HHmm format.\n- Persist tasks to disk in the same format, ensuring reload symmetry.\n- Reuse MalformedArgumentsException to handle bad or missing date/time input\n  with clear usage hints.\n\nThis upgrade makes deadlines and events precise to the minute while preserving\nconsistent error handling.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":2},"java":{"insertions":40,"deletions":18}}},{"hash":"53f5e1f6a60a80e8231e71f0b0e70b4ef9646d21","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"479df62f6b0a3f904969c88deb2c9fd42ad89618","isMergeCommit":false,"messageTitle":"Remove /data/* and update .gitignore","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":6}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"7396bbd3c933abc755c50fe91fcb8b1b4a07a28a","isMergeCommit":false,"messageTitle":"Chatty A-MoreOOP: Refactor into OOP components","messageBody":"Refactor ChattyBot into a more object-oriented design by extracting\ndedicated classes for core responsibilities:\n\n- Added Ui class to handle user interaction (printing messages, errors,\n  reading input).\n- Added Parser class to interpret raw commands and validate/slice\n  arguments, returning a Parsed(Command, args) object.\n- Added TaskList class to encapsulate task collection operations\n  (add/remove/get/size).\n- Retained Storage class to manage loading/saving tasks from disk.\n- Updated ChattyBot to orchestrate using Ui, Parser, TaskList, and\n  Storage, with clear switch-case dispatch by command.\n- Preserved all existing error messages and formats to ensure\n  compatibility with previous behavior.\n- Centralized exception handling for user-facing errors and file\n  errors via ChattyException hierarchy.\n\nThis reorganization improves code readability, maintainability, and\nadherence to single-responsibility OOP principles, while keeping the\nchatbot’s observable behavior unchanged.\n","fileTypesAndContributionMap":{"java":{"insertions":254,"deletions":137}}},{"hash":"ef873fe45c74f16c263b3994b58b5ae994ddd29f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP","A-Enums"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"421f00cf660c11bb63fd2886153b2c5c69e717f3","isMergeCommit":false,"messageTitle":"Chatty A-Packages: Organize classes into packages","messageBody":"Restructure project into clear Java packages to improve modularity,\nreadability, and maintainability.\n\n- Moved main entry point ChattyBot into chatty.app package.\n- Added chatty.ui package for Ui-related classes.\n- Added chatty.parser package for command parsing logic.\n- Added chatty.storage package for loading and saving tasks.\n- Added chatty.task package for Task hierarchy and TaskList.\n- Added chatty.exception package for all custom exceptions.\n\nUpdated all package declarations and imports accordingly.\nUpdated build/run/test scripts to use fully-qualified class names\n(e.g., chatty.app.ChattyBot as entry point).\n\nThis reorganization enforces separation of concerns and lays the\nfoundation for cleaner OOP design as the codebase grows.\n","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":0}}},{"hash":"1ae4956f4fd8ffde2091efb5f2a9ff2064e01a49","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"dff3c66e951c4f50bccabf2f8d5f460d6ab37a8a","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 into branch-A-Gradle","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"962ce7953e35ffa1b02621c5ea8518b5d04ac7d4","isMergeCommit":false,"messageTitle":"Chatty A-Jar: Build executable JAR with Gradle","messageBody":"This series of enhancements brings the project up to A-Jar:\n\n- A-JUnit: Added JUnit 5 tests for Parser and TaskList, covering both\n  valid and invalid inputs. Tests assert correct parsing behavior,\n  exception handling, and task list operations.\n\n- A-Gradle: Integrated Gradle build system with wrapper. Configured\n  plugins (java, application, checkstyle, shadow) and set main class\n  to `chatty.app.ChattyBot`. Ensures consistent builds and easier\n  dependency management.\n\n- A-Jar: Configured Shadow plugin to produce a fat JAR named\n  `chatty.jar` that includes all dependencies. The JAR can be run\n  via `java -jar build/libs/chatty.jar`.\n\nTogether, these changes improve testability, structure, build\nautomation, and distribution of the chatbot project.\n","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2},"java":{"insertions":115,"deletions":0}}},{"hash":"9631b1ac0623ee2ac0c52aed84f78f70154b5401","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"","tags":["A-Jar","A-JUnit","A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"0e67728f78401c1a636e63a50801864f46ca530a","isMergeCommit":false,"messageTitle":"A-JavaDoc: Add JavaDoc comments to classes and methods","messageBody":"Added header documentation to public classes and methods for clarity and\nmaintainability. This improves code readability and aligns with the\nA-JavaDoc requirements.\n","tags":["A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":266,"deletions":12}}},{"hash":"b6c41aa48a2a0ed22b7fd73390d7b7e37b37e1ab","isMergeCommit":false,"messageTitle":"Chatty Level-9: Add find command to search tasks","messageBody":"Implements the Level-9 requirement to allow users to locate tasks\nby keyword in their descriptions.\n\nChanges include:\n- Parser: Added FIND command and parsing support.\n- TaskList: Added `find()` method to return tasks containing a\n  keyword (case-insensitive).\n- Ui: Added `showMatches()` method to display matching tasks in\n  the standard boxed format.\n- ChattyBot: Integrated FIND command handling with error\n  checking for missing keywords.\n\nThis enhancement improves usability by enabling users to quickly\nfilter and locate specific tasks in their task list.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":1}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"e2ac3abe0641e5eca7afad70803162e744f67c99","isMergeCommit":false,"messageTitle":"Refactor ChattyBot: add run() method and instance fields","messageBody":"Moved main loop into a run() method for better OOP structure.\nIntroduced instance fields (Ui, Storage, TaskList) initialized\nvia constructor. main() now simply calls new ChattyBot().run().\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":7}}},{"hash":"ec54d78d9fddaeee035fe04b92141be97651f3e2","isMergeCommit":false,"messageTitle":"Chatty A-CheckStyle: Integrate CheckStyle for coding standards","messageBody":"Added CheckStyle configuration to enforce consistent coding style\nthroughout the project. This helps maintain readability, improves\ncode quality, and ensures adherence to Java coding conventions.\n","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":204,"deletions":61}}},{"hash":"a9cd8b1ff61859b5c4e60a5be0ac42d559c1f796","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-03T00:00:00","commitResults":[{"hash":"b22c363a8a2a00ed5c526d5a042cb4bee686fce5","isMergeCommit":false,"messageTitle":"Chatty Level-10: Add JavaFX GUI with FXML and shared engine","messageBody":"Add GUI to make the app easier to use and aligns with the Level-10\nrequirements.\n\n- Add Gradle JavaFX dependencies and application config.\n\n- Introduce Launcher to bootstrap JavaFX cleanly.\n\n- Create MainWindow.fxml and DialogBox.fxml to define the layout.\n\n- Implement MainWindow controller to handle user input and render\n  responses in a scrollable chat view.\n\n- Refactor core logic into ChattyEngine with getResponse(String)\n  so both CLI and GUI use the same behavior.\n\n- Update DialogBox to FXML-driven component with flip support\n  (getUserDialog, getBotDialog).\n\n- Add modern styling via main.css and dialog-box.css.\n\n- Set window icon and initial greeting; bind auto-scroll to chat height.\n\n- Keep the console app (ChattyBot) working via the shared engine.\n","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":1},"fxml":{"insertions":39,"deletions":0},"java":{"insertions":426,"deletions":113}}},{"hash":"e75175d805dbf7cefcb32ed744174f27b9dcd285","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-09T00:00:00","commitResults":[{"hash":"dc77a4757bca86d82764d4df246637d17730ce9e","isMergeCommit":false,"messageTitle":"TaskList: Add assertions and tighten preconditions","messageBody":"TaskList methods assume valid indices and non-empty search keywords,\nbut those assumptions were not documented or verified in code. That can\nlet subtle bugs slip through during development and tests.\n\nAdd assertions to document and validate key assumptions:\n\nremove(int idx): assert index is within bounds\n\nfind(String keyword): assert keyword is non-null and non-empty\n\nThese checks make the intended contracts explicit and help surface\nincorrect call sites early when running with assertions enabled\n. The production behaviour is unchanged because Java assertions\nare disabled by default.\n\nThis approach keeps the public API the same while improving code\nreadability and debuggability.\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"12413025d31895b1e5d2c05f5713100b88161eef","isMergeCommit":false,"messageTitle":"A-CodeQuality: Unify CLI/GUI logic via ChattyCore","messageBody":"ChattyEngine and ChattyBot duplicate command handling logic, causing\ncode drift risk and making future changes harder to implement and test.\n\nUnifying the execution flow improves maintainability and supports\nsubsequent extractions without changing external behavior.\n\nLet\u0027s\n* introduce ChattyCore as the single entry point for processing input\n* route both GUI and CLI through ChattyCore to eliminate duplication\n* return reply strings from ChattyCore instead of printing internally\n* provide a helpful list of available commands on unknown input\n\nThis refactor preserves behavior while clarifying responsibilities:\nfrontends display replies; ChattyCore parses, mutates tasks, and formats\nresponses. It sets the stage for consolidating persistence policy and\nextracting per-command classes in follow-up commits.\n","fileTypesAndContributionMap":{"java":{"insertions":159,"deletions":229}}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"6dbc2f435e0b9a48e357675153173a589fd734eb","isMergeCommit":true,"messageTitle":"Merge pull request #1 from K0p1-Git/A-Assertions","messageBody":"TaskList: Add assertions and tighten preconditions","fileTypesAndContributionMap":{}},{"hash":"107150d854a0833eb67cf5699dd2da3050bd40ed","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into A-CodeQuality","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"903dc1fd93bd779390415377e7ff160ff6f1397e","isMergeCommit":true,"messageTitle":"Merge pull request #2 from K0p1-Git/A-CodeQuality","messageBody":"A-CodeQuality: Unify CLI/GUI logic via ChattyCore","fileTypesAndContributionMap":{}}]},{"date":"2025-09-11T00:00:00","commitResults":[{"hash":"599823efd51a69fb3e68a39bae6d8afba931d171","isMergeCommit":false,"messageTitle":"Extract Command classes from ChattyCore","messageBody":"ChattyCore previously contained a large switch statement handling all\ncommand logic directly. This violated the Single Level of Abstraction\nPrinciple and made the class harder to read, maintain, and extend.\n\nHaving command logic embedded in ChattyCore also caused duplication of\npersistence calls and mixed responsibilities: parsing, execution, and\nUI formatting were all interwoven.\n\nLet\u0027s\n* introduce a Command interface and MutatingCommand base class\n* move per-command logic into dedicated command classes (e.g.,\n  ListCommand, MarkCommand, DeadlineCommand)\n* add a CommandFactory to map parsed input to the appropriate Command\n* simplify ChattyCore to parse → build → execute → save\n\nThis refactor improves separation of concerns, removes duplication,\nand prepares the codebase for future extensions like adding new\ncommands without modifying ChattyCore.\n","fileTypesAndContributionMap":{"java":{"insertions":296,"deletions":72}}},{"hash":"a2d2f83e7ff390f3156ace27a11b03366fa43baf","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-RefectorMore\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a00c26a53a5dd21feed9480be230cc92d4557c4d","isMergeCommit":false,"messageTitle":"B-ViewSchedules: Add view command for daily schedule","messageBody":"Users cannot view tasks in a day-centric schedule, making it harder to\nplan the day and to see overlaps across events and deadlines.\n\nA day view helps users visualize time-based tasks and identify overlaps.\n\nLet\u0027s\n* introduce a ViewCommand that shows a single day\u0027s schedule\n* include Deadlines at their \u0027by\u0027 time and Events as time ranges\n* include Events that overlap the day (clamped to day bounds)\n* sort entries by start time, and by task name when start times are equal\n* add Parser and CommandFactory support for \u0027view dd-MM-yyyy\u0027\n* add minimal getters to Task/Deadline/Event for schedule extraction\n\nThis feature presents a clear morning-to-night agenda and maintains\nstable ordering when times overlap by sorting items alphabetically.\n","fileTypesAndContributionMap":{"java":{"insertions":197,"deletions":1}}},{"hash":"7595053ae396dc874fee637a493cf7d1d0241189","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-BCD-Extension\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-17T00:00:00","commitResults":[{"hash":"f3d9725da8d1099425c3fe86156952db08d3d4de","isMergeCommit":false,"messageTitle":"Fix Issue Round 2 #3","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"a190abb90dd3a3e8cf5b7b724ccf697796970444","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-FinalizeFeatures\u0027","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}},{"hash":"12e2f27263350c0ac7210959eb8a0dd82182cf15","isMergeCommit":false,"messageTitle":"docs: Add user guide for ChattyBot","messageBody":"Introduce a user guide for ChattyBot in GitHub Pages format. The guide\nincludes setup instructions, command usage examples, and screenshots.\n\nThis addition improves usability by helping new users quickly learn\nhow to interact with ChattyBot through both CLI and GUI.\n\nLet\u0027s provide a clear, structured guide that documents all supported\nfeatures (todos, deadlines, events, marking, finding, viewing\nschedules, and exiting).\n","fileTypesAndContributionMap":{"md":{"insertions":115,"deletions":15}}},{"hash":"dcbb705ea8e0b88b92d486ed5c2ffbe83bfd4977","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":12,"deletions":3}}},{"hash":"36edd6bd49ae9f7035c66a602f326e1ebfaafaed","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-UserGuide\u0027","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{}},{"hash":"5bcdcee09633a50b129d18bb29872630be33dedb","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":38,"deletions":26}}}]}]},"authorFileTypeContributionMap":{"K0p1-Git":{"java":1828,"md":152,"fxml":39,"sh":1,"bat":1,"gradle":23,"txt":30}},"authorContributionVariance":{"K0p1-Git":32967.84},"authorDisplayNameMap":{"K0p1-Git":"CS2103-F13-2 KOH ..ASON"}}
