[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"    mainClass.set(\"jerry.Jerry\")","lastModifiedDate":"2025-08-28T15:56:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    archiveBaseName \u003d \"jerry\"","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"michellee15":2,"-":39}},{"path":"data/jerry.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"D | 1 | quiz | 2022-10-10 12:30","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"D | 0 | project | 2025-12-01 23:59","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"E | 1 | meeting | 2025-10-01 09:00 | 2025-10-01 10:00","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"D | 1 | project ppt | 2025-09-10 23:59","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"D | 1 | lolol | 2020-10-10 13:20","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"D | 0 | quiz | 2022-10-15 23:59","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"E | 1 | party | 2022-10-10 10:30 | 2022-10-10 15:30","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"D | 0 | project ppt and essay | 2022-12-09 23:59","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false}],"authorContributionMap":{"michellee15":8}},{"path":"src/main/java/jerry/Jerry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.command.Command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.parser.Parser;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T13:48:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * The main entry point for the Jerry task manager application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * This class handles the initialization of the application such as storage system ,","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * task list and all user commands in the main loop until an exit command is issued.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"public class Jerry {","lastModifiedDate":"2025-08-19T13:30:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * Constructs a new Jerry application with a specified file path for storage.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * The UI and storage are initialized here with attempts to load the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    public Jerry(String filePath) throws JerryException {","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException e) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2025-08-27T22:00:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:07:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T23:51:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"     * The entry point of Jerry application.","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"     * @param args command line arguments.","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException to handle error when initializing the application.","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"    public static void main(String[] args) throws JerryException {","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"        new Jerry(\"data/jerry.txt\").run();","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"     * Runs the main loop of Jerry application, with error messages displayed when occur.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"     * The user input is parsed, read and executed continuously until the exit command is entered.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"            try {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"                String fullCommand \u003d ui.readInput();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"            } catch (JerryException e) {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"            } finally {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"                ui.showLine();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"            }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-19T13:48:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T13:30:33","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-20T23:38:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-19T13:30:33","isFullCredit":false}],"authorContributionMap":{"michellee15":70}},{"path":"src/main/java/jerry/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * Represents the command to exit the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * When executed, this command saves the current task to storage,","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * displays a farewell message to the user and the application will terminate.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    public String end() {","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"        return \"Bye! See you next time :D\";","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * Executes the bye command by saving tasks to storage and displaying a farewell message.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * @param taskList the task list to operate on.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @param ui       the user interface for input/output.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * @param storage  the storage system to save or load tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException handles if there is an error while saving tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.end());","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"        return true;","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        this.response \u003d this.end();","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false}],"authorContributionMap":{"michellee15":46}},{"path":"src/main/java/jerry/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * An abstract class that represents a command in Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * This class serves as the base for all specific commands that can be executed within the program.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"     * stores the response message generated after executing the command.","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"    protected String response;","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * Executes this command using the provided task list, user interface, and storage.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * @param tasks   the task list to operate on.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * @param ui      the user interface for input/output.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @param storage the storage system to save or load tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException to handle if invalid operations or data issues occur.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws JerryException;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"     * This method determines whether the application should stop executing which returns true","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"     * or continue based on the command which will return false.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"     * @return true if the command ends the program, false otherwise.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"     * This method returns a string representation of this command, typically used for display.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"     * @return a string description of this command.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"    public abstract String getString();","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false}],"authorContributionMap":{"michellee15":44}},{"path":"src/main/java/jerry/command/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":" * Enum that represents all the available commands in Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":" * Each constant corresponds to a specific command that is executed by the program.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"public enum CommandEnum {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"    BYE,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"    LIST,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"    DEADLINE,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"    EVENT,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"    TODO,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"    MARK,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"    UNMARK,","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"    DELETE,","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"    FIND","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false}],"authorContributionMap":{"michellee15":17}},{"path":"src/main/java/jerry/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.task.Deadline;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * Represents a command to add a deadline task in the Jerry application","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * This class parses the user input and adds the task to the task list when executed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" * It ensures the input follows the expected syntax; starting with \"deadline\", and include","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":" * a \"/by\" keyword followed by the due date.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    private final String desc;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    private final String dateString;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * Constructs a new DeadlineCommand by parsing the user  input which is expected to follow","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * the format: \"deadline task /by due date\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * An exception is thrown if the format is invalid or if the user missed out the task description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     * @param desc the user input string to be parsed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the expected format is not followed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    public DeadlineCommand(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        String trimmed \u003d desc.trim();","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        if (!trimmed.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Deadline command must start with \u0027deadline\u0027!\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        String withoutCommand \u003d trimmed.substring(8).trim();","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"        if (withoutCommand.isEmpty()) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Description and due date cannot be empty.\");","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"        if (!withoutCommand.contains(\"/by\")) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Deadline must have \u0027/by\u0027 keyword followed by the due date\");","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        String[] parts \u003d withoutCommand.split(\"/by\", 2);","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        this.desc \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        dateString \u003d parts[1].trim();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"        if (desc.isEmpty() || dateString.isEmpty()) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Description and due date cannot be empty...\");","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        Deadline deadline \u003d new Deadline(desc, dateString);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.addTask(deadline);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false}],"authorContributionMap":{"michellee15":69}},{"path":"src/main/java/jerry/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"    private final int index;","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"     * Constructs a DeleteCommand with the given input.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"     * It parses the user input to extract the task number to be deleted and validates whether it is the correct format.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"     * An exception will be thrown if the input is in invalid format or has invalid task number.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     * @param input the user input in the expected format: \"delete task number\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the input is invalid or in an incorrect format.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    public DeleteCommand(String input) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"        String[] entries \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"        if (entries.length \u003c 2 || entries[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"            index \u003d Integer.parseInt(entries[1]);","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.deleteTask(index);","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:08:25","isFullCredit":false}],"authorContributionMap":{"michellee15":51}},{"path":"src/main/java/jerry/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.task.Event;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * Represents a command to add an event task in the application","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * It validates the user input format to ensure that it has a description","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" * and that the start and end date-times are correctly specified using","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":" * the \u0027/from\u0027 and \u0027to\u0027 keywords.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":" * The event is added to the task list, saved to storage and a display will be shown","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":" * as a saved confirmation to the user","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T11:17:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    private final String fromDate;","lastModifiedDate":"2025-08-28T11:17:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"    private final String fromTime;","lastModifiedDate":"2025-08-28T11:17:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    private final String toDate;","lastModifiedDate":"2025-08-28T11:17:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    private final String toTime;","lastModifiedDate":"2025-08-28T11:17:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"     * The input must include an \u0027event\u0027 command keyword, description, followed by \u0027/from\u0027 keyword","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"     * with start date and time, and the \u0027to\u0027 keyword with the end date and time.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"     * If the format is invalid, an exception is thrown.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"     * @param desc user input string to be parsed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the user input format is incorrect.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    public EventCommand(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"        String[] strArray \u003d getStrings(desc);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        this.desc \u003d strArray[0].trim();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"        String[] dateData \u003d strArray[1].split(\"to\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"        String from \u003d dateData[0];","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        String to \u003d dateData[1];","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        String[] fromDateTime \u003d from.trim().split(\" \");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        String[] toDateTime \u003d to.trim().split(\" \");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        if (fromDateTime.length !\u003d 2 || toDateTime.length !\u003d 2) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"                    \"Invalid date/time format. Expected: yyyy-MM-dd HH:mm (e.g., 2025-08-27 12:30)\");","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"        this.fromDate \u003d fromDateTime[0].trim();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"        this.fromTime \u003d fromDateTime[1].trim();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"        this.toDate \u003d toDateTime[0].trim();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"        this.toTime \u003d toDateTime[1].trim();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"     * Parses the input string into event description and date-time portion.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"     * It ensures that the description is not empty, and that both \u0027/from\u0027 and","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"     * \u0027to\u0027 keywords are present in the input.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"     * @param desc the full user input string.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"     * @return an array with the description at index 0 and date-time string at index 1.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the description is empty or required keywords are missing.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"    private static String[] getStrings(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"        String trimmed \u003d desc.trim();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"        if (trimmed.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"            trimmed \u003d trimmed.substring(5).trim();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"        if (trimmed.isEmpty() || trimmed.startsWith(\"/from\")) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Event description cannot be empty...\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"michellee15"},"content":"        String[] strArray \u003d trimmed.split(\"/from\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"michellee15"},"content":"        if (strArray.length \u003c 2) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Event must have \u0027/from\u0027 and \u0027to\u0027 keywords.\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"michellee15"},"content":"        return strArray;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"michellee15"},"content":"        Event event \u003d new Event(desc, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.addTask(event);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false}],"authorContributionMap":{"michellee15":97}},{"path":"src/main/java/jerry/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.task.Task;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * FindCommand class is responsible in finding the task that matches with the key word entered by the user.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * It parses the user input, and display one or list of matching task if found.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    private final String findWord;","lastModifiedDate":"2025-08-29T13:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     * This constructor takes in user input and parse them into two components:","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * \u0027find\u0027 command and keyword that the user enter to find the task.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * Exception is thrown when the command is invalid and if the user","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * does not enter the keyword to find the matching tasks.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @param userInput input string entered by the user to be parsed.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException if user input is invalid.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    public FindCommand(String userInput) throws JerryException {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        String[] entries \u003d userInput.trim().split(\" \",2);","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        if (entries.length \u003c 2 || entries[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Enter the task that you want to find\");","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        this.findWord \u003d entries[1].trim();","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"     * Handles the finding of task.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"     * Searches through the TaskList for tasks whose descriptions contain the specified keyword.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"     * Tasks are displayed in order if they are found.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"     * Otherwise, a message indicating that no tasks were found is shown.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"     * @param taskList The list of tasks to search through.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"     * @param ui The UI handler for displaying output to the user.","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"     * @param storage The storage handler (not modified by this command).","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"        int index \u003d 1;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"            if (task.getDescription().toLowerCase().contains(this.findWord.toLowerCase())) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"                result.append(index).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"                index++;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"            }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-29T14:03:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"            this.response \u003d \"No matching tasks found for: \" + findWord;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"        } else {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"            this.response \u003d result.toString().trim();","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false}],"authorContributionMap":{"michellee15":78}},{"path":"src/main/java/jerry/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" * Represents a command to display all the tasks that are currently stored in file.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * This class retrieves all the tasks from the task list, formatting them into a","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * readable string and display them to the user,","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * without any modification on the content of the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.getList();","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false}],"authorContributionMap":{"michellee15":31}},{"path":"src/main/java/jerry/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * Represents a command to mark a task as completed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * This class validates the user input, ensuring that the task number is a","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * positive integer.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    private final int index;","lastModifiedDate":"2025-08-29T08:29:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     * Construct a MarkCommand object based on user input.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * The user input must be in the format: \"mark task number\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * @param input user input containing task number.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the input format is invalid or task number is not a positive integer.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    public MarkCommand(String input) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"        String[] entries \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        if (entries.length \u003c 2 || entries[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"            index \u003d Integer.parseInt(entries[1]);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.mark(index);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false}],"authorContributionMap":{"michellee15":54}},{"path":"src/main/java/jerry/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.task.ToDo;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * Represents a command to add a ToDo task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * This class validates user input, ensuring no empty description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" * The task is added to the task list, saved to storage and a confirmation","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":" * message is displayed to the user.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"    private final String desc;","lastModifiedDate":"2025-08-28T11:09:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * Parses user input to separate \u0027todo\u0027 command keyword and task description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * Exceptions is thrown when no task description is provided in the user input.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * @param desc user input to be parsed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if user input is invalid or empty task description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    public TodoCommand(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        String trimmed \u003d desc.trim();","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        if (trimmed.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"            trimmed \u003d trimmed.substring(4).trim();","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        if (trimmed.isEmpty()) {","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"You forgot to describe what your todo is...\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        this.desc \u003d trimmed;","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.addTask(todo);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false}],"authorContributionMap":{"michellee15":56}},{"path":"src/main/java/jerry/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * Represents a command to mark a task as not completed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * This class validates the user input, ensuring that the task number is a","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * positive integer.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    private final int index;","lastModifiedDate":"2025-08-29T08:29:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     * Construct a UnmarkCommand object based on user input.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * The user input must be in the format: \"unmark task number\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * @param input user input containing task number.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the input format is invalid or task number is not a positive integer.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    public UnmarkCommand(String input) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"        String[] entries \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        if (entries.length \u003c 2 || entries[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"            index \u003d Integer.parseInt(entries[1]);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Task number must be positive!\");","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws JerryException {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"        this.response \u003d taskList.unmark(index);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        taskList.saveTasks(storage);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        ui.displayOutput(this.response);","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"        return false;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"    public String getString() {","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        return this.response;","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:01:26","isFullCredit":false}],"authorContributionMap":{"michellee15":54}},{"path":"src/main/java/jerry/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.exceptions;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":" * Represents an exception that is thrown when user enters a command that is not recognized by the application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * This exception is used for invalid commands and display an appropriate error message that will help guide the user","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * in correcting their input command.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"public class InvalidCommandException extends JerryException {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"        super(message);","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false}],"authorContributionMap":{"michellee15":13}},{"path":"src/main/java/jerry/exceptions/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.exceptions;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":" * Represents an exception that is thrown when the user input does not follow the expected format.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * This exception is to indicate errors like missing task description, incorrect keyword, or missing task number,","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * and display with appropriate error messages to guide users to the correct input format.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"public class InvalidCommandFormatException extends JerryException {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"    public InvalidCommandFormatException(String message) {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"        super(message);","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false}],"authorContributionMap":{"michellee15":13}},{"path":"src/main/java/jerry/exceptions/JerryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.exceptions;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":" * The base exception class for all specific exceptions.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"public class JerryException extends Exception {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"    public JerryException(String message) {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"        super(message);","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false}],"authorContributionMap":{"michellee15":10}},{"path":"src/main/java/jerry/exceptions/ListIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.exceptions;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":" * Represents an exception that is thrown when a user attempts to access a task number","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":" * that is greater than the number of tasks available in the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * This exception is to prevent invalid operations on task list and provide users with","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" * appropriate error messages.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"public class ListIndexOutOfBoundException extends JerryException {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"    public ListIndexOutOfBoundException(String message) {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"        super(message);","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false}],"authorContributionMap":{"michellee15":14}},{"path":"src/main/java/jerry/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.parser;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.command.ByeCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.command.Command;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.command.CommandEnum;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.command.DeadlineCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.command.DeleteCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.command.EventCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"import jerry.command.FindCommand;","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"import jerry.command.ListCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"import jerry.command.MarkCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"import jerry.command.TodoCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"import jerry.command.UnmarkCommand;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandException;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":" * The Parser class interprets user input and translates it into","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":" * the corresponding Command object.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":" * It identifies the type of command and instantiates the appropriate subclass","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":" * of Command to represent the user\u0027s intended action.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * Parses a user input string and returns the corresponding Command object.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"     * The method expects user input to start with a valid command.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"     * An exception is thrown if the keyword is invalid or unrecognized.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"     * @param input user input to be parsed","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"     * @return Command object representing user\u0027s action","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException if the input is invalid or cannot be parsed into a known command.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    public static Command parse(String input) throws JerryException {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"        String[] entries \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"        CommandEnum command;","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"            command \u003d CommandEnum.valueOf(entries[0].trim().toUpperCase());","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandException(\"I don\u0027t understand what you mean by: \" + input +","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"                    \"\\nUse these commands at the start of your sentence instead: \" +","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"                    \"bye/list/todo/deadline/event/mark/unmark/delete\");","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"        if (command \u003d\u003d CommandEnum.BYE) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.LIST) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.TODO) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.DEADLINE) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.EVENT) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"            return new EventCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.UNMARK) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"            return new UnmarkCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.MARK) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"            return new MarkCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.DELETE) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"        } else if (command \u003d\u003d CommandEnum.FIND) {","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"            return new FindCommand(input);","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"        } else {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandException(\"Sorry! I don\u0027t understand what you mean by: \" + input +","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"                    \"\\nUse these commands at the start of your sentence instead: \" +","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"                    \"bye/list/todo/deadline/event/mark/unmark/delete\");","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false}],"authorContributionMap":{"michellee15":70}},{"path":"src/main/java/jerry/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import java.io.File;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * The Storage class is responsible for managing task data.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * It handles reading from and writing to file on the file system, managing the storage","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * and retrieval of task-related information in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"public class Storage {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * Loads the task file from the specified file path.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * If the file does not exist, it creates a new file in the default data directory.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     * @return file object representing the loaded or created file.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException if an error occurs during the loading of file.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    public File load() throws JerryException {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"                File directory \u003d new File(\"./data\");","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"                if (!directory.exists() \u0026\u0026 !directory.mkdirs()) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"                    throw new JerryException(\"Error! Failed to create data directory\");","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"                }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"                file \u003d new File(directory, \"jerry.txt\");","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"                if (!file.exists() \u0026\u0026 !file.createNewFile()) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"                    throw new JerryException(\"Error! Failed to create storage file\");","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"                }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"            }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"            return file;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"            throw new JerryException(\"Error! Failed to access storage file: \" + e.getMessage());","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"     * Writes the current string data to the file in the specified file path.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"     * @param data string data representing the current state of tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException if writing to the file fails.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"    public void writeToFile(String data) throws JerryException {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"            fileWriter.write(data);","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"            throw new JerryException(\"Error! Failed to write to storage file: \" + e.getMessage());","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false}],"authorContributionMap":{"michellee15":60}},{"path":"src/main/java/jerry/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.task;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T22:58:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T22:58:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:58:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * Represents a deadline task in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * A Deadline is a type of Task that has a due date and time.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * It provides methods to parse and format the due date for both file storage","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" * and user-friendly display.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":" * The class also validates the input date string and throws an","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":" * exception if the format is invalid.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2025-08-26T22:58:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    private static final DateTimeFormatter FILE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     * Constructs a Deadline task with a description and a due date string.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"     * @param desc       the description of the task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"     * @param dateString the due date string in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the date string is invalid or incorrectly formatted.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    public Deadline(String desc, String dateString) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        super(desc);","lastModifiedDate":"2025-08-28T01:39:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"            dueDate \u003d LocalDateTime.parse(dateString, FILE_FORMATTER);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Invalid date/time format. \" +","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"                    \"Expected format: yyyy-MM-dd HH:mm (e.g., 2025-08-27 18:00)\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"     * Method to create a Deadline task from file data.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"     * This method is used when loading tasks from storage and ensures","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"     * proper parsing and validation of the due date.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"     * @param desc       the description of the task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"     * @param dateString the due date string read from the file.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"     * @return a new Deadline object.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the date string is invalid or cannot be parsed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"    public static Deadline fromFile(String desc, String dateString) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"            return new Deadline(desc, dateString);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Unable to load deadline task: \" + dateString);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"        return \"D | \" + super.toFileString() +","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"                \" | \" + this.dueDate.format(FILE_FORMATTER);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"        return \"[DUE]\" + super.toString() +","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"                \" (by: \" + this.dueDate.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false}],"authorContributionMap":{"michellee15":71}},{"path":"src/main/java/jerry/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.task;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" * Represents an event task in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":" * An Event is a type of Task that has specific","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":" * time period with defined start and end dates and times.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":" * The class validates the input date and time strings and","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":" * formats them appropriately for both file storage and user-friendly display.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"    private final LocalDate fromDate;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    private final LocalTime fromTime;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"    private final LocalDate toDate;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    private final LocalTime toTime;","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    private static final DateTimeFormatter FILE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"    private static final DateTimeFormatter DISPLAY_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"     * Constructs an Event task with a description, start date/time, and end date/time.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"     * @param desc     the description of the event.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"     * @param fromDate the start date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"     * @param fromTime the start time in the format \"HH:mm\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"     * @param toDate   the end date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"     * @param toTime   the end time in the format \"HH:mm\".","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if any date or time string is invalid or incorrectly formatted.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    public Event(String desc, String fromDate, String fromTime, String toDate, String toTime) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        super(desc);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"            this.fromDate \u003d LocalDate.parse(fromDate, FILE_DATE_FORMATTER);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"            this.fromTime \u003d LocalTime.parse(fromTime, TIME_FORMATTER);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"            this.toDate \u003d LocalDate.parse(toDate, FILE_DATE_FORMATTER);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"            this.toTime \u003d LocalTime.parse(toTime, TIME_FORMATTER);","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Invalid date format! Expected format: yyyy-MM-dd, e.g., 2022-08-06\");","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"        return \"E | \" + super.toFileString() + \" | \"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"                + fromDate.toString() + \" \" + fromTime.toString() + \" | \"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"                + toDate.toString() + \" \" + toTime.toString();","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"        return \"[EVENT]\" + super.toString() + \" (from: \"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"                + this.fromDate.format(DISPLAY_DATE_FORMATTER) + \" \" + this.fromTime.format(TIME_FORMATTER)","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"                + \" to: \" + this.toDate.format(DISPLAY_DATE_FORMATTER) + \" \" + this.toTime.format(TIME_FORMATTER) + \")\";","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false}],"authorContributionMap":{"michellee15":62}},{"path":"src/main/java/jerry/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.task;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * Represents a generic task in the Jerry application","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" * This class serves as the parent class for specific task types, provides methods to","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * mark and unmark tasks, retrieve current status and convert tasks to string representation","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * for display or storage.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"    protected String desc;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"     * Constructs a task with given string description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"     * @param desc description of task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the description is null or empty.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    public Task(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"        if (desc \u003d\u003d null || desc.trim().isEmpty()) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"Oops! Task description cannot be empty...\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    public String getStatus() {","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"    public void mark() {","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"    public String getDescription() { return this.desc; }","lastModifiedDate":"2025-08-29T13:43:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"     * Display a string representation of the task for saving to file.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"     * @return a string containing completion status, description which are separated by \u0027|\u0027.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.desc;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"     * Display a human-readable string representation of the task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"     * @return a string containing completion status and task description.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.desc;","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-19T14:32:40","isFullCredit":false}],"authorContributionMap":{"michellee15":61}},{"path":"src/main/java/jerry/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.task;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T17:29:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * Represents a simple to-do task in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" * A ToDo is a type of Task that does not have any associated date or time.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * The class ensures that the task description is valid and","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * provides methods to format the task for both file storage and user-friendly display.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"    public ToDo(String desc) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"        super(parseDesc(desc));","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"     * Parses the input string to extract a valid description for the to-do task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"     * @param input the raw input string","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"     * @return a trimmed, valid description","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"     * @throws InvalidCommandFormatException if the input is empty or only contains the keyword \"todo\"","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    private static String parseDesc(String input) throws InvalidCommandFormatException {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"        String desc \u003d input.trim();","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"        if (desc.toLowerCase().startsWith(\"todo \")) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"            desc \u003d desc.substring(5).trim();","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"        if (desc.isEmpty() || desc.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"            throw new InvalidCommandFormatException(\"You forgot to describe what your todo is...\");","lastModifiedDate":"2025-08-28T11:01:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        return desc;","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2025-08-26T22:17:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        return \"[TODO]\" + super.toString();","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-19T14:58:01","isFullCredit":false}],"authorContributionMap":{"michellee15":45}},{"path":"src/main/java/jerry/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.tasklist;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T22:50:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.ListIndexOutOfBoundException;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.task.Deadline;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.task.Event;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.task.Task;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"import jerry.task.ToDo;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T02:53:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":" * Represents a collection of tasks in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":" * The TaskList manages a list of Task objects, providing","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":" * functionality to add, remove, mark, unmark, retrieve, and save tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":" * It also supports loading tasks from a file and generating user-friendly","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":" * representations of the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    private static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"    public TaskList(File file) throws JerryException {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"        loadTasks(file);","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"     * Loads tasks from the specified file and populates the internal task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"     * @param file the file containing saved tasks.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"     * @throws JerryException if tasks cannot be loaded due to file errors or format issues.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"    private void loadTasks(File file) throws JerryException {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"                String[] details \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"                switch (details[0]) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"                case \"T\":","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"                    ToDo todo \u003d new ToDo(details[2].trim());","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"                    if (details[1].equals(\"1\")) todo.mark();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"                    taskList.add(todo);","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"                    break;","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"                case \"D\":","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"                    Deadline deadline \u003d Deadline.fromFile(details[2].trim(), details[3].trim());","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"                    if (details[1].trim().equals(\"1\")) deadline.mark();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"                    taskList.add(deadline);","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"                    break;","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"                case \"E\":","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"                    if (details.length !\u003d 5) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"                        throw new JerryException(\"\");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"                    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"                    String desc \u003d details[2].trim();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"                    String[] fromDateTime \u003d details[3].trim().split(\" \");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"                    String[] toDateTime \u003d details[4].trim().split(\" \");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"                    Event event \u003d new Event(desc, fromDateTime[0], fromDateTime[1], toDateTime[0], toDateTime[1]);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"                    if (details[1].trim().equals(\"1\")) event.mark();","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"                    taskList.add(event);","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"                    break;","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"                }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"            }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"michellee15"},"content":"            throw new JerryException(\"Warning: Could not load some tasks due to file corruption or format issues\");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"michellee15"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"michellee15"},"content":"     * @param task the task to add.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"michellee15"},"content":"     * @return a confirmation message including the added task and updated task count.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"michellee15"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"michellee15"},"content":"        taskList.add(task);","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"michellee15"},"content":"        return \"Great! New task added:\\n\" + task.toString()","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"michellee15"},"content":"                + \"\\n\" + \"Now you have \" + getSize() + \" in your list :)\";","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"michellee15"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"michellee15"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"michellee15"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"michellee15"},"content":"     * @param taskIndex the 1-based index of the task to delete.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"michellee15"},"content":"     * @return a confirmation message including the deleted task and updated task count.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"michellee15"},"content":"     * @throws ListIndexOutOfBoundException if the index is out of range.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"michellee15"},"content":"    public String deleteTask(int taskIndex) throws ListIndexOutOfBoundException {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"michellee15"},"content":"        if (taskIndex \u003c 0) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"Task number must be positive.\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"michellee15"},"content":"        } else if (taskIndex \u003e this.getSize()) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"You only have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"michellee15"},"content":"        Task task \u003d taskList.remove(taskIndex - 1);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"michellee15"},"content":"        return \"Noted! I\u0027ve marked this task as deleted:\\n\" + task.toString() +","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"michellee15"},"content":"                \"\\n\" + \"Now you have \" + this.getSize() + \" tasks in the list!\";","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"michellee15"},"content":"    public String getList() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"michellee15"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here is your task list: \");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"michellee15"},"content":"        if (this.getSize() \u003e 0) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"michellee15"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"michellee15"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"michellee15"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"michellee15"},"content":"            output.append(index).append(\".\").append(taskList.get(i));","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"michellee15"},"content":"            if (i \u003c taskList.size() - 1) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"michellee15"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"michellee15"},"content":"            }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"michellee15"},"content":"        if (output.toString().equals(\"Here is your task list: \")) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"michellee15"},"content":"            return \"Your task list is currently empty...\";","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"michellee15"},"content":"        return output.toString();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"michellee15"},"content":"     * Marks a task as completed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"michellee15"},"content":"     * @param taskIndex the 1-based index of the task to mark.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"michellee15"},"content":"     * @return a confirmation message including the updated task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"michellee15"},"content":"     * @throws ListIndexOutOfBoundException if the index is out of range.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"michellee15"},"content":"    public String mark(int taskIndex) throws ListIndexOutOfBoundException {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"michellee15"},"content":"        if (taskIndex \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"Task number must be positive.\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"michellee15"},"content":"        } else if (taskIndex \u003e this.getSize()) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"You only have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"michellee15"},"content":"        taskList.get(taskIndex - 1).mark();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"michellee15"},"content":"        return \"Yay! One task down:\\n\" + taskList.get(taskIndex - 1).toString();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"michellee15"},"content":"     * Marks a task as not completed.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"michellee15"},"content":"     * @param taskIndex the 1-based index of the task to unmark.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"michellee15"},"content":"     * @return a confirmation message including the updated task.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"michellee15"},"content":"     * @throws ListIndexOutOfBoundException if the index is out of range.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"michellee15"},"content":"    public String unmark(int taskIndex) throws ListIndexOutOfBoundException {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"michellee15"},"content":"        if (taskIndex \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"Task number must be positive.\");","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"michellee15"},"content":"        } else if (taskIndex \u003e this.getSize()) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"michellee15"},"content":"            throw new ListIndexOutOfBoundException(\"You only have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"michellee15"},"content":"        taskList.get(taskIndex - 1).unmark();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"michellee15"},"content":"        return \"Noted! I\u0027ve marked this task as undone:\\n\" + taskList.get(taskIndex - 1).toString();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"michellee15"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"michellee15"},"content":"        return taskList.size();","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"michellee15"},"content":"    /**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"michellee15"},"content":"     * Saves all tasks to the given storage.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"michellee15"},"content":"     *","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"michellee15"},"content":"     * @param storage the Storage object to write tasks to.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"michellee15"},"content":"     */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"michellee15"},"content":"    public void saveTasks(Storage storage) {","lastModifiedDate":"2025-08-27T22:00:10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"michellee15"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"michellee15"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"michellee15"},"content":"            sb.append(t.toFileString()).append(\"\\n\");","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"michellee15"},"content":"            storage.writeToFile(sb.toString());","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException e) {","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"michellee15"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"michellee15"},"content":"    @Override","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"michellee15"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"michellee15"},"content":"        return getList();","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T21:49:59","isFullCredit":false}],"authorContributionMap":{"michellee15":187}},{"path":"src/main/java/jerry/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package jerry.ui;","lastModifiedDate":"2025-08-28T15:18:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T09:59:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"/**","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":" * Handles all user interactions in the Jerry application.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":" * The Ui class is responsible for displaying messages to the user,","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":" * reading user input, and presenting task-related information in a","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":" * human-friendly format.","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":" */","lastModifiedDate":"2025-08-29T01:58:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"    public Ui() {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T02:45:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"___________________________________________________\");","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"Hello, nice to meet you! I\u0027m Jerry the mouse!\");","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"___________________________________________________\");","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    public String readInput() {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        return sc.nextLine();","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"___________________________________________________\");","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"Oops! \" + message);","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"        System.out.println(\"Failed to load resources. Please try again!\");","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"    public void displayOutput(String text) {","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"        System.out.println(text);","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T00:50:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-27T23:10:35","isFullCredit":false}],"authorContributionMap":{"michellee15":48}},{"path":"src/test/java/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package command;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import jerry.storage.Storage;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"import jerry.tasklist.TaskList;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"import jerry.ui.Ui;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"import jerry.command.DeadlineCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"import jerry.command.DeleteCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"import jerry.command.EventCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"import jerry.command.MarkCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"import jerry.command.TodoCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"import jerry.command.UnmarkCommand;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.InvalidCommandFormatException;","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"public class CommandTest {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"    final private TaskList TASKLIST \u003d new TaskList();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"    final private Ui UI \u003d new Ui();","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"    final private Storage STORAGE \u003d new Storage(\"\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    public void TodoCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"            assertEquals(2, new TodoCommand(\"todo \"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"            fail();","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"        } catch (InvalidCommandFormatException error) {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"You forgot to describe what your todo is...\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    public void DeadlineCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"            DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"deadline test\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"            deadlineCommand.execute(TASKLIST, UI, STORAGE);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException error) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Deadline must have \u0027/by\u0027 keyword followed by the due date\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"michellee15"},"content":"    public void EventCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"michellee15"},"content":"            EventCommand eventCommand \u003d new EventCommand(\"event test from test\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"michellee15"},"content":"            eventCommand.execute(TASKLIST, UI, STORAGE);","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException error) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Event must have \u0027/from\u0027 and \u0027to\u0027 keywords.\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"michellee15"},"content":"    public void DeleteCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"michellee15"},"content":"            assertEquals(0, new DeleteCommand(\"delete test\"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException error) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Task number must be positive!\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"michellee15"},"content":"    public void MarkCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"michellee15"},"content":"            assertEquals(0, new MarkCommand(\"mark test\"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"michellee15"},"content":"            fail();","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"michellee15"},"content":"        } catch (InvalidCommandFormatException error) {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Task number must be positive!\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"michellee15"},"content":"    public void MarkCommand_wrongInput2_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"michellee15"},"content":"            assertEquals(0, new MarkCommand(\"mark\"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"michellee15"},"content":"            fail();","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"michellee15"},"content":"        } catch (InvalidCommandFormatException error) {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Task number must be positive!\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"michellee15"},"content":"    public void UnmarkCommand_wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"michellee15"},"content":"            assertEquals(0, new UnmarkCommand(\"mark test\"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"michellee15"},"content":"            fail();","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"michellee15"},"content":"        } catch (InvalidCommandFormatException error) {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Task number must be positive!\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"michellee15"},"content":"    public void UnmarkCommand_wrongInput2_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"michellee15"},"content":"            assertEquals(0, new UnmarkCommand(\"mark\"));","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"michellee15"},"content":"            fail();","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"michellee15"},"content":"        } catch (InvalidCommandFormatException error) {","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"Task number must be positive!\", error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T18:22:53","isFullCredit":false}],"authorContributionMap":{"michellee15":103}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"package parser;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"import jerry.command.ListCommand;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"import jerry.command.ByeCommand;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"import jerry.exceptions.JerryException;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"import jerry.parser.Parser;","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"michellee15"},"content":"    public void wrongInput_exceptionThrown() {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"michellee15"},"content":"        try {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"michellee15"},"content":"            Parser.parse(\"test\");","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"        } catch (JerryException error) {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"michellee15"},"content":"            assertEquals(\"I don\u0027t understand what you mean by: test\\n\" +","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"michellee15"},"content":"                    \"Use these commands at the start of your sentence instead: \" +","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"michellee15"},"content":"                    \"bye/list/todo/deadline/event/mark/unmark/delete\",","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"michellee15"},"content":"                    error.getMessage());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"        }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"michellee15"},"content":"    void parseListCommand_withSpaces() throws JerryException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"michellee15"},"content":"        assertEquals(ListCommand.class, Parser.parse(\"  list  \").getClass());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"michellee15"},"content":"    public void parseToDoCommand() throws JerryException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"michellee15"},"content":"        assertEquals(\"TodoCommand\", Parser.parse(\"todo test\").getClass().getSimpleName());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"michellee15"},"content":"    @Test","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"michellee15"},"content":"    public void parseEventCommand() throws JerryException {","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"michellee15"},"content":"        assertEquals(\"EventCommand\",","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"michellee15"},"content":"                Parser.parse(\"event test /from 2022-10-10 10:30 to 2022-10-10 12:30\").getClass().getSimpleName());","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"michellee15"},"content":"    }","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"michellee15"},"content":"","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"michellee15"},"content":"}","lastModifiedDate":"2025-08-28T19:30:16","isFullCredit":false}],"authorContributionMap":{"michellee15":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michellee15"},"content":"todo buy groceries","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"michellee15"},"content":"deadline finish homework by Friday","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"michellee15"},"content":"event team outing from Sat 1pm to 6pm","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"michellee15"},"content":"todo      clean room","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"michellee15"},"content":"event project meeting from   Mon 3pm  to 5pm","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"michellee15"},"content":"list","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"michellee15"},"content":"mark 2","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"michellee15"},"content":"list","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"michellee15"},"content":"unmark 2","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"michellee15"},"content":"list","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"michellee15"},"content":"hello","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"michellee15"},"content":"remove 1","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"michellee15"},"content":"bye","lastModifiedDate":"2025-08-20T01:04:42","isFullCredit":false}],"authorContributionMap":{"michellee15":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"michellee15"},"content":"java -classpath ..\\bin Jerry     \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"michellee15":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"michellee15"},"content":"java -classpath ../bin Jerry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T21:12:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"michellee15":1,"-":37}}]
