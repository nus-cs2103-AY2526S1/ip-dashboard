[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027 // for Jar from guide","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    mainClass.set(\"Coffee.Coffee\")","lastModifiedDate":"2025-08-29T10:06:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    archiveBaseName \u003d \"Coffee\"","lastModifiedDate":"2025-08-29T10:06:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":3,"-":38}},{"path":"src/main/java/Coffee/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        return true;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":14}},{"path":"src/main/java/Coffee/Coffee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents the main entry point of the Coffee task management application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Initializes the user interface, storage, and task list, and manages","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * the execution of user commands.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class Coffee {","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a Coffee application instance with the given file path for storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * Initializes the UI, loads tasks from storage, and displays a welcome message.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param filePath File path used for storing and loading tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    public Coffee(String filePath) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"        String coffee \u003d","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"                \"  ____       __  __\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"                        \" / ___|___  / _|/ _| ___  ___\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"                        \"| |   / _ \\\\| |_| |_ / _ \\\\/ _ \\\\\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"                        \"| |__| (_) |  _|  _|  __/  __/\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"                        \" \\\\____\\\\___/|_| |_|  \\\\___|\\\\___|\\n\";","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(coffee);","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Hello! I\u0027m Coffee.Coffee.\\n\");","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"     * Runs the Coffee application loop.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * Continuously reads user commands, executes them, and handles exceptions","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * until an exit command is issued.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        while (true) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"            String full \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"            try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"                Command c \u003d Parser.parseCommand(full);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"                if (c.isExit()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"                    break;","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                ui.showMessage(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"            LineBreak.printLineBreak();","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"     * Main entry point of the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"     * Creates a Coffee instance with default storage path and runs it.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"        new Coffee(\"data/tasks.txt\").run();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false}],"authorContributionMap":{"dongjunnn":74}},{"path":"src/main/java/Coffee/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Each command defines specific behavior that operates on the task list,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * user interface, and storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command using the given task list, user interface, and storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list that the command operates on.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * Returns whether this command signals the application to exit.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     * @return {@code true} if the command should terminate the application,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        return false;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":29}},{"path":"src/main/java/Coffee/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Represents a task with a deadline in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * A deadline task has a description, a completion status, and a due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Deadline} task with the given description and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param by Due date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Deadline} task with the given description, due date/time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * and completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * @param by Due date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @param isDone Completion status of the task ({@code true} if done, otherwise {@code false}).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the deadline task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     * including its type, description, status, and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy h:mma\")) + \")\";","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the deadline task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"        return \"D | \" + super.getStatusIcon() + \" | \" + description + \" | \" + by.format(fmt);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":66}},{"path":"src/main/java/Coffee/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for the description and due date/time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * creates a {@code Deadline} task, saves it, and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final String by;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code DeadlineCommand} by parsing the given arguments.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * The arguments are split into description and due date/time using the delimiter {@code /by}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the description and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    public DeadlineCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        String[] parts \u003d args.split(\"/by\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by creating a {@code Deadline} task and adding it to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list where the new deadline will be added.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(d);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + d);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":41}},{"path":"src/main/java/Coffee/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for the task index,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * removes the corresponding task, saves the updated list,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final int index;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code DeleteCommand} with the given task index.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the index of the task to delete.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *             The value is trimmed and parsed into an integer.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        this.index \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by deleting the specified task from the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list from which the task will be deleted.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        Task removed \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n\" + removed);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":38}},{"path":"src/main/java/Coffee/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Represents a task with a start and end time in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * An event task has a description, a completion status, and a defined time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code Event} task with the given description and time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * @param from Start date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     * @param to End date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        this.to   \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code Event} task with the given description, time range,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * and completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * @param from Start date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     * @param to End date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"     * @param isDone Completion status of the task ({@code true} if done, otherwise {@code false}).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        this.to   \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the event task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * including its type, description, status, and time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(fmt)","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                + \" to: \" + to.format(fmt) + \")\";","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the event task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the event task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"        return \"E | \" + super.getStatusIcon() + \" | \" + description","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"                + \" | \" + from.format(fmt) + \" \" + to.format(fmt);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":74}},{"path":"src/main/java/Coffee/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for the description, start time, and end time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * creates an {@code Event}, saves it, and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private final String from;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final String to;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code EventCommand} by parsing the given arguments.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * The arguments are split into description, start, and end times using","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * the delimiters {@code /from} and {@code /to}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the description, start, and end times.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException If the command format is invalid.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public EventCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        String[] fromSplit \u003d args.split(\"/from\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The event command format is wrong. Use: event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d fromSplit[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        String[] toSplit \u003d fromSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The event command format is wrong. Use: event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d toSplit[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        this.to \u003d toSplit[1].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by creating an {@code Event} and adding it to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list where the new event will be added.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(event);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + event);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":54}},{"path":"src/main/java/Coffee/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        this.keyword \u003d keyword.trim();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e matches \u003d tasks.find(keyword);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        for (Task t: matches) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(t.toString());","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        return false;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false}],"authorContributionMap":{"dongjunnn":25}},{"path":"src/main/java/Coffee/LineBreak.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class LineBreak {","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"    private static String lineBreak \u003d","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"            \"---------------------------------------------\";","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    public static void printLineBreak() {","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false}],"authorContributionMap":{"dongjunnn":11}},{"path":"src/main/java/Coffee/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by displaying all tasks in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list to be displayed.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage (not used in this command).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        tasks.list();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":19}},{"path":"src/main/java/Coffee/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"    private final int index1Based;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code MarkCommand} with the given task index.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the index of the task to mark.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException If the argument is empty, not numeric, or not positive.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    public MarkCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        if (args \u003d\u003d null || args.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The mark command format is wrong. Use: mark \u003cindex\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"            this.index1Based \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            if (index1Based \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by marking the specified task as done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        if (index1Based \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Invalid task index: \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"            return;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsDone(index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"marked task \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":47}},{"path":"src/main/java/Coffee/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    public static Command parseCommand(String fullCommand) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"        String keyword \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        switch (keyword) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"            return new DeadlineCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        case \"event\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"            return new EventCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            return new MarkCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"            return new UnmarkCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        case \"find\":","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"            return new FindCommand(args);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        default:","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"            return new UnknownCommand(fullCommand);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":32}},{"path":"src/main/java/Coffee/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":" * Handles reading from and writing to the storage file for tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Storage} instance with the given file path.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     * @param filePath Path to the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @return List of tasks loaded from the file. Returns an empty list if the file does not exist.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        if (!Files.exists(filePath)) return list;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Looking for: \" + filePath.toAbsolutePath());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"            for (String line : Files.readAllLines(filePath)) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"                list.add(TaskLoader.fromFileLine(line));","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        return list;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath.toFile()))) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"                    writer.write(task.toFileString());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                    writer.newLine();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Error writing tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":66}},{"path":"src/main/java/Coffee/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a generic task in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * A task has a description and a completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"public class Task {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Task} with the given description.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * @return {@code \"X\"} if the task is done, otherwise a space.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * including its status icon and description.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        return \"super.getStatusIcon()\" + \" | \" + \"description \";","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false}],"authorContributionMap":{"dongjunnn":65}},{"path":"src/main/java/Coffee/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"public class TaskList {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    public void list() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Nothing \u003d)\");","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(i + 1 + \". \" + taskList.get(i));","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        taskList.add(task);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        System.out.println();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        taskList.remove(index);","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        return deletedTask;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    public void markAsDone(int i) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    public void markAsNotDone(int i) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        taskList.get(index).markAsNotDone();","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    public List\u003cTask\u003e view() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        return Collections.unmodifiableList(taskList);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"        String needle \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"            if (t.description.toLowerCase().contains(needle)) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"                out.add(t);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        return out;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":69}},{"path":"src/main/java/Coffee/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class TaskLoader {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    public static Task fromFileLine(String line) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Parsing: \" + line);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"        String[] p \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        String type \u003d p[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        String status \u003d p[1].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        boolean isDone \u003d \"X\".equals(status) || \"1\".equals(status);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        String desc \u003d p[2].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"                return new ToDo(desc, isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"                return new Deadline(desc, p[3].trim(), isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"                String[] parts \u003d p[3].trim().split(\" \");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"                    throw new IllegalArgumentException(\"Bad Coffee.Event line: \" + line);","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"                String from \u003d parts[0] + \" \" + parts[1];","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"                String to   \u003d parts[2] + \" \" + parts[3];","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                return new Event(desc, from, to, isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"            default:","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Bad save line: \" + line);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":35}},{"path":"src/main/java/Coffee/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"    public ToDo(String description) throws IllegalArgumentException {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        return \"T | \" + super.getStatusIcon() + \" | \" + description;","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":27}},{"path":"src/main/java/Coffee/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"    public TodoCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d args.trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(t);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":19}},{"path":"src/main/java/Coffee/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"There is an error with loading the file!\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":20}},{"path":"src/main/java/Coffee/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    private final String input;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    public UnknownCommand(String input) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"                + \"Your input was: \" + input);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":15}},{"path":"src/main/java/Coffee/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    private final int index1Based;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    public UnmarkCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        if (args \u003d\u003d null || args.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The unmark command format is wrong. Use: unmark \u003cindex\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"            this.index1Based \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"            if (index1Based \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        if (index1Based \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Invalid task index: \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            return;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsNotDone(index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"unmarked task \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":30}},{"path":"src/test/java/Coffee/CoffeeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"public class CoffeeTest {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    public void constructor_doesNotThrow() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"        // Just check Coffee can be created without errors","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        assertDoesNotThrow(() -\u003e new Coffee(\"data/test_tasks.txt\"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false}],"authorContributionMap":{"dongjunnn":14}},{"path":"src/test/java/Coffee/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class ToDoTest {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    void constructor_blankDescription_throws() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ToDo(\" \"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ToDo(\"\\t\"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ToDo(\"\"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    void toString_hasPrefixT_andContainsDescription() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(\"buy milk\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        String s \u003d t.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(s.startsWith(\"[T]\"), \"toString() should start with [T]\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(s.contains(\"buy milk\"), \"toString() should contain the description\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    void toFileString_hasTypeIconAndDescription_inThatOrder() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        String desc \u003d \"finish report\";","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(desc);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        String fs \u003d t.toFileString(); // \"T | \u003cicon\u003e | finish report\"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        Pattern p \u003d Pattern.compile(\"^T\\\\s*\\\\|\\\\s*(.)\\\\s*\\\\|\\\\s*(.*)$\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        Matcher m \u003d p.matcher(fs);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(m.matches(), \"toFileString format should be: T | \u003cicon\u003e | \u003cdescription\u003e\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        String icon \u003d m.group(1);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        String parsedDesc \u003d m.group(2);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(t.getStatusIcon(), icon, \"Second part should match status icon\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(desc, parsedDesc, \"Third part should be the original description\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    void constructor_withIsDoneTrue_setsDoneStatus() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        ToDo done \u003d new ToDo(\"read book\", true);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        ToDo notDone \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        assertNotEquals(notDone.getStatusIcon(), done.getStatusIcon(),","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"                \"Status icon should differ when constructed with isDone\u003dtrue\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        String fs \u003d done.toFileString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        Matcher m \u003d Pattern.compile(\"^T\\\\s*\\\\|\\\\s*(.)\\\\s*\\\\|\\\\s*(.*)$\").matcher(fs);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(m.matches());","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(done.getStatusIcon(), m.group(1));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false}],"authorContributionMap":{"dongjunnn":58}},{"path":"src/test/java/Coffee/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class UiTest {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    void showMessage_printsMessage() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"hello world\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        } finally {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        String printed \u003d out.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(printed.contains(\"hello world\"),","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                \"Expected printed output to contain the message\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    void showLoadingError_printsErrorMessage() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        } finally {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        String printed \u003d out.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(printed.contains(\"There is an error with loading the file!\"),","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"                \"Expected printed output to contain the loading error message\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false}],"authorContributionMap":{"dongjunnn":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"todo visit new theme park","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"deadline submit report /by 2019-10-11 1700","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"event team project meeting /from 2019-10-02 1400 /to 2019-10-02 1600","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"mark 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"unmark 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"todo","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"deadline do homework","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"event orientation week /from 2019-10-04","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"blah","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"delete 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"bye","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false}],"authorContributionMap":{"dongjunnn":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"java -classpath ..\\bin Coffee.Coffee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"dongjunnn":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"java -classpath ../bin Coffee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"dongjunnn":1,"-":37}}]
