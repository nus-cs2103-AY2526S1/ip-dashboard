[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027 // for Jar from guide","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"//    mainClass.set(\"Coffee.Coffee\")","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    mainClass.set(\"Coffee.Launcher\")","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    archiveBaseName \u003d \"Coffee\"","lastModifiedDate":"2025-08-29T10:06:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":20,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"# Coffee User Guide","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"Coffee is a simple desktop app for managing tasks, optimized for use via a Command Line Interface (CLI).  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"If you can type fast, Coffee helps you get your task management done faster than traditional GUI apps.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"- Quick start","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"- Features","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    - Viewing help : help","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    - Adding a ToDo : todo","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    - Adding a Deadline : deadline","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    - Adding an Event : event","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    - Listing tasks : list","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    - Marking/Unmarking tasks : mark / unmark","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    - Deleting tasks : delete","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    - Finding tasks : find","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    - Exiting the program : bye","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    - Error handling","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    - Data storage","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"- Command summary","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"## Quick start","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"1. Ensure you have Java 17 or above installed on your computer.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"2. Download the latest `coffee.jar` file from the releases page.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"3. Copy the file to the folder you want to use as the home folder for Coffee.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the command:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"   ```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"   java -jar coffee.jar","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"   ```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"5. Type commands in the command box and press Enter to execute them.  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"   e.g., typing `help` and pressing Enter will show the help instructions.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"6. Some example commands you can try:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"    - `todo read book` → Adds a ToDo task.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    - `deadline submit report /by 2024-06-10 1800` → Adds a Deadline task.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"    - `event team meeting /from 2024-06-11 1400 /to 2024-06-11 1500` → Adds an Event.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    - `list` → Lists all tasks.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    - `bye` → Exits the application.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"Refer to the **Features** section below for details of each command.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"## Features","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":":information_source: Notes about the command format:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"- Words in `UPPER_CASE` are parameters supplied by the user.  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"  e.g., in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"- Parameters can be in any order **only where clearly supported**.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"- Extraneous parameters for commands that do not take parameters (such as `list`, `bye`) will be ignored.  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"  e.g., `list 123` will be interpreted as `list`.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"### Adding a ToDo : `todo`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"Adds a simple task without time.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"`todo DESCRIPTION`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"**Example:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"`todo read book`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"[T][ ] read book","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dongjunnn"},"content":"### Adding a Deadline : `deadline`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dongjunnn"},"content":"Adds a task with a deadline.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dongjunnn"},"content":"`deadline DESCRIPTION /by yyyy-MM-dd HHmm`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dongjunnn"},"content":"**Example:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dongjunnn"},"content":"`deadline submit report /by 2024-06-10 1800`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dongjunnn"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dongjunnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dongjunnn"},"content":"[D][ ] submit report (by: 2024-06-10 1800)","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dongjunnn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dongjunnn"},"content":"Note: Duplicate deadlines at the same date/time are not allowed.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dongjunnn"},"content":"### Adding an Event : `event`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dongjunnn"},"content":"Adds an event with a start and end time.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dongjunnn"},"content":"`event DESCRIPTION /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dongjunnn"},"content":"**Example:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dongjunnn"},"content":"`event team meeting /from 2024-06-11 1400 /to 2024-06-11 1500`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dongjunnn"},"content":"**Expected Output:**","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dongjunnn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dongjunnn"},"content":"[E][ ] team meeting (from: 2024-06-11 1400 to: 2024-06-11 1500)","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dongjunnn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dongjunnn"},"content":"Note: Events cannot overlap in time. Input format is validated.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dongjunnn"},"content":"### Listing tasks : `list`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dongjunnn"},"content":"Shows all tasks in the list.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dongjunnn"},"content":"`list`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dongjunnn"},"content":"### Marking/Unmarking tasks : `mark` / `unmark`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dongjunnn"},"content":"Marks a task as done or not done.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dongjunnn"},"content":"**Format:**","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dongjunnn"},"content":"- `mark INDEX`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dongjunnn"},"content":"- `unmark INDEX`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dongjunnn"},"content":"### Deleting tasks : `delete`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dongjunnn"},"content":"Deletes one or more tasks by index.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"dongjunnn"},"content":"`delete INDEX [INDEX ...]`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"dongjunnn"},"content":"- The index must be a positive integer.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"dongjunnn"},"content":"- Multiple indices can be provided.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"dongjunnn"},"content":"- Invalid indices will show an error.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"dongjunnn"},"content":"### Finding tasks : `find`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"dongjunnn"},"content":"Searches for tasks containing a keyword.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"dongjunnn"},"content":"`find KEYWORD`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"dongjunnn"},"content":"**Example:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"dongjunnn"},"content":"`find report`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"dongjunnn"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"dongjunnn"},"content":"Exits the program.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"dongjunnn"},"content":"**Format:**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"dongjunnn"},"content":"`bye`","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"dongjunnn"},"content":"### Error handling","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"dongjunnn"},"content":"- Invalid date/time formats show a clear error.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"dongjunnn"},"content":"- Overlapping events and duplicate deadlines are prevented.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"dongjunnn"},"content":"- Invalid indices for delete/mark/unmark show an error.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"dongjunnn"},"content":"### Data storage","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"dongjunnn"},"content":"Coffee saves tasks automatically to `data/tasks.txt` after any command that changes the data.  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"dongjunnn"},"content":"Tasks are loaded from the file on startup.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"dongjunnn"},"content":"## Example session","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"dongjunnn"},"content":"todo read book","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"dongjunnn"},"content":"deadline submit report /by 2024-06-10 1800","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"dongjunnn"},"content":"event team meeting /from 2024-06-11 1400 /to 2024-06-11 1500","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"dongjunnn"},"content":"mark 2","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"dongjunnn"},"content":"delete 1","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"dongjunnn"},"content":"find report","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"dongjunnn"},"content":"bye","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"dongjunnn"},"content":"```","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"dongjunnn"},"content":"## FAQ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"dongjunnn"},"content":"**Q: How do I transfer my data to another computer?**  ","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"dongjunnn"},"content":"A: Install the app in the other computer and copy over the `data/tasks.txt` file from your old Coffee home folder.","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"dongjunnn"},"content":"## Command summary","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"dongjunnn"},"content":"| Action     | Format \u0026 Example |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"dongjunnn"},"content":"|------------|------------------|","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dongjunnn"},"content":"| ToDo       | `todo DESCRIPTION`\u003cbr\u003ee.g., `todo read book` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"dongjunnn"},"content":"| Deadline   | `deadline DESCRIPTION /by yyyy-MM-dd HHmm`\u003cbr\u003ee.g., `deadline submit report /by 2024-06-10 1800` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"dongjunnn"},"content":"| Event      | `event DESCRIPTION /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm`\u003cbr\u003ee.g., `event team meeting /from 2024-06-11 1400 /to 2024-06-11 1500` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"dongjunnn"},"content":"| List       | `list` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"dongjunnn"},"content":"| Mark       | `mark INDEX`\u003cbr\u003ee.g., `mark 2` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"dongjunnn"},"content":"| Unmark     | `unmark INDEX`\u003cbr\u003ee.g., `unmark 2` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"dongjunnn"},"content":"| Delete     | `delete INDEX [INDEX ...]`\u003cbr\u003ee.g., `delete 1 3` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"dongjunnn"},"content":"| Find       | `find KEYWORD`\u003cbr\u003ee.g., `find report` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"dongjunnn"},"content":"| Exit       | `bye` |","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"dongjunnn"},"content":"---","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"dongjunnn"},"content":"## Contributors","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dongjunnn"},"content":"Dong Jun","lastModifiedDate":"2025-09-20T15:28:58","isFullCredit":false}],"authorContributionMap":{"dongjunnn":211,"-":19}},{"path":"src/main/java/Coffee/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents the {@code bye} command.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * This command displays a farewell message to the user and signals that the application","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * should terminate after handling the command.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * {@inheritDoc}","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * In addition to the general contract, this implementation shows a farewell message.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks   {@inheritDoc}","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * @param ui      {@inheritDoc}","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param storage {@inheritDoc}","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     * Returns {@code true} to indicate that the application should exit after this command.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        return true;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":33}},{"path":"src/main/java/Coffee/Coffee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents the main entry point of the Coffee task management application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Initializes the user interface, storage, and task list, and manages","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * the execution of user commands.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class Coffee {","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    public String greet() {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        return \"Hi! I’m Coffee ☕ — what can I do for you? (try: todo, deadline, list, find, bye)\";","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a Coffee application instance with the given file path for storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * Initializes the UI, loads tasks from storage, and displays a welcome message.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     * @param filePath File path used for storing and loading tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    public Coffee(String filePath) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        String coffee \u003d","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"                \"  ____       __  __\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"                        \" / ___|___  / _|/ _| ___  ___\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                        \"| |   / _ \\\\| |_| |_ / _ \\\\/ _ \\\\\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"                        \"| |__| (_) |  _|  _|  __/  __/\\n\" +","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"                        \" \\\\____\\\\___/|_| |_|  \\\\___|\\\\___|\\n\";","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(coffee);","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Hello! I\u0027m Coffee.Coffee.\\n\");","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * Runs the Coffee application loop.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * Continuously reads user commands, executes them, and handles exceptions","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * until an exit command is issued.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        while (true) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"            String full \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"            try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"                Command c \u003d Parser.parseCommand(full);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"                if (c.isExit()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"                    break;","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"                ui.showMessage(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"            LineBreak.printLineBreak();","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-19T20:11:22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"     * Main entry point of the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"     * Creates a Coffee instance with default storage path and runs it.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dongjunnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dongjunnn"},"content":"        new Coffee(\"data/tasks.txt\").run();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dongjunnn"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dongjunnn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dongjunnn"},"content":"        java.io.PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dongjunnn"},"content":"        java.io.ByteArrayOutputStream buf \u003d new java.io.ByteArrayOutputStream();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dongjunnn"},"content":"        java.io.PrintStream capture \u003d new java.io.PrintStream(buf, true, java.nio.charset.StandardCharsets.UTF_8);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dongjunnn"},"content":"        System.setOut(capture);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dongjunnn"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dongjunnn"},"content":"            // run one command using your existing pipeline","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dongjunnn"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dongjunnn"},"content":"            String out \u003d buf.toString(java.nio.charset.StandardCharsets.UTF_8);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dongjunnn"},"content":"            if (c.isExit()) {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dongjunnn"},"content":"                javafx.application.Platform.exit();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dongjunnn"},"content":"                return out.isBlank() ? \"(no output)\" : out.strip();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dongjunnn"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dongjunnn"},"content":"                return e.getMessage();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dongjunnn"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dongjunnn"},"content":"                return \"Unexpected error: \" + e.getMessage();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dongjunnn"},"content":"            } finally {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dongjunnn"},"content":"                System.setOut(originalOut);","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dongjunnn"},"content":"                try {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dongjunnn"},"content":"                    capture.close();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dongjunnn"},"content":"                } catch (Exception ignore) {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dongjunnn"},"content":"                try {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dongjunnn"},"content":"                    buf.close();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dongjunnn"},"content":"                } catch (Exception ignore) {","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T19:54:45","isFullCredit":false}],"authorContributionMap":{"dongjunnn":114}},{"path":"src/main/java/Coffee/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Each command defines specific behavior that operates on the task list,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * user interface, and storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command using the given task list, user interface, and storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list that the command operates on.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving or loading tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * Returns whether this command signals the application to exit.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     * @return {@code true} if the command should terminate the application,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        return false;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":29}},{"path":"src/main/java/Coffee/CommandUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Provides helper operations used by commands to add tasks, persist them, and acknowledge actions to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * Each utility method encapsulates constructing a task, adding it to the {@link TaskList}, saving via {@link Storage},","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" * and emitting user-facing confirmations through {@link Ui}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"public class CommandUtil {","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Adds a {@link ToDo} task, saves all tasks to storage, and acknowledges the action to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * @param description description of the to-do task.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks       task list to mutate.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param ui          UI used to display confirmation messages.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param storage     storage used to persist the updated task list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException if the description is blank.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    public static void addSaveAndAck(String description, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(t);","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + t);","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Adds a {@link Deadline} task, saves all tasks to storage, and acknowledges the action to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * @param by          deadline in {@code yyyy-MM-dd HHmm} format.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks       task list to mutate.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     * @param ui          UI used to display confirmation messages.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"     * @param storage     storage used to persist the updated task list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException if the description or deadline is invalid as defined by {@link Deadline}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    public static void addDeadlineSaveAndAck(String description, String by, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(d);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + d);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * Adds an {@link Event} task after validating that it does not overlap existing events, then saves","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     * all tasks to storage and acknowledges the action to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * Overlap detection uses the rule: intervals {@code [startA, endA)} and {@code [startB, endB)} overlap iff","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     * {@code startA \u003c endB} and {@code endA \u003e startB}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"     * @param description description of the event.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"     * @param from        start datetime in {@code yyyy-MM-dd HHmm} format.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"     * @param to          end datetime in {@code yyyy-MM-dd HHmm} format.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks       task list to validate against and mutate.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"     * @param ui          UI used to display error/confirmation messages.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"     * @param storage     storage used to persist the updated task list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"     * @throws java.time.format.DateTimeParseException if {@code from} or {@code to} is not in the expected format.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException                if the event construction fails due to invalid arguments.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"    public static void addEventSaveAndAck(String description, String from, String to, TaskList tasks,","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"                                          Ui ui, Storage storage) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        LocalDateTime newFrom \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"        LocalDateTime newTo \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"        for (Task t : tasks.view()) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"            if (t instanceof Event) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"                // Check for overlap: (startA \u003c endB) \u0026\u0026 (endA \u003e startB)","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"                if (newFrom.isBefore(e.to) \u0026\u0026 newTo.isAfter(e.from)) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"                    ui.showMessage(\"Error: This event overlaps with an existing event.\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dongjunnn"},"content":"                    return;","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dongjunnn"},"content":"        Event e \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(e);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n\" + e);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false}],"authorContributionMap":{"dongjunnn":86}},{"path":"src/main/java/Coffee/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Represents a task with a deadline in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * A deadline task has a description, a completion status, and a due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Deadline} task with the given description and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param by Due date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Deadline} task with the given description, due date/time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * and completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * @param by Due date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @param isDone Completion status of the task ({@code true} if done, otherwise {@code false}).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the deadline task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     * including its type, description, status, and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy h:mma\")) + \")\";","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the deadline task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the deadline task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"        return \"D | \" + super.getStatusIcon() + \" | \" + description + \" | \" + by.format(fmt);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":66}},{"path":"src/main/java/Coffee/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for the description and due date/time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * creates a {@code Deadline} task, saves it, and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final String by;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code DeadlineCommand} by parsing the given arguments.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * The arguments are split into description and due date/time using the delimiter {@code /by}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the description and due date/time.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    public DeadlineCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        String[] parts \u003d args.split(\"/by\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        this.by \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by creating a {@code Deadline} task and adding it to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list where the new deadline will be added.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"            // Try to create the Deadline (will throw if format is wrong)","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"            CommandUtil.addDeadlineSaveAndAck(description, by, tasks, ui, storage);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Error: Pls enter the date in the format yyyy-MM-dd HHmm (e.g., 2024-06-10 1800).\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":42}},{"path":"src/main/java/Coffee/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to delete one or more tasks from the task list.","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for space-separated task indices,","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":" * removes the corresponding tasks, saves the updated list,","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":" * and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    private final List\u003cInteger\u003e indices;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code DeleteCommand} with the given task indices.","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing space-separated indices","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     *             of the tasks to delete.","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    public DeleteCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        // this is done with AI help to better catch index errors","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        this.indices \u003d Arrays.stream(args.trim().split(\"\\\\s+\"))","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"                .map(s -\u003e {","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                    try {","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"                        int idx \u003d Integer.parseInt(s);","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"                        if (idx \u003c\u003d 0) {","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"                            throw new IllegalArgumentException(\"Index must be positive: \" + s);","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"                        }","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"                        return idx;","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"                        throw new IllegalArgumentException(\"Invalid index: \" + s);","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"                    }","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"                })","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"                .sorted(Comparator.reverseOrder())","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T15:03:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by deleting the specified task from the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list from which the task will be deleted.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        // Collect results of deletions","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        List\u003cString\u003e results \u003d indices.stream()","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"                .map(idx -\u003e {","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"                    try {","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"                        Task removed \u003d tasks.deleteTask(idx);","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"                        return \"Noted. I\u0027ve removed this task:\\n\" + removed;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"                        return \"Invalid index: \" + idx;","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"                    }","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"                })","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        results.forEach(ui::showMessage);","lastModifiedDate":"2025-09-12T11:36:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":69}},{"path":"src/main/java/Coffee/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    private void flip() {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    public static DialogBox getCoffeeDialog(String text, Image img) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"        db.flip();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"        return db;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":60}},{"path":"src/main/java/Coffee/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Represents a task with a start and end time in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * An event task has a description, a completion status, and a defined time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code Event} task with the given description and time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * @param from Start date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     * @param to End date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        this.to   \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code Event} task with the given description, time range,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * and completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * @param from Start date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     * @param to End date and time in the format {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"     * @param isDone Completion status of the task ({@code true} if done, otherwise {@code false}).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        this.to   \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the event task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * including its type, description, status, and time range.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(fmt)","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                + \" to: \" + to.format(fmt) + \")\";","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the event task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the event task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"        DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"        return \"E | \" + super.getStatusIcon() + \" | \" + description","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"                + \" | \" + from.format(fmt) + \" \" + to.format(fmt);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":74}},{"path":"src/main/java/Coffee/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The command parses the user input for the description, start time, and end time,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * creates an {@code Event}, saves it, and displays confirmation.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    private final String from;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final String to;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs an {@code EventCommand} by parsing the given arguments.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * The arguments are split into description, start, and end times using","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * the delimiters {@code /from} and {@code /to}.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the description, start, and end times.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException If the command format is invalid.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public EventCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        String[] fromSplit \u003d args.split(\"/from\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The event command format is wrong. \" +","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"                    \"Use: event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d fromSplit[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        String[] toSplit \u003d fromSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The event command format is wrong. \" +","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"                    \"Use: event \u003cdesc\u003e /from \u003ctime\u003e /to \u003ctime\u003e\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        this.from \u003d toSplit[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        this.to \u003d toSplit[1].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by creating an {@code Event} and adding it to the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list where the new event will be added.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"            CommandUtil.addEventSaveAndAck(description, from, to, tasks, ui, storage);","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Error: Please enter both start and end date/time in the format yyyy-MM-dd HHmm \" +","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"                    \"(e.g., 2024-06-10 1800).\");","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-20T14:58:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":57}},{"path":"src/main/java/Coffee/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * Represents the {@code find} command.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" * Searches for tasks whose descriptions contain the specified keyword","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * and displays the matching tasks to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    /** Search keyword used to filter tasks. */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code FindCommand} with the given keyword.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * Leading and trailing whitespace is trimmed before use.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param keyword keyword to search for within task descriptions.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * @throws NullPointerException if {@code keyword} is {@code null}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        this.keyword \u003d keyword.trim();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * Executes this command by finding tasks that contain the keyword and","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * printing the matches via the {@link Ui}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks   task list to search.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * @param ui      UI used to display results.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * @param storage storage (not used by this command).","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e matches \u003d tasks.find(keyword);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        for (Task t: matches) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(t.toString());","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * Returns {@code false} to indicate the application should continue running","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * after this command completes.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * @return {@code false}, as this command does not request application exit.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        return false;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false}],"authorContributionMap":{"dongjunnn":53}},{"path":"src/main/java/Coffee/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class Launcher {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":13}},{"path":"src/main/java/Coffee/LineBreak.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class LineBreak {","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"    private static String lineBreak \u003d","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"            \"---------------------------------------------\";","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    public static void printLineBreak() {","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false}],"authorContributionMap":{"dongjunnn":11}},{"path":"src/main/java/Coffee/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by displaying all tasks in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list to be displayed.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage (not used in this command).","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        tasks.list();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":19}},{"path":"src/main/java/Coffee/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    private Coffee coffee \u003d new Coffee(\"data/test_tasks.txt\");","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(coffee);  // inject the Duke instance","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"            stage.setTitle(\"CoffeeBot\");","lastModifiedDate":"2025-09-20T15:46:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"            stage.show();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":32}},{"path":"src/main/java/Coffee/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    private Coffee coffee;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/coffee1.png\"));","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/coffee2.png\"));","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    public void setDuke(Coffee c) {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        coffee \u003d c;","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        String opening \u003d coffee.greet();","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        DialogBox.getCoffeeDialog(opening, dukeImage)","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        );","lastModifiedDate":"2025-09-02T23:11:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    @FXML","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        String response \u003d coffee.getResponse(input);","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"                DialogBox.getCoffeeDialog(response, dukeImage)","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        );","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":57}},{"path":"src/main/java/Coffee/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"    private final int index1Based;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code MarkCommand} with the given task index.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * @param args User input string containing the index of the task to mark.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException If the argument is empty, not numeric, or not positive.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    public MarkCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        if (args \u003d\u003d null || args.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The mark command format is wrong. Use: mark \u003cindex\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"            this.index1Based \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            if (index1Based \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     * Executes the command by marking the specified task as done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Saves the updated list to storage and displays confirmation messages to the user.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks Task list containing the task to be marked.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * @param ui User interface for displaying messages.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * @param storage Storage for saving the updated task list.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        if (index1Based \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Invalid task index: \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"            return;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsDone(index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"marked task \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":47}},{"path":"src/main/java/Coffee/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Parses raw user input strings into executable {@link Command} instances.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * The parser extracts the leading keyword (case-insensitive) and forwards the remaining","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * text as arguments to the appropriate command implementation.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     * Returns a {@link Command} corresponding to the given input line.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * The input is split into two parts: the first token is treated as the command keyword,","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * and the remainder (if any) is passed as the command\u0027s arguments.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code bye}       → {@link ByeCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code list}      → {@link ListCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code todo}      → {@link TodoCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code deadline}  → {@link DeadlineCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code event}     → {@link EventCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code delete}    → {@link DeleteCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code mark}      → {@link MarkCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code unmark}    → {@link UnmarkCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003e{@code find}      → {@link FindCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     *   \u003cli\u003eAny other keyword → {@link UnknownCommand}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * @param fullCommand full input line entered by the user. Must not be {@code null}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * @return a concrete {@link Command} ready to be executed.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    public static Command parseCommand(String fullCommand) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        String keyword \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        switch (keyword) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"            return new ByeCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            return new TodoCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            return new DeadlineCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        case \"event\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"            return new EventCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"            return new DeleteCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"            return new MarkCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"            return new UnmarkCommand(args);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        case \"find\":","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"            return new FindCommand(args);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        default:","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"            return new UnknownCommand(fullCommand);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":57}},{"path":"src/main/java/Coffee/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":" * Handles reading from and writing to the storage file for tasks.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Storage} instance with the given file path.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     * @param filePath Path to the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isBlank() : \"File path must not be null/blank\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        assert this.filePath !\u003d null : \"filePath must not be null after Paths.get()\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     * @return List of tasks loaded from the file. Returns an empty list if the file does not exist.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        if (!Files.exists(filePath)) return list;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Looking for: \" + filePath.toAbsolutePath());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            for (String line : Files.readAllLines(filePath)) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"                Task t \u003d TaskLoader.fromFileLine(line);","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"                assert t !\u003d null : \"TaskLoader returned null for line: \" + line;","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"                list.add(t);","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        assert list !\u003d null : \"load() should never return null\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        return list;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"        assert tasks !\u003d null : \"Tasks list passed to save() is null\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath.toFile()))) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"                    assert task !\u003d null : \"Null task encountered in save()\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"                    String line \u003d task.toFileString();","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"                    assert line !\u003d null \u0026\u0026 !line.isBlank() : \"Task produced invalid file string\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"                    writer.write(line);","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"                    writer.newLine();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"                }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Error writing tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":74}},{"path":"src/main/java/Coffee/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a generic task in the Coffee application.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * A task has a description and a completion status.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"public class Task {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    protected String description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code Task} with the given description.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * @return {@code \"X\"} if the task is done, otherwise a space.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the task,","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * including its status icon and description.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"     * Returns a string representation of the task formatted for file storage.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"     * @return File-formatted string representation of the task.","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-08-29T12:26:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"        return \"super.getStatusIcon()\" + \" | \" + \"description \";","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T21:04:53","isFullCredit":false}],"authorContributionMap":{"dongjunnn":65}},{"path":"src/main/java/Coffee/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" * Maintains an ordered collection of {@link Task} objects and provides operations to","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" * list, add, delete, mark/unmark, and search tasks. Index-based operations use one-based","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":" * indexing (i.e., the first task is index {@code 1}).","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"public class TaskList {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    /** Backing store for tasks in insertion order. */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     * Creates a task list backed by the given mutable {@link ArrayList}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     * @param taskList initial list used as the backing store.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * @throws NullPointerException if {@code taskList} is {@code null}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"     * Prints all tasks to standard output in a user-friendly format.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"     * Shows a header, a placeholder when the list is empty, and one-based indices.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"    public void list() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(\"Nothing \u003d)\");","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"            System.out.println(i + 1 + \". \" + taskList.get(i));","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * Adds the given task to the end of the list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     * @param task task to add.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * @throws NullPointerException if {@code task} is {@code null}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        taskList.add(task);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        System.out.println();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"        assert !taskList.isEmpty() : \"Task list should not be empty after adding a task\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"     * Deletes and returns the task at the given one-based index.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"     * @param i one-based index of the task to remove.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"     * @return the removed task.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"     * @throws IndexOutOfBoundsException if {@code i} is not in {@code [1, size()]}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"    public Task deleteTask(int i) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task index: \" + i);","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"        assert !taskList.isEmpty() : \"Task list should not be empty before deleting a task\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"        Task removed \u003d taskList.remove(index);","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"        assert taskList.size() \u003e\u003d 0 : \"Task list size should not be negative after deletion\";","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"        return removed;","lastModifiedDate":"2025-09-12T10:42:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task at the given one-based index as done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dongjunnn"},"content":"     * @param i one-based index of the task to mark done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dongjunnn"},"content":"     * @throws IndexOutOfBoundsException if {@code i} is not in {@code [1, size()]}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dongjunnn"},"content":"    public void markAsDone(int i) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dongjunnn"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dongjunnn"},"content":"     * Marks the task at the given one-based index as not done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dongjunnn"},"content":"     * @param i one-based index of the task to mark not done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dongjunnn"},"content":"     * @throws IndexOutOfBoundsException if {@code i} is not in {@code [1, size()]}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dongjunnn"},"content":"    public void markAsNotDone(int i) {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dongjunnn"},"content":"        int index \u003d i - 1;","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dongjunnn"},"content":"        taskList.get(index).markAsNotDone();","lastModifiedDate":"2025-08-21T10:34:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dongjunnn"},"content":"     * Returns an unmodifiable view of the tasks.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dongjunnn"},"content":"     * Mutating the returned list is not permitted and will throw {@link UnsupportedOperationException}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dongjunnn"},"content":"     * @return unmodifiable list view of tasks in insertion order.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dongjunnn"},"content":"    public List\u003cTask\u003e view() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dongjunnn"},"content":"        return Collections.unmodifiableList(taskList);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dongjunnn"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dongjunnn"},"content":"     * @return task count.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dongjunnn"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dongjunnn"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dongjunnn"},"content":"     * Returns tasks whose descriptions contain the given keyword (case-insensitive).","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dongjunnn"},"content":"     * @param keyword substring to search for within task descriptions.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dongjunnn"},"content":"     * @return list of matching tasks in their original order; possibly empty.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dongjunnn"},"content":"     * @throws NullPointerException if {@code keyword} is {@code null}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dongjunnn"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dongjunnn"},"content":"        String needle \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dongjunnn"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dongjunnn"},"content":"            if (t.description.toLowerCase().contains(needle)) {","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dongjunnn"},"content":"                out.add(t);","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dongjunnn"},"content":"        return out;","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T16:20:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":136}},{"path":"src/main/java/Coffee/TaskLoader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Loads {@link Task} instances from their serialized file representation.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Lines are expected to be pipe-delimited with the following canonical formats:","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" *   \u003cli\u003eToDo: {@code T | [ ]|[X]|[1] | DESCRIPTION}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":" *   \u003cli\u003eDeadline: {@code D | [ ]|[X]|[1] | DESCRIPTION | yyyy-MM-dd HHmm}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":" *   \u003cli\u003eEvent: {@code E | [ ]|[X]|[1] | DESCRIPTION | yyyy-MM-dd HHmm yyyy-MM-dd HHmm}\u003c/li\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":" * Status accepts {@code X} (or {@code 1}) for done; anything else is treated as not done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"public class TaskLoader {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     * Returns a concrete {@link Task} parsed from a single line of persisted data.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * The input must conform to one of the supported formats documented in the class header.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"     * @param line one line from the storage file.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"     * @return the parsed {@link Task}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException if the line has an unknown type or an invalid/insufficient field layout.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    public static Task fromFileLine(String line) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"Parsing: \" + line);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        String[] p \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        String type \u003d p[0].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        String status \u003d p[1].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        boolean isDone \u003d \"X\".equals(status) || \"1\".equals(status);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        String desc \u003d p[2].trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        case \"T\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"            return new ToDo(desc, isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        case \"D\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"            return new Deadline(desc, p[3].trim(), isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        case \"E\":","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"            String[] parts \u003d p[3].trim().split(\" \");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Bad Coffee.Event line: \" + line);","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"            String from \u003d parts[0] + \" \" + parts[1];","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"            String to   \u003d parts[2] + \" \" + parts[3];","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"            return new Event(desc, from, to, isDone);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        default:","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"Bad save line: \" + line);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":53}},{"path":"src/main/java/Coffee/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents a to-do task without any time component.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * A {@code ToDo} carries a textual description and a completion status.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code ToDo} with the given description.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"     * @param description description of the to-do task.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"     * @throws IllegalArgumentException if {@code description} is blank.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    public ToDo(String description) throws IllegalArgumentException {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-21T09:52:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code ToDo} with the given description and initial done state.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * @param description description of the to-do task.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     * @param isDone      initial completion status; if {@code true}, the task is marked done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        super(description);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"            this.markAsDone();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"     * Returns the user-facing string representation of this to-do, prefixed with {@code [T]} and","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"     * including the inherited status icon and description.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"     * @return string representation suitable for display in listings.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"    public String toString() {","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"     * Returns the canonical file serialization of this to-do in the form","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"     * {@code T | \u003cstatus\u003e | \u003cdescription\u003e}, where {@code \u003cstatus\u003e} is a single","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"     * space for not done or {@code X} for done.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"     * @return pipe-delimited serialization used by storage.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        return \"T | \" + super.getStatusIcon() + \" | \" + description;","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-19T23:16:00","isFullCredit":false}],"authorContributionMap":{"dongjunnn":56}},{"path":"src/main/java/Coffee/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"/**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":" * Represents the {@code todo} command.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":" * Creates a {@link ToDo} task from the provided description, saves the updated task list,","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":" * and acknowledges the addition to the user.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":" */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    /** Raw description string used to construct the to-do task. */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"     * Constructs a {@code TodoCommand} with the given arguments.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"     * Leading and trailing whitespace is trimmed before use.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"     * @param args argument string containing the to-do description.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    public TodoCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        this.description \u003d args.trim();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    /**","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"     * Executes this command by adding the to-do task, persisting the updated list,","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"     * and emitting confirmation messages via the {@link Ui}.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"     *","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"     * @param tasks   task list to mutate.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"     * @param ui      UI used to display confirmation messages.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"     * @param storage storage used to persist tasks after the mutation.","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"     */","lastModifiedDate":"2025-09-20T16:39:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        CommandUtil.addSaveAndAck(description, tasks, ui, storage);","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-12T11:17:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":36}},{"path":"src/main/java/Coffee/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    public void showMessage(String msg) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(msg);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        System.out.println(\"There is an error with loading the file!\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":20}},{"path":"src/main/java/Coffee/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    private final String input;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    public UnknownCommand(String input) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        this.input \u003d input;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"                + \"Your input was: \" + input);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":15}},{"path":"src/main/java/Coffee/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"    private final int index1Based;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"    public UnmarkCommand(String args) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"        if (args \u003d\u003d null || args.trim().isEmpty()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"The unmark command format is wrong. Use: unmark \u003cindex\u003e\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"            this.index1Based \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"            if (index1Based \u003c\u003d 0) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"                throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"            }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"            throw new IllegalArgumentException(\"Index must be a positive integer.\");","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    @Override","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        if (index1Based \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"Invalid task index: \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"            return;","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsNotDone(index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        storage.save(tasks.view());","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        ui.showMessage(\"unmarked task \" + index1Based);","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-28T13:44:18","isFullCredit":false}],"authorContributionMap":{"dongjunnn":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"            fx:controller\u003d\"Coffee.MainWindow\"\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"                text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-20T16:21:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-02T22:17:38","isFullCredit":false}],"authorContributionMap":{"dongjunnn":50}},{"path":"src/test/java/Coffee/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"import static java.nio.charset.StandardCharsets.UTF_8;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"class StorageTest {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"    @TempDir","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    Path tmp;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    void load_whenFileDoesNotExist_returnsEmptyList() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        Path nonExistent \u003d tmp.resolve(\"data\").resolve(\"tasks.txt\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"        Storage storage \u003d new Storage(nonExistent.toString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(tasks.isEmpty(), \"Expected empty list when file does not exist\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    void save_writesTasks_andCreatesParentDirectories() throws IOException {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        Path nested \u003d tmp.resolve(\"nested\").resolve(\"deeper\").resolve(\"tasks.txt\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        Storage storage \u003d new Storage(nested.toString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        // Use ToDo only so we don\u0027t depend on other concrete Task types\u0027 constructors","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e toSave \u003d Arrays.asList(","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"                new ToDo(\"read book\"),","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"                new ToDo(\"buy milk\", true)","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        );","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        storage.save(toSave);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(Files.exists(nested.getParent()), \"Parent directories should be created\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(Files.exists(nested), \"File should be created by save()\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(nested, UTF_8);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(2, lines.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T |   | read book\", lines.get(0));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T | X | buy milk\", lines.get(1));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"    void load_parsesCanonicalLines_andKeepsOrder() throws IOException {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        Path file \u003d tmp.resolve(\"tasks.txt\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"        List\u003cString\u003e canonical \u003d Arrays.asList(","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"                \"T |   | Buy coffee\",","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"                \"D | X | Submit report | 2024-06-30 2359\",","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"                \"E |   | Coffee chat | 2024-06-10 1800 2024-06-10 1900\"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"        );","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"        Files.write(file, canonical, UTF_8, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"        Storage storage \u003d new Storage(file.toString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        assertNotNull(loaded);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(3, loaded.size(), \"Should load exactly 3 tasks\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"        // Verify the round-trippable serialization using toFileString()","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(canonical.get(0), loaded.get(0).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(canonical.get(1), loaded.get(1).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(canonical.get(2), loaded.get(2).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false}],"authorContributionMap":{"dongjunnn":74}},{"path":"src/test/java/Coffee/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"import java.util.List;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"class TaskListTest {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    void setUp() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"    // ---------- add / size / view ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    void addTask_increasesSize_andAppearsInView() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        ToDo t1 \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        ToDo t2 \u003d new ToDo(\"write notes\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(t1);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(t2);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e snapshot \u003d tasks.view();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(2, snapshot.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(snapshot.get(0).toString().contains(\"read book\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(snapshot.get(1).toString().contains(\"write notes\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"    void view_isUnmodifiable() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"alpha\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e snapshot \u003d tasks.view();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e snapshot.add(new ToDo(\"beta\")));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    // ---------- delete ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    void deleteTask_validIndex_removesAndReturnsCorrectTask() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"a\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"b\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"c\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"dongjunnn"},"content":"        Task removed \u003d tasks.deleteTask(2); // removes \"b\"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(removed.toString().contains(\"b\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"dongjunnn"},"content":"        // Remaining order should be a, c","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e left \u003d tasks.view();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(left.get(0).toString().contains(\"a\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(left.get(1).toString().contains(\"c\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"dongjunnn"},"content":"    void deleteTask_invalidIndex_throws() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"only\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.deleteTask(0)); // 1-based","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.deleteTask(-1));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.deleteTask(2));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"dongjunnn"},"content":"    // ---------- mark / unmark ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"dongjunnn"},"content":"    void markAsDone_thenNotDone_affectsStatus() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"toggle me\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"dongjunnn"},"content":"        // initially not done","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(tasks.view().get(0).toString().contains(\"[ ]\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T |   | toggle me\", ((ToDo) tasks.view().get(0)).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsDone(1);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(tasks.view().get(0).toString().contains(\"[X]\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T | X | toggle me\", ((ToDo) tasks.view().get(0)).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"dongjunnn"},"content":"        tasks.markAsNotDone(1);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(tasks.view().get(0).toString().contains(\"[ ]\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T |   | toggle me\", ((ToDo) tasks.view().get(0)).toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"dongjunnn"},"content":"    // ---------- find ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"dongjunnn"},"content":"    void find_isCaseInsensitive_andMatchesSubstring() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"Read Book\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"submit report\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"book tickets\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e r1 \u003d tasks.find(\"book\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(2, r1.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(r1.get(0).toString().toLowerCase().contains(\"book\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(r1.get(1).toString().toLowerCase().contains(\"book\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e r2 \u003d tasks.find(\"REPORT\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(1, r2.size());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(r2.get(0).toString().toLowerCase().contains(\"report\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"dongjunnn"},"content":"        List\u003cTask\u003e r3 \u003d tasks.find(\"xyz\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(r3.isEmpty());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"dongjunnn"},"content":"    // ---------- list() output ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"dongjunnn"},"content":"    void list_whenEmpty_printsHeaderAndNothingMessage() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"dongjunnn"},"content":"        String out \u003d captureStdout(() -\u003e tasks.list());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(out.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(out.contains(\"Nothing \u003d)\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"dongjunnn"},"content":"    void list_whenNonEmpty_printsIndexedTasks() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"first\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"dongjunnn"},"content":"        tasks.addTask(new ToDo(\"second\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"dongjunnn"},"content":"        String out \u003d captureStdout(() -\u003e tasks.list());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(out.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(out.contains(\"1. [T][ ] first\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(out.contains(\"2. [T][ ] second\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"dongjunnn"},"content":"    // ---------- helper to capture System.out ----------","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"dongjunnn"},"content":"    private String captureStdout(Runnable r) {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"dongjunnn"},"content":"        PrintStream original \u003d System.out;","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"dongjunnn"},"content":"        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"dongjunnn"},"content":"        try (PrintStream ps \u003d new PrintStream(baos)) {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(ps);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"dongjunnn"},"content":"            r.run();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"dongjunnn"},"content":"        } finally {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(original);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"dongjunnn"},"content":"        return baos.toString();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false}],"authorContributionMap":{"dongjunnn":143}},{"path":"src/test/java/Coffee/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"class ToDoTest {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"    void constructor_blankDescription_throws() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ToDo(\"   \"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ToDo(\"\"));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"    void constructor_default_isNotDone() {","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        // Verify via file/string formats so we don\u0027t rely on internals","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(t.toString().startsWith(\"[T][ ]\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T |   | read book\", t.toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"    void toString_hasPrefixT_andContainsDescription() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(\"submit report\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        String s \u003d t.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(s.startsWith(\"[T]\"), \"toString should start with [T]\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(s.contains(\"submit report\"));","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"        // Also sanity-check the not-done status icon in the composite string","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(s.contains(\"[ ]\"), \"New ToDo should be not done\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"    void toFileString_hasTypeIconAndDescription_inThatOrder() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(\"buy milk\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        // Not done:","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T |   | buy milk\", t.toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        // Mark as done and check again","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"        t.markAsDone();","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T | X | buy milk\", t.toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"    void constructor_withIsDoneTrue_setsDoneStatus() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        ToDo t \u003d new ToDo(\"pay bills\", true);","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"        // Check via observable outputs","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(t.toString().contains(\"[X]\"), \"Should be marked done\");","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"        assertEquals(\"T | X | pay bills\", t.toFileString());","lastModifiedDate":"2025-09-20T16:08:11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false}],"authorContributionMap":{"dongjunnn":51}},{"path":"src/test/java/Coffee/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"package Coffee;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"public class UiTest {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"    void showMessage_printsMessage() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"dongjunnn"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"dongjunnn"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"dongjunnn"},"content":"            ui.showMessage(\"hello world\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"dongjunnn"},"content":"        } finally {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"dongjunnn"},"content":"        String printed \u003d out.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(printed.contains(\"hello world\"),","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"dongjunnn"},"content":"                \"Expected printed output to contain the message\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"dongjunnn"},"content":"    @Test","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"dongjunnn"},"content":"    void showLoadingError_printsErrorMessage() {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"dongjunnn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"dongjunnn"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"dongjunnn"},"content":"        ByteArrayOutputStream out \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"dongjunnn"},"content":"        System.setOut(new PrintStream(out));","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"dongjunnn"},"content":"        try {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"dongjunnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"dongjunnn"},"content":"        } finally {","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"dongjunnn"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"dongjunnn"},"content":"        }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"dongjunnn"},"content":"","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"dongjunnn"},"content":"        String printed \u003d out.toString();","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"dongjunnn"},"content":"        assertTrue(printed.contains(\"There is an error with loading the file!\"),","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"dongjunnn"},"content":"                \"Expected printed output to contain the loading error message\");","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"dongjunnn"},"content":"    }","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"dongjunnn"},"content":"}","lastModifiedDate":"2025-08-29T11:50:07","isFullCredit":false}],"authorContributionMap":{"dongjunnn":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dongjunnn"},"content":"todo visit new theme park","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"dongjunnn"},"content":"deadline submit report /by 2019-10-11 1700","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"dongjunnn"},"content":"event team project meeting /from 2019-10-02 1400 /to 2019-10-02 1600","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"dongjunnn"},"content":"mark 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"dongjunnn"},"content":"unmark 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"dongjunnn"},"content":"todo","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"dongjunnn"},"content":"deadline do homework","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"dongjunnn"},"content":"event orientation week /from 2019-10-04","lastModifiedDate":"2025-08-27T21:21:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"dongjunnn"},"content":"blah","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"dongjunnn"},"content":"delete 2","lastModifiedDate":"2025-08-21T10:20:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"dongjunnn"},"content":"list","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"dongjunnn"},"content":"bye","lastModifiedDate":"2025-08-21T09:35:32","isFullCredit":false}],"authorContributionMap":{"dongjunnn":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"dongjunnn"},"content":"java -classpath ..\\bin Coffee.Coffee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T15:00:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"dongjunnn":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"dongjunnn"},"content":"java -classpath ../bin Coffee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-27T20:43:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"dongjunnn":1,"-":37}}]
