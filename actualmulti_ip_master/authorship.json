[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"checkstyle {","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"//    mainClass.set(\"jake.Jake\")","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    archiveBaseName \u003d \"jake\"","lastModifiedDate":"2025-08-28T20:29:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"actualmulti":23,"-":39}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    private Label dialog;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    private void flip() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"    public static DialogBox getJakeDialog(String text, Image img) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"        db.flip();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"        return db;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":58}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"public class Launcher {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import jake.Jake;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":" * A GUI for Jake using FXML.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"public class Main extends Application {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    private Jake jake \u003d new Jake(\"./data/jake.txt\");","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJake(jake); // inject the instance","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"            stage.show();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"import jake.Jake;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"import javafx.util.Duration;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    private TextField userInput;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    private Button sendButton;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    private Jake jake;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/finnthehuman.jpg\"));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    private Image jakeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jakethedog.jpg\"));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    public void initialize() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"    /** Injects the Jake instance */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    public void setJake(Jake j) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        jake \u003d j;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"     * Creates two dialog boxes, one echoing user input and other containing Jake\u0027s reply","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"     * Clears user input after processing.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"    @FXML","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"        String response \u003d jake.getResponse(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"        if (response.startsWith(\"BYE_COMMAND:\")) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"            String actualResponse \u003d response.substring(\"BYE_COMMAND:\".length());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"                    DialogBox.getJakeDialog(actualResponse, jakeImage)","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"            );","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"            userInput.clear();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"            // Close application after 3 seconds","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"            delay.play();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"                    DialogBox.getJakeDialog(response, jakeImage)","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"            );","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"            userInput.clear();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":74}},{"path":"src/main/java/jake/Jake.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import jake.task.DeadlineTask;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.task.EventTask;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import jake.task.Task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import jake.task.Todo;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import jake.ui.GuiUi;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"import jake.ui.Ui;","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":" * Main class for Jake chatbot app.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" * Jake is a task management assistant.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":" * It supports todo tasks, deadline tasks, and event tasks with persistent storage.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":" *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":" * @author Mitchel lee","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"public class Jake {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    private GuiUi guiUi;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"     * Constructs a new Jake instance with specified file path for data storage.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"     * Initialises the UI, storage, and attempts to load existing tasks from the file.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"     * If loading fails, will start with empty task list.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"     * @param filePath the path to the file where tasks are stored.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    public Jake(String filePath) {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"        assert filePath !\u003d null : \"filePath should not be null\";","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"        assert !filePath.trim().isEmpty() : \"filePath should not be empty\";","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"        guiUi \u003d new GuiUi();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"     * Default constructor for Jake using the default file path.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    public Jake() {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"        this(\"./data/jake.txt\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"     * Processes a user command and returns the appropriate response string.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"     * Uses GuiUi for clean, consistent formatting.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"     * @param input the user\u0027s command input","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"     * @return the response string to be displayed in the GUI","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"            String command \u003d Parser.getCommandWord(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"            switch (command) {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"            case \"bye\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"                return \"BYE_COMMAND:\" + guiUi.getGoodbyeMessage();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"            case \"list\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"                return guiUi.getTaskListMessage(tasks);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"            case \"mark\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"                return handleMarkCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"            case \"unmark\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"                return handleUnmarkCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"            case \"todo\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"                return handleTodoCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"            case \"deadline\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"                return handleDeadlineCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"            case \"event\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"                return handleEventCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"            case \"delete\":","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"                return handleDeleteCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"            case \"find\":","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"                return handleFindCommand(input);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"            case \"tag\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"                return handleTagCommand(input);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"            case \"untag\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"                return handleUntagCommand(input);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"            case \"search\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"                return handleSearchCommand(input);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"            default:","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"                return guiUi.getInvalidCommandMessage();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"        } catch (JakeException e) {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"            return guiUi.getErrorMessage(e.getMessage());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"mark\" command to mark a task as done.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the task number to mark","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task number is invalid or out of range","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"    private String handleMarkCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(fullCommand);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"        tasks.markTask(taskNumber - 1);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskMarkedMessage(tasks.get(taskNumber - 1));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"unmark\" command to mark a task as not done.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the task number to unmark","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task number is invalid or out of range.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"    private String handleUnmarkCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(fullCommand);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"        tasks.unmarkTask(taskNumber - 1);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskUnmarkedMessage(tasks.get(taskNumber - 1));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"    private String handleFindCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"        String name \u003d Parser.parseTaskName(fullCommand, \"find\");","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"        TaskList out \u003d tasks.findTasks(name);","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskListMessage(out);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"todo\" command to add a new todo task.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"     * Supports inline tagging: \"todo buy groceries #personal #urgent\"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the todo task description","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task name is empty or invalid","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"    private String handleTodoCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"        assert tasks !\u003d null : \"tasks should be initialized\";","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"        assert storage !\u003d null : \"storage should be initialized\";","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T16:08:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"        String[] parsed \u003d Parser.parseTaskNameWithTags(fullCommand, \"todo\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"        String name \u003d parsed[0];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d parsed[1];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"        Todo todo \u003d new Todo(name);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"        // Add tags if any were found","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"        if (!tagsString.isEmpty()) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e tags \u003d Arrays.asList(tagsString.split(\",\"));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"            todo.setTags(tags);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"        tasks.add(todo);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskAddedMessage(todo, tasks.size());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"deadline\" command to add a new deadline task.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"     * Supports inline tagging: \"deadline submit assignment #work #important /2023-12-25T23:59:59\"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the task name and deadline","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or the date is malformed","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"    private String handleDeadlineCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"        String[] parsed \u003d Parser.parseDeadlineCommandWithTags(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"        String name \u003d parsed[0];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"        String deadline \u003d parsed[1];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d parsed[2];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(name, deadline);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"actualmulti"},"content":"        // Add tags if any were found","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"actualmulti"},"content":"        if (!tagsString.isEmpty()) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e tags \u003d Arrays.asList(tagsString.split(\",\"));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"actualmulti"},"content":"            deadlineTask.setTags(tags);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"actualmulti"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskAddedMessage(deadlineTask, tasks.size());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"event\" command to add a new event task.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"actualmulti"},"content":"     * Supports inline tagging: \"event team meeting #work #weekly /2023-12-20T10:00:00 /2023-12-20T11:00:00\"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the task name, start time, and end time","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or the dates are malformed","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"actualmulti"},"content":"    private String handleEventCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"actualmulti"},"content":"        String[] parsed \u003d Parser.parseEventCommandWithTags(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"actualmulti"},"content":"        String name \u003d parsed[0];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"actualmulti"},"content":"        String startDate \u003d parsed[1];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"actualmulti"},"content":"        String endDate \u003d parsed[2];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d parsed[3];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"actualmulti"},"content":"        EventTask event \u003d new EventTask(name, startDate, endDate);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"actualmulti"},"content":"        // Add tags if any were found","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"actualmulti"},"content":"        if (!tagsString.isEmpty()) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e tags \u003d Arrays.asList(tagsString.split(\",\"));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"actualmulti"},"content":"            event.setTags(tags);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"actualmulti"},"content":"        tasks.add(event);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskAddedMessage(event, tasks.size());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"delete\" command to remove a task from the list.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the task number to delete","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task number is invalid or out of range","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"actualmulti"},"content":"    private String handleDeleteCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"actualmulti"},"content":"        int taskNumber \u003d Parser.parseTaskNumber(fullCommand);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"actualmulti"},"content":"        Task deletedTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"actualmulti"},"content":"        tasks.delete(taskNumber - 1);","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"actualmulti"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"actualmulti"},"content":"        return guiUi.getTaskDeletedMessage(deletedTask, tasks.size());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"tag\" command to add or remove tags from tasks.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing task number, operation, and tag","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or task number is out of range","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"actualmulti"},"content":"    private String handleTagCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"actualmulti"},"content":"        String[] parsed \u003d Parser.parseTagCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"actualmulti"},"content":"        int taskNumber \u003d Integer.parseInt(parsed[0]);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"actualmulti"},"content":"        String operation \u003d parsed[1];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"actualmulti"},"content":"        String tag \u003d parsed[2];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"actualmulti"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"actualmulti"},"content":"        if (operation.equals(\"add\")) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"actualmulti"},"content":"            task.addTag(tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"actualmulti"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"actualmulti"},"content":"            return guiUi.getTagAddedMessage(task, tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"actualmulti"},"content":"        } else { // operation.equals(\"remove\")","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"actualmulti"},"content":"            if (task.hasTag(tag)) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"actualmulti"},"content":"                task.removeTag(tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"actualmulti"},"content":"                storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"actualmulti"},"content":"                return guiUi.getTagRemovedMessage(task, tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"actualmulti"},"content":"            } else {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"actualmulti"},"content":"                return guiUi.getTagNotFoundMessage(task, tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"untag\" command to remove one or more tags from a task.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"actualmulti"},"content":"     * Usage: \"untag [task number] [tag1] [tag2] ...\" or \"untag [task number] all\"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing task number and tags to remove","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or task number is out of range","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"actualmulti"},"content":"    private String handleUntagCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"actualmulti"},"content":"        String[] parsed \u003d Parser.parseUntagCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"actualmulti"},"content":"        int taskNumber \u003d Integer.parseInt(parsed[0]);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"actualmulti"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"actualmulti"},"content":"        if (parsed.length \u003d\u003d 2 \u0026\u0026 parsed[1].equals(\"all\")) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"actualmulti"},"content":"            // Remove all tags","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e removedTags \u003d task.getTags();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"actualmulti"},"content":"            task.setTags(Arrays.asList()); // Clear all tags","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"actualmulti"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"actualmulti"},"content":"            return guiUi.getAllTagsRemovedMessage(task, removedTags);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"actualmulti"},"content":"            // Remove specific tags","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"actualmulti"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"actualmulti"},"content":"            boolean anyRemoved \u003d false;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"actualmulti"},"content":"            for (int i \u003d 1; i \u003c parsed.length; i++) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"actualmulti"},"content":"                String tag \u003d parsed[i];","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"actualmulti"},"content":"                if (task.hasTag(tag)) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"actualmulti"},"content":"                    task.removeTag(tag);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"actualmulti"},"content":"                    result.append(\"Removed tag \u0027\").append(tag).append(\"\u0027\\n\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"actualmulti"},"content":"                    anyRemoved \u003d true;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"actualmulti"},"content":"                } else {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"actualmulti"},"content":"                    result.append(\"Tag \u0027\").append(tag).append(\"\u0027 not found\\n\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"actualmulti"},"content":"            if (anyRemoved) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"actualmulti"},"content":"                storage.save(tasks.getTasks());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"actualmulti"},"content":"            result.append(\"Updated task: \").append(task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"actualmulti"},"content":"            return result.toString().trim();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"actualmulti"},"content":"     * Handles the \"search\" command to find tasks by tag.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the full command string containing the search term","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"actualmulti"},"content":"    private String handleSearchCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"actualmulti"},"content":"        String searchTerm \u003d Parser.parseSearchTagCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"actualmulti"},"content":"        // If search term starts with #, treat it as a tag search","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"actualmulti"},"content":"        if (fullCommand.contains(\"#\")) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"actualmulti"},"content":"            TaskList filteredTasks \u003d tasks.findTasksByTag(searchTerm);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"actualmulti"},"content":"            return guiUi.getSearchResultsMessage(filteredTasks, \"#\" + searchTerm);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"actualmulti"},"content":"            // Regular text search in task names","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"actualmulti"},"content":"            TaskList filteredTasks \u003d tasks.findTasks(searchTerm);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"actualmulti"},"content":"            return guiUi.getSearchResultsMessage(filteredTasks, searchTerm);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"actualmulti"},"content":"     * Runs the main application loop.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"actualmulti"},"content":"     * Displays welcome message and processes user commands until \"bye\" is entered.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"actualmulti"},"content":"     * Handles various commands including adding, marking/unmarking, listing, and deleting tasks.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"actualmulti"},"content":"    public void run() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"actualmulti"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"actualmulti"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"actualmulti"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"actualmulti"},"content":"            try {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"actualmulti"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"actualmulti"},"content":"                String command \u003d Parser.getCommandWord(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"actualmulti"},"content":"                switch (command) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"actualmulti"},"content":"                case \"bye\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"actualmulti"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"actualmulti"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"actualmulti"},"content":"                case \"list\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"actualmulti"},"content":"                    ui.showTaskList(tasks);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"actualmulti"},"content":"                case \"mark\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"actualmulti"},"content":"                    handleMarkCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"actualmulti"},"content":"                case \"unmark\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"actualmulti"},"content":"                    handleUnmarkCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"actualmulti"},"content":"                case \"todo\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"actualmulti"},"content":"                    handleTodoCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"actualmulti"},"content":"                case \"deadline\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"actualmulti"},"content":"                    handleDeadlineCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"actualmulti"},"content":"                case \"event\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"actualmulti"},"content":"                    handleEventCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"actualmulti"},"content":"                case \"delete\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"actualmulti"},"content":"                    handleDeleteCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"actualmulti"},"content":"                case \"find\":","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"actualmulti"},"content":"                    handleFindCommand(fullCommand);","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"actualmulti"},"content":"                case \"tag\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"actualmulti"},"content":"                    handleTagCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"actualmulti"},"content":"                case \"untag\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"actualmulti"},"content":"                    handleUntagCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"actualmulti"},"content":"                case \"search\":","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"actualmulti"},"content":"                    handleSearchCommand(fullCommand);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"actualmulti"},"content":"                default:","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"actualmulti"},"content":"                    ui.showInvalidCommand();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"actualmulti"},"content":"                    break;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"actualmulti"},"content":"            } catch (JakeException e) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"actualmulti"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"actualmulti"},"content":"     * The main entry point of the Jake application.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"actualmulti"},"content":"     * Creates a new Jake instance with the default data file path and runs the application.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"actualmulti"},"content":"     * @param args command line arguments (not used)","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"actualmulti"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"actualmulti"},"content":"        new Jake(\"./data/jake.txt\").run();","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false}],"authorContributionMap":{"actualmulti":389}},{"path":"src/main/java/jake/JakeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":" * Custom exception class for Jake application errors.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":" * Extends RuntimeException to handle application-specific error conditions.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"public class JakeException extends RuntimeException {","lastModifiedDate":"2025-08-23T18:46:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"     * Creates a new JakeException with the specified error message.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"     * @param message the error message describing the exception","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"    public JakeException(String message) {","lastModifiedDate":"2025-08-23T18:46:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"        super(message);","lastModifiedDate":"2025-08-23T18:46:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T18:46:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-23T18:46:24","isFullCredit":false}],"authorContributionMap":{"actualmulti":16}},{"path":"src/main/java/jake/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":" * Utility class for parsing user commands and extracting relavant information","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":" * Provides static methods to parse different types of commands and extract","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":" * command words, task names, and specific command parameters.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"     * Extracts the command word (first word) from a full command string.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete command string entered by the user","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"     * @return the first word of the command, which represents the command type","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    public static String getCommandWord(String fullCommand) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"        assert !fullCommand.isEmpty() : \"fullCommand should not be empty\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"        return fullCommand.split(\" \")[0];","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseCommand(String fullCommand) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"        return fullCommand.split(\" \", 2);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"     * Extracts and parses the task number from commands that require a task index.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"     * Used for commands like \"mark\", \"unmark\", and \"delete\".","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete command string containing a task number","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"     * @return the task number as an integer","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if no task number is provided or if the format is invalid","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"    public static int parseTaskNumber(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"            String[] parts \u003d fullCommand.split(\" \");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"            if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Please specify a task number!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"            return Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Invalid task number format!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"     * Extracts tags from a task description string.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"     * Tags are identified by the # symbol (e.g., #work #urgent).","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"     * @param taskDescription the task description that may contain tags","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"     * @return a list of tags found in the description","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"    public static List\u003cString\u003e extractTags(String taskDescription) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"        Pattern tagPattern \u003d Pattern.compile(\"#(\\\\w+)\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"        Matcher matcher \u003d tagPattern.matcher(taskDescription);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"        while (matcher.find()) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"            tags.add(matcher.group(1));","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"        return tags;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"     * Removes tags from a task description string.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"     * @param taskDescription the task description that may contain tags","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"     * @return the task description with tags removed","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"    public static String removeTags(String taskDescription) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"        return taskDescription.replaceAll(\"#\\\\w+\", \"\").trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"     * Extracts the task name from a command string by removing the command word.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"     * Also extracts any inline tags from the task name.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"     * @param commandWord the command word to be removed from the beginning","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"     * @return an array where index 0 is the task name (without tags) and index 1 is a comma-separated list of tags","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task name is empty after removing the command word","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseTaskNameWithTags(String fullCommand, String commandWord) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"        assert commandWord !\u003d null : \"commandWord should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        String fullDescription \u003d fullCommand.substring(commandWord.length()).trim();","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        if (fullDescription.isEmpty()) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(commandWord.substring(0, 1).toUpperCase()","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"                    + commandWord.substring(1) + \" task must have a name\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"        List\u003cString\u003e tags \u003d extractTags(fullDescription);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"        String taskName \u003d removeTags(fullDescription);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"        if (taskName.isEmpty()) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(commandWord.substring(0, 1).toUpperCase()","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"                    + commandWord.substring(1) + \" task must have a name\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d String.join(\",\", tags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        return new String[]{taskName, tagsString};","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"     * Extracts the task name from a command string by removing the command word.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete command string","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"     * @param commandWord the command word to be removed from the beginning","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"     * @return the task name after removing the command word and trimming whitespace","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the task name is empty after removing the command word","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"    public static String parseTaskName(String fullCommand, String commandWord) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"        assert commandWord !\u003d null : \"commandWord should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"        String name \u003d fullCommand.substring(commandWord.length()).trim();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(commandWord.substring(0, 1).toUpperCase()","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"                    + commandWord.substring(1) + \" task must have a name\");","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"        return name;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"     * Parses a deadline command to extract the task name and deadline date.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"     * Also extracts any inline tags from the task name.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"deadline [task name] #tag1 #tag2 /[date]\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete deadline command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing the task name at index 0, the deadline date at index 1, and tags at index 2","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or missing required components","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseDeadlineCommandWithTags(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand.trim().startsWith(\"deadline\") : \"deadline should start with \u0027deadline\u0027\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"            int beginIndex \u003d fullCommand.indexOf(\" \") + 1;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"            int endIndex \u003d fullCommand.indexOf(\"/\", beginIndex);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"            if (beginIndex \u003e endIndex) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Deadline task must have a valid name and/or date!\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"            String nameWithTags \u003d fullCommand.substring(beginIndex, endIndex - 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"            String deadline \u003d fullCommand.substring(endIndex + 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e tags \u003d extractTags(nameWithTags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"            String taskName \u003d removeTags(nameWithTags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"            String tagsString \u003d String.join(\",\", tags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"            return new String[]{taskName, deadline, tagsString};","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Deadline task must have a valid name and/or date!\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"     * Parses a deadline command to extract the task name and deadline date.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"deadline [task name] /[date]\"","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete deadline command string","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing the task name at index 0 and the deadline date at index 1","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or missing required components","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseDeadlineCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand.trim().startsWith(\"deadline\") : \"deadline should start with \u0027deadline\u0027\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"actualmulti"},"content":"            int beginIndex \u003d fullCommand.indexOf(\" \") + 1;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"actualmulti"},"content":"            int endIndex \u003d fullCommand.indexOf(\"/\", beginIndex);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"actualmulti"},"content":"            if (beginIndex \u003e endIndex) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Deadline task must have a valid name and/or date!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"actualmulti"},"content":"            String name \u003d fullCommand.substring(beginIndex, endIndex - 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"actualmulti"},"content":"            String deadline \u003d fullCommand.substring(endIndex + 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"actualmulti"},"content":"            return new String[]{name, deadline};","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Deadline task must have a valid name and/or date!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"actualmulti"},"content":"     * Parses an event command to extract the task name, start date, and end date.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"actualmulti"},"content":"     * Also extracts any inline tags from the task name.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"event [task name] #tag1 #tag2 /[start date] /[end date]\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete event command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing the task name at index 0, start date at index 1, end date at index 2, and tags at index 3","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or missing required components","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseEventCommandWithTags(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand.trim().startsWith(\"event\") : \"event should start with \u0027event\u0027\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"actualmulti"},"content":"            int beginIndex \u003d fullCommand.indexOf(\" \") + 1;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"actualmulti"},"content":"            int endIndex \u003d fullCommand.indexOf(\"/\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"actualmulti"},"content":"            if (beginIndex \u003e\u003d endIndex) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"actualmulti"},"content":"            String nameWithTags \u003d fullCommand.substring(beginIndex, endIndex - 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"actualmulti"},"content":"            String dates \u003d fullCommand.substring(endIndex + 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"actualmulti"},"content":"            int dateIndex \u003d dates.indexOf(\"/\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"actualmulti"},"content":"            if (dateIndex \u003c 0) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"actualmulti"},"content":"            String startDate \u003d dates.substring(0, dateIndex - 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"actualmulti"},"content":"            String endDate \u003d dates.substring(dateIndex + 1);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"actualmulti"},"content":"            List\u003cString\u003e tags \u003d extractTags(nameWithTags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"actualmulti"},"content":"            String taskName \u003d removeTags(nameWithTags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"actualmulti"},"content":"            String tagsString \u003d String.join(\",\", tags);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"actualmulti"},"content":"            return new String[]{taskName, startDate, endDate, tagsString};","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"actualmulti"},"content":"     * Parses an event command to extract the task name, start date, and end date.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"event [task name] /[start date] /[end date]\"","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete event command string","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing the task name at index 0, start date at index 1, and end date at index 2","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid or missing required components","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseEventCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand.trim().startsWith(\"event\") : \"event should start with \u0027event\u0027\";","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:34:17","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"actualmulti"},"content":"            int beginIndex \u003d fullCommand.indexOf(\" \") + 1;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"actualmulti"},"content":"            int endIndex \u003d fullCommand.indexOf(\"/\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"actualmulti"},"content":"            if (beginIndex \u003e\u003d endIndex) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"actualmulti"},"content":"            String name \u003d fullCommand.substring(beginIndex, endIndex - 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"actualmulti"},"content":"            String dates \u003d fullCommand.substring(endIndex + 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"actualmulti"},"content":"            int dateIndex \u003d dates.indexOf(\"/\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"actualmulti"},"content":"            if (dateIndex \u003c 0) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"actualmulti"},"content":"                throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"actualmulti"},"content":"            String startDate \u003d dates.substring(0, dateIndex - 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"actualmulti"},"content":"            String endDate \u003d dates.substring(dateIndex + 1);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"actualmulti"},"content":"            return new String[]{name, startDate, endDate};","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Event task must have a valid name and/or date!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"actualmulti"},"content":"     * Parses a tag command to extract the task number and tag operation.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"tag [task number] [add/remove] [tag]\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete tag command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing task number at index 0, operation at index 1, and tag at index 2","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseTagCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"actualmulti"},"content":"        String[] parts \u003d fullCommand.split(\" \", 4);","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"actualmulti"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Tag command format: tag [task number] [add/remove] [tag]\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"actualmulti"},"content":"        String taskNumber \u003d parts[1];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"actualmulti"},"content":"        String operation \u003d parts[2];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"actualmulti"},"content":"        String tag \u003d parts[3];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"actualmulti"},"content":"        if (!operation.equals(\"add\") \u0026\u0026 !operation.equals(\"remove\")) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Tag operation must be \u0027add\u0027 or \u0027remove\u0027\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"actualmulti"},"content":"        if (tag.trim().isEmpty()) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Tag cannot be empty\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"actualmulti"},"content":"        return new String[]{taskNumber, operation, tag.trim()};","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"actualmulti"},"content":"     * Parses an untag command to extract the task number and tags to remove.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"untag [task number] [tag1] [tag2] ...\" or \"untag [task number] all\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete untag command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"actualmulti"},"content":"     * @return an array containing task number at index 0 and tags to remove at subsequent indices","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"actualmulti"},"content":"    public static String[] parseUntagCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"actualmulti"},"content":"        String[] parts \u003d fullCommand.split(\" \");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"actualmulti"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Untag command format: untag [task number] [tag1] [tag2] ... or untag [task number] all\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"actualmulti"},"content":"        String taskNumber \u003d parts[1];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"actualmulti"},"content":"        // Check if it\u0027s \"untag [number] all\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"actualmulti"},"content":"        if (parts.length \u003d\u003d 3 \u0026\u0026 parts[2].equals(\"all\")) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"actualmulti"},"content":"            return new String[]{taskNumber, \"all\"};","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"actualmulti"},"content":"        // Otherwise, collect all tags to remove","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"actualmulti"},"content":"        String[] result \u003d new String[parts.length - 1];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"actualmulti"},"content":"        result[0] \u003d taskNumber;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"actualmulti"},"content":"        for (int i \u003d 2; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"actualmulti"},"content":"            result[i - 1] \u003d parts[i];","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"actualmulti"},"content":"        return result;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"actualmulti"},"content":"     * Parses a search by tag command.","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"actualmulti"},"content":"     * Expected format: \"search #[tag]\"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"actualmulti"},"content":"     * @param fullCommand the complete search command string","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"actualmulti"},"content":"     * @return the tag to search for (without the # prefix)","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the command format is invalid","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"actualmulti"},"content":"    public static String parseSearchTagCommand(String fullCommand) throws JakeException {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"actualmulti"},"content":"        assert fullCommand !\u003d null : \"fullCommand should not be null\";","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"actualmulti"},"content":"        String searchTerm \u003d fullCommand.substring(\"search\".length()).trim();","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"actualmulti"},"content":"        if (searchTerm.isEmpty()) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Search term cannot be empty\");","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"actualmulti"},"content":"        if (searchTerm.startsWith(\"#\")) {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"actualmulti"},"content":"            return searchTerm.substring(1).trim();","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"actualmulti"},"content":"            return searchTerm;","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:45:12","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false}],"authorContributionMap":{"actualmulti":348}},{"path":"src/main/java/jake/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T13:30:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import java.util.Date;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"import jake.task.DeadlineTask;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"import jake.task.EventTask;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"import jake.task.Task;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"import jake.task.Todo;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":" * Handles loading and saving tasks to and from a file.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":" * Manages persistent storage of task data with automatic file creation and error handling.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"     * Creates a Storage instance with the specified file path.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"     * Ensures that the storage file and its parent directories exist.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"     * Creates the necessary directories and file if they don\u0027t exist.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"    private void ensureFileExists() {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"            if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"                file.createNewFile();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"            System.out.println(\"Error creating data file: \" + e.getMessage());","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"     * Parses each line in the file to recreate Task objects.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"     * @return an ArrayList of tasks loaded from the file","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"        ensureFileExists();","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"            String line;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"                Task task \u003d parseTask(line);","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"            System.out.println(\"Error while reading file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"     * Overwrites the existing file content with the current task list.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the list of tasks to save to the file","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"        ensureFileExists();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"                writer.newLine();","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"            System.out.println(\"Error while writing to file: \" + e.getMessage());","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"     * Parses a line from the storage file to create a Task object.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"     * Handles different task types (Todo, Deadline, Event) and their specific formats.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"     * @param line a line from the storage file representing a task","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"     * @return the parsed Task object, or null if the line is corrupted","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"            String type \u003d parts[0].trim();","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"            String name \u003d parts[2].trim();","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"            SimpleDateFormat inputFormatter \u003d new SimpleDateFormat(\"MMM dd yyyy HH:mm:ss\");","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"            SimpleDateFormat outputFormatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\");","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"            Task task \u003d null;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"                task \u003d new Todo(name);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"                    task.markDone();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"                // Handle tags for Todo (at index 3)","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"                if (parts.length \u003e 3 \u0026\u0026 !parts[3].trim().isEmpty()) {","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"                    List\u003cString\u003e tags \u003d Arrays.asList(parts[3].split(\",\"));","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"                    task.setTags(tags);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"                return task;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"                Date byDate \u003d inputFormatter.parse(parts[3].trim());","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"                String by \u003d outputFormatter.format(byDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"                task \u003d new DeadlineTask(name, by);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"                    task.markDone();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"                // Handle tags for DeadlineTask (at index 4)","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"                if (parts.length \u003e 4 \u0026\u0026 !parts[4].trim().isEmpty()) {","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"                    List\u003cString\u003e tags \u003d Arrays.asList(parts[4].split(\",\"));","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"                    task.setTags(tags);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"                return task;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"                Date startDate \u003d inputFormatter.parse(parts[3].trim());","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"                Date endDate \u003d inputFormatter.parse(parts[4].trim());","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"                String start \u003d outputFormatter.format(startDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"                String end \u003d outputFormatter.format(endDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"                task \u003d new EventTask(name, start, end);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"                if (isDone) {","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"                    task.markDone();","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"                // Handle tags for EventTask (at index 5)","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"                if (parts.length \u003e 5 \u0026\u0026 !parts[5].trim().isEmpty()) {","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"                    List\u003cString\u003e tags \u003d Arrays.asList(parts[5].split(\",\"));","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"                    task.setTags(tags);","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"                return task;","lastModifiedDate":"2025-09-06T17:32:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"            default:","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"                System.out.println(\"Corrupted line ignored: \" + line);","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"                return null;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"            System.out.println(\"Corrupted line ignored: \" + line);","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"            return null;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false}],"authorContributionMap":{"actualmulti":172}},{"path":"src/main/java/jake/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.task.Task;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":" * Manages a list of tasks with operations to add, delete, mark, and access tasks.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":" * Provides a wrapper around ArrayList with additional validation and task-specific operations.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"     * Creates an empty task list.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"     * Creates a task list with given list of tasks","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the initial list of tasks to be managed","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"     * Adds a task to the end of the task list","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"     * @param task the task to be added to the list","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"        assert task !\u003d null : \"task should not be null\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"        assert tasks !\u003d null : \"tasklist should be initialized\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"        int sizeBefore \u003d tasks.size();","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"        assert tasks.size() \u003d\u003d sizeBefore + 1 : \"list size should increase by 1 after adding\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        assert tasks.contains(task) : \"task should be present in list after adding\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"     * @param index the zero-based index of the task to be removed","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the index is invalid or out of bounds","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    public void delete(int index) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"        assert tasks !\u003d null : \"tasklist should be initialized\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"        assert index \u003e\u003d 0 : \"index should be non-negative\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Invalid task number!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        int sizeBefore \u003d tasks.size();","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"        Task removedTask \u003d tasks.get(index);","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        assert tasks.size() \u003d\u003d sizeBefore - 1 : \"list size should increase by 1\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"        assert tasks.indexOf(removedTask) !\u003d index","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"                || !tasks.contains(removedTask) : \"task should be removed from speicifed index\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"     * @param index the zero-based index of the task to retrieve","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the index is invalid or out of bounds","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"    public Task get(int index) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Invalid task number!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"     * @param index the zero-based index of the task to mark as done","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the index is invalid or out of bounds","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    public void markTask(int index) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"        assert index \u003e\u003d 0 : \"index should be non-negative\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"        get(index).markDone();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"        assert get(index).isDone() : \"task should be marked as done after markDone()\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"     * Marks the task at the specified index as not done.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"     * @param index the zero-based index of the task to unmark","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the index is invalid or out of bounds","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"    public void unmarkTask(int index) throws JakeException {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"        assert index \u003e\u003d 0 : \"index should be non-negative\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"        get(index).unmarkDone();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"        assert !get(index).isDone() : \"task should not be marked as done after unmarkDone()\";","lastModifiedDate":"2025-09-06T15:52:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"     * Used primarily for storage operations.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"     * @return the ArrayList containing all tasks","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"     * Returns the list of all tasks that contain the string input.","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"     * @param name the string to be found in the list of tasks.","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"     * @return the TaskList containing all tasks that contain the input string.","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"    public TaskList findTasks(String name) {","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"            if (task.getName().contains(name)) {","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"                out.add(task);","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"        return new TaskList(out);","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T16:21:35","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"     * Returns the list of all tasks that have the specified tag.","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag to search for","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"     * @return the TaskList containing all tasks that have the specified tag","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"    public TaskList findTasksByTag(String tag) {","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"            if (task.hasTag(tag)) {","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"                out.add(task);","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"        return new TaskList(out);","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:44:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false}],"authorContributionMap":{"actualmulti":159}},{"path":"src/main/java/jake/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.JakeException;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":" * Represents a task that has a deadline by which it must be completed.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":" * The deadline is parsed from ISO format (yyyy-MM-ddTHH:mm:ss) and","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":" * displayed in a more readable format (MMM dd yyyy HH:mm:ss).","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":" * Example: \"submit assignment (by: Dec 25 2023 23:59:59)\"","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"    private String deadlineDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"     * Creates a new deadline task with the specified name and deadline.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"     * @param name the description of the task","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"     * @param deadlineDate the deadline in ISO format (yyyy-MM-ddTHH:mm:ss)","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if the deadline date format is invalid","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    public DeadlineTask(String name, String deadlineDate) {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"        super(name);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"        this.deadlineDate \u003d parseDate(deadlineDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    public String getType() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"        return \"D\";","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"        return this.deadlineDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    private String parseDate(String date) {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(date);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"            return datetime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm:ss\"));","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Invalid datetime input! Input in yyyy-mm-ddTHH:mm:ss format\");","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d String.join(\",\", this.tags);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + deadlineDate + \" | \" + tagsString;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        String tagsDisplay \u003d getTagsDisplay();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"        if (tagsDisplay.isEmpty()) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineDate);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[D]%s (by: %s) | %s\", super.toString(), deadlineDate, tagsDisplay);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false}],"authorContributionMap":{"actualmulti":60}},{"path":"src/main/java/jake/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.JakeException;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":" * Represents a task that occurs during a specific time period with start and end times.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":" * Both start and end dates are parsed from ISO format (yyyy-MM-ddTHH:mm:ss) and","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":" * displayed in a more readable format (MMM dd yyyy HH:mm:ss).","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":" * Example: \"team meeting (from: Dec 25 2023 10:00:00 to: Dec 25 2023 11:30:00)\"","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"    private String startDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    private String endDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     * Creates a new event task with the specified name, start time, and end time.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"     * @param name the description of the event","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"     * @param startDate the start time in ISO format (yyyy-MM-ddTHH:mm:ss)","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"     * @param endDate the end time in ISO format (yyyy-MM-ddTHH:mm:ss)","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"     * @throws JakeException if either date format is invalid","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"    public EventTask(String name, String startDate, String endDate) {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"        super(name);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"        this.startDate \u003d parseDate(startDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"        this.endDate \u003d parseDate(endDate);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    public String getStartDate() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"        return startDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        return endDate;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"    private String parseDate(String date) {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"        try {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(date);","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"            return datetime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm:ss\"));","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"            throw new JakeException(\"Invalid datetime input! Input in yyyy-mm-ddTHH:mm:ss format\");","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T12:58:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d String.join(\", \", tags);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + startDate + \" | \" + endDate + \" | \" + tagsString;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"        String tagsDisplay \u003d getTagsDisplay();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        if (tagsDisplay.isEmpty()) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), startDate, endDate);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[E]%s (from: %s to: %s) | %s\", super.toString(), startDate, endDate, tagsDisplay);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false}],"authorContributionMap":{"actualmulti":64}},{"path":"src/main/java/jake/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":" * Abstract base class representing a task in the Jake task management system.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":" * Provides common functionality for all task types including completion status tracking,","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":" * name management, and basic operations like marking done/undone.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":" *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":" * Subclasses must implement the toFileString() method to define their file storage format.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"    protected final String name;","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-06T17:08:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"    protected List\u003cString\u003e tags;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"            * Creates a new task with the specified name.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"            *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"            * @param name the name or description of the task","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-06T17:08:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"        this.tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"        return isDone;","lastModifiedDate":"2025-09-06T17:08:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-06T17:08:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-06T17:08:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    public String getName() {","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"        return this.name;","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"     * Adds a tag to this task.","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag to add","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"        if (tag !\u003d null \u0026\u0026 !tag.trim().isEmpty() \u0026\u0026 !this.tags.contains(tag.trim())) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"            tags.add(tag.trim());","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"     * Removes a tag from this task.","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag to remove","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"    public void removeTag(String tag) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"        tags.remove(tag);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"     * Gets all tags for this task.","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"     * @return a copy of the tags list","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"        return new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"     * Checks if this task has the specified tag.","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag to check for","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"     * @return true if the task has the tag, false otherwise","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"    public boolean hasTag(String tag) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        return tags.contains(tag);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"     * Sets the tags for this task (used for loading from storage).","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"     * @param tags the list of tags to set","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"    public void setTags(List\u003cString\u003e tags) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"        this.tags \u003d new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted string of tags for display.","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"     * @return formatted tags string, e.g., \"#work #urgent\" or empty string if no tags","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"    protected String getTagsDisplay() {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"            return \"\";","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"        for (String tag : tags) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"            sb.append(\"#\").append(tag).append(\" \");","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"        String marker;","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"        if (this.isDone()) {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"            marker \u003d \"X\";","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"            marker \u003d \" \";","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"[%s] %s\", marker, this.name);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-23T15:44:27","isFullCredit":false}],"authorContributionMap":{"actualmulti":116}},{"path":"src/main/java/jake/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":" * Represents a simple todo task without any date constraints.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":" * A todo task only has a name and completion status.","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":" *","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":" * Example: \"buy groceries\", \"read book\"","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-09-06T16:22:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"    public Todo(String name) {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"        super(name);","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"        String tagsString \u003d String.join(\",\", tags);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + name + \" | \" + tagsString;","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T10:19:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"    @Override","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"        String tagsDisplay \u003d getTagsDisplay();","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"        if (tagsDisplay.isEmpty()) {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"        } else {","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"[T]%s | %s\", super.toString(), tagsDisplay);","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:29:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-23T17:11:15","isFullCredit":false}],"authorContributionMap":{"actualmulti":29}},{"path":"src/main/java/jake/ui/GuiUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.ui;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.util.List;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import jake.TaskList;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.task.DeadlineTask;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import jake.task.EventTask;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import jake.task.Task;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import jake.task.Todo;","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" * GUI-adapted version of Ui that returns formatted strings instead of printing to console.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":" * Reuses all the formatting logic from the original Ui class.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"public class GuiUi {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"     * Returns the welcome message for the application.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"     * @return formatted welcome message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"        return \"Hello! I\u0027m Jake\\nWhat can I do for you today?\";","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"     * @return formatted goodbye message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted error message.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"     * @return formatted error message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"        return \"Error: \" + message;","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"     * Returns the invalid command message.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"     * @return formatted invalid command message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"    public String getInvalidCommandMessage() {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        return \"Invalid task!!! Try another one\";","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a task is added.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"     * @param totalTasks the total number of tasks after adding","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"     * @return formatted task added message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    public String getTaskAddedMessage(Task task, int totalTasks) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"%s task has been added:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"                getTaskTypeString(task), task.toString(), totalTasks);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a task is deleted.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"     * @param remainingTasks the number of tasks remaining after deletion","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"     * @return formatted task deleted message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"    public String getTaskDeletedMessage(Task task, int remainingTasks) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"                task.toString(), remainingTasks);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted string showing the complete list of tasks.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the TaskList containing all tasks to display","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"     * @return formatted task list","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"    public String getTaskListMessage(TaskList tasks) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a task is marked as done.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was marked","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"     * @return formatted task marked message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a task is unmarked.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"     * @return formatted task unmarked message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n%s\", task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted string showing search results.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the TaskList containing search results","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"     * @param searchTerm the term that was searched for","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"     * @return formatted search results","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"    public String getSearchResultsMessage(TaskList tasks, String searchTerm) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"            return String.format(\"No tasks found matching \u0027%s\u0027.\", searchTerm);","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"        sb.append(String.format(\"Here are the tasks matching \u0027%s\u0027:\\n\", searchTerm));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a tag is added to a task.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that received the tag","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag that was added","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"     * @return formatted tag added message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"    public String getTagAddedMessage(Task task, String tag) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"Tag \u0027%s\u0027 added to task:\\n%s\", tag, task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a tag is removed from a task.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"     * @param task the task from which the tag was removed","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag that was removed","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"     * @return formatted tag removed message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"    public String getTagRemovedMessage(Task task, String tag) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"Tag \u0027%s\u0027 removed from task:\\n%s\", tag, task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when a tag is not found on a task.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that doesn\u0027t have the tag","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"     * @param tag the tag that was not found","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"     * @return formatted tag not found message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"    public String getTagNotFoundMessage(Task task, String tag) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"        return String.format(\"Tag \u0027%s\u0027 not found on task:\\n%s\", tag, task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted message for when all tags are removed from a task.","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"     * @param task the task from which all tags were removed","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"     * @param removedTags the list of tags that were removed","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"     * @return formatted all tags removed message","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"    public String getAllTagsRemovedMessage(Task task, List\u003cString\u003e removedTags) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"        sb.append(\"All tags removed from task:\\n\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"        if (!removedTags.isEmpty()) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"            sb.append(\"Removed tags: \");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"            for (int i \u003d 0; i \u003c removedTags.size(); i++) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"                sb.append(removedTags.get(i));","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"                if (i \u003c removedTags.size() - 1) {","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"                    sb.append(\", \");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"                }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"actualmulti"},"content":"            }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"actualmulti"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"actualmulti"},"content":"        sb.append(\"Updated task: \").append(task.toString());","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"actualmulti"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-06T17:46:00","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"actualmulti"},"content":"     * Returns a formatted string showing matching tasks from find command.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the TaskList containing matching tasks","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"actualmulti"},"content":"     * @return formatted search results","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"actualmulti"},"content":"    public String getFindResultsMessage(TaskList tasks) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"actualmulti"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"actualmulti"},"content":"            return \"No matching tasks found in your list.\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"actualmulti"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"actualmulti"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"actualmulti"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"actualmulti"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"actualmulti"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"actualmulti"},"content":"     * Determines the display string for different task types.","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"actualmulti"},"content":"     * @param task the task whose type string is needed","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"actualmulti"},"content":"     * @return a string representing the task type for display purposes","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"actualmulti"},"content":"    private String getTaskTypeString(Task task) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"actualmulti"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"actualmulti"},"content":"            return \"Todo\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"actualmulti"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"actualmulti"},"content":"            return \"Deadline\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"actualmulti"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"actualmulti"},"content":"            return \"Event\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"actualmulti"},"content":"        return \"Task\";","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":213}},{"path":"src/main/java/jake/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.ui;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"import jake.TaskList;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import jake.task.DeadlineTask;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import jake.task.EventTask;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import jake.task.Task;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import jake.task.Todo;","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"/**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":" * Handles all user interface interactions for the Jake application.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":" * Manages input from users and output display including welcome messages,","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":" * task information, error messages, and formatted lists.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":" */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"     * Creates a new Ui instance and initializes the scanner for reading user input.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"     * Displays the welcome message with the Jake logo and greeting.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"        String logo \u003d","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"                \"     _   _    _  _______ \\n\"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"                        + \"    | | / \\\\  | |/ / ____|\\n\"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"                        + \" _  | |/ _ \\\\ | \u0027 /|  _|  \\n\"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"                        + \"| |_| / ___ \\\\| . \\\\| |___ \\n\"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"                        + \" \\\\___/_/   \\\\_\\\\_|\\\\_\\\\_____|\\n\";","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"     * Displays the goodbye message when the user exits the application.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"     * Displays a horizontal line separator for formatting output.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"     * Displays an error message surrounded by horizontal lines.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"     * Displays an error message when tasks cannot be loaded from the storage file.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"Error loading tasks from file. Starting with empty task list.\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"     * Displays a confirmation message when a task is successfully added.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"     * @param totalTasks the total number of tasks in the list after adding","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"        System.out.println(getTaskTypeString(task) + \" task has been added:\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", totalTasks);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"     * Displays a confirmation message when a task is marked as done.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was marked as done","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"The following task has been marked as done:\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"     * Displays a confirmation message when a task is unmarked (marked as not done).","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"The following task has been unmarked:\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"     * Displays the complete list of tasks with numbering.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"     * @param tasks the TaskList containing all tasks to display","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"List of tasks:\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"     * Displays a confirmation message when a task is deleted.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"     * @param totalTasks the total number of tasks remaining in the list","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"The following task has been removed:\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", totalTasks);","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"     * Displays an error message for invalid or unrecognized commands.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"        System.out.println(\"Invalid task!!! Try another one\");","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"        showLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"     * @return the user\u0027s input as a string","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"    /**","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"     * Determines the display string for different task types.","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"     *","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"     * @param task the task whose type string is needed","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"     * @return a string representing the task type for display purposes","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"     */","lastModifiedDate":"2025-08-29T13:17:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"    private String getTaskTypeString(Task task) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"            return \"Todo\";","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"            return \"Deadline\";","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"            return \"Event\";","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"        }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"actualmulti"},"content":"        return \"jake.task.Task\";","lastModifiedDate":"2025-08-28T20:01:32","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T19:48:05","isFullCredit":false}],"authorContributionMap":{"actualmulti":175}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T21:47:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":44}},{"path":"src/test/java/jake/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"    public void getCommandWord_validCommands_returnsCorrectCommand() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"todo\", Parser.getCommandWord(\"todo buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"deadline\", Parser.getCommandWord(\"deadline buy milk /2025-01-01T02:00:01\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"event\", Parser.getCommandWord(\"event buy milk /2025-01-01T02:00:01 /2025-01-02T02:00:00\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"list\", Parser.getCommandWord(\"list\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"bye\", Parser.getCommandWord(\"bye\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"mark\", Parser.getCommandWord(\"mark 1\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"unmark\", Parser.getCommandWord(\"unmark 1\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"delete\", Parser.getCommandWord(\"delete 1\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"    public void parseTaskName_onlySpaces_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"        JakeException exception \u003d assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"                ) -\u003e Parser.parseTaskName(\"todo   \", \"todo\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"Todo task must have a name\", exception.getMessage());","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    public void parseDeadlineCommand_validInput_returnsNameAndDate() throws JakeException {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"        String[] result \u003d Parser.parseDeadlineCommand(\"deadline homework /2023-12-25T23:59:59\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"        assertEquals(2, result.length);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"homework\", result[0]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T23:59:59\", result[1]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"    public void parseDeadlineCommand_complexName_returnsCorrectParts() throws JakeException {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        String[] result \u003d Parser.parseDeadlineCommand(\"deadline CS2103T individual project /2023-12-25T23:59:59\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"        assertEquals(2, result.length);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"CS2103T individual project\", result[0]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T23:59:59\", result[1]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"    public void parseDeadlineCommand_noSlash_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"        assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        ) -\u003e Parser.parseDeadlineCommand(\"deadline homework tomorrow\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    public void parseDeadlineCommand_noName_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"        assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"        ) -\u003e Parser.parseDeadlineCommand(\"deadline /2023-12-25T23:59:59\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"    public void parseEventCommand_validInput_returnsNameAndDates() throws JakeException {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        String[] result \u003d Parser.parseEventCommand(\"event meeting /2023-12-25T10:00:00 /2023-12-25T11:00:00\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"        assertEquals(3, result.length);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"meeting\", result[0]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T10:00:00\", result[1]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T11:00:00\", result[2]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"    public void parseEventCommand_complexName_returnsCorrectParts() throws JakeException {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"        String[] result \u003d Parser.parseEventCommand(","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"                \"event team project meeting /2023-12-25T10:00:00 /2023-12-25T11:00:00\");","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"        assertEquals(3, result.length);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"team project meeting\", result[0]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T10:00:00\", result[1]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"2023-12-25T11:00:00\", result[2]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"    public void parseEventCommand_missingSecondSlash_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"        assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"                ) -\u003e Parser.parseEventCommand(\"event meeting /2023-12-25T10:00:00\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"    public void parseEventCommand_noName_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"        assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"                ) -\u003e Parser.parseEventCommand(\"event /2023-12-25T10:00:00 /2023-12-25T11:00:00\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"    public void parseEventCommand_noSlash_throwsException() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"        assertThrows(JakeException.class, (","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"                ) -\u003e Parser.parseEventCommand(\"event meeting tomorrow\"));","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false}],"authorContributionMap":{"actualmulti":92}},{"path":"src/test/java/jake/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"package jake.ui;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"actualmulti"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"actualmulti"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"actualmulti"},"content":"import jake.TaskList;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"actualmulti"},"content":"import jake.task.DeadlineTask;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"actualmulti"},"content":"import jake.task.EventTask;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"actualmulti"},"content":"import jake.task.Todo;","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-30T18:08:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"actualmulti"},"content":"public class UiTest {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"actualmulti"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"actualmulti"},"content":"    private final InputStream originalIn \u003d System.in;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"actualmulti"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"actualmulti"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"actualmulti"},"content":"    public void setUp() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"actualmulti"},"content":"        // Redirect System.out to capture output","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"actualmulti"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"actualmulti"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"actualmulti"},"content":"    public void tearDown() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"actualmulti"},"content":"        // Restore original streams","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"actualmulti"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"actualmulti"},"content":"        System.setIn(originalIn);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"actualmulti"},"content":"    public void showWelcome_displaysCorrectWelcomeMessage() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"actualmulti"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Hello from\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"What can I do for you today?\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"actualmulti"},"content":"    public void showGoodbye_displaysCorrectGoodbyeMessage() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"actualmulti"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"actualmulti"},"content":"    public void showLine_displaysCorrectLine() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"actualmulti"},"content":"        ui.showLine();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"____________________________________________________________\", output);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"actualmulti"},"content":"    public void showError_displaysErrorWithLines() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"actualmulti"},"content":"        String errorMessage \u003d \"This is an error message\";","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"actualmulti"},"content":"        ui.showError(errorMessage);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(errorMessage));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"actualmulti"},"content":"        // Check that long lines appear before and after the message","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"actualmulti"},"content":"        String[] lines \u003d output.split(\"\\n\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"actualmulti"},"content":"        assertEquals(errorMessage, lines[1]);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"actualmulti"},"content":"    public void showLoadingError_displaysCorrectMessage() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"actualmulti"},"content":"        ui.showLoadingError();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString().trim();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"Error loading tasks from file. Starting with empty task list.\", output);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"actualmulti"},"content":"    public void showTaskAdded_todoTask_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"actualmulti"},"content":"        Todo task \u003d new Todo(\"buy milk\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskAdded(task, 1);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Todo task has been added:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[T][ ] buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Now you have 1 tasks in the list.\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"actualmulti"},"content":"    public void showTaskAdded_deadlineTask_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"actualmulti"},"content":"        DeadlineTask task \u003d new DeadlineTask(\"homework\", \"2023-12-25T23:59:59\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskAdded(task, 2);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Deadline task has been added:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[D][ ] homework\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Now you have 2 tasks in the list.\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"actualmulti"},"content":"    public void showTaskAdded_eventTask_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"actualmulti"},"content":"        EventTask task \u003d new EventTask(\"meeting\", \"2023-12-25T10:00:00\", \"2023-12-25T11:00:00\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskAdded(task, 3);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Event task has been added:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[E][ ] meeting\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Now you have 3 tasks in the list.\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"actualmulti"},"content":"    public void showTaskMarked_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"actualmulti"},"content":"        Todo task \u003d new Todo(\"buy milk\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"actualmulti"},"content":"        task.markDone();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskMarked(task);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"The following task has been marked as done:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[T][X] buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"actualmulti"},"content":"    public void showTaskUnmarked_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"actualmulti"},"content":"        Todo task \u003d new Todo(\"buy milk\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskUnmarked(task);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"The following task has been unmarked:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[T][ ] buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"actualmulti"},"content":"    public void showTaskDeleted_displaysCorrectFormat() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"actualmulti"},"content":"        Todo task \u003d new Todo(\"buy milk\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskDeleted(task, 0);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"The following task has been removed:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"[T][ ] buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Now you have 0 tasks in the list.\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"actualmulti"},"content":"    public void showTaskList_emptyList_displaysEmptyList() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"actualmulti"},"content":"        TaskList emptyTaskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskList(emptyTaskList);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"List of tasks:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"____________________________________________________________\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"actualmulti"},"content":"        // Should only contain header and lines, no numbered tasks","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"actualmulti"},"content":"        String[] lines \u003d output.split(\"\\n\");","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"actualmulti"},"content":"        assertEquals(3, lines.length); // Two lines + \"List of tasks:\"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"actualmulti"},"content":"    public void showTaskList_withTasks_displaysNumberedList() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"actualmulti"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"actualmulti"},"content":"        taskList.add(new Todo(\"buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"actualmulti"},"content":"        taskList.add(new DeadlineTask(\"homework\", \"2023-12-25T23:59:59\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"actualmulti"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"List of tasks:\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"1. [T][ ] buy milk\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"2. [D][ ] homework\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"actualmulti"},"content":"    public void showInvalidCommand_displaysCorrectMessage() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"actualmulti"},"content":"        ui.showInvalidCommand();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"actualmulti"},"content":"        String output \u003d outputStream.toString();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"actualmulti"},"content":"        assertTrue(output.contains(\"Invalid task!!! Try another one\"));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"actualmulti"},"content":"    public void readCommand_withInput_returnsCorrectString() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"actualmulti"},"content":"        String input \u003d \"todo buy milk\\n\";","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"actualmulti"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui(); // Create Ui after setting System.in","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"actualmulti"},"content":"        String result \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"todo buy milk\", result);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"actualmulti"},"content":"    public void readCommand_multipleInputs_returnsEachLineCorrectly() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"actualmulti"},"content":"        String input \u003d \"todo buy milk\\nlist\\nbye\\n\";","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"actualmulti"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"todo buy milk\", ui.readCommand());","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"list\", ui.readCommand());","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"bye\", ui.readCommand());","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"actualmulti"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"actualmulti"},"content":"    public void readCommand_emptyInput_returnsEmptyString() {","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"actualmulti"},"content":"        String input \u003d \"\\n\";","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"actualmulti"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"actualmulti"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"actualmulti"},"content":"        String result \u003d ui.readCommand();","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"actualmulti"},"content":"","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"actualmulti"},"content":"        assertEquals(\"\", result);","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"actualmulti"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"actualmulti"},"content":"}","lastModifiedDate":"2025-08-28T21:03:12","isFullCredit":false}],"authorContributionMap":{"actualmulti":238}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"actualmulti"},"content":"todo golf swing","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"actualmulti"},"content":"deadline 2103 assignment /22 aug","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"actualmulti"},"content":"event church /24 aug 1015am /24 aug 1130am","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"actualmulti"},"content":"event qf interview /25 aug 7pm /25 aug 730pm","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"actualmulti"},"content":"mark 2","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"actualmulti"},"content":"list","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"actualmulti"},"content":"mark 3","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"actualmulti"},"content":"mark 1","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"actualmulti"},"content":"unmark 2","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"actualmulti"},"content":"list","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"actualmulti"},"content":"bye","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false}],"authorContributionMap":{"actualmulti":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"actualmulti"},"content":"java -classpath ../bin Jake \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-23T17:59:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"actualmulti":1,"-":37}}]
