[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-30T12:04:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"checkstyle {","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"    mainClass.set(\"lenny.gui.Launcher\")","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"    archiveFileName \u003d \"lenny.jar\"","lastModifiedDate":"2025-08-30T13:20:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"mizzat03":16,"-":39}},{"path":"data/LennyData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"T | 1 | oo | 3","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"T | 0 | pop | 3","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"D | 0 | homework | sunday | 3","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"T | 0 | go home","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/main/java/lenny/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.gui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.net.URL;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.OverrunStyle;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":" * Reusable chat bubble control used to display a single message in the UI.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":" * This control is backed by {@code DialogBox.fxml} and loaded using the","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":" * \u003cem\u003efx:root\u003c/em\u003e pattern. It shows the message text and an optional profile","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":" * image (avatar).","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    @FXML private Label dialog;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    @FXML private ImageView displayPicture;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     * Constructs a dialog box by loading {@code DialogBox.fxml}, binding this","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     * instance as both root and controller, and setting the message text and","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     * avatar image.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"     * @param text the message to display","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"     * @param img  the avatar image to show (maybe {@code null})","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"     * @throws RuntimeException if the FXML cannot be found or loaded","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"            URL url \u003d DialogBox.class.getResource(\"/view/DialogBox.fxml\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"            Objects.requireNonNull(url, \"DialogBox.fxml not found under /view\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"            FXMLLoader fxml \u003d new FXMLLoader(url);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"            fxml.setRoot(this);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"            fxml.setController(this);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"            fxml.load();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"            this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"            this.setPadding(new Insets(6, 14, 6, 14));","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"            dialog.setText(text);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"            dialog.setWrapText(true);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"            dialog.setTextOverrun(OverrunStyle.CLIP);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"            dialog.setMaxWidth(420);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"            dialog.setMinWidth(Region.USE_PREF_SIZE);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"            HBox.setHgrow(dialog, Priority.NEVER);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"            if (img !\u003d null) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"                displayPicture.setImage(img);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"     * Creates a dialog box representing a \u003cstrong\u003euser\u003c/strong\u003e message, with","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     * the avatar shown on the left.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"     * @param text    the user message","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"     * @param userImg the user\u0027s avatar image","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"     * @return a {@code DialogBox} configured for a user message","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"    public static DialogBox getUserDialog(String text, Image userImg) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"        // FXML order is ImageView then Label → already correct for user","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"        DialogBox db \u003d new DialogBox(text, userImg);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"        return db;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"     * Creates a dialog box representing a \u003cstrong\u003eLenny\u003c/strong\u003e (bot) message,","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"     * with the avatar shown on the right.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"     * @param text     the bot message","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"     * @param lennyImg the bot\u0027s avatar image","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"     * @return a {@code DialogBox} configured for a bot message","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"    public static DialogBox getLennyDialog(String text, Image lennyImg) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"        DialogBox db \u003d new DialogBox(text, lennyImg);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"        if (db.getChildren().size() \u003e\u003d 2) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"            Node first \u003d db.getChildren().remove(0);","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"            db.getChildren().add(first);","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"        return db;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":101}},{"path":"src/main/java/lenny/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.gui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.net.URL;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.Lenny;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":" * JavaFX application entry point for the Lenny chatbot.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":" * This class loads {@code MainWindow.fxml}, wires the controller with a","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":" * {@link lenny.logic.Lenny} instance, and shows the primary stage.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"public class Gui extends Application {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"     * Starts the JavaFX application by loading the main window layout and","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     * setting up the scene.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     * @param stage the primary stage provided by the JavaFX runtime","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * @throws Exception if the FXML cannot be found or loaded","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"        URL url \u003d Gui.class.getResource(\"/view/MainWindow.fxml\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        Objects.requireNonNull(url, \"MainWindow.fxml not found under /view\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        FXMLLoader loader \u003d new FXMLLoader(url);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        Parent root \u003d loader.load();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"        MainWindow controller \u003d loader.getController();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        controller.setLenny(new Lenny(\"data/LennyData.txt\"), true);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"        stage.setTitle(\"Lenny\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        stage.setScene(new Scene(root));","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"        stage.show();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":43}},{"path":"src/main/java/lenny/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.gui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":" * Plain Java launcher used to start the JavaFX {@link Gui} application.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Having a separate launcher class avoids issues starting JavaFX when the","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * {@code Application} subclass is not launched directly by the runtime.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"public class Launcher {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     * Delegates to main in {@link Gui} class to start application.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     * @param args command-line arguments (unused)","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":21}},{"path":"src/main/java/lenny/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.gui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import java.util.Optional;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.ChoiceDialog;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.Lenny;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":" * Controller for {@code MainWindow.fxml}.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":" * Manages the main chat UI: reads user input, asks {@link lenny.logic.Lenny}","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":" * for a response, and appends {@link DialogBox} nodes for both user and bot","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":" * messages. Also keeps the scroll pane pinned to the latest message.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"public class MainWindow {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"    @FXML private VBox dialogContainer;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    @FXML private TextField userInput;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    @FXML private Button sendButton;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    private Lenny lenny;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    // preload avatars from resources","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"    private final Image userImage  \u003d","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"            new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    private final Image lennyImage \u003d","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"            new Image(Objects.requireNonNull(getClass().getResourceAsStream(\"/images/DaLenny.png\")));","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"     * Called automatically by the FXML loader after the view is constructed.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"     * Binds the scroll position to the dialog container height and may add an","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"     * initial greeting message.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"        dialogContainer.setFillWidth(true);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"                DialogBox.getLennyDialog(\"Hello! I\u0027m Lenny. What can I do for you?\", lennyImage)","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"        );","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"     * Injects the backend logic object that processes user input.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"     * @param l the {@link lenny.logic.Lenny} instance to use","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"    public void setLenny(Lenny l, boolean GuiMode) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"        this.lenny \u003d l;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"     * Handles the Send button (and Enter key) action: reads the text field,","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     * obtains a response from {@link lenny.logic.Lenny}, appends user and bot","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"     * dialog boxes to the conversation, and clears the input field.","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"    @FXML","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"        Integer p \u003d null;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"        String response \u003d \"\";","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"            return;","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:52:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"        // If it\u0027s an add-type command and user didn’t include /p, ask for it like the CLI.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"        if (needsPriorityPrompt(input) \u0026\u0026 extractInlinePriority(input) \u003d\u003d null) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"            p \u003d promptPriorityDialog();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"            if (p \u003d\u003d null) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"                // User cancelled: do nothing (no command sent, no message added)","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"                return;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"        if (p \u003d\u003d null) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"            response \u003d lenny.getResponse(input);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"        } else {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"            response \u003d lenny.getResponse(input, p);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"                DialogBox.getLennyDialog(response, lennyImage)","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"        );","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"    /** Returns true if this command typically needs a priority. */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mizzat03"},"content":"    private boolean needsPriorityPrompt(String cmd) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mizzat03"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mizzat03"},"content":"            return false;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mizzat03"},"content":"        String s \u003d cmd.strip().toLowerCase();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mizzat03"},"content":"        // Add/adjust prefixes based on your actual add commands","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mizzat03"},"content":"        return s.startsWith(\"todo \") || s.startsWith(\"deadline \") || s.startsWith(\"event \");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mizzat03"},"content":"    /** Returns the inline /p N priority if present and valid (1–5); otherwise null. */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mizzat03"},"content":"    private Integer extractInlinePriority(String cmd) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mizzat03"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mizzat03"},"content":"            return null;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mizzat03"},"content":"        Matcher m \u003d Pattern.compile(\"(?i)(?:^|\\\\s)\\\\/(?:p|priority)\\\\s+(\\\\d)\").matcher(cmd);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mizzat03"},"content":"        if (!m.find()) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mizzat03"},"content":"            return null;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mizzat03"},"content":"        int p \u003d Integer.parseInt(m.group(1));","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mizzat03"},"content":"        return (p \u003e\u003d 1 \u0026\u0026 p \u003c\u003d 5) ? p : null;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mizzat03"},"content":"    /** Shows a GUI dialog that asks exactly “What is the priority of the task? (1–5)”. */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mizzat03"},"content":"    private Integer promptPriorityDialog() {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mizzat03"},"content":"        ChoiceDialog\u003cInteger\u003e dialog \u003d new ChoiceDialog\u003c\u003e(3, 1, 2, 3, 4, 5);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mizzat03"},"content":"        dialog.setTitle(\"Set Priority\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mizzat03"},"content":"        dialog.setHeaderText(\"What is the priority of the task? (1–5)\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mizzat03"},"content":"        dialog.setContentText(\"Priority:\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mizzat03"},"content":"        Optional\u003cInteger\u003e res \u003d dialog.showAndWait();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mizzat03"},"content":"        return res.orElse(null); // null if user cancelled","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":135}},{"path":"src/main/java/lenny/logic/Lenny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.Command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.SupportsPriority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.exception.LennyExceptions;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.parser.Parser;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":" * The main class of the Lenny application.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":" * Lenny is a task manager that supports both a Command-Line Interface (CLI)","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":" * and a Graphical User Interface (GUI). This class is responsible for","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":" * initializing core components such as the {@link Storage}, {@link TaskList},","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":" * and {@link Ui}, and provides entry points for both CLI and GUI modes.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"public class Lenny {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"    private Storage storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    private final boolean guiMode;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * Creates a new instance of Lenny, initializing storage, task list, and UI.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * @param filePath The file path used by {@link Storage} to load and save tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    public Lenny(String filePath) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"            storage.ensureFile();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"        guiMode \u003d true;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"     * Creates a new instance of Lenny, initializing storage, task list, and UI in GUI mode.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"     * @param filePath The file path used by {@link Storage} to load and save tasks.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"     * @param guiMode A boolean to indicate guiMode or not.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"    public Lenny(String filePath, boolean guiMode) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"            storage.ensureFile();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"        this.guiMode \u003d guiMode;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"     * Runs the program in Command-Line Interface (CLI) mode.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"     * Displays a welcome message, continuously reads user commands from","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"     * the console, parses them into {@link Command} objects, executes them,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"     * and prints the corresponding responses. The loop terminates when an","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"     * exit command is issued.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"    public void run() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"        while (!isExit) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"            try {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"                assert fullCommand !\u003d null : \"User input must not be null\";","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"                if (c instanceof SupportsPriority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"                    int priority \u003d ui.readPriority();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"                    ((SupportsPriority) c).setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"                assert c !\u003d null : \"Parser must return a valid command\";","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"                String response \u003d c.execute(tasks, storage, ui);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"                assert response !\u003d null : \"Command execution must return a response\";","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"                ui.showResponse(response);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"            } catch (LennyExceptions e) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"     * Runs the program in Graphical User Interface (GUI) mode.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"     * Accepts a single user input, parses it into a {@link Command}, executes it,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"     * and returns the response as a string. This method is called repeatedly by","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"     * the GUI controller to handle user interactions.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mizzat03"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mizzat03"},"content":"     * @return The program\u0027s response as a string.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mizzat03"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mizzat03"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mizzat03"},"content":"            if (c instanceof SupportsPriority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mizzat03"},"content":"                int priority \u003d ui.readPriority();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mizzat03"},"content":"                ((SupportsPriority) c).setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mizzat03"},"content":"            return c.execute(tasks, storage, ui);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mizzat03"},"content":"        } catch (LennyExceptions e) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mizzat03"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mizzat03"},"content":"     * Runs the program in Graphical User Interface (GUI) mode.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mizzat03"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mizzat03"},"content":"     * Accepts a single user input and a priority, parses it into a {@link Command}, executes it,","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mizzat03"},"content":"     * and returns the response as a string. This method is called repeatedly by","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mizzat03"},"content":"     * the GUI controller to handle user interactions.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mizzat03"},"content":"     * @param input The raw user input string.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mizzat03"},"content":"     * @param priority The integer representing priority for a given task.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mizzat03"},"content":"     * @return The program\u0027s response as a string.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mizzat03"},"content":"    public String getResponse(String input, int priority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mizzat03"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mizzat03"},"content":"            ((SupportsPriority) c).setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mizzat03"},"content":"            assert c !\u003d null : \"Parser must return a valid command\";","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-10T12:39:41","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mizzat03"},"content":"            return c.execute(tasks, storage, ui);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mizzat03"},"content":"        } catch (LennyExceptions e) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mizzat03"},"content":"            return e.getMessage();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mizzat03"},"content":"     * The entry point for running the application in CLI mode.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mizzat03"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mizzat03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mizzat03"},"content":"        new Lenny(\"data/LennyData.txt\").run();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":152}},{"path":"src/main/java/lenny/logic/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * Represents a command that adds a new task to the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * When executed, this command appends the given task, updates","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" * the persistent storage, and returns a confirmation message.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"public class AddCommand extends Command implements SupportsPriority {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    private final Task task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"    private int priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     * Creates an {@code AddCommand} with the specified task.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    public void setPriority(int priority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * Executes the add command by appending the task to the task list,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     * saving the updated task list to storage, and returning a confirmation","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     * message that includes the added task and the updated task count.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList where the task will be added.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage responsible for persisting changes.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The  Ui component for user interactions","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"     * @return A confirmation message showing the added task and the updated","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"     *         number of tasks in the list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"        task.setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":50}},{"path":"src/main/java/lenny/logic/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents an abstract command that can be executed by the program.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * Each command encapsulates a specific user action (e.g., add, delete, list),","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * and when executed, produces a response as a {@code String}.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":" * Concrete subclasses should implement the {@link #execute(TaskList, Storage, Ui)}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":" * method to define their behavior.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     * Executes the command using the given task list, storage, and UI.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * Subclasses implement this method to perform specific operations","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     * such as adding, deleting, or listing tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The {@code TaskList} containing all tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"     * @param storage The {@code Storage} responsible for persisting changes.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The {@code Ui} component for user interactions.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     * @return A string response to be shown to the user.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * Indicates whether this command will terminate the program.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * By default, this method returns {@code false}. Commands that","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     * terminate the program (e.g., {@code ExitCommand}) should override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * this method to return {@code true}.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     * @return {@code true} if the program should exit after this command,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"        return false;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":41}},{"path":"src/main/java/lenny/logic/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * Represents a command that deletes a task from the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * When executed, this command removes the specified task, updates","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" * the persistent storage, and returns a confirmation message.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * Creates a DeleteCommand with the specified task index.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * @param i The index of the task to be deleted, based on the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    public DeleteCommand(int i) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        this.index \u003d i;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     * Executes the delete command by removing the task at the given index,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * saving the updated task list to storage, and returning a confirmation","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     * message including the removed task and the updated task count.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for persisting changes.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     * @return A confirmation message showing the removed task and the","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     *         updated number of tasks remaining.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"        Task removed \u003d tasks.delete(index);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + \" \" + removed + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":43}},{"path":"src/main/java/lenny/logic/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents a command that terminates the program.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * When executed, it returns a farewell message and signals that the","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * application should exit.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * Executes the exit command by returning a farewell message.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing all tasks","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for persisting tasks","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"     * @return A farewell message to display before exiting the program.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"        return \"Goodbye! See you soon.\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * Indicates that this command will cause the program to exit.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * @return true, since this is the exit command.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        return true;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":39}},{"path":"src/main/java/lenny/logic/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * Represents a command that searches for tasks in the task list","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * whose names contain a given keyword (case-insensitive).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" * Returns a list of matching tasks formatted for display.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * Creates a FindCommand with the specified keyword.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * @param s The keyword to search for within task names.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    public FindCommand(String s) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        this.keyword \u003d s;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     * Executes the find command by searching through the task list","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * for tasks that contain the keyword (ignoring case). The","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     * resulting matches are formatted as a numbered list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for persisting tasks","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     * @return A string containing all tasks that match the keyword,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     *         formatted as a numbered list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"            if (tasks.get(i).getTaskName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"                response.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"        return response.toString();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":48}},{"path":"src/main/java/lenny/logic/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents a command that lists all tasks currently in the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * Returns the tasks as a numbered list formatted for display.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     * Creates a ListCommand instance.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    public ListCommand() {}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * Executes the list command by iterating through the task list","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     * and returning each task in a numbered format.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing all tasks to be listed.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for persisting tasks","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * @return A string representation of all tasks in the task list,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     *         formatted as a numbered list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        return tasks.show();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":34}},{"path":"src/main/java/lenny/logic/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents a command that marks a task in the task list as done.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * This command updates both the in-memory task list and the persistent storage.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param i The index of the task to be unmarked, based on the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"        this.index \u003d i;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     * Executes the mark command by setting the specified task as done,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     * saving the updated task list to storage, and returning a confirmation message.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing the tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for saving the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @return A confirmation message indicating the task has been unmarked.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        tasks.mark(index);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + tasks.get(index);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":38}},{"path":"src/main/java/lenny/logic/command/PriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents a command that searches for tasks in the task list","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * whose priority is of a certain level.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * Returns a list of matching tasks formatted for display.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    private final int priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     * Creates a PriorityCommand with the specified integer priority to search for.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     * @param p The integer whose task priority level matches.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"    public PriorityCommand(int p) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"        this.priority \u003d p;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     * Executes the priority command by searching through the task list","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     * for tasks that priority level matches the priority index we are searching for. The","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * resulting matches are formatted as a numbered list.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing all tasks.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for persisting tasks","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     *                (not directly used here).","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     * @return A string containing all tasks that match the keyword,","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     *         formatted as a numbered list.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"        return tasks.showPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false}],"authorContributionMap":{"mizzat03":41}},{"path":"src/main/java/lenny/logic/command/SupportsPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public interface SupportsPriority {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"    void setPriority(int priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false}],"authorContributionMap":{"mizzat03":6}},{"path":"src/main/java/lenny/logic/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.ui.Ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" * Represents a command that unmarks a task in the task list as not done.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":" * This command updates both the in-memory task list and the persistent storage.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"    private final int index;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * Creates an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param i The index of the task to be unmarked, based on the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"        this.index \u003d i;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     * Executes the unmark command by setting the specified task as not done,","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     * saving the updated task list to storage, and returning a confirmation message.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * @param tasks   The TaskList containing the tasks.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     * @param storage The Storage object responsible for saving the task list.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * @param ui      The Ui component used for interactions (not directly used here).","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @return A confirmation message indicating the task has been unmarked.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        tasks.unmark(index);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + \" \" + tasks.get(index);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":38}},{"path":"src/main/java/lenny/logic/exception/LennyExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.exception;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":" * Represents an exception specific to the Lenny application.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"public class LennyExceptions extends Exception {","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"    // Default constructor","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"    public LennyExceptions() {","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"        super();","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"     * Creates a new LennyException with the given message.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * @param message Error message.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"    public LennyExceptions(String message) {","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"        super(message);","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-22T15:09:46","isFullCredit":false}],"authorContributionMap":{"mizzat03":21}},{"path":"src/main/java/lenny/logic/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.parser;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.AddCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.Command;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.DeleteCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.ExitCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.FindCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.ListCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.MarkCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.PriorityCommand;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.command.UnmarkCommand;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.exception.LennyExceptions;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Deadline;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Event;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Todo;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":" * Parses user input commands into Task objects or program actions.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"public class Parser {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"     * Parse the user input and return the response as a String.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    public static Command parse(String fullCommand) throws LennyExceptions {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        switch (command) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        case \"bye\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"        case \"list\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"            return new ListCommand();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"            Todo todo \u003d parseTodo(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"            Deadline deadline \u003d parseDeadline(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"        case \"event\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"            Event event \u003d parseEvent(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"            return new AddCommand(event);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"            int i \u003d parseIndex(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"            return new DeleteCommand(i);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"            int j \u003d parseIndex(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"            return new MarkCommand(j);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"            int k \u003d parseIndex(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"            return new UnmarkCommand(k);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"        case \"find\":","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"            String s \u003d parseKeyword(fullCommand);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"            return new FindCommand(s);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"        case \"priority\":","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"            int p \u003d parseIndex(fullCommand);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"            return new PriorityCommand(p);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"        default:","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"    // helper methods","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     * Parses a todo command string into a Todo object.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"     * @param input Full user input string.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"     * @return A Todo task.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"     * @throws LennyExceptions If description is missing.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"    public static Todo parseTodo(String input) throws LennyExceptions {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"        return new Todo(parts[1].trim(), false);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"     * Parses a deadline command string into a Deadline object.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"     * @param input Full user input string containing /by.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"     * @return A Deadline task.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"     * @throws LennyExceptions If description or /by part is missing.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"    public static Deadline parseDeadline(String input) throws LennyExceptions {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\"/by\")) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! The description of a deadline must include /by.\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"        String rhs \u003d parts[1];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"        int byIdx \u003d rhs.indexOf(\"/by\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"        if (byIdx \u003c 0 || byIdx + 3 \u003e\u003d rhs.length()) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! Provide a date/time after /by.\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"        String name \u003d rhs.substring(0, byIdx).trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"        String by \u003d rhs.substring(byIdx + 3).trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"        return new Deadline(name, by, false);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mizzat03"},"content":"     * Parses an event command string into an Event object.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mizzat03"},"content":"     * @param input Full user input string containing /from and /to.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mizzat03"},"content":"     * @return An Event task.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mizzat03"},"content":"     * @throws LennyExceptions If parts are missing.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mizzat03"},"content":"    public static Event parseEvent(String input) throws LennyExceptions {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mizzat03"},"content":"        if (parts.length \u003c 2 || !parts[1].contains(\"/from\") || !parts[1].contains(\"/to\")) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! The description of an event must include /from and /to.\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mizzat03"},"content":"        String rhs \u003d parts[1];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mizzat03"},"content":"        int fromIdx \u003d rhs.indexOf(\"/from\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mizzat03"},"content":"        int toIdx \u003d rhs.indexOf(\"/to\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mizzat03"},"content":"        if (fromIdx \u003c 0 || toIdx \u003c 0 || fromIdx \u003e\u003d toIdx) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! Use: event NAME /from START /to END\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mizzat03"},"content":"        String name \u003d rhs.substring(0, fromIdx).trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mizzat03"},"content":"        String from \u003d rhs.substring(fromIdx + 5, toIdx).trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mizzat03"},"content":"        String to \u003d rhs.substring(toIdx + 3).trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mizzat03"},"content":"        return new Event(name, from, to, false);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mizzat03"},"content":"     * Parses a command string for an integer index for either \u0027mark\u0027, \u0027unmark\u0027 or \u0027delete\u0027 actions.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mizzat03"},"content":"     * @param input Full user input string.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mizzat03"},"content":"     * @return An integer index.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mizzat03"},"content":"     * @throws LennyExceptions If index is missing or invalid.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mizzat03"},"content":"    public static int parseIndex(String input) throws LennyExceptions {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mizzat03"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! Provide an index.\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mizzat03"},"content":"            return Integer.parseInt(parts[1]);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mizzat03"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! Index must be a number.\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mizzat03"},"content":"     * Parses a find command for the keyword.","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mizzat03"},"content":"     * @param input Full user input string containing the keyword.","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mizzat03"},"content":"     * @return A keyword.","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mizzat03"},"content":"     * @throws LennyExceptions If keyword is missing.","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mizzat03"},"content":"    public static String parseKeyword(String input) throws LennyExceptions {","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mizzat03"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mizzat03"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mizzat03"},"content":"            throw new LennyExceptions(\"OOPS!!! Provide a keyword.\");","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mizzat03"},"content":"        return parts[1];","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T21:11:30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mizzat03"},"content":"    /** For CLI exit condition */","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mizzat03"},"content":"    public static boolean isExit(String fullCommand) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mizzat03"},"content":"        return fullCommand.trim().equalsIgnoreCase(\"bye\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false}],"authorContributionMap":{"mizzat03":169}},{"path":"src/main/java/lenny/logic/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import java.io.UncheckedIOException;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Deadline;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Event;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Todo;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":" * Handles reading and writing tasks to storage.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    private final Path file;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * Creates a Storage object with the given file path.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     * @param filePath String representation of the path to the data file.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"        this.file \u003d Path.of(filePath);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"     * Ensures that the data file and its directories exist.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"    public void ensureFile() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"            Path dir \u003d file.getParent();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"            if (dir !\u003d null) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"                Files.createDirectories(dir);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"            try {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"                Files.createFile(file);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"                System.out.println(\"Created the data file!\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"            } catch (FileAlreadyExistsException ignored) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"                System.out.println(\"Data file already exists!\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"            throw new RuntimeException(\"Problem preparing data storage\", e);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"     * Loads tasks from the data file into a TaskList.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"     * @return A ArrayList containing tasks read from storage.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"        File data \u003d file.toFile();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"        try (BufferedReader br \u003d Files.newBufferedReader(file, StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"            String line;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"                String t \u003d line.trim();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"                if (t.isEmpty() || t.startsWith(\"#\")) {","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"                    continue;","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"                String[] parts \u003d t.split(\"\\\\s*\\\\|\\\\s*\", -1);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"                if (parts.length \u003c 3) {","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"                    continue;","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"                boolean done;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"                try {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"                    done \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"                    continue;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"                String desc \u003d parts[2];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"                int priority \u003d Integer.parseInt(parts[parts.length - 1]);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"                switch (type) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"                case \"T\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"                    Todo todo \u003d new Todo(desc, done);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"                    todo.setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"                    tasks.add(todo);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"                    break;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"                case \"D\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"                    if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"                        Deadline deadline \u003d new Deadline(desc, by, done);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"                        deadline.setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"                        tasks.add(deadline);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"                    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"                    break;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"                case \"E\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mizzat03"},"content":"                    if (parts.length \u003e\u003d 5) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mizzat03"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mizzat03"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mizzat03"},"content":"                        Event event \u003d new Event(desc, from, to, done);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mizzat03"},"content":"                        event.setPriority(priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mizzat03"},"content":"                        tasks.add(event);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mizzat03"},"content":"                    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mizzat03"},"content":"                    break;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mizzat03"},"content":"                default:","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mizzat03"},"content":"                    // ignore unknown lines","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mizzat03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mizzat03"},"content":"            System.err.println(\"Failed to read \" + data + \": \" + e.getMessage());","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mizzat03"},"content":"        return tasks;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mizzat03"},"content":"     * Saves the given TaskList to the data file.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mizzat03"},"content":"     * @param tasks TaskList to save.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mizzat03"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mizzat03"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mizzat03"},"content":"                file,","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mizzat03"},"content":"                StandardCharsets.UTF_8)) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mizzat03"},"content":"            for (Task t : tasks.asList()) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mizzat03"},"content":"                writer.write(formatTaskLine(t));","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mizzat03"},"content":"                writer.newLine();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mizzat03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mizzat03"},"content":"            throw new UncheckedIOException(\"Failed to write tasks to \" + file, e);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mizzat03"},"content":"     * Formats the given task to the correct format to be saved in data file.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mizzat03"},"content":"     * @param t Task to be formatted before being saved in the data file.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mizzat03"},"content":"    private static String formatTaskLine(Task t) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mizzat03"},"content":"        String type \u003d t.getTaskType();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mizzat03"},"content":"        String done \u003d t.getIsDone() ? \"1\" : \"0\";","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mizzat03"},"content":"        String desc \u003d t.getTaskName();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mizzat03"},"content":"        String priority \u003d Integer.toString(t.getPriority());","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mizzat03"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mizzat03"},"content":"        case \"T\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mizzat03"},"content":"            return String.format(\"%s | %s | %s | %s\", type, done, desc, priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mizzat03"},"content":"        case \"D\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mizzat03"},"content":"            String by \u003d ((Deadline) t).getDeadline();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mizzat03"},"content":"            return String.format(\"%s | %s | %s | %s | %s\", type, done, desc, by, priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mizzat03"},"content":"        case \"E\":","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mizzat03"},"content":"            String duration \u003d ((Event) t).getDuration();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mizzat03"},"content":"            return String.format(\"%s | %s | %s | %s | %s\", type, done, desc, duration, priority);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mizzat03"},"content":"        default:","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mizzat03"},"content":"            return \"# Unknown task: \" + type;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false}],"authorContributionMap":{"mizzat03":164}},{"path":"src/main/java/lenny/logic/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.util.DateFormatter;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":" * A Deadline task has a description and a specific due date/time.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"    private String deadline;","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"     * Creates a new Deadline task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * @param taskName Description of the deadline task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     * @param rawDeadline The due date/time of the task as a string.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param isDone True if the task is already completed, otherwise false.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    public Deadline(String taskName, String rawDeadline, Boolean isDone) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"        this.deadline \u003d DateFormatter.format(rawDeadline);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        this.setIsDone(isDone);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"        return \"D\";","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * Returns the deadline string.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * @return The due date/time of this deadline task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        return deadline;","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"        return \"[D]\" + (this.getIsDone() ? \"[X] \" : \"[ ] \") + this.getTaskName() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false}],"authorContributionMap":{"mizzat03":43}},{"path":"src/main/java/lenny/logic/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.util.DateFormatter;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":" * Represents an event task that has a start and end time.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"    private String from;","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    private String to;","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     * Creates a new Event task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     * @param taskName Description of the event task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param fromRaw The start date/time of the event.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     * @param toRaw The end date/time of the event.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * @param isDone True if the event task is already completed, otherwise false.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    public Event(String taskName, String fromRaw, String toRaw , Boolean isDone) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"        this.from \u003d DateFormatter.format(fromRaw);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"        this.to \u003d DateFormatter.format(toRaw);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"        this.setIsDone(isDone);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"        return \"E\";","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * Returns the duration of the event as a formatted string.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"     * @return A string containing start and end times of the event.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"    public String getDuration() {","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"        return from + \" - \" + to;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"        return \"[E]\" + (this.getIsDone() ? \"[X] \" : \"[ ] \") + getTaskName() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false}],"authorContributionMap":{"mizzat03":46}},{"path":"src/main/java/lenny/logic/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":" * This is the parent class for all specific task types such as {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"public class Task {","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"    private String taskName;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"    private Boolean isDone;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    private String taskType;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"    private int priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     * Creates a new Task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    public Task(String taskName) {","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"        return \"T\";","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"     * Returns whether this task is completed.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        return isDone;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"    public String getTaskName() {","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"        return taskName;","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"    public int getPriority() {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"        return priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"    public void setPriority(int priority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"    public void setIsDone(Boolean isDone) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"    public void mark() {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"     * Marks this task as undone.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false}],"authorContributionMap":{"mizzat03":77}},{"path":"src/main/java/lenny/logic/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":" * Represents a list of tasks with operations to add, remove, and modify tasks.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"public class TaskList {","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * Creates a TaskList with existing tasks.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"     * @param initial Existing list of tasks.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    public TaskList(ArrayList\u003cTask\u003e initial) {","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"        this.list \u003d new ArrayList\u003c\u003e(initial);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"     * @return All tasks in this TaskList.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"    public ArrayList\u003cTask\u003e asList() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        return list;","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"    public int size() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        return list.size();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"     * Retrieves the task at the given index (1-based).","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"     * @param oneBasedIndex Index of the task to retrieve.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"    public Task get(int oneBasedIndex) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"        return list.get(oneBasedIndex - 1);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"        list.add(task);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"     * Deletes the task at the given index (1-based).","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"     * @param oneBasedIndex Index of the task to remove (1-based).","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"    public Task delete(int oneBasedIndex) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"        return list.remove(oneBasedIndex - 1);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     * Marks the task at the given index (1-based).","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"     * @param oneBasedIndex Index of the task to remove (1-based).","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"    public void mark(int oneBasedIndex) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"        Task t \u003d list.get(oneBasedIndex - 1);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"        t.mark();","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"     * Unmarks the task at the given index (1-based).","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"     * @param oneBasedIndex Index of the task to remove (1-based).","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"    public void unmark(int oneBasedIndex) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"        Task t \u003d list.get(oneBasedIndex - 1);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"        t.unmark();","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T10:22:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"     * Prints the current tasks in the list.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"    public String show() {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-22T15:33:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"            response +\u003d ((i + 1) + \". \" + list.get(i) + \"\\n\");","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"            response +\u003d (\"This task has priority level: \" + list.get(i).getPriority() + \"\\n\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-30T21:29:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"        return response;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T21:29:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mizzat03"},"content":"     * Prints the current tasks in the list that matches the priority.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mizzat03"},"content":"    public String showPriority(int priority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mizzat03"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list with priority \" + priority + \":\\n\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mizzat03"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mizzat03"},"content":"            if (list.get(i).getPriority() \u003d\u003d priority) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mizzat03"},"content":"                response.append((i + 1)).append(\". \").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mizzat03"},"content":"        return response.toString();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-21T00:06:40","isFullCredit":false}],"authorContributionMap":{"mizzat03":117}},{"path":"src/main/java/lenny/logic/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":" * Represents a simple task without a specific deadline or event duration.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"     * Creates a new Todo task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"     * @param taskName Description of the todo task.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"     * @param isDone True if the todo is already completed, otherwise false.","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T15:25:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    public Todo(String taskName, Boolean isDone) {","lastModifiedDate":"2025-08-26T22:58:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"        super(taskName);","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"        this.setIsDone(isDone);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"        return \"T\";","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-12T01:21:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"    @Override","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"        return \"[T]\" + (this.getIsDone() ? \"[X] \" : \"[ ] \") + this.getTaskName();","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-22T11:29:29","isFullCredit":false}],"authorContributionMap":{"mizzat03":29}},{"path":"src/main/java/lenny/logic/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.ui;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:02:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":" * Handles all interactions with the user,","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":" * including displaying messages and reading input.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    private final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"     * Displays the welcome message when the program starts.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"        System.out.println(\"Hello! I\u0027m Lenny!\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"     * Reads the next command from the user.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"     * @return The full user input as a string.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"        return in.nextLine();","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"     * Reads the priority level of the task from the user.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"     * @return The priority level as an integer.","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    public int readPriority() {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"        while (true) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"            System.out.print(\"Enter task priority (1–5): \");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"            if (!in.hasNextLine()) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"                throw new IllegalStateException(\"No input available for priority.\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"            }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"            String s \u003d in.nextLine().trim();","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"            try {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"                int p \u003d Integer.parseInt(s);","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"                if (p \u003e\u003d 1 \u0026\u0026 p \u003c\u003d 5) {","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"                    return p;","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"                }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"            } catch (NumberFormatException ignored) { }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"            System.out.println(\"Invalid priority. Please enter a number from 1 to 5.\");","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-13T12:34:39","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"     * Displays an error message.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"     * @param message Error details to show.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"     * Displays a command response","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"    public void showResponse(String response) {","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"        System.out.println(response);","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"     * Displays a bye message.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"    public void showBye() {","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T16:28:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-29T16:02:52","isFullCredit":false}],"authorContributionMap":{"mizzat03":75}},{"path":"src/main/java/lenny/logic/util/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package lenny.logic.util;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import java.util.Locale;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:50:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"/**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":" * Utility class for parsing and formatting date/time values","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":" */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"public class DateFormatter {","lastModifiedDate":"2025-08-29T15:50:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"    private DateFormatter() {}","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"     * Formats date and time given by the user into a standard format","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"     * @param input User given date and time.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"     * @return A string representation of the date and time.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    public static String format(String input) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        String s \u003d input.trim();","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"        // Case 1: d/M/yyyy HHmm  e.g. 2/12/2019 1800","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"            LocalDateTime dt \u003d LocalDateTime.parse(s, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"            return toOrdinalDateTime(dt);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"        // Case 2: yyyy-MM-dd","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"            LocalDate d \u003d LocalDate.parse(s, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"            return d.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"        // Case 3: MM-dd-yyyy","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"            LocalDate d \u003d LocalDate.parse(s, DateTimeFormatter.ofPattern(\"MM-dd-yyyy\"));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"            return d.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"        // Case 4a: yyyy-MM-dd HHmm","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"            LocalDateTime dt \u003d LocalDateTime.parse(s, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mizzat03"},"content":"            return toOrdinalDateTime(dt);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mizzat03"},"content":"        // Case 4b: MM-dd-yyyy HHmm","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{2}-\\\\d{2}-\\\\d{4} \\\\d{4}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mizzat03"},"content":"            LocalDateTime dt \u003d LocalDateTime.parse(s, DateTimeFormatter.ofPattern(\"MM-dd-yyyy HHmm\"));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mizzat03"},"content":"            return toOrdinalDateTime(dt);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mizzat03"},"content":"        // Case 5: d/M/yyyy (date only, with slashes)","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mizzat03"},"content":"        if (s.matches(\"\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\")) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mizzat03"},"content":"            LocalDate d \u003d LocalDate.parse(s, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mizzat03"},"content":"            return d.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH));","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mizzat03"},"content":"        // Fallback: if nothing matched, return as-is.","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mizzat03"},"content":"        return s;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mizzat03"},"content":"     * A helper function to produce an ordinal date and time given any DateTime object.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mizzat03"},"content":"     * @param dt A LocalDateTime object.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mizzat03"},"content":"     * @return A string representation of the ordinal date and time.","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mizzat03"},"content":"    private static String toOrdinalDateTime(LocalDateTime dt) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mizzat03"},"content":"        int day \u003d dt.getDayOfMonth();","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mizzat03"},"content":"        String dayWithOrd \u003d day + ordinal(day);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mizzat03"},"content":"        String month \u003d dt.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mizzat03"},"content":"        int year \u003d dt.getYear();","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mizzat03"},"content":"        int h24 \u003d dt.getHour();","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mizzat03"},"content":"        int m \u003d dt.getMinute();","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mizzat03"},"content":"        int h12 \u003d (h24 % 12 \u003d\u003d 0) ? 12 : (h24 % 12);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mizzat03"},"content":"        String ampm \u003d (h24 \u003c 12) ? \"am\" : \"pm\";","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mizzat03"},"content":"        String time \u003d (m \u003d\u003d 0) ? (h12 + ampm) : (h12 + \":\" + String.format(\"%02d\", m) + ampm);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mizzat03"},"content":"        return String.format(\"%s of %s %d, %s\", dayWithOrd, month, year, time);","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mizzat03"},"content":"    /**","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mizzat03"},"content":"     * Given an integer,produces an ordinal for it.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mizzat03"},"content":"     *","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mizzat03"},"content":"     * @param d An integer","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mizzat03"},"content":"     * @return A string representation of the ordinal of an integer.","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mizzat03"},"content":"     */","lastModifiedDate":"2025-08-30T20:58:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mizzat03"},"content":"    private static String ordinal(int d) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mizzat03"},"content":"        int v \u003d d % 100;","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mizzat03"},"content":"        if (v \u003e\u003d 11 \u0026\u0026 v \u003c\u003d 13) {","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mizzat03"},"content":"            return \"th\";","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-09-04T15:31:49","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mizzat03"},"content":"        switch (d % 10) {","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mizzat03"},"content":"        case 1: return \"st\";","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mizzat03"},"content":"        case 2: return \"nd\";","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mizzat03"},"content":"        case 3: return \"rd\";","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mizzat03"},"content":"        default: return \"th\";","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-29T15:51:47","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-29T15:50:24","isFullCredit":false}],"authorContributionMap":{"mizzat03":103}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"\u003cfx:root type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"8.0\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"40\" fitHeight\u003d\"40\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"        \u003cLabel fx:id\u003d\"dialog\" wrapText\u003d\"true\" maxWidth\u003d\"320\"/\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":12}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"            fx:controller\u003d\"lenny.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mizzat03"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mizzat03"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mizzat03"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mizzat03"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mizzat03"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mizzat03"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mizzat03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mizzat03"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false}],"authorContributionMap":{"mizzat03":44}},{"path":"src/test/java/exception/LennyExceptionsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package exception;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class LennyExceptionsTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package parser;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.parser.Parser;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.exception.LennyExceptions;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Todo;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Event;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"class ParserTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"    @Test","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"    void parseTodo_returnsTodo() throws LennyExceptions {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"        Todo todo \u003d Parser.parseTodo(\"todo finish homework\");","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"        assertEquals(\"finish homework\", todo.getTaskName());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"    @Test","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"    void parseDeadline_missingBy_throwsException() {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        try {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"            Parser.parseDeadline(\"deadline return book\");","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"        } catch (LennyExceptions e) {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"            assertEquals(\"OOPS!!! The description of a deadline must include /by.\", e.getMessage());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"        }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    @Test","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"    void parseEvent_validInput_returnsEvent() throws LennyExceptions {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        Event e \u003d Parser.parseEvent(\"event project /from today /to tomorrow\");","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        assertEquals(\"today - tomorrow\", e.getDuration());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":35}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package storage;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Task;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Todo;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Deadline;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.storage.Storage;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.TaskList;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mizzat03"},"content":"class StorageTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mizzat03"},"content":"    @Test","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"    void saveAndLoad_roundTrip_preservesTasks() throws Exception {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"        Path tempFile \u003d Files.createTempFile(\"tasks\", \".txt\");","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"        Storage storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"        storage.ensureFile();","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"        tasks.add(new Todo(\"test1\", false));","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"        tasks.add(new Deadline(\"report\", \"2025-09-01\", true));","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"        ArrayList\u003cTask\u003e reloaded \u003d storage.load();","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mizzat03"},"content":"        assertEquals(2, reloaded.size());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mizzat03"},"content":"        assertEquals(\"test1\", reloaded.get(0).getTaskName());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mizzat03"},"content":"        assertTrue(reloaded.get(1).getIsDone());","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":36}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package task;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package task;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class EventTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package task;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package task;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package task;  //same package as the class being tested","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"import lenny.logic.task.Todo;","lastModifiedDate":"2025-09-06T14:44:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"class TodoTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"    @Test","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"    void toString_containsTAndDescription() {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"        Todo todo \u003d new Todo(\"shop groceries\", false);","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mizzat03"},"content":"        assertTrue(todo.toString().startsWith(\"[T]\"));","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mizzat03"},"content":"        assertTrue(todo.toString().contains(\"shop groceries\"));","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mizzat03"},"content":"    }","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":16}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package ui;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class UiTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"src/test/java/util/DateFormatterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"package util;","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"public class DateFormatterTest {","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"}","lastModifiedDate":"2025-08-30T13:06:45","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"text-ui-test/data/LennyData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"T | 1 | borrow book","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"D | 1 | return book | Sunday","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"E | 0 | project meeting | Mon 2pm - 4pm","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"E | 0 | another meeting | Sun 2pm - Wed 8am","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false}],"authorContributionMap":{"mizzat03":4}},{"path":"text-ui-test/diff.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"Comparing files ACTUAL.TXT and EXPECTED.TXT","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"FC: no differences encountered","lastModifiedDate":"2025-08-27T10:17:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false}],"authorContributionMap":{"mizzat03":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"todo borrow book","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"mark 2","lastModifiedDate":"2025-08-27T10:17:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"list","lastModifiedDate":"2025-08-27T10:17:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"mark 1","lastModifiedDate":"2025-08-27T10:17:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"event another meeting /from Sun 2pm /to Wed 8am","lastModifiedDate":"2025-08-27T10:17:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"list","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"bye","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false}],"authorContributionMap":{"mizzat03":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"del /q sources.txt 2\u003enul","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"for /R ..\\src\\main\\java %%f in (*.java) do echo %%f\u003e\u003esources.txt","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mizzat03"},"content":"javac -encoding UTF-8 -d ..\\bin @sources.txt","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mizzat03"},"content":"java -classpath ..\\bin Lenny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mizzat03"},"content":"REM Compare ACTUAL.TXT with EXPECTED.TXT","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"fc /n ACTUAL.TXT EXPECTED.TXT \u003e diff.txt","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mizzat03"},"content":"","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mizzat03"},"content":"if errorlevel 1 (","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mizzat03"},"content":"    echo Test result: FAILED","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mizzat03"},"content":"    type diff.txt","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mizzat03"},"content":"    exit /b 1","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mizzat03"},"content":") else (","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mizzat03"},"content":"    echo Test result: PASSED","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mizzat03"},"content":")","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"mizzat03":15,"-":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mizzat03"},"content":"java -classpath ../bin Lenny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T12:29:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"mizzat03":1,"-":37}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\Lenny.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\exception\\LennyExceptions.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\parser\\Parser.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\storage\\Storage.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\task\\Deadline.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\task\\Event.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\task\\Task.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\task\\TaskList.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\task\\Todo.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\ui\\Ui.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mizzat03"},"content":"C:\\Users\\mizza\\Downloads\\NUS\\CS2103T\\ip\\src\\main\\java\\lenny\\util\\DateFormatter.java","lastModifiedDate":"2025-08-30T11:19:16","isFullCredit":false}],"authorContributionMap":{"mizzat03":11}}]
