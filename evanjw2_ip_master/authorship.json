[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    mainClass.set(\"EvansBot\")","lastModifiedDate":"2025-08-28T22:25:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"    archiveBaseName \u003d \"evansbot\"","lastModifiedDate":"2025-08-28T22:25:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"evanjw2":2,"-":39}},{"path":"src/main/java/EvansBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.*;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.command.Command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Parser;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:05:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":" * Main class for the EvansBot application.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":" * Initializes the UI, storage, and task list, and runs the main command loop.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"public class EvansBot {","lastModifiedDate":"2025-08-20T16:51:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T16:51:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * Constructs an EvansBot instance with the specified storage file path.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * Attempts to load tasks from the file; if loading fails, starts with an empty list.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * @param filePath Path to the storage file.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"    public EvansBot(String filePath) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-20T23:46:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"            tasks \u003d new TaskList(storage, loadedTasks);","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"            ui.showError(\"Could not load save file, starting with empty list.\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-20T23:46:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"     * Runs the main EvansBot command loop.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"     * Reads user input, parses it into commands, executes them, and handles exceptions.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"     * The loop continues until an exit command is issued.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"    private void run() {","lastModifiedDate":"2025-08-29T11:55:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"        ui.greet();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T16:51:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"            try {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"                String fullCommand \u003d ui.readCommand(); // read user input","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"            } catch (EvansBotException e) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-20T17:05:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"        ui.close(); // close scanner","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:05:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"     * Main entry point of the EvansBot application.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"     * Creates an EvansBot instance and runs it.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"        new EvansBot(\"./data/evansbot.txt\").run();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T16:51:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T16:51:23","isFullCredit":false}],"authorContributionMap":{"evanjw2":72}},{"path":"src/main/java/evansbot/Exceptions/EvansBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-27T23:44:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents a generic exception that can occur in the EvansBot application.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" * All custom exceptions in the application should extend this class.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"public class EvansBotException extends Exception{","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"     * Constructs an EvansBotException with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"     * @param message Description of the exception.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    public EvansBotException(String message) {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"        super(message);","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T23:13:34","isFullCredit":false}],"authorContributionMap":{"evanjw2":16}},{"path":"src/main/java/evansbot/Exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents an InvalidCommand exception that occurs when an invalid command is given.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class InvalidCommandException extends EvansBotException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"     * Constructs an InvalidCommand Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"        super(\"\"\"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"                Sorry! I don\u0027t know what this comment is supposed to be...\\s","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"                Available commands: todo (description) , event (description) (from) (to), deadline (description) (by)","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"                Type \u0027bye\u0027 to cancel the chat!\"\"\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     * Constructs an InvalidCommand Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * @param message Description of the exception.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"        super(message);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":25}},{"path":"src/main/java/evansbot/Exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-27T23:44:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents an InvalidDeadline exception that occurs when an invalid Deadline is given.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class InvalidDeadlineException extends EvansBotException {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"     * Constructs an Invalid Deadline Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"        super(\"Please give the deadline in the format of \u0027deadline (description) /by (date)\u0027\" +","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"                \" for example: deadline return book /by Sunday\");","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T23:13:34","isFullCredit":false}],"authorContributionMap":{"evanjw2":14}},{"path":"src/main/java/evansbot/Exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-27T23:44:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents an InvalidEvent exception that occurs when an invalid Event is given.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class InvalidEventException extends EvansBotException {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"     * Constructs an Invalid Event Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    public InvalidEventException() {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"        super(\"Please give the event in the format of \u0027event (description) /from (start) /to (end)\u0027 \" +","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"                \"for example: event meeting /from 2.30pm /to 3.30pm\");","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T23:13:34","isFullCredit":false}],"authorContributionMap":{"evanjw2":14}},{"path":"src/main/java/evansbot/Exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-27T23:44:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents an InvalidTaskIndex exception that occurs when an invalid Task Index is given.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class InvalidTaskIndexException extends EvansBotException {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    private int maxIndex;","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"     * Constructs an Invalid TaskIndex Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"     * @param max maximum Task Index value that can be accepted.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    public InvalidTaskIndexException(int max) {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"        super(max \u003d\u003d 0","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"                ? \"There are currently no tasks inside the task list. Please add a task first!\"","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"                : \"There are only \" + max + \" tasks in the list! Please choose a number between 1 to \" + max);","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"        this.maxIndex \u003d max;","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    public int getMaxIndex() {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"        return maxIndex;","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T23:13:34","isFullCredit":false}],"authorContributionMap":{"evanjw2":24}},{"path":"src/main/java/evansbot/Exceptions/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.Exceptions;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-27T23:44:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents an Invalid ToDo exception that occurs when an invalid Event is given.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class InvalidTodoException extends EvansBotException {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"     * Constructs an Invalid ToDo Exception with the specified error message.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    public InvalidTodoException() {","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"        super(\"A todo needs a description. Please add the description after typing todo. \" +","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"                \"for example; todo borrow a book\");","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:18:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T23:13:34","isFullCredit":false}],"authorContributionMap":{"evanjw2":14}},{"path":"src/main/java/evansbot/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidDeadlineException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Deadline;","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" * When executed, this command creates a new Deadline task with the specified","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":" * description and due date, and adds it to the provided TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    private final String by;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * Constructs an AddDeadlineCommand with the specified description and due date.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     * Executes the command by creating a task and adding it to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"     * If either the description or due date is empty, throws an InvalidDeadlineException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"     * @throws EvansBotException If the description or due date is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EvansBotException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"        if (description.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"        tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":46}},{"path":"src/main/java/evansbot/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidEventException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Event;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" * When executed, this command creates a new Event task with the specified","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":" * description and time frame (from and to), and adds it to the provided TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    private final String from;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    private final String to;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * Constructs an AddEventCommand with the specified description and time frame (From and to).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * @param from beginning date/time of task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     * @param to ending date/time of task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"     * Executes the command by creating a Event task and adding it to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     * If either the description or from or to is empty, throws an InvalidEventException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"     * @throws EvansBotException If the description or from or to is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EvansBotException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"        if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":48}},{"path":"src/main/java/evansbot/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidTodoException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.ToDo;","lastModifiedDate":"2025-08-29T01:07:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Represents a command to add a ToDo task to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" * When executed, this command creates a new ToDo task with the specified","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":" * description and adds it to the provided TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * Constructs an AddTodoCommand with the specified description and time frame (From and to).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"     * Executes the command by creating a ToDo task and adding it to the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"     * If the description throws an InvalidTodoException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     * @throws EvansBotException If the description is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws EvansBotException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidTodoException();","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"        tasks.addTask(new ToDo(description));","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":43}},{"path":"src/main/java/evansbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":" * Represents a command that is to be done on TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"     * Executes the command.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"     * If anything is invalid, throws an EvansBotException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     * @throws EvansBotException If anything is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws EvansBotException;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T11:49:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"        return false;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":25}},{"path":"src/main/java/evansbot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidTaskIndexException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * Represents a command to delete a task on the task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * When executed, this command deletes the specified task.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    private final int index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * Executes the command to delete a specific task in TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * If task index is invalid, throws an InvalidTaskIndexException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * @throws InvalidTaskIndexException If task index is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskIndexException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":33}},{"path":"src/main/java/evansbot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":" * Represents a command to Exit the script.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * When executed, this command exits the script.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"     * Executes the command to exit.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"        ui.sayBye();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * Tells the script that it has exited.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * @return true when exited.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        return true;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":32}},{"path":"src/main/java/evansbot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Task;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Finds and lists tasks that contain a specific keyword in their description.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" * The search is case-insensitive.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    private final String keyword;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * @param keyword Keyword to search for in task descriptions.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     * Executes the find command on the given TaskList.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"     * Searches for tasks whose description contains the keyword and prints","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"     * them to the console. If no tasks match, a message is displayed.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     * @param tasks   TaskList containing all tasks.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"     * @param ui      UI instance used to interact with the user.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage instance used for persisting tasks (not modified here).","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d tasks.getTasks();","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"        for (Task task : allTasks) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"                matched.add(task);","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        if (matched.isEmpty()) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"            System.out.println(\"No matching tasks found for \\\"\" + keyword + \"\\\".\");","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"        } else {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"            for (int i \u003d 0; i \u003c matched.size(); i++) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"                System.out.println((i + 1) + \".\" + matched.get(i));","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false}],"authorContributionMap":{"evanjw2":55}},{"path":"src/main/java/evansbot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * Represents a command to list the TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * When executed, this command Lists the TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     * Executes the command to list the TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user (not used in this command).","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"        tasks.listTasks();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":24}},{"path":"src/main/java/evansbot/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidTaskIndexException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * Represents a command to Mark a task in the TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * When executed, this command marks the Task in the TaskList depending on its Index.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    private final int index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * Executes the command to mark a Task in the TaskList by its Index.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * If either the index given is 0 or invalid, throws an InvalidTaskIndexException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     * @throws InvalidTaskIndexException If the index provided is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskIndexException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"            tasks.markTask(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"            ui.showError(\"Invalid task number! Please enter a number between 1 and \" + e.getMaxIndex());","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":37}},{"path":"src/main/java/evansbot/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.command;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidTaskIndexException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.Storage;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.task.TaskList;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.ui.Ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * Represents a command to unmark a task in the TaskList.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * When executed, this command unmarks the Task in the TaskList depending on its Index.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    private final int index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * Executes the command to unmark a Task in the TaskList by its Index.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * If either the index given is 0 or invalid, throws an InvalidTaskIndexException.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * @param tasks TaskList in which the new task will be added.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     * @param ui User interface to interact with the user.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to save the updated task list.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * @throws InvalidTaskIndexException If the index provided is invalid.","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-28T23:11:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskIndexException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"            tasks.unmarkTask(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"            ui.showError(\"Invalid task number! Please enter a number between 1 and \" + e.getMaxIndex());","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":36}},{"path":"src/main/java/evansbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":" * Represents a deadline task with a description and a due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * The due date can be either a valid LocalDate or a raw string if parsing fails.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    protected String byRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Deadline task with the specified description and due date string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * Attempts to parse the due date as LocalDate; if parsing fails, stores the raw string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * @param by Due date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"            this.byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"            this.byRaw \u003d by;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"            this.byDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"            this.byRaw \u003d by;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Deadline task with the specified description, completion status, and due date string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"     * Attempts to parse the due date as LocalDate; if parsing fails, stores the raw string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"     * @param by Due date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"            this.byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"            this.byRaw \u003d by;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"            this.byDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"            this.byRaw \u003d by;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"     * Returns the parsed LocalDate of the task\u0027s due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"     * @return LocalDate representation of the due date, or null if parsing failed.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"        return this.byDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"     * Returns the string representation of the Deadline task, including its description,","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"     * completion status, and formatted due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"        String date;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"        if (byDate !\u003d null) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"            date \u003d byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"            date \u003d byRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false}],"authorContributionMap":{"evanjw2":77}},{"path":"src/main/java/evansbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":" * Represents a Event task with a description and a due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * The due date can be either a valid LocalDate or a raw string if parsing fails.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"public class Event extends Task{","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    protected String fromRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    protected String toRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Event task with the specified description, from and to date string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * Attempts to parse the from and to date as LocalDate; if parsing fails, stores the raw string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * @param from Begin date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * @param to end date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"            this.fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"            this.fromRaw \u003d from;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"            this.toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"            this.toRaw \u003d to;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"            this.fromDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"            this.fromRaw \u003d from;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"            this.toDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"            this.toRaw \u003d to;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Event task with the specified description, completion status, from and to date string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"     * Attempts to parse the from and to date as LocalDate; if parsing fails, stores the raw string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"     * @param from Begin date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"     * @param to end date as a string.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"            this.fromDate \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"            this.fromRaw \u003d from;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"            this.toDate \u003d LocalDate.parse(to);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"            this.toRaw \u003d to;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"            this.fromDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"            this.fromRaw \u003d from;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"            this.toDate \u003d null;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"            this.toRaw \u003d to;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"     * Returns the parsed LocalDate of the task\u0027s From date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"     * @return LocalDate representation of the From date, or null if parsing failed.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"        return fromDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"     * Returns the parsed LocalDate of the task\u0027s due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"     * @return LocalDate representation of the due date, or null if parsing failed.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"evanjw2"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"evanjw2"},"content":"        return toDate;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"evanjw2"},"content":"     * Returns the parsed LocalDate of the task\u0027s From date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the From date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"evanjw2"},"content":"    public String getFromRaw() {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"evanjw2"},"content":"        return fromRaw;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"evanjw2"},"content":"     * Returns the parsed LocalDate of the task\u0027s due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"evanjw2"},"content":"    public String getToRaw() {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"evanjw2"},"content":"        return toRaw;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"evanjw2"},"content":"     * Returns the string representation of the Event task, including its description,","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"evanjw2"},"content":"     * completion status, and formatted from and to date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"evanjw2"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"evanjw2"},"content":"        String from;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"evanjw2"},"content":"        String to;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"evanjw2"},"content":"        if (fromDate !\u003d null \u0026\u0026 toDate !\u003d null) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"evanjw2"},"content":"            from \u003d fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"evanjw2"},"content":"            to \u003d toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"evanjw2"},"content":"        } else {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"evanjw2"},"content":"            from \u003d fromRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"evanjw2"},"content":"            to \u003d toRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"evanjw2"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false}],"authorContributionMap":{"evanjw2":120}},{"path":"src/main/java/evansbot/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * Handles reading and writing tasks to and from persistent storage.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Tasks are saved in a text file with a specific format for each task type (ToDo, Deadline, Event).","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Storage instance that reads from and writes to the specified file path.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * @param filePath Path to the storage file.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * Loads tasks from the storage file into an ArrayList of Task objects.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     * If the file or parent directories do not exist, they are created.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"     * @return ArrayList of tasks loaded from storage.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"        //Make folder if it does not exist","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"        //Make file if it does not exist","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"            file.createNewFile();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"            return tasks;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"            Task task;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"            switch (type) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"            case \"T\": // Case of a ToDo","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"                task \u003d new ToDo(description);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"                break;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"            case \"D\": // Case of a Deadline","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"                task \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"                break;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"            case \"E\": // Case of a Event","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"                task \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"                break;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"            default:","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"                continue;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"            if (isDone) {","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"                task.markAsDone();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"            tasks.add(task);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"        sc.close();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"evanjw2"},"content":"     * Saves a list of tasks to the storage file.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"evanjw2"},"content":"     * Each task is formatted according to its type.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"evanjw2"},"content":"     * @param tasks ArrayList of tasks to save.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"evanjw2"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"evanjw2"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"evanjw2"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"evanjw2"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"evanjw2"},"content":"            fw.write(formatTask(task) + System.lineSeparator());","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"evanjw2"},"content":"        fw.close();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"evanjw2"},"content":"     * Formats a task into a string suitable for saving in the storage file.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"evanjw2"},"content":"     * @param task Task to format.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"evanjw2"},"content":"     * @return Formatted string representing the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"evanjw2"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"evanjw2"},"content":"        String status \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"evanjw2"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"evanjw2"},"content":"            return \"T | \" + status + \" | \" + task.description;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"evanjw2"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"evanjw2"},"content":"            Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"evanjw2"},"content":"            String byStr;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"evanjw2"},"content":"            if (d.getByDate() !\u003d null) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"evanjw2"},"content":"                byStr \u003d String.valueOf(d.byDate);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"evanjw2"},"content":"            } else {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"evanjw2"},"content":"                byStr \u003d d.byRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"evanjw2"},"content":"            return \"D | \" + status + \" | \" + d.description + \" | \" + byStr;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"evanjw2"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"evanjw2"},"content":"            Event e \u003d (Event) task;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"evanjw2"},"content":"            String fromStr;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"evanjw2"},"content":"            String toStr;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"evanjw2"},"content":"            if (e.getFromDate() !\u003d null \u0026\u0026 e.getToDate() !\u003d null) {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"evanjw2"},"content":"                fromStr \u003d String.valueOf(e.fromDate);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"evanjw2"},"content":"                toStr \u003d String.valueOf(e.toDate);","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"evanjw2"},"content":"            } else {","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"evanjw2"},"content":"                fromStr \u003d e.fromRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"evanjw2"},"content":"                toStr \u003d e.toRaw;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"evanjw2"},"content":"            return \"E | \" + status + \" | \" + e.description + \" | \" + fromStr + \" | \" + toStr;","lastModifiedDate":"2025-08-28T15:26:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"evanjw2"},"content":"        return \"\";","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false}],"authorContributionMap":{"evanjw2":128}},{"path":"src/main/java/evansbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-21T13:04:17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents a task that has a description and can be completed.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"public class Task {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"     * Initially a Task is always not done yet.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     * Set the Task to either be Done or not.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"     * @param isDone Tracks whether the task is done.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"     * @return String description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"        return description;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"     * Returns the status of the task in \"X\" or \" \".","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"     * @return String status of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"     * Marks the task as Done.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"     * Unmarks the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"     * Returns the status of the task as a boolean.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"     * @return boolean status of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"        return isDone;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"     * Returns the string representation of the task, including its description and status.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"evanjw2"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"evanjw2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T17:30:56","isFullCredit":false}],"authorContributionMap":{"evanjw2":83}},{"path":"src/main/java/evansbot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidTaskIndexException;","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":" * Represents a list of tasks that can be added, listed, marked as done, unmarked, or deleted.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * Handles saving the task list to persistent storage after each modification.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"public class TaskList {","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * Constructs an empty TaskList with a given storage.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to persist tasks.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"     * Constructs a TaskList with pre-existing tasks and storage.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"     * @param storage Storage used to persist tasks.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     * @param tasks Initial list of tasks.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"    public TaskList(Storage storage, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"     * Adds a task to the task list and saves the updated list.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"     * @param task Task to be added.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"        save();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Got it. I have added this task:\");","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"     * Lists all tasks in the task list to the user.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"    public void listTasks() {","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Here are the tasks in your list\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"     * Marks a task as done based on the provided 1-based index.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"     * @param index 1-based index of the task to mark as done.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"     * @throws InvalidTaskIndexException If the index is out of range.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"    public void markTask(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidTaskIndexException(tasks.size());","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"        save();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Good Job! I have marked this task as done:\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"evanjw2"},"content":"     * Unmarks a task as done based on the provided 1-based index.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"evanjw2"},"content":"     * @param index 1-based index of the task to unmark.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"evanjw2"},"content":"     * @throws InvalidTaskIndexException If the index is out of range.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"evanjw2"},"content":"    public void unmarkTask(int index) throws InvalidTaskIndexException {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"evanjw2"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidTaskIndexException(tasks.size());","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T22:38:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"evanjw2"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"evanjw2"},"content":"        task.unmarkDone();","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"evanjw2"},"content":"        save();","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Oh no! I have unmarked this task for now:\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T17:43:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"evanjw2"},"content":"     * Deletes a task from the task list based on the provided 1-based index","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"evanjw2"},"content":"     * and saves the updated list.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"evanjw2"},"content":"     * @param index 1-based index of the task to delete.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"evanjw2"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"evanjw2"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Okay! I will remove this task: \");","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Now there is \" + (tasks.size() - 1) + \" tasks in the list!\");","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"evanjw2"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"evanjw2"},"content":"        save();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"evanjw2"},"content":"     * Returns the number of tasks currently in the task list.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"evanjw2"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"evanjw2"},"content":"    public int getCount() {","lastModifiedDate":"2025-08-20T18:12:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"evanjw2"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-20T23:33:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:12:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"evanjw2"},"content":"    /**Returns the list of tasks in an ArrayList.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"evanjw2"},"content":"     * @return The list of tasks in an ArrayList.","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"evanjw2"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"evanjw2"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T01:35:20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"evanjw2"},"content":"     * Saves the current task list to storage.","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:29:10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"evanjw2"},"content":"    private void save() {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"evanjw2"},"content":"        try {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"evanjw2"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"evanjw2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"evanjw2"},"content":"            System.out.println(\"Could not save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T14:26:38","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T17:25:07","isFullCredit":false}],"authorContributionMap":{"evanjw2":146}},{"path":"src/main/java/evansbot/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":" * Represents a ToDo task with a description and a due date.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":" * The due date can be either a valid LocalDate or a raw string if parsing fails.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"    protected String by;","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"        super(description);","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Event task with the specified description and completion status.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T12:28:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"     * Returns the string representation of the ToDo task, including its description.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     * @return String representation of the ToDo task.","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:48:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-20T18:04:56","isFullCredit":false}],"authorContributionMap":{"evanjw2":37}},{"path":"src/main/java/evansbot/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.EvansBotException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidCommandException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidDeadlineException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import evansbot.Exceptions.InvalidEventException;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import evansbot.command.*;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":" * Parses user input strings into corresponding Command objects for EvansBot.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":" * Throws EvansBotException or its subclasses if the input is invalid.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     * Parses the user\u0027s input and returns the appropriate Command object.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"     * Recognizes commands like \"bye\", \"list\", \"mark\", \"unmark\", \"todo\",","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"     * \"deadline\", \"event\", \"delete\" and \"find\".","lastModifiedDate":"2025-08-29T11:46:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"     * @param input Raw user input string.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"     * @return Command object corresponding to the user\u0027s input.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * @throws EvansBotException If the input is invalid or cannot be parsed","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     *                           into a recognized command.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    public static Command parse(String input) throws EvansBotException {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"        String trimmed \u003d input.trim();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        if (trimmed.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"            int index \u003d Integer.parseInt(trimmed.split(\" \")[1]);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"            int index \u003d Integer.parseInt(trimmed.split(\" \")[1]);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"            return new AddTodoCommand(trimmed.substring(5));","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"            //split by /by","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"            String[] information \u003d input.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"            if (information.length \u003c 2) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"                throw new InvalidDeadlineException();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"            String description \u003d information[0];","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"            String by \u003d information[1];","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"            return new AddDeadlineCommand(description, by);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"event \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"            //split by /from and /to","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"            String[] information \u003d input.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"            if (information.length \u003c 3) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"                throw new InvalidEventException();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"            String description \u003d information[0];","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"            String from \u003d information[1];","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"            String to \u003d information[2];","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"            return new AddEventCommand(description, from, to);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"            int index \u003d Integer.parseInt(trimmed.split(\" \")[1]);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"        } else if (trimmed.startsWith(\"find \")){","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"            String keyword \u003d trimmed.substring(5).trim();","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"                throw new InvalidCommandException(\"Please provide a keyword to search for.\");","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"            }","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2025-08-29T01:22:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"        } else {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"        }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":72}},{"path":"src/main/java/evansbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.ui;","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T17:20:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"/**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":" * Handles user interactions in the EvansBot application.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":" * Responsible for reading user input, displaying messages, and showing errors.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":" */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"     * Constructs a Ui instance and initializes the input scanner.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    public void greet() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Hello! I\u0027m EvansBot\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"    public void sayBye() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"     *","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"    public void close() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"        scanner.close();","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"    /**","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"     * Prints a line separator to visually separate sections of output.","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"     */","lastModifiedDate":"2025-08-29T00:51:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"        System.out.println(\"############################################################\");","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T16:55:32","isFullCredit":false}],"authorContributionMap":{"evanjw2":69}},{"path":"src/test/java/evansbot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"public class EventTest {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"    public void testConstructorWithDescription() {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"        Event event \u003d new Event(\"read book\", \"6 pm\", \"8 pm\");","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"[E][ ] read book (From: 6 pm to: 8 pm)\", event.toString());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"        assertFalse(event.isDone(), \"Task should not be done by default\");","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    public void testConstructorWithDescriptionAndStatus() {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"        Event event \u003d new Event(\"read book\", true, \"6 pm\", \"8 pm\");","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"[E][X] read book (From: 6 pm to: 8 pm)\", event.toString());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"        assertTrue(event.isDone(), \"Task should be marked as done\");","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false}],"authorContributionMap":{"evanjw2":24}},{"path":"src/test/java/evansbot/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"    private Path tempFile;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"        tempFile \u003d Files.createTempFile(\"evansbot\", \".txt\");","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"        storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    @AfterEach","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"    public void tearDown() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    public void testSaveAndLoad_ToDo() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        tasks.add(new ToDo(\"read book\", true));","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"evanjw2"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"evanjw2"},"content":"        assertTrue(loaded.get(0) instanceof ToDo);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"read book\", loaded.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"evanjw2"},"content":"        assertTrue(loaded.get(0).isDone());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"evanjw2"},"content":"    public void testSaveAndLoad_Deadline() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"evanjw2"},"content":"        tasks.add(new Deadline(\"submit report\", \"2025-08-30\"));","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"evanjw2"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"evanjw2"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"evanjw2"},"content":"        assertTrue(loaded.get(0) instanceof Deadline);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"submit report\", loaded.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"evanjw2"},"content":"        Deadline d \u003d (Deadline) loaded.get(0);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"2025-08-30\", d.byRaw);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"evanjw2"},"content":"    public void testSaveAndLoad_Event() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"evanjw2"},"content":"        tasks.add(new Event(\"team meeting\", \"2025-08-28\", \"2025-08-29\"));","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"evanjw2"},"content":"        storage.save(tasks);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"evanjw2"},"content":"        assertEquals(1, loaded.size());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"evanjw2"},"content":"        assertTrue(loaded.get(0) instanceof Event);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"team meeting\", loaded.get(0).getDescription());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"evanjw2"},"content":"        Event e \u003d (Event) loaded.get(0);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"2025-08-28\", e.fromRaw);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"2025-08-29\", e.toRaw);","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"evanjw2"},"content":"    public void testLoad_EmptyFile() throws IOException {","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"evanjw2"},"content":"        ArrayList\u003cTask\u003e loaded \u003d storage.load();","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"evanjw2"},"content":"        assertTrue(loaded.isEmpty());","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T21:45:20","isFullCredit":false}],"authorContributionMap":{"evanjw2":81}},{"path":"src/test/java/evansbot/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"package evansbot.task;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"evanjw2"},"content":"public class ToDoTest {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"evanjw2"},"content":"    public void testConstructorWithDescription() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"evanjw2"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"read book\", todo.getDescription());","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"evanjw2"},"content":"        assertFalse(todo.isDone(), \"Task should not be done by default\");","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"evanjw2"},"content":"    public void testConstructorWithDescriptionAndStatus() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"evanjw2"},"content":"        ToDo todo \u003d new ToDo(\"write code\", true);","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"write code\", todo.getDescription());","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"evanjw2"},"content":"        assertTrue(todo.isDone(), \"Task should be marked as done\");","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"evanjw2"},"content":"    public void testToString_NotDone() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"evanjw2"},"content":"        ToDo todo \u003d new ToDo(\"go jogging\");","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"[T][ ] go jogging\", todo.toString());","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"evanjw2"},"content":"","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"evanjw2"},"content":"    @Test","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"evanjw2"},"content":"    public void testToString_Done() {","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"evanjw2"},"content":"        ToDo todo \u003d new ToDo(\"buy groceries\", true);","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"evanjw2"},"content":"        assertEquals(\"[T][X] buy groceries\", todo.toString());","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"evanjw2"},"content":"    }","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"evanjw2"},"content":"}","lastModifiedDate":"2025-08-28T21:03:50","isFullCredit":false}],"authorContributionMap":{"evanjw2":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"evanjw2"},"content":"list","lastModifiedDate":"2025-08-20T22:19:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"evanjw2"},"content":"todo borrow book","lastModifiedDate":"2025-08-20T22:25:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"evanjw2"},"content":"deadline return book /by Friday","lastModifiedDate":"2025-08-20T22:25:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"evanjw2"},"content":"list","lastModifiedDate":"2025-08-20T22:25:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"evanjw2"},"content":"todo","lastModifiedDate":"2025-08-21T13:04:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"evanjw2"},"content":"bye","lastModifiedDate":"2025-08-20T22:25:48","isFullCredit":false}],"authorContributionMap":{"evanjw2":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"evanjw2"},"content":"java -classpath ../bin EvansBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-20T22:19:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"evanjw2":1,"-":37}}]
