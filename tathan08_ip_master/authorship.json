[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"# Usage of AI","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"| Tool Used | Task Given | Observations |","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"|---|:---:|---:|","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"| Copilot | Shorten parseTentativeCommand() and maintain SLAP for Parser.java | When given specific instructions (i.e. to act on a single method), Copilot tends to focus on those specific instructions without understanding the context. For example, it made a new method findSlotsIndex() to find delimiter \"/slots\" instead of creating a general method findIndex() / using existing methods to find delimiters by passing in a string parameter. |","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"| Claude | Refactor saveTasksToFile() and maintain SLAP for Storage.java | Claude gave very clean and organised code, but took around 5 iterations to get the code perfect. This is because it could not run the gradle build tests without being connected to the IDE. As a result, there were some errors it made by assuming class and instance methods, since it did not have access to the whole codebase. |","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"| Copilot | Generate example commands to be placed in the README based on the Parser inputs | Mostly understood and gave specific and useful example commands with wide variety. Hallucinated the point of `find` command as it thought the results would replace the current TaskList. Possibly because of lack of context or overload of context. |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false}],"authorContributionMap":{"tathan08":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-05T22:25:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"    mainClass.set(\"jinjja.Launcher\")","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    archiveBaseName \u003d \"jinjja\"","lastModifiedDate":"2025-09-02T01:27:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"checkstyle {","lastModifiedDate":"2025-09-05T22:25:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-05T22:25:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-05T22:25:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-05T22:25:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"tathan08":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"# Jinjja User Guide","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"Jinjja is a **desktop app for managing your personal tasks**, optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface** (GUI). If you can type fast, Jinjja can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"## Command summary","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"| Action | Format, Examples |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"|--------|------------------|","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"| **Add Todo** | `todo DESCRIPTION` \u003cbr\u003e e.g., `todo read book` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"| **Add Deadline** | `deadline DESCRIPTION /by DATE_TIME` \u003cbr\u003e e.g., `deadline submit project /by 2024-12-15 23:59` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"| **Add Event** | `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME` \u003cbr\u003e e.g., `event meeting /from 2024-12-10 14:00 /to 2024-12-10 16:00` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"| **Add Tentative** | `tentative DESCRIPTION /slots /from DATE_TIME /to DATE_TIME [/from DATE_TIME /to DATE_TIME]...` \u003cbr\u003e e.g., `tentative discussion /slots /from 2024-12-12 10:00 /to 2024-12-12 12:00` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"| **Confirm Tentative** | `confirm TASK_NUMBER SLOT_NUMBER` \u003cbr\u003e e.g., `confirm 3 1` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"| **List** | `list` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"| **Mark** | `mark TASK_NUMBER` \u003cbr\u003e e.g., `mark 3` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"| **Unmark** | `unmark TASK_NUMBER` \u003cbr\u003e e.g., `unmark 1` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"| **Find** | `find KEYWORD` \u003cbr\u003e e.g., `find book` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"| **Delete** | `delete TASK_NUMBER` \u003cbr\u003e e.g., `delete 3` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"| **Exit** | `bye` |","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"### **Notes about the command format:**","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"  e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"* Date and time should be in `yyyy-MM-dd HH:mm` format.\u003cbr\u003e","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"  e.g. `2024-12-25 14:30`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"* Parameters must be in the specified order for each command.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"## Features","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"Adds a todo task to your task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"* `todo read book`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"* `todo finish homework`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"```text","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"  [T][ ] read book","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"Adds a deadline task with a specific due date to your task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"Format: `deadline DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"* The date and time must be in `yyyy-MM-dd HH:mm` format.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"* `deadline submit project /by 2024-12-15 23:59`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"* `deadline pay bills /by 2024-11-30 17:00`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"  [D][ ] submit project (by: Dec 15 2024, 11:59PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"### Adding an event task: `event`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"Adds an event task with a specific start and end time to your task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"Format: `event DESCRIPTION /from START_DATE_TIME /to END_DATE_TIME`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"* Both start and end date/time must be in `yyyy-MM-dd HH:mm` format.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"* The start time must be before the end time.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"* `event team meeting /from 2024-12-10 14:00 /to 2024-12-10 16:00`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"* `event conference /from 2024-11-25 09:00 /to 2024-11-25 17:00`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"  [E][ ] team meeting (from: Dec 10 2024, 2:00PM to: Dec 10 2024, 4:00PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"### Adding a tentative event: `tentative`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"Adds a tentative event with multiple possible time slots to your task list. This is useful when you want to schedule an event but haven\u0027t confirmed the exact time yet.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"Format: `tentative DESCRIPTION /slots /from DATE_TIME /to DATE_TIME [/from DATE_TIME /to DATE_TIME]...`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"* You can specify multiple time slots by repeating the `/from` and `/to` parameters.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"* All date/time must be in `yyyy-MM-dd HH:mm` format.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"* At least one time slot must be provided.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"* `tentative project discussion /slots /from 2024-12-12 10:00 /to 2024-12-12 12:00 /from 2024-12-13 14:00 /to 2024-12-13 16:00`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"* `tentative doctor appointment /slots /from 2024-11-20 09:00 /to 2024-11-20 10:00`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"Got it. I\u0027ve added this tentative event:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"  [TE][ ] project discussion","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"    Slot 1: Dec 12 2024, 10:00AM to Dec 12 2024, 12:00PM","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"    Slot 2: Dec 13 2024, 2:00PM to Dec 13 2024, 4:00PM","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"### Confirming a tentative slot: `confirm`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"Confirms one of the time slots for a tentative event, converting it to a confirmed event.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"Format: `confirm TASK_NUMBER SLOT_NUMBER`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"* The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"* The slot number refers to the slot you want to confirm (1, 2, 3, ...).","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"* Both numbers must be positive integers.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"* `confirm 4 1` (confirms slot 1 of task 4)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"* `confirm 2 3` (confirms slot 3 of task 2)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"Nice! I\u0027ve confirmed slot 1 for your tentative event:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"  [TE][ ] project discussion (confirmed: Dec 12 2024, 10:00AM to Dec 12 2024, 12:00PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"Shows a list of all tasks in your task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"Format: `list`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"2. [D][ ] submit project (by: Dec 15 2024, 11:59PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"3. [E][ ] team meeting (from: Dec 10 2024, 2:00PM to: Dec 10 2024, 4:00PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"4. [TE][ ] project discussion (confirmed: Dec 12 2024, 10:00AM to Dec 12 2024, 12:00PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"Marks the specified task as completed.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"* The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"* The task number must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"* `list` followed by `mark 2` marks the 2nd task in the task list as done.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"  [T][X] read book","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"Marks the specified task as not completed.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"* The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"* The task number must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"* `list` followed by `unmark 1` marks the 1st task in the task list as not done.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"  [T][ ] read book","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"### Finding tasks: `find`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"Finds tasks whose descriptions contain the given keyword.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"* The search is case-insensitive. e.g `book` will match `Book`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"* Only the task description is searched.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"* Partial word matches are supported. e.g. `proj` will match `project`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"* `find book` returns tasks containing \"book\"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"* `find project` returns tasks containing \"project\"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"2. [D][ ] submit project (by: Dec 15 2024, 11:59PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tathan08"},"content":"Deletes the specified task from your task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tathan08"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tathan08"},"content":"* Deletes the task at the specified `TASK_NUMBER`.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tathan08"},"content":"* The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tathan08"},"content":"* The task number must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tathan08"},"content":"Examples:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tathan08"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tathan08"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tathan08"},"content":"  [D][ ] submit project (by: Dec 15 2024, 11:59PM)","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tathan08"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tathan08"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tathan08"},"content":"Exits the program.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tathan08"},"content":"Format: `bye`","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tathan08"},"content":"Expected output:","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"tathan08"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"tathan08"},"content":"```","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"tathan08"},"content":"### Saving the data","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"tathan08"},"content":"Jinjja data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"tathan08"},"content":"The data file is saved as `ip/data/jinjja.txt` in the same folder as your Jinjja application.","lastModifiedDate":"2025-09-15T03:57:25","isFullCredit":false}],"authorContributionMap":{"tathan08":227,"-":16}},{"path":"src/main/java/jinjja/Jinjja.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-24T22:15:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-20T19:37:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.command.Command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import jinjja.parser.Parser;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Cli;","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Gui;","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-08-24T19:53:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":" * Jinjja is a personal assistant chatbot that helps users manage their tasks. It supports adding, listing, marking,","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":" * unmarking, and deleting tasks. Tasks can be of three types: Todo, Deadline, and Event. The bot can interact with","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":" * users via GUI or command-line interface.","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-08-24T19:53:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"public class Jinjja {","lastModifiedDate":"2025-08-20T17:47:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    private static final String DATA_FILE_PATH \u003d \"ip/data/jinjja.txt\";","lastModifiedDate":"2025-09-02T02:16:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T19:53:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    private TaskList list;","lastModifiedDate":"2025-08-27T11:41:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    private Ui ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     * Constructor for the Jinjja chatbot. Separates UI, Storage, and TaskList components. Creates new TaskList file if","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * there are errors loading the current one in Storage.","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     * @param isGui true if the UI is graphical, false for command-line interface","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    public Jinjja(boolean isGui) {","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        if (isGui) {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"            this.ui \u003d new Gui();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"            this.ui \u003d new Cli();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-08-27T11:41:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"     * Runs the main logic of the Jinjja chatbot for CLI.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-08-27T11:41:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    public void run() {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"        // Greet user","lastModifiedDate":"2025-08-20T19:37:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        this.ui.showDivider();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"        this.ui.showGreeting();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        // Initialize storage and load existing tasks","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"            this.list \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"            this.ui.showError(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"            this.list \u003d new TaskList();","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"        this.ui.showDivider();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T23:46:01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"        // Loop to handle user input","lastModifiedDate":"2025-08-20T19:37:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"        boolean canExit \u003d false;","lastModifiedDate":"2025-09-02T00:13:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"        while (!canExit) {","lastModifiedDate":"2025-09-02T00:13:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"            String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-02T00:13:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"            c.execute(this.list, this.storage, this.ui);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"            canExit \u003d c.canExit();","lastModifiedDate":"2025-09-02T00:13:39","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-20T19:37:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"        this.ui.close();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        this.ui.showDivider();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-08-24T23:46:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"            storage.saveTasksToFile(this.list.getTasks());","lastModifiedDate":"2025-08-27T11:41:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-24T23:46:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"            this.ui.showError(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-24T23:46:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        this.ui.showFarewell();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"        this.ui.showDivider();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-20T17:47:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        // Set isGui to false for CLI, true for GUI","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        new Jinjja(false).run();","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T15:04:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"     * Returns a greeting message for the GUI, including storage loading status.","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"        if (this.ui \u003d\u003d null) {","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"            this.ui \u003d new Gui();","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"        // Initialize storage and load tasks for the greeting","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        if (this.storage \u003d\u003d null) {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"            this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        String baseGreeting \u003d this.ui.showGreeting();","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"        // Try to load tasks and inform user about the result","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"        if (this.list \u003d\u003d null) {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"            try {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"                this.list \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"                int taskCount \u003d this.list.getSize();","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"                if (taskCount \u003e 0) {","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"                    return baseGreeting + \"\\n\\nI\u0027ve loaded \" + taskCount + \" task(s) from your save file.\";","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"                } else {","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"                    return baseGreeting + \"\\n\\nNo existing save file found. Starting fresh!\";","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"                }","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"                this.list \u003d new TaskList();","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"                return baseGreeting + \"\\n\\nCouldn\u0027t load save file (it may not exist yet). Starting fresh!\";","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"        return baseGreeting;","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"     * Parses and executes a command for the GUI, returning the output string.","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"        assert this.storage !\u003d null : \"Storage should be initialized\";","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"        assert this.list !\u003d null : \"Task list should be initialized\";","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"        assert this.ui !\u003d null : \"UI should be initialized\";","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"        assert c !\u003d null : \"Parser should return a non-null command\";","lastModifiedDate":"2025-09-09T22:54:47","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"        return c.execute(this.list, this.storage, this.ui);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T15:04:18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"     * Handles application shutdown by saving tasks and returning farewell message. This method is called when the GUI","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"     * window is closed.","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"    public String shutdown() {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"        if (this.storage \u003d\u003d null) {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"            this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"        if (this.list \u003d\u003d null) {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"            try {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"                this.list \u003d new TaskList(this.storage.loadTasksFromFile());","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"                this.list \u003d new TaskList();","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"            storage.saveTasksToFile(this.list.getTasks());","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"            System.err.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"        return this.ui.showFarewell();","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-20T17:47:03","isFullCredit":false}],"authorContributionMap":{"tathan08":153}},{"path":"src/main/java/jinjja/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja;","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.javafxui.JavaFxUi;","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"public class Launcher {","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"        Application.launch(JavaFxUi.class, args);","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T14:39:39","isFullCredit":false}],"authorContributionMap":{"tathan08":13}},{"path":"src/main/java/jinjja/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * Command to add a task to the task list. This command is used for adding Todo, Deadline, and Event tasks.","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    private Task task;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * @param task The task to be added to the task list","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"     * Executes the add command by adding the task to the task list and displaying a confirmation message to the user.","lastModifiedDate":"2025-09-08T23:30:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to add the task to","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     * @param storage The storage system (not used in this command)","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     * @param ui The user interface for displaying messages","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"        assert this.task !\u003d null : \"Task to add should not be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        int oldSize \u003d tasks.getSize();","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        assert tasks.getSize() \u003d\u003d oldSize + 1 : \"Task list size should increase after adding task\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"        return ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"     * Returns whether the application should exit after this command.","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"     * @return false, as adding a task does not terminate the application","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":52}},{"path":"src/main/java/jinjja/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Represents an abstract command that can be executed. All specific command types inherit from this class.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"     * Executes the command with the given dependencies.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     * @param storage The storage for saving tasks.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"     * Returns whether the application should exit after executing this command.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"     * @return true if the application should exit, false otherwise.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    public abstract boolean canExit();","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":27}},{"path":"src/main/java/jinjja/command/ConfirmCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Tentative;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" * Command to confirm a tentative slot for a tentative event.","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"public class ConfirmCommand extends Command {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    private int taskNumber;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    private int slotNumber;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * Constructs a ConfirmCommand with the specified task and slot numbers.","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     * @param taskNumber The 1-indexed task number","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * @param slotNumber The 1-indexed slot number to confirm","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    public ConfirmCommand(int taskNumber, int slotNumber) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        assert slotNumber \u003e 0 : \"Slot number should be positive\";","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        this.slotNumber \u003d slotNumber;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"            if (taskNumber \u003e tasks.getSize() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"                return ui.showError(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"            Task task \u003d tasks.getTask(taskNumber - 1);","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"            if (!(task instanceof Tentative)) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"                return ui.showError(\"Task \" + taskNumber + \" is not a tentative event.\");","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"            Tentative tentative \u003d (Tentative) task;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"            if (tentative.confirmSlot(slotNumber)) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"                storage.saveTasksToFile(tasks.getTasks());","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"                return ui.showMessage(\"Confirmed slot \" + slotNumber + \" for: \" + tentative.getDescription());","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"            } else {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"                return ui.showError(\"Invalid slot number. Please provide a valid slot number (1-\"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"                        + tentative.getSlotCount() + \").\");","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"            return ui.showError(\"Error confirming tentative event: \" + e.getMessage());","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-13T11:44:09","isFullCredit":false}],"authorContributionMap":{"tathan08":60}},{"path":"src/main/java/jinjja/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * Command to delete a task.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    private int taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"            Task removedTask \u003d tasks.removeTask(taskNumber - 1);","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"            return ui.showTaskDeleted(removedTask, tasks.getSize());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"            return ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":32}},{"path":"src/main/java/jinjja/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command to exit the application.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"        // No output needed for exit command","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"        return ui.showFarewell();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        return true;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":22}},{"path":"src/main/java/jinjja/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command to find tasks that contain a specific keyword in their description. This command searches through all tasks","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * and displays those that match the search criteria.","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    private String keyword;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     * Constructs a FindCommand with the specified keyword to search for.","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * @param keyword The keyword to search for in task descriptions","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"     * Executes the find command by searching for tasks that contain the keyword and displaying the matching tasks to","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"     * the user. Is case-insensitive.","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to search through","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     * @param storage The storage system (not used in this command)","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     * @param ui The user interface for displaying the search results","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"        // Search through all tasks for the keyword using streams and add to matchingTasks","lastModifiedDate":"2025-09-10T20:31:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        tasks.getTasks().stream().filter(task-\u003etask.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-09-10T20:31:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"                .forEach(matchingTasks::addTask);","lastModifiedDate":"2025-09-10T20:31:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        // Display the results","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"        return ui.showFindResults(matchingTasks, keyword);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-03T02:31:02","isFullCredit":false}],"authorContributionMap":{"tathan08":47}},{"path":"src/main/java/jinjja/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command representing an invalid or erroneous command.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    private String errorMessage;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    public InvalidCommand(String errorMessage) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"        return ui.showMessageWithDivider(errorMessage);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":26}},{"path":"src/main/java/jinjja/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command to display all tasks in the task list. This command shows the user all their current tasks with their","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * completion status.","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     * Executes the list command by displaying all tasks to the user.","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to display","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * @param storage The storage system (not used in this command)","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     * @param ui The user interface for displaying the task list","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     * Returns whether the application should exit after this command.","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     * @return false, as listing tasks does not terminate the application","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:24:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":34}},{"path":"src/main/java/jinjja/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command to mark a task as done.","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    private int taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     * Constructs a MarkCommand with the specified task number.","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     * @param taskNumber The 1-indexed task number to mark as done","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"        assert taskNumber \u003e 0 : \"Task number should be positive (1-indexed)\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        assert ui !\u003d null : \"UI cannot be null\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        assert this.taskNumber \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"            tasks.markTask(true, taskNumber - 1);","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"            return ui.showTaskMarked(tasks.getTask(taskNumber - 1));","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"            return ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":41}},{"path":"src/main/java/jinjja/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.storage.Storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.ui.Ui;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * Command to unmark a task (mark as not done).","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    private int taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"            tasks.markTask(false, taskNumber - 1);","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"            return ui.showTaskUnmarked(tasks.getTask(taskNumber - 1));","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"            return ui.showMessageWithDivider(e.getMessage());","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    public boolean canExit() {","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        return false;","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:06:21","isFullCredit":false}],"authorContributionMap":{"tathan08":31}},{"path":"src/main/java/jinjja/exception/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.exception;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":" * Exception thrown when a required parameter is missing.","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"public class MissingParameterException extends RuntimeException {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"    public MissingParameterException(String message) {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"        super(message);","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false}],"authorContributionMap":{"tathan08":10}},{"path":"src/main/java/jinjja/javafxui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.javafxui;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-08T14:50:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"import jinjja.javafxui.window.MainWindow;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":" * Custom control representing a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":" * containing text from the speaker.","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:50:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"    private void flip() {","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"     * Creates a user dialog box.","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"     * @param s","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"     * @param i","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"     * @return DialogBox for a user","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"     * Creates a Jinjja dialog box.","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"     * @param s","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"     * @param i","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"     * @return DialogBox for Jinjja","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"    public static DialogBox getJinjjaDialog(String s, Image i) {","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        db.flip();","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"        return db;","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T15:10:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false}],"authorContributionMap":{"tathan08":75}},{"path":"src/main/java/jinjja/javafxui/JavaFxUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.javafxui;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import jinjja.Jinjja;","lastModifiedDate":"2025-09-08T15:04:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.javafxui.window.MainWindow;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":" * JavaFX UI for Jinjja chatbot.","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"public class JavaFxUi extends Application {","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    private Jinjja jinjja \u003d new Jinjja(true);","lastModifiedDate":"2025-09-08T22:46:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"            stage.setTitle(\"Jinjja\");","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"            MainWindow controller \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"            controller.setJinjja(jinjja); // inject the Jinjja instance","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"            // Handle window close request","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"            stage.setOnCloseRequest(event-\u003e {","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"                // Save tasks and show farewell message before closing","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"                String farewellMessage \u003d jinjja.shutdown();","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"                System.out.println(farewellMessage); // Print to console for debugging","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"                // The window will close automatically after this handler completes","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"            });","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-15T01:30:39","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"            stage.show();","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T14:58:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        launch(args);","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T14:39:03","isFullCredit":false}],"authorContributionMap":{"tathan08":49}},{"path":"src/main/java/jinjja/javafxui/window/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.javafxui.window;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import jinjja.Jinjja;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.javafxui.DialogBox;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    private Jinjja jinjja;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userLogo.jpeg\"));","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    private Image jinjjaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jinjjaLogo.jpeg\"));","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    /** Injects the Jinjja instance */","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    public void setJinjja(Jinjja j) {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        jinjja \u003d j;","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"            DialogBox.getJinjjaDialog(jinjja.getGreeting(), jinjjaImage)","lastModifiedDate":"2025-09-15T01:48:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        );","lastModifiedDate":"2025-09-15T01:16:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"     * Creates a dialog box containing user input, and appends it to the dialog container. Clears the user input after","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"     * processing.","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    @FXML","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"        String jinjjaText \u003d jinjja.getResponse(userText);","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"            DialogBox.getUserDialog(userInput.getText(), userImage),","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"            DialogBox.getJinjjaDialog(jinjjaText, jinjjaImage)","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"        );","lastModifiedDate":"2025-09-08T22:25:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T21:28:22","isFullCredit":false}],"authorContributionMap":{"tathan08":58}},{"path":"src/main/java/jinjja/parser/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.parser;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":" * Enum representing the different types of commands that the application can handle.","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"public enum CommandType {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, TENTATIVE, CONFIRM, DELETE, FIND, UNKNOWN;","lastModifiedDate":"2025-09-13T11:43:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"     * Converts a string input to the corresponding CommandType enum.","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"     * @param input The string input to convert.","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"     * @return The corresponding CommandType, or UNKNOWN if no match is found.","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"    public static CommandType fromString(String input) {","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"        if (input \u003d\u003d null || input.trim().isEmpty()) {","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"            return CommandType.valueOf(input.toUpperCase());","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"            return UNKNOWN;","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:17:45","isFullCredit":false}],"authorContributionMap":{"tathan08":26}},{"path":"src/main/java/jinjja/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.parser;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import java.util.List;","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import jinjja.command.AddCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.command.Command;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"import jinjja.command.ConfirmCommand;","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"import jinjja.command.DeleteCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"import jinjja.command.ExitCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"import jinjja.command.FindCommand;","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"import jinjja.command.InvalidCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"import jinjja.command.ListCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"import jinjja.command.MarkCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"import jinjja.command.UnmarkCommand;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Deadline;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Event;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Tentative;","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Todo;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":" * Parser deals with making sense of the user command. It parses user input and returns appropriate Command objects.","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"public class Parser {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_FILE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"     * Builds a string from parts of the input, joining them with spaces.","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"     * @param parts The list of string parts","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"     * @param startIndex The starting index (inclusive)","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"     * @param endIndex The ending index (exclusive)","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"     * @return The concatenated string with spaces between parts","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    private static String buildStringFromParts(List\u003cString\u003e parts, int startIndex, int endIndex) {","lastModifiedDate":"2025-09-10T20:47:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d startIndex; i \u003c endIndex; i++) {","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"            builder.append(parts.get(i));","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"            if (i \u003c endIndex - 1) {","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"                builder.append(\" \");","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        return builder.toString();","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"     * Parses the user input and returns a Command object.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"     * @param input The user input string.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"     * @return A Command object that can be executed.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"        // Split input into parts using streams","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        List\u003cString\u003e parts \u003d Arrays.stream(input.split(\" \")).collect(Collectors.toList());","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"        if (parts.isEmpty()) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Empty command\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"        String action \u003d parts.get(0);","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"        assert action !\u003d null : \"First part of input should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"        CommandType commandType \u003d CommandType.fromString(action);","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"        switch (commandType) {","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        case BYE:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"        case LIST:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"            return new ListCommand();","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"        case MARK:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"            return parseMarkCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        case UNMARK:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"            return parseUnmarkCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"        case TODO:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"            return parseTodoCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"        case DEADLINE:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"            return parseDeadlineCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"        case EVENT:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"            return parseEventCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"        case TENTATIVE:","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"            return parseTentativeCommand(parts);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"        case CONFIRM:","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"            return parseConfirmCommand(parts);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        case DELETE:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"            return parseDeleteCommand(parts);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        case FIND:","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"            return parseFindCommand(parts);","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        case UNKNOWN:","lastModifiedDate":"2025-09-02T00:18:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"            // Fallthrough","lastModifiedDate":"2025-09-03T02:08:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"        default:","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"I have no clue what you just said. Please use a command I know.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"     * Parses a mark command from the input parts.","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"     * @return A MarkCommand if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"    private static Command parseMarkCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"        assert parts !\u003d null : \"Parts list should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"        assert parts.size() \u003e 0 : \"Parts list should contain at least the command\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c\u003d 1) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Task number is missing.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"            int taskNum \u003d Integer.parseInt(parts.get(1));","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"            return new MarkCommand(taskNum);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid task number format. \" + e.getMessage());","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"     * Parses an unmark command from the input parts.","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"     * @return An UnmarkCommand if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"    private static Command parseUnmarkCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"        assert parts !\u003d null : \"Parts list should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"        assert parts.size() \u003e 0 : \"Parts list should contain at least the command\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c\u003d 1) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Task number is missing.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"            int taskNum \u003d Integer.parseInt(parts.get(1));","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"            return new UnmarkCommand(taskNum);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid task number format. \" + e.getMessage());","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"     * Parses a todo command from the input parts.","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"     * @return An AddCommand with a Todo task if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-03T01:23:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"    private static Command parseTodoCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"        assert parts !\u003d null : \"Parts list should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"        assert parts.size() \u003e 0 : \"Parts list should contain at least the command\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c\u003d 1) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Task description is missing.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"        String description \u003d buildStringFromParts(parts, 1, parts.size());","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"        return new AddCommand(task);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"     * Parses a deadline command.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"    private static Command parseDeadlineCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"        // Find the \"/by\" delimiter","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 1; i \u003c parts.size(); i++) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"            if (parts.get(i).equals(\"/by\")) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"                byIndex \u003d i;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"                break;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"        boolean hasDelimiter \u003d byIndex !\u003d -1;","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"        boolean hasDescription \u003d byIndex \u003e 1;","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"        boolean hasDate \u003d byIndex \u003c parts.size() - 1;","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"        if (!hasDelimiter || !hasDescription || !hasDate) {","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Deadline description or /by is missing.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"        String taskDescription \u003d buildStringFromParts(parts, 1, byIndex);","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"        String byDate \u003d buildStringFromParts(parts, byIndex + 1, parts.size());","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"        // Parse the byDate string into a LocalDateTime object","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"            LocalDateTime byDateTime \u003d LocalDateTime.parse(byDate, DATETIME_FILE);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"            Task task \u003d new Deadline(taskDescription, byDateTime);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"            return new AddCommand(task);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid date format. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"     * Parses an event command.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"    private static Command parseEventCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"        // Find the \"/from\" and \"/to\" delimiters","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"        int toIndex \u003d -1;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 1; i \u003c parts.size(); i++) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"            if (parts.get(i).equals(\"/from\")) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"            } else if (parts.get(i).equals(\"/to\")) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"                toIndex \u003d i;","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tathan08"},"content":"        boolean hasDelimiter \u003d fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1;","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tathan08"},"content":"        boolean isValidIndex \u003d fromIndex + 1 \u003c toIndex;","lastModifiedDate":"2025-09-10T12:45:41","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tathan08"},"content":"        if (!hasDelimiter || !isValidIndex) {","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"/from, or /to is missing.\");","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tathan08"},"content":"        String taskDescription \u003d buildStringFromParts(parts, 1, fromIndex);","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tathan08"},"content":"        assert !taskDescription.trim().isEmpty() : \"Task description should not be empty\";","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tathan08"},"content":"        if (taskDescription.trim().isEmpty()) {","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Event description is missing.\");","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T01:03:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tathan08"},"content":"        String fromDateString \u003d buildStringFromParts(parts, fromIndex + 1, toIndex);","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tathan08"},"content":"        String toDateString \u003d buildStringFromParts(parts, toIndex + 1, parts.size());","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tathan08"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromDateString, DATETIME_FILE);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tathan08"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(toDateString, DATETIME_FILE);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tathan08"},"content":"            assert !fromDateTime.isAfter(toDateTime) : \"Event start time should not be after end time\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tathan08"},"content":"            Task task \u003d new Event(taskDescription, fromDateTime, toDateTime);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tathan08"},"content":"            return new AddCommand(task);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tathan08"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid date format for /from or /to. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"tathan08"},"content":"     * Parses a delete command.","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"tathan08"},"content":"    private static Command parseDeleteCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"tathan08"},"content":"        assert parts !\u003d null : \"Parts list should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"tathan08"},"content":"        assert parts.size() \u003e 0 : \"Parts list should contain at least the command\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c 2) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Task number is missing.\");","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"tathan08"},"content":"            int taskNum \u003d Integer.parseInt(parts.get(1));","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"tathan08"},"content":"            assert taskNum \u003e 0 : \"Task number should be positive\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"tathan08"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"tathan08"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid task number format. \" + e.getMessage());","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"tathan08"},"content":"     * Parses a find command from the input parts.","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"tathan08"},"content":"     * @return A FindCommand if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"tathan08"},"content":"    private static Command parseFindCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c\u003d 1) {","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Search keyword is missing.\");","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"tathan08"},"content":"        String keyword \u003d buildStringFromParts(parts, 1, parts.size());","lastModifiedDate":"2025-09-09T23:39:41","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"tathan08"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2025-09-10T20:31:23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-03T02:33:06","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"tathan08"},"content":"     * Parses a tentative event command from the input parts. Format: tentative DESCRIPTION /slots /from DATE /to DATE","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"tathan08"},"content":"     * [/from DATE /to DATE ...]","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"tathan08"},"content":"     * @return An AddCommand with a Tentative if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"tathan08"},"content":"    private static Command parseTentativeCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"tathan08"},"content":"        int slotsIndex \u003d findSlotsIndex(parts);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"tathan08"},"content":"        if (slotsIndex \u003d\u003d -1) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Tentative event must include /slots delimiter.\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"tathan08"},"content":"        if (slotsIndex \u003c\u003d 1) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Tentative event description is missing.\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"tathan08"},"content":"        String description \u003d buildStringFromParts(parts, 1, slotsIndex);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"tathan08"},"content":"        List\u003cString\u003e slotParts \u003d parts.subList(slotsIndex + 1, parts.size());","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"tathan08"},"content":"        Tentative tentative \u003d new Tentative(description);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"tathan08"},"content":"        Command slotsParseResult \u003d parseTimeSlots(slotParts, tentative, slotsIndex);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"tathan08"},"content":"        if (slotsParseResult !\u003d null) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"tathan08"},"content":"            return slotsParseResult;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"tathan08"},"content":"        if (tentative.getSlotCount() \u003d\u003d 0) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Tentative event must have at least one time slot.\");","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"tathan08"},"content":"        return new AddCommand(tentative);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"tathan08"},"content":"     * Finds the index of \"/slots\" delimiter in the input parts.","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"tathan08"},"content":"     * @return The index of \"/slots\" or -1 if not found","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"tathan08"},"content":"    private static int findSlotsIndex(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 1; i \u003c parts.size(); i++) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"tathan08"},"content":"            if (parts.get(i).equals(\"/slots\")) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"tathan08"},"content":"                return i;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"tathan08"},"content":"        return -1;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"tathan08"},"content":"     * Parses time slots from the slot parts and adds them to the tentative event.","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"tathan08"},"content":"     * @param slotParts The parts containing the time slots","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"tathan08"},"content":"     * @param tentative The tentative event to add slots to","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"tathan08"},"content":"     * @param slotsIndex The original index of \"/slots\" for error messages","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"tathan08"},"content":"     * @return InvalidCommand if parsing fails, null if successful","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"tathan08"},"content":"    private static Command parseTimeSlots(List\u003cString\u003e slotParts, Tentative tentative, int slotsIndex) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 0; i \u003c slotParts.size();) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"tathan08"},"content":"            Command slotParseResult \u003d parseNextTimeSlot(slotParts, tentative, i, slotsIndex);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"tathan08"},"content":"            if (slotParseResult instanceof InvalidCommand) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"tathan08"},"content":"                return slotParseResult;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"tathan08"},"content":"            i \u003d findNextFromIndex(slotParts, i);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"tathan08"},"content":"        return null;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"tathan08"},"content":"     * Parses the next time slot starting at the given index.","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"tathan08"},"content":"     * @param slotParts The parts containing the time slots","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"tathan08"},"content":"     * @param tentative The tentative event to add the slot to","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"tathan08"},"content":"     * @param startIndex The starting index in slotParts","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"tathan08"},"content":"     * @param slotsIndex The original index of \"/slots\" for error messages","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"tathan08"},"content":"     * @return InvalidCommand if parsing fails, null if successful","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"tathan08"},"content":"    private static Command parseNextTimeSlot(List\u003cString\u003e slotParts, Tentative tentative, int startIndex,","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"tathan08"},"content":"            int slotsIndex) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"tathan08"},"content":"        if (startIndex \u003e\u003d slotParts.size() || !slotParts.get(startIndex).equals(\"/from\")) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Expected /from at position \" + (slotsIndex + startIndex + 2));","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"tathan08"},"content":"        int toIndex \u003d findToIndex(slotParts, startIndex);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"tathan08"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Missing /to for /from at position \" + (slotsIndex + startIndex + 2));","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"tathan08"},"content":"        if (toIndex \u003c\u003d startIndex + 1) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Missing date/time after /from.\");","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"tathan08"},"content":"        int nextFromIndex \u003d findNextFromIndex(slotParts, toIndex);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"tathan08"},"content":"        if (nextFromIndex \u003c\u003d toIndex + 1) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Missing date/time after /to.\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"tathan08"},"content":"        String fromDateString \u003d buildStringFromParts(slotParts, startIndex + 1, toIndex);","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"tathan08"},"content":"        String toDateString \u003d buildStringFromParts(slotParts, toIndex + 1, nextFromIndex);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"tathan08"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(fromDateString, DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"tathan08"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(toDateString, DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"tathan08"},"content":"            tentative.addTentativeSlot(fromDateTime, toDateTime);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"tathan08"},"content":"            return null;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"tathan08"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid date format. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"tathan08"},"content":"     * Finds the index of the next \"/to\" delimiter after the given index.","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"tathan08"},"content":"     * @param slotParts The parts containing the time slots","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"tathan08"},"content":"     * @param fromIndex The index to start searching from","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"tathan08"},"content":"     * @return The index of \"/to\" or -1 if not found before the next \"/from\"","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"tathan08"},"content":"    private static int findToIndex(List\u003cString\u003e slotParts, int fromIndex) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"tathan08"},"content":"        for (int j \u003d fromIndex + 1; j \u003c slotParts.size(); j++) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"tathan08"},"content":"            if (slotParts.get(j).equals(\"/to\")) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"tathan08"},"content":"                return j;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"tathan08"},"content":"            } else if (slotParts.get(j).equals(\"/from\")) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"tathan08"},"content":"                break; // Found next /from without /to","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"tathan08"},"content":"        return -1;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"tathan08"},"content":"     * Finds the index of the next \"/from\" delimiter or the end of the list.","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"tathan08"},"content":"     * @param slotParts The parts containing the time slots","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"tathan08"},"content":"     * @param toIndex The index to start searching from","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"tathan08"},"content":"     * @return The index of the next \"/from\" or the size of slotParts","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"tathan08"},"content":"    private static int findNextFromIndex(List\u003cString\u003e slotParts, int toIndex) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"tathan08"},"content":"        for (int j \u003d toIndex + 1; j \u003c slotParts.size(); j++) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"tathan08"},"content":"            if (slotParts.get(j).equals(\"/from\")) {","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"tathan08"},"content":"                return j;","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"tathan08"},"content":"        return slotParts.size();","lastModifiedDate":"2025-09-14T02:10:30","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"tathan08"},"content":"     * Parses a confirm command from the input parts. Format: confirm TASK_NUMBER SLOT_NUMBER","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"tathan08"},"content":"     * @param parts The input split into parts","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"tathan08"},"content":"     * @return A ConfirmCommand if valid, InvalidCommand otherwise","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"tathan08"},"content":"    private static Command parseConfirmCommand(List\u003cString\u003e parts) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"tathan08"},"content":"        if (parts.size() \u003c 3) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Usage: confirm TASK_NUMBER SLOT_NUMBER\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"tathan08"},"content":"            int taskNumber \u003d Integer.parseInt(parts.get(1));","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"tathan08"},"content":"            int slotNumber \u003d Integer.parseInt(parts.get(2));","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"tathan08"},"content":"            return new ConfirmCommand(taskNumber, slotNumber);","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"tathan08"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"tathan08"},"content":"            return new InvalidCommand(\"Invalid task number or slot number format.\");","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:44:25","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:12:48","isFullCredit":false}],"authorContributionMap":{"tathan08":434}},{"path":"src/main/java/jinjja/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.storage;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.io.File;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Deadline;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Event;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Tentative;","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Todo;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":" * Handles the storage and retrieval of tasks from a file. This class provides functionality to save tasks to a file and","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":" * load them back, maintaining data persistence across application sessions.","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"public class Storage {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_FILE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    private String filePath;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     * @param filePath The path to the file where tasks will be stored","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"        assert !filePath.trim().isEmpty() : \"File path cannot be empty\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"     * Saves the list of tasks to a file in a specific format. Creates the data directory if it doesn\u0027t exist.","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"     * Overwrites existing file content.","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"     * @param tasks The list of tasks to save","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"     * @throws IOException If an error occurs while saving tasks to the file","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"        assert tasks !\u003d null : \"Task list cannot be null when saving\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"        assert this.filePath !\u003d null : \"File path should be initialized\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        // Create directory if it doesn\u0027t exist","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        File dataDir \u003d new File(\"ip/data\");","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"            boolean dirCreated \u003d dataDir.mkdirs();","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"            assert dirCreated || dataDir.exists() : \"Data directory should be created or already exist\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"        // Write all current tasks into the file","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"        // Will override existing data if file already exists","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"            assert task !\u003d null : \"Individual task in list should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"            String fileFormat \u003d task.toFileFormat();","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"            assert fileFormat !\u003d null \u0026\u0026 !fileFormat.trim().isEmpty() : \"Task file format should not be null or empty\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"            writer.write(fileFormat + \"\\n\");","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"        writer.close();","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"Tasks saved to \" + this.filePath);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"     * Loads tasks from the specified file path. If the file doesn\u0027t exist, returns an empty list. Parses each line to","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"     * recreate Todo, Deadline, and Event tasks.","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"     * @return The list of tasks loaded from the file","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"     * @throws IOException If an error occurs while reading the file","lastModifiedDate":"2025-09-03T01:23:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2025-08-27T11:40:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:40:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"            System.out.println(\"No existing task list found. Starting a new list.\");","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"            return tasks;","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"        Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"            Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"                tasks.add(task);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"        fileScanner.close();","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"Tasks loaded from \" + this.filePath);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"        return tasks;","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"     * Parses a single line from the file and creates the corresponding Task object.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"     * @param line The line from the file to parse","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"     * @return The Task object created from the line, or null if parsing fails","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"    private Task parseTaskFromLine(String line) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"        assert line !\u003d null : \"File line should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"        assert parts.length \u003e\u003d 3 : \"File format should have at least 3 parts\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"        assert taskType !\u003d null \u0026\u0026 !taskType.trim().isEmpty() : \"Task type should not be null or empty\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"        assert description !\u003d null : \"Task description should not be null\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"        Task task \u003d createTaskByType(taskType, description, parts);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"            task.setDone(isDone);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        return task;","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"     * Creates a Task object based on the task type and parsed parts.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"     * @param taskType The type of task (T, D, E, TE)","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"     * @param description The task description","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"     * @param parts The complete parsed parts from the file line","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"     * @return The created Task object, or null if task type is unknown","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"    private Task createTaskByType(String taskType, String description, String[] parts) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"        switch (taskType) {","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"        case \"T\":","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"            return new Todo(description);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"        case \"D\":","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"            return createDeadlineTask(description, parts);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        case \"E\":","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"            return createEventTask(description, parts);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"        case \"TE\":","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"            return createTentativeTask(description, parts);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"        default:","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"            System.out.println(\"Unknown task type in file: \" + taskType);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"            return null;","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"     * Creates a Deadline task from the parsed parts.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"     * @param description The task description","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"     * @param parts The parsed parts from the file line","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"     * @return The created Deadline task","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"    private Task createDeadlineTask(String description, String[] parts) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"        assert parts.length \u003e\u003d 4 : \"Deadline task should have at least 4 parts\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"        String byDateString \u003d parts[3];","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"        assert byDateString !\u003d null \u0026\u0026 !byDateString.trim().isEmpty() : \"Deadline date should not be null or empty\";","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"        LocalDateTime byDate \u003d LocalDateTime.parse(byDateString, DATETIME_FILE);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"        return new Deadline(description, byDate);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"     * Creates an Event task from the parsed parts.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"     * @param description The task description","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"     * @param parts The parsed parts from the file line","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"     * @return The created Event task","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"    private Task createEventTask(String description, String[] parts) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"        assert parts.length \u003e\u003d 5 : \"Event task should have at least 5 parts\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"        String fromDateString \u003d parts[3];","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"        String toDateString \u003d parts[4];","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"        assert fromDateString !\u003d null","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"                \u0026\u0026 !fromDateString.trim().isEmpty() : \"Event from date should not be null or empty\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"        assert toDateString !\u003d null \u0026\u0026 !toDateString.trim().isEmpty() : \"Event to date should not be null or empty\";","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"        LocalDateTime fromDate \u003d LocalDateTime.parse(fromDateString, DATETIME_FILE);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"        LocalDateTime toDate \u003d LocalDateTime.parse(toDateString, DATETIME_FILE);","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"        assert !fromDate.isAfter(toDate) : \"Event start time should not be after end time\";","lastModifiedDate":"2025-09-09T22:24:45","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"        return new Event(description, fromDate, toDate);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"     * Creates a Tentative task from the parsed parts.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"     * @param description The task description","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"     * @param parts The parsed parts from the file line","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"     * @return The created Tentative task","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"    private Task createTentativeTask(String description, String[] parts) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"        assert parts.length \u003e\u003d 5 : \"Tentative task should have at least 5 parts\";","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"        Tentative tentative \u003d new Tentative(description);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"        parseConfirmedSlot(tentative, parts[3]);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"        parseTentativeSlots(tentative, parts);","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"        return tentative;","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"     * Parses and adds the confirmed slot to a Tentative task if it exists.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"     * @param tentative The Tentative task to add the confirmed slot to","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"     * @param confirmedSlotString The confirmed slot string from the file","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"    private void parseConfirmedSlot(Tentative tentative, String confirmedSlotString) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"        if (!confirmedSlotString.isEmpty()) {","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"            String[] confirmedSlotParts \u003d confirmedSlotString.split(\"\\\\|\");","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"            if (confirmedSlotParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tathan08"},"content":"                LocalDateTime confirmedFrom \u003d LocalDateTime.parse(confirmedSlotParts[0], DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tathan08"},"content":"                LocalDateTime confirmedTo \u003d LocalDateTime.parse(confirmedSlotParts[1], DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tathan08"},"content":"                tentative.addTentativeSlot(confirmedFrom, confirmedTo);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tathan08"},"content":"                tentative.confirmSlot(1);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tathan08"},"content":"     * Parses and adds tentative slots to a Tentative task.","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tathan08"},"content":"     * @param tentative The Tentative task to add slots to","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tathan08"},"content":"     * @param parts The parsed parts from the file line","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tathan08"},"content":"    private void parseTentativeSlots(Tentative tentative, String[] parts) {","lastModifiedDate":"2025-09-14T02:20:30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tathan08"},"content":"        int slotCount \u003d Integer.parseInt(parts[4]);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tathan08"},"content":"        assert parts.length \u003e\u003d 5 + slotCount : \"Tentative should have all slots data\";","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 0; i \u003c slotCount; i++) {","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tathan08"},"content":"            String slotString \u003d parts[5 + i];","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tathan08"},"content":"            String[] slotParts \u003d slotString.split(\"\\\\|\");","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tathan08"},"content":"            if (slotParts.length \u003d\u003d 2) {","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tathan08"},"content":"                LocalDateTime slotFrom \u003d LocalDateTime.parse(slotParts[0], DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tathan08"},"content":"                LocalDateTime slotTo \u003d LocalDateTime.parse(slotParts[1], DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tathan08"},"content":"                tentative.addTentativeSlot(slotFrom, slotTo);","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:44:49","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-25T16:31:40","isFullCredit":false}],"authorContributionMap":{"tathan08":237}},{"path":"src/main/java/jinjja/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * Represents a deadline task with a specific date and time to be completed by. This task type includes a deadline that","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" * indicates when the task should be finished.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_FILE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime by;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * @param by The date and time by which the task should be completed","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"        super(description);","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        assert by !\u003d null : \"Deadline date cannot be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"     * Converts the deadline task to a format suitable for saving to a file. The format is \"D | [completion status] |","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     * [description] | [deadline]\".","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"     * @return A string representation of the deadline task in file format","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + this.by.format(DATETIME_FILE);","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"     * Returns a string representation of the deadline task for display. The format is \"[D][completion status]","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"     * [description] (by: [formatted deadline])\".","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"     * @return A string representation of the deadline task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DATETIME_OUTPUT) + \")\";","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false}],"authorContributionMap":{"tathan08":49}},{"path":"src/main/java/jinjja/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * Represents an event task with a specific start and end date/time.","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_FILE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime from;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime to;","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * Constructs a new Event task with a start and end time.","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * @param from The start date and time of the event","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     * @param to The end date and time of the event","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-05T22:30:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        super(description);","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        assert from !\u003d null : \"Event start time cannot be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        assert to !\u003d null : \"Event end time cannot be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        assert !from.isAfter(to) : \"Event start time should not be after end time\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        return \"E | \" + super.toFileFormat() + \" | \" + this.from.format(DATETIME_FILE) + \" | \"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"                + this.to.format(DATETIME_FILE);","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DATETIME_OUTPUT) + \" to: \"","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"                + this.to.format(DATETIME_OUTPUT) + \")\";","lastModifiedDate":"2025-08-25T01:35:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false}],"authorContributionMap":{"tathan08":43}},{"path":"src/main/java/jinjja/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":" * Represents a task with a description and completion status. This is the base class for all task types in the Jinjja","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":" * application.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"public class Task {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"    private boolean isDone;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"    private String description;","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"     * Constructs a new Task with the specified description. The task is initially marked as not done.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"        assert description !\u003d null : \"Task description cannot be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"        assert !description.trim().isEmpty() : \"Task description cannot be empty\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     * @param isDone true if the task is completed, false otherwise","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * @return true indicating the status was successfully changed","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    public boolean setDone(boolean isDone) {","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"        assert this.isDone \u003d\u003d isDone : \"Task completion status should be updated correctly\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        return true; // Indicate that the status was changed","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-20T20:05:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-20T20:05:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"     * @return true if the task is completed, false otherwise","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"     * @return The task description","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        return this.description;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"     * Converts the task to a format suitable for saving to a file.","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"     * @return A string representation of the task in file format.","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"        return (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-20T20:05:01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-20T20:05:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"    public String toString() {","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2025-08-24T20:51:24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-20T19:57:25","isFullCredit":false}],"authorContributionMap":{"tathan08":66}},{"path":"src/main/java/jinjja/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":" * Manages a list of tasks. Provides operations to add, remove, mark, and query tasks. This class serves as the main","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * data structure for storing and manipulating tasks in the Jinjja application.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"     * @param tasks The initial list of tasks","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        assert tasks !\u003d null : \"Task list cannot be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     * Retrieves a task at the specified index.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"     * @param index The index of the task to retrieve","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"     * @return The task at the specified index","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    public Task getTask(int index) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        assert this.tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize()) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"            assert task !\u003d null : \"Retrieved task should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"            return task;","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Task number is out of range.\");","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"     * Returns the underlying list of tasks.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"     * @return The ArrayList containing all tasks","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"     * @param task The task to be added","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"        assert task !\u003d null : \"Cannot add null task to the list\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"        assert this.tasks !\u003d null : \"Tasks list should be initialized\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"        int oldSize \u003d this.getSize();","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        assert this.getSize() \u003d\u003d oldSize + 1 : \"Task list size should increase by 1 after adding a task\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"     * @param index The index of the task to remove","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"     * @return The removed task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"    public Task removeTask(int index) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        assert this.tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        int oldSize \u003d this.getSize();","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize()) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"            Task removedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"            assert removedTask !\u003d null : \"Removed task should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"            assert this.getSize() \u003d\u003d oldSize - 1 : \"Task list size should decrease by 1 after removing a task\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"            return removedTask;","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Task number is out of range.\");","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"     * Marks or unmarks a task at the specified index.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"     * @param isDone true to mark the task as done, false to mark as not done","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"     * @param index The index of the task to mark/unmark","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"     * @throws ArrayIndexOutOfBoundsException if the task list is empty","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"     * @throws NumberFormatException if the index is out of range","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"    public void markTask(boolean isDone, int index) throws ArrayIndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"        assert this.tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"            throw new ArrayIndexOutOfBoundsException(\"No tasks available.\");","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c this.getSize()) {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"            Task task \u003d this.tasks.get(index);","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"            assert task !\u003d null : \"Task at valid index should not be null\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"            task.setDone(isDone);","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"            assert task.getIsDone() \u003d\u003d isDone : \"Task status should be updated correctly\";","lastModifiedDate":"2025-09-09T22:25:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"            throw new NumberFormatException(","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"                    \"Task number is out of range. \\n\" + \"Please enter a number between 1 and \" + this.getSize() + \".\");","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"     * @return The size of the task list","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"     * @return true if the list contains no tasks, false otherwise","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-27T11:38:35","isFullCredit":false}],"authorContributionMap":{"tathan08":130}},{"path":"src/main/java/jinjja/task/Tentative.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import java.util.List;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * Represents a tentatively scheduled event that can have multiple possible time slots. Only one slot can be confirmed","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" * at a time.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"public class Tentative extends Task {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_OUTPUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    private static final DateTimeFormatter DATETIME_FILE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    private List\u003cTimeSlot\u003e tentativeSlots;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    private TimeSlot confirmedSlot;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * Represents a time slot with start and end times.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    public static class TimeSlot {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"        private LocalDateTime from;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        private LocalDateTime to;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"         * Constructs a new TimeSlot with start and end times.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"         *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"         * @param from The start time of the slot","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"         * @param to The end time of the slot","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"         */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"        public TimeSlot(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"            assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"            assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"            assert !from.isAfter(to) : \"Start time should not be after end time\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"            this.from \u003d from;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"            this.to \u003d to;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"        public LocalDateTime getFrom() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"            return from;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        public LocalDateTime getTo() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"            return to;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        public String toDisplayString() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"            return \"from: \" + from.format(DATETIME_OUTPUT) + \" to: \" + to.format(DATETIME_OUTPUT);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"        public String toFileString() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"            return from.format(DATETIME_FILE) + \"|\" + to.format(DATETIME_FILE);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"        @Override","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"        public boolean equals(Object obj) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"            if (this \u003d\u003d obj) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"                return true;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"            if (obj \u003d\u003d null || getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"                return false;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"            TimeSlot timeSlot \u003d (TimeSlot) obj;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"            return from.equals(timeSlot.from) \u0026\u0026 to.equals(timeSlot.to);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"     * Constructs a new Tentative with the given description.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"     * @param description The description of the tentative event","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"    public Tentative(String description) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"        super(description);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"        this.tentativeSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        this.confirmedSlot \u003d null;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"     * Adds a tentative time slot to this event.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"     * @param from The start time of the slot","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"     * @param to The end time of the slot","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"    public void addTentativeSlot(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"        assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"        assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"        assert !from.isAfter(to) : \"Start time should not be after end time\";","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"        TimeSlot slot \u003d new TimeSlot(from, to);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        if (!tentativeSlots.contains(slot)) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"            tentativeSlots.add(slot);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"     * Confirms one of the tentative slots by its index (1-based).","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"     * @param slotIndex The 1-based index of the slot to confirm","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"     * @return true if confirmation was successful, false if index is invalid","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"    public boolean confirmSlot(int slotIndex) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"        if (slotIndex \u003c 1 || slotIndex \u003e tentativeSlots.size()) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"            return false;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"        confirmedSlot \u003d tentativeSlots.get(slotIndex - 1);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"        return true;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"     * Removes a tentative slot by its index (1-based).","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"     * @param slotIndex The 1-based index of the slot to remove","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"     * @return true if removal was successful, false if index is invalid","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"    public boolean removeTentativeSlot(int slotIndex) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        if (slotIndex \u003c 1 || slotIndex \u003e tentativeSlots.size()) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"            return false;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"        TimeSlot removedSlot \u003d tentativeSlots.remove(slotIndex - 1);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"        if (confirmedSlot !\u003d null \u0026\u0026 confirmedSlot.equals(removedSlot)) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"            confirmedSlot \u003d null;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"        return true;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"     * Returns the list of tentative slots.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"     * @return A copy of the tentative slots list","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"    public List\u003cTimeSlot\u003e getTentativeSlots() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        return new ArrayList\u003c\u003e(tentativeSlots);","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"     * Returns the confirmed slot.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"     * @return The confirmed slot, or null if no slot is confirmed","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"    public TimeSlot getConfirmedSlot() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"        return confirmedSlot;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"     * Checks if this event has a confirmed slot.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"     * @return true if a slot is confirmed, false otherwise","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"    public boolean isConfirmed() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"        return confirmedSlot !\u003d null;","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"     * Returns the number of tentative slots.","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"     * @return The number of tentative slots","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"    public int getSlotCount() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"        return tentativeSlots.size();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"        sb.append(\"TE | \").append(super.toFileFormat());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"        // Add confirmed slot (empty if none)","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"        sb.append(\" | \");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"        if (confirmedSlot !\u003d null) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"            sb.append(confirmedSlot.toFileString());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"        // Add tentative slots","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"        sb.append(\" | \").append(tentativeSlots.size());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"        for (TimeSlot slot : tentativeSlots) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"            sb.append(\" | \").append(slot.toFileString());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"    public String toString() {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"        sb.append(\"[TE]\").append(super.toString());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"        if (isConfirmed()) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"            sb.append(\" (CONFIRMED: \").append(confirmedSlot.toDisplayString()).append(\")\");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"        if (!tentativeSlots.isEmpty()) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"            sb.append(\" [TENTATIVE SLOTS: \");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"            for (int i \u003d 0; i \u003c tentativeSlots.size(); i++) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"                if (i \u003e 0) {","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"                    sb.append(\", \");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"                }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"                sb.append((i + 1)).append(\". \").append(tentativeSlots.get(i).toDisplayString());","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"            sb.append(\"]\");","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-13T11:43:53","isFullCredit":false}],"authorContributionMap":{"tathan08":208}},{"path":"src/main/java/jinjja/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":" * Represents a todo task without any date/time attached to it. This is the simplest type of task that only requires a","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":" * description.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T21:20:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"        super(description);","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     * Converts the todo task to a format suitable for saving to a file. The format is \"T | [completion status] |","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     * [description]\".","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"     * @return A string representation of the todo task in file format","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    public String toFileFormat() {","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-08-24T21:49:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"     * Returns a string representation of the todo task for display. The format is \"[T][completion status]","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"     * [description]\".","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"     * @return A string representation of the todo task","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-03T01:04:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-08-21T21:06:15","isFullCredit":false}],"authorContributionMap":{"tathan08":39}},{"path":"src/main/java/jinjja/ui/Cli.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.ui;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":" * Handles user interface operations including printing messages and reading user input.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"public class Cli implements Ui {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    private Scanner scanner;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    public Cli() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"     * Prints a greeting message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    public String showGreeting() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"Hello! I\u0027m Jinjja\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"     * Prints a farewell message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    public String showFarewell() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"     * Prints a divider line. Used before and after bot replies.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"    public String showDivider() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"     * Prints a message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"     * @param message The message to print.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"     * @param errorMessage The error message to print.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        System.err.println(errorMessage);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"     * Prints a message with dividers around it.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"     * @param message The message to print.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"    public String showMessageWithDivider(String message) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"        showMessage(message);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"     * Shows a task addition confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"     * @param totalTasks The total number of tasks after adding.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"        showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        showMessage(\"  \" + task);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"        showMessage(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"     * Shows a task deletion confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"     * @param totalTasks The total number of tasks after removal.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"    public String showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"        showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"        showMessage(\"  \" + task);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        showMessage(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"     * Shows a task marked as done confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"        showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"        showMessage(\"  \" + task);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"     * Shows a task unmarked confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"        showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"        showMessage(\"  \" + task);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"     * Shows the list of tasks.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"            showMessage((i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"     * Shows the results of a find operation.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"     * @param matchingTasks The task list containing tasks that match the search criteria","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"     * @param keyword The keyword that was searched for","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"    public String showFindResults(TaskList matchingTasks, String keyword) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"            showMessage(\"No matching tasks found for keyword: \" + keyword);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"            showMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"                showMessage((i + 1) + \".\" + matchingTasks.getTask(i));","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"        showDivider();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"     * Closes the scanner to free resources.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"    public void close() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"        scanner.close();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false}],"authorContributionMap":{"tathan08":209}},{"path":"src/main/java/jinjja/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.ui;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * Handles GUI interface operations for Jinjja chatbot, returning messages for display in the JavaFX window.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"public class Gui implements Ui {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"    public Gui() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"        // No scanner needed for GUI","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"     * Returns a greeting message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"     * @return The greeting message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    public String showGreeting() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"        return \"Hello! I\u0027m Jinjja\\nWhat can I do for you?\";","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"     * Returns a farewell message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"     * @return The farewell message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    public String showFarewell() {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"     * Divider is not needed for GUI, so this returns an empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    public String showDivider() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"     * Returns a message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"     * @param message The message to return.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"     * @return The message string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        return message;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"     * Returns an error message to the user.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"     * @param errorMessage The error message to return.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"     * @return The error message string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        return \"Error: \" + errorMessage;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"     * Divider is not needed for GUI, so this returns just the message without dividers.","lastModifiedDate":"2025-09-09T00:02:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"    public String showMessageWithDivider(String message) {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"        return message;","lastModifiedDate":"2025-09-09T00:02:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"     * Returns a task addition confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"     * @param totalTasks The total number of tasks after adding.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"     * @return The confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"     * Returns a task deletion confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was removed.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"     * @param totalTasks The total number of tasks after removal.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"     * @return The confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"    public String showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"     * Returns a task marked as done confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"     * @return The confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"    public String showTaskMarked(Task task) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"     * Returns a task unmarked confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"     * @return The confirmation message.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"    public String showTaskUnmarked(Task task) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + task;","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"     * Returns the list of tasks as a string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"     * @param tasks The task list to display.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"     * @return The formatted task list string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"            sb.append((i + 1)).append(\".\").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"     * Returns the results of a find operation as a string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"     * @param matchingTasks The task list containing tasks that match the search criteria.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"     * @param keyword The keyword that was searched for.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"     * @return The formatted find results string.","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"    public String showFindResults(TaskList matchingTasks, String keyword) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"            sb.append(\"No matching tasks found for keyword: \").append(keyword);","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"                sb.append((i + 1)).append(\".\").append(matchingTasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"            }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"     * Reads a line of input from the user. Not applicable for GUI, so returns an empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"     *","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"     * @return An empty string.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"    public String readCommand() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"        // Not applicable for GUI, return empty string","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"        return \"\";","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"    /**","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"     * Nothing to close for GUI, so this method does nothing.","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"     */","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"    @Override","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"    public void close() {","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"        // No resources to close for GUI","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false}],"authorContributionMap":{"tathan08":172}},{"path":"src/main/java/jinjja/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.ui;","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T01:01:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import jinjja.task.Task;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import jinjja.task.TaskList;","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T00:26:39","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":" * Interface for different UI implementations (CLI and GUI).","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T00:26:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"public interface Ui {","lastModifiedDate":"2025-09-08T23:26:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"    String showGreeting();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"    String showFarewell();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"    String showDivider();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    String showMessage(String message);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    String showError(String errorMessage);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    String showMessageWithDivider(String message);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    String showTaskAdded(Task task, int totalTasks);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    String showTaskDeleted(Task task, int totalTasks);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"    String showTaskMarked(Task task);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"    String showTaskUnmarked(Task task);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    String showTaskList(TaskList tasks);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    String showFindResults(TaskList matchingTasks, String keyword);","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    String readCommand();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    void close();","lastModifiedDate":"2025-09-08T23:53:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T00:26:39","isFullCredit":false}],"authorContributionMap":{"tathan08":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false}],"authorContributionMap":{"tathan08":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"            prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"            fx:controller\u003d\"jinjja.javafxui.window.MainWindow\"\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"                   layoutY\u003d\"708.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"                   prefWidth\u003d\"405.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"                layoutX\u003d\"405.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"                layoutY\u003d\"708.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"                prefWidth\u003d\"95.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"                    prefHeight\u003d\"707.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"                    prefWidth\u003d\"500.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"                      prefHeight\u003d\"702.0\"","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"                      prefWidth\u003d\"485.0\" /\u003e","lastModifiedDate":"2025-09-15T01:20:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-08T21:27:50","isFullCredit":false}],"authorContributionMap":{"tathan08":44}},{"path":"src/test/java/jinjja/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.parser;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import jinjja.command.AddCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import jinjja.command.Command;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import jinjja.command.DeleteCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"import jinjja.command.ExitCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"import jinjja.command.InvalidCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"import jinjja.command.ListCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"import jinjja.command.MarkCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"import jinjja.command.UnmarkCommand;","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":" * Test class for Parser functionality. Tests parsing of various command types and edge cases.","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"public class ParserTest {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    public void parse_validTodoCommand_returnsAddCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"todo buy milk\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"        // We can\u0027t directly access the task field, so we test the behavior","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    public void parse_todoWithMultipleWords_correctDescription() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"todo buy groceries and cook dinner\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    public void parse_todoWithoutDescription_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"todo\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"    public void parse_validDeadlineCommand_returnsAddCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"deadline submit assignment /by 2025-12-31 23:59\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"    public void parse_deadlineWithInvalidDate_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"deadline submit assignment /by invalid-date\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"    public void parse_deadlineWithoutBy_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"deadline submit assignment\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"    public void parse_deadlineWithoutDescription_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"deadline /by 2025-12-31 23:59\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"    public void parse_deadlineWithEmptyDate_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"deadline submit assignment /by\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"    public void parse_validEventCommand_returnsAddCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"event team meeting /from 2025-09-15 10:00 /to 2025-09-15 11:30\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"    public void parse_eventWithInvalidFromDate_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"event team meeting /from invalid-date /to 2025-09-15 11:30\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"    public void parse_eventWithInvalidToDate_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"event team meeting /from 2025-09-15 10:00 /to invalid-date\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"    public void parse_eventWithoutFrom_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"event team meeting /to 2025-09-15 11:30\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"    public void parse_eventWithoutTo_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"event team meeting /from 2025-09-15 10:00\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"    public void parse_eventWithoutDescription_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"        // There are 2 possible behaviors depending on whether assertions are enabled","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"        // If assertions are enabled, it should throw an AssertionError","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"        // If assertions are not enabled, it should return InvalidCommand","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"        // Check if assertions are enabled by trying to trigger one","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"        boolean isAssertionsEnabled \u003d false;","lastModifiedDate":"2025-09-14T01:57:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        try {","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"            assert false;","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"            isAssertionsEnabled \u003d true;","lastModifiedDate":"2025-09-14T01:57:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"        if (isAssertionsEnabled) {","lastModifiedDate":"2025-09-14T01:57:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"            // If assertions are enabled, this should throw an AssertionError","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"            assertThrows(AssertionError.class, ()-\u003e {","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"                Parser.parse(\"event /from 2025-09-15 10:00 /to 2025-09-15 11:30\");","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"            });","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"        } else {","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"            // If assertions are not enabled, it should return InvalidCommand","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"            Command command \u003d Parser.parse(\"event /from 2025-09-15 10:00 /to 2025-09-15 11:30\");","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"            assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"            assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"        }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-09T22:52:32","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"    public void parse_validMarkCommand_returnsMarkCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof MarkCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"    public void parse_markWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"mark\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"    public void parse_markWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"mark abc\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"    public void parse_validUnmarkCommand_returnsUnmarkCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof UnmarkCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"    public void parse_unmarkWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"    public void parse_unmarkWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"unmark xyz\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tathan08"},"content":"    public void parse_validDeleteCommand_returnsDeleteCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof DeleteCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tathan08"},"content":"    public void parse_deleteWithoutNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"delete\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"tathan08"},"content":"    public void parse_deleteWithInvalidNumber_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"delete invalid\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"tathan08"},"content":"    public void parse_listCommand_returnsListCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"tathan08"},"content":"    public void parse_byeCommand_returnsExitCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"tathan08"},"content":"        assertTrue(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"tathan08"},"content":"    public void parse_unknownCommand_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"unknown\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"tathan08"},"content":"    public void parse_emptyString_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"tathan08"},"content":"    public void parse_whitespaceOnly_returnsInvalidCommand() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"tathan08"},"content":"        Command command \u003d Parser.parse(\"   \");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"tathan08"},"content":"        assertTrue(command instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"tathan08"},"content":"        assertFalse(command.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"tathan08"},"content":"    public void parse_caseInsensitiveCommands_workCorrectly() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"tathan08"},"content":"        Command upperCommand \u003d Parser.parse(\"TODO buy milk\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"tathan08"},"content":"        Command lowerCommand \u003d Parser.parse(\"todo buy milk\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"tathan08"},"content":"        Command mixedCommand \u003d Parser.parse(\"ToDo buy milk\");","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"tathan08"},"content":"        assertTrue(upperCommand instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"tathan08"},"content":"        assertTrue(lowerCommand instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"tathan08"},"content":"        assertTrue(mixedCommand instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"tathan08"},"content":"    public void parse_commandWithExtraSpaces_createsEmptyElements() {","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"tathan08"},"content":"        // Test that documents the current parsing behavior with multiple spaces","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"tathan08"},"content":"        // The split(\" \") method will create empty strings for consecutive spaces","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"tathan08"},"content":"        Command command1 \u003d Parser.parse(\"todo buy milk\"); // normal case","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"tathan08"},"content":"        Command command2 \u003d Parser.parse(\"todo  buy  milk\"); // extra spaces","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"tathan08"},"content":"        // Both should work, though command2 might have some empty elements in parsing","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"tathan08"},"content":"        assertTrue(command1 instanceof AddCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"tathan08"},"content":"        // command2 behavior depends on how parser handles empty strings in parts array","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"tathan08"},"content":"        assertTrue(command2 instanceof AddCommand || command2 instanceof InvalidCommand);","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"tathan08"},"content":"        assertFalse(command1.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"tathan08"},"content":"        assertFalse(command2.canExit());","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T02:00:40","isFullCredit":false}],"authorContributionMap":{"tathan08":293}},{"path":"src/test/java/jinjja/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":" * Test class for TaskList functionality. Tests task management operations including adding, removing, marking, and","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":" * querying tasks.","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"public class TaskListTest {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    private Task todoTask;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    private Task deadlineTask;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    private Task eventTask;","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        todoTask \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"        deadlineTask \u003d new Deadline(\"Submit assignment\", LocalDateTime.of(2025, 12, 31, 23, 59));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        eventTask \u003d new Event(\"Team meeting\", LocalDateTime.of(2025, 9, 15, 10, 0),","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"                LocalDateTime.of(2025, 9, 15, 11, 30));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    public void addTask_singleTask_success() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, taskList.getTask(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"    public void addTask_multipleTasks_correctOrder() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, taskList.getTask(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        assertEquals(deadlineTask, taskList.getTask(1));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        assertEquals(eventTask, taskList.getTask(2));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"    public void removeTask_validIndex_success() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"        Task removedTask \u003d taskList.removeTask(1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        assertEquals(deadlineTask, removedTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, taskList.getTask(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"        assertEquals(eventTask, taskList.getTask(1));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"    public void removeTask_invalidIndex_throwsException() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"        // Test negative index","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"            taskList.removeTask(-1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"        // Test index too large","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"            taskList.removeTask(1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"        // Test index on empty list","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"        TaskList emptyList \u003d new TaskList();","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"            emptyList.removeTask(0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"    public void removeTask_lastTask_emptyList() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, removedTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"    public void markTask_validIndex_success() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"        assertFalse(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"        assertFalse(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"        taskList.markTask(true, 0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"        assertTrue(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"        assertFalse(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"        taskList.markTask(true, 1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"        assertTrue(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"        // Test unmarking","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"        taskList.markTask(false, 0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"        assertFalse(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"        assertTrue(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"    public void markTask_emptyList_throwsException() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"            taskList.markTask(true, 0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"    public void markTask_invalidIndex_throwsNumberFormatException() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"        // Test negative index","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"        assertThrows(NumberFormatException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"            taskList.markTask(true, -1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tathan08"},"content":"        // Test index too large","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tathan08"},"content":"        assertThrows(NumberFormatException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tathan08"},"content":"            taskList.markTask(true, 2);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tathan08"},"content":"    public void getTask_validIndex_returnsCorrectTask() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, taskList.getTask(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tathan08"},"content":"        assertEquals(deadlineTask, taskList.getTask(1));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tathan08"},"content":"        assertEquals(eventTask, taskList.getTask(2));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tathan08"},"content":"    public void getTask_invalidIndex_throwsException() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tathan08"},"content":"            taskList.getTask(-1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tathan08"},"content":"            taskList.getTask(1);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tathan08"},"content":"        TaskList emptyList \u003d new TaskList();","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tathan08"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, ()-\u003e {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tathan08"},"content":"            emptyList.getTask(0);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tathan08"},"content":"        });","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tathan08"},"content":"    public void constructor_withExistingTasks_correctInitialization() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tathan08"},"content":"        ArrayList\u003cTask\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tathan08"},"content":"        existingTasks.add(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tathan08"},"content":"        existingTasks.add(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tathan08"},"content":"        TaskList taskListWithTasks \u003d new TaskList(existingTasks);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tathan08"},"content":"        assertEquals(2, taskListWithTasks.getSize());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, taskListWithTasks.getTask(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tathan08"},"content":"        assertEquals(deadlineTask, taskListWithTasks.getTask(1));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tathan08"},"content":"        assertFalse(taskListWithTasks.isEmpty());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tathan08"},"content":"    public void getTasks_returnsCorrectList() {","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tathan08"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tathan08"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tathan08"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tathan08"},"content":"        assertEquals(todoTask, tasks.get(0));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tathan08"},"content":"        assertEquals(deadlineTask, tasks.get(1));","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T02:01:52","isFullCredit":false}],"authorContributionMap":{"tathan08":196}},{"path":"src/test/java/jinjja/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T23:26:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":" * Test class for Task hierarchy functionality. Tests the behavior of different task types: Todo, Deadline, and Event.","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"public class TaskTest {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    private Todo todoTask;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    private Event eventTask;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime testDeadline;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime testEventStart;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime testEventEnd;","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        todoTask \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        testDeadline \u003d LocalDateTime.of(2025, 12, 31, 23, 59);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        deadlineTask \u003d new Deadline(\"Submit assignment\", testDeadline);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"        testEventStart \u003d LocalDateTime.of(2025, 9, 15, 10, 0);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"        testEventEnd \u003d LocalDateTime.of(2025, 9, 15, 11, 30);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"        eventTask \u003d new Event(\"Team meeting\", testEventStart, testEventEnd);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"    public void taskCreation_defaultsToNotDone() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"        assertFalse(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"        assertFalse(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"        assertFalse(eventTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"    public void setDone_changesTaskStatus() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        // Test marking as done","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"        assertTrue(todoTask.setDone(true));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"        assertTrue(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"        assertTrue(deadlineTask.setDone(true));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"        assertTrue(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        assertTrue(eventTask.setDone(true));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"        assertTrue(eventTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"        // Test marking as not done","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        assertTrue(todoTask.setDone(false));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"        assertFalse(todoTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"        assertTrue(deadlineTask.setDone(false));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"        assertFalse(deadlineTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"        assertTrue(eventTask.setDone(false));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"        assertFalse(eventTask.getIsDone());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"    public void getDescription_returnsCorrectDescription() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"Buy groceries\", todoTask.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"Submit assignment\", deadlineTask.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"Team meeting\", eventTask.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"    public void toString_formatsCorrectly() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"        // Test undone tasks","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[T][ ] Buy groceries\", todoTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[D][ ] Submit assignment (by: Dec 31 2025, 11:59pm)\", deadlineTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Sep 15 2025, 10:00am to: Sep 15 2025, 11:30am)\", eventTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        // Test done tasks","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        todoTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"        deadlineTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"        eventTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[T][X] Buy groceries\", todoTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[D][X] Submit assignment (by: Dec 31 2025, 11:59pm)\", deadlineTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[E][X] Team meeting (from: Sep 15 2025, 10:00am to: Sep 15 2025, 11:30am)\", eventTask.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"    public void toFileFormat_formatsCorrectly() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"        // Test undone tasks","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"T | 0 | Buy groceries\", todoTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"D | 0 | Submit assignment | 2025-12-31 23:59\", deadlineTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"E | 0 | Team meeting | 2025-09-15 10:00 | 2025-09-15 11:30\", eventTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        // Test done tasks","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"        todoTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"        deadlineTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"        eventTask.setDone(true);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"T | 1 | Buy groceries\", todoTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"D | 1 | Submit assignment | 2025-12-31 23:59\", deadlineTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"E | 1 | Team meeting | 2025-09-15 10:00 | 2025-09-15 11:30\", eventTask.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"    public void todoTask_handlesSpecialCharacters() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"        Todo specialTodo \u003d new Todo(\"Buy milk | bread \u0026 eggs\");","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"Buy milk | bread \u0026 eggs\", specialTodo.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"[T][ ] Buy milk | bread \u0026 eggs\", specialTodo.toString());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"T | 0 | Buy milk | bread \u0026 eggs\", specialTodo.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tathan08"},"content":"    public void deadlineTask_handlesEdgeDates() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tathan08"},"content":"        // Test with different date/time formats","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tathan08"},"content":"        LocalDateTime newYear \u003d LocalDateTime.of(2026, 1, 1, 0, 0);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tathan08"},"content":"        Deadline newYearDeadline \u003d new Deadline(\"New Year resolution\", newYear);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"New Year resolution\", newYearDeadline.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tathan08"},"content":"        assertTrue(newYearDeadline.toString().contains(\"Jan 01 2026, 12:00am\"));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"D | 0 | New Year resolution | 2026-01-01 00:00\", newYearDeadline.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tathan08"},"content":"    public void eventTask_handlesLongDuration() {","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tathan08"},"content":"        // Test event spanning multiple days","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tathan08"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 12, 24, 18, 0);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tathan08"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 12, 26, 10, 0);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tathan08"},"content":"        Event longEvent \u003d new Event(\"Christmas celebration\", start, end);","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"Christmas celebration\", longEvent.getDescription());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tathan08"},"content":"        assertTrue(longEvent.toString().contains(\"Dec 24 2025\"));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tathan08"},"content":"        assertTrue(longEvent.toString().contains(\"Dec 26 2025\"));","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tathan08"},"content":"        assertEquals(\"E | 0 | Christmas celebration | 2025-12-24 18:00 | 2025-12-26 10:00\", longEvent.toFileFormat());","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-02T02:01:25","isFullCredit":false}],"authorContributionMap":{"tathan08":135}},{"path":"src/test/java/jinjja/task/TentativeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"package jinjja.task;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tathan08"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tathan08"},"content":"/**","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tathan08"},"content":" * Test class for Tentative functionality.","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tathan08"},"content":" */","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tathan08"},"content":"public class TentativeTest {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tathan08"},"content":"    private Tentative tentative;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime slot1From;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime slot1To;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime slot2From;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tathan08"},"content":"    private LocalDateTime slot2To;","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tathan08"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tathan08"},"content":"        tentative \u003d new Tentative(\"Team meeting\");","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tathan08"},"content":"        slot1From \u003d LocalDateTime.of(2025, 9, 15, 10, 0);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tathan08"},"content":"        slot1To \u003d LocalDateTime.of(2025, 9, 15, 11, 0);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tathan08"},"content":"        slot2From \u003d LocalDateTime.of(2025, 9, 16, 14, 0);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tathan08"},"content":"        slot2To \u003d LocalDateTime.of(2025, 9, 16, 15, 0);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tathan08"},"content":"    public void addTentativeSlot_validSlot_success() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tathan08"},"content":"        assertEquals(1, tentative.getSlotCount());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tathan08"},"content":"        assertFalse(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tathan08"},"content":"    public void addTentativeSlot_multipleSlots_success() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot2From, slot2To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tathan08"},"content":"        assertEquals(2, tentative.getSlotCount());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tathan08"},"content":"        assertFalse(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tathan08"},"content":"    public void confirmSlot_validSlot_success() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot2From, slot2To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tathan08"},"content":"        assertTrue(tentative.confirmSlot(1));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tathan08"},"content":"        assertTrue(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tathan08"},"content":"        assertEquals(slot1From, tentative.getConfirmedSlot().getFrom());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tathan08"},"content":"        assertEquals(slot1To, tentative.getConfirmedSlot().getTo());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tathan08"},"content":"    public void confirmSlot_invalidSlot_failure() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tathan08"},"content":"        assertFalse(tentative.confirmSlot(2)); // Invalid slot number","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tathan08"},"content":"        assertFalse(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tathan08"},"content":"    public void removeTentativeSlot_validSlot_success() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot2From, slot2To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tathan08"},"content":"        assertTrue(tentative.removeTentativeSlot(1));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tathan08"},"content":"        assertEquals(1, tentative.getSlotCount());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tathan08"},"content":"    public void removeTentativeSlot_confirmedSlot_removesConfirmation() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tathan08"},"content":"        tentative.confirmSlot(1);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tathan08"},"content":"        assertTrue(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tathan08"},"content":"        assertTrue(tentative.removeTentativeSlot(1));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tathan08"},"content":"        assertFalse(tentative.isConfirmed());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tathan08"},"content":"        assertEquals(0, tentative.getSlotCount());","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tathan08"},"content":"    public void toString_withTentativeSlots_showsSlots() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot2From, slot2To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tathan08"},"content":"        String result \u003d tentative.toString();","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"[TE]\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"Team meeting\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"TENTATIVE SLOTS:\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"1.\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"2.\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tathan08"},"content":"    @Test","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tathan08"},"content":"    public void toString_withConfirmedSlot_showsConfirmation() {","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tathan08"},"content":"        tentative.addTentativeSlot(slot1From, slot1To);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tathan08"},"content":"        tentative.confirmSlot(1);","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tathan08"},"content":"","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tathan08"},"content":"        String result \u003d tentative.toString();","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"CONFIRMED:\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tathan08"},"content":"        assertTrue(result.contains(\"Sep 15 2025\"));","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tathan08"},"content":"    }","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tathan08"},"content":"}","lastModifiedDate":"2025-09-13T11:45:25","isFullCredit":false}],"authorContributionMap":{"tathan08":107}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tathan08"},"content":"add  ","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tathan08"},"content":"todo borrow book","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tathan08"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tathan08"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tathan08"},"content":"mark 3","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tathan08"},"content":"list","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tathan08"},"content":"unmark 3","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tathan08"},"content":"list","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tathan08"},"content":"bye","lastModifiedDate":"2025-08-21T22:17:28","isFullCredit":false}],"authorContributionMap":{"tathan08":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tathan08"},"content":"java -classpath ..\\bin Jinjja \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T22:16:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tathan08":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tathan08"},"content":"java -classpath ../bin Jinjja \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T22:16:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tathan08":1,"-":37}}]
