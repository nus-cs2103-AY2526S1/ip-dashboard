{"authorDailyContributionsMap":{"tathan08":[{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"f7c9f64fee72dbbefc128d77772b38414adcd44c","isMergeCommit":false,"messageTitle":"Update chatbot name from Duke to Jinjja and update greeting message to reflect this change","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"c8d650f5d1fc6d60c32f98ae514819e4d18f6d42","isMergeCommit":false,"messageTitle":"Refactor code for displaying chatbot replies","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"da1eb378892ce218d8a80bc4b072ceed4cd91363","isMergeCommit":false,"messageTitle":"Add user input echoing","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"0c634d10e0f1270d6ae6161806b0b2c6bbec559a","isMergeCommit":false,"messageTitle":"Add storing of user input","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":1}}},{"hash":"b96711f47d521580563e2272839864f706b181d8","isMergeCommit":false,"messageTitle":"Add displaying of list","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"26c7bb94c3aab3520bc616919477068516f05166","isMergeCommit":false,"messageTitle":"Add Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"01322ba95f7b4c58efd2b279e944c2be10cdda28","isMergeCommit":false,"messageTitle":"Add marking of Tasks on class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"e6a2d060ccf58b5c6671417d328838877a3cc04b","isMergeCommit":false,"messageTitle":"Update Jinjja to use Task instead of String","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}}]},{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"da590decd24762f644b8de0c3d5150e4bcf704f5","isMergeCommit":false,"messageTitle":"Add marking and unmarking of tasks feature","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":1}}},{"hash":"26cd5f68834cd75f4d0eebf232c4ae7480f20cd5","isMergeCommit":false,"messageTitle":"Add template for Deadline, Events, Todos tasks","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"b639c4d8c2a6a2167472e1b5dbb05a6a4cbe8132","isMergeCommit":false,"messageTitle":"Change command parts to use ArrayList instead of String[] to support longer commands with space","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":6}}},{"hash":"1d1231f85be978f163a0f602673a9541594577a2","isMergeCommit":false,"messageTitle":"Fix Todo class name by removing extra s","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"1564453cefc9d43b84b47fb06cc74235a9bf866f","isMergeCommit":false,"messageTitle":"Add todo feature to Jinjja chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"dea26b4de22489f2b46383e197fdfdfc24e80e30","isMergeCommit":false,"messageTitle":"Add deadline feature to Jinjja chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"080946bff05475ed6e8e2bc017a9ea0dc0eafe25","isMergeCommit":false,"messageTitle":"Bugfix todo feature in Jinjja for not fully capturing more than 1 word task descriptions and missing spaces when printing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"ee7bb94a14b169bf100fbde6cb1db8e523608121","isMergeCommit":false,"messageTitle":"Rename Events to Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"013ef92edf322dd94802e03ec953367fb4264275","isMergeCommit":false,"messageTitle":"Add event feature to Jinjja chatbot","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"d7abd3deed0e556e4e16f8ce5e62766228c2bece","isMergeCommit":false,"messageTitle":"Update name for runtest from Duke to Jinjja","messageBody":"","fileTypesAndContributionMap":{"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"8770042a0792099c5a84ab24baa348780f713807","isMergeCommit":false,"messageTitle":"Add test input and output for text-ui-test","messageBody":"","tags":["A-TextUITesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"2a06caaec2c20030805f83559242023ca8a450ca","isMergeCommit":false,"messageTitle":"Add JinjjaExceptions file with MissingParameterException class","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"b435c72683e4a72fe3b2c5769e34ee4944505371","isMergeCommit":false,"messageTitle":"Add exception handling to Jinjja chatbot for different user inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":154,"deletions":86}}},{"hash":"71d61513f40ceb1b4fab1d1f47b5cfb99cfa442e","isMergeCommit":false,"messageTitle":"Change default to prompt user for another input instead of adding as a Task","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":3}}},{"hash":"cedf957e4ae16ddde182e2505de9138b86f3a180","isMergeCommit":false,"messageTitle":"Add delete feature to Jinjja chatbot","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":0}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"5531a4e959738702e37230af0e58fa30a7b39357","isMergeCommit":false,"messageTitle":"Change style to fit SE-EDU coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":220,"deletions":198}}},{"hash":"8cb929c598637128048a69ea4ca8ec872a5fb621","isMergeCommit":false,"messageTitle":"Add Task conversion to file format and fix style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":9}}},{"hash":"6e1c3bba819e16053042db58bb9401b839197e41","isMergeCommit":false,"messageTitle":"Add file formatting for rest of Task subtypes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"1f1fad1348d9b83057baa5b6e1b3e03206aa4e73","isMergeCommit":false,"messageTitle":"Add saving of Tasks feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":2}}},{"hash":"f139155b0cd049afdbab4e8207b197c399b96996","isMergeCommit":false,"messageTitle":"Add loading of tasks from file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":8}}},{"hash":"eae9bf162298d51deb35768937fa4d9e215dac70","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"Users have to keep the bot running at all times to store their list of\ntasks.\n\nAdd a new feature where users\u0027 tasks are saved after every session and\nloaded before every session.\n\nThis allows persistency across user sessions. Loading at only the start\nand saving at only the end prevents conflicts in task list while user\nis editing the task list.\n","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-25T00:00:00","commitResults":[{"hash":"d752aa457030c7b0201a60e72d4abddd6243d974","isMergeCommit":false,"messageTitle":"Replace String with LocalDateTime for Deadlines and Events","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":9}}},{"hash":"63cffd5d07b107bad05c392e847db381efb923de","isMergeCommit":false,"messageTitle":"Replace String with LocalDateTime for Jinjja","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":15}}},{"hash":"42dda256a5f86bdd7fae4d4b514550e20954cc39","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"User can currently input any String as the deadline end date or event start and\nend date.\n\nThere should be a standardised way to insert and extract dates so there\nis no confusion on date and time formats.\n\nReplace Event and Deadline input Strings with LocalDateTime objects.\nAdd parsing of user input Strings to LocalDateTime objects.\n\nUser input is always a String, Java\u0027s LocalDateTime object is a built-in\nway to standardise storage of date and time objects, while abstracting\naway troublesome parts like formatting.\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"dcc316ebfcd1f73bb3445201fa11725f74080131","isMergeCommit":false,"messageTitle":"Extract Storage class from Jinjja and move main() logic to run()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":81}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"322bfa6259739adfb65e9525b248d7c44ef7feab","isMergeCommit":false,"messageTitle":"Add TaskList as ArrayList wrapper","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":0}}},{"hash":"ccf2e047fb745f2f08bbbfca5b1775f7a6952ec0","isMergeCommit":false,"messageTitle":"Modify Storage so loading returns ArrayList instead of void","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"94d9f34b1bad2492e884a8daa2bc7273d373062e","isMergeCommit":false,"messageTitle":"Modify Jinjja to use TaskList instead of managing ArrayList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":44}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"b9bc388634a806094270192e9de89fe941acf23e","isMergeCommit":false,"messageTitle":"Add Command classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":232,"deletions":0}}},{"hash":"0d32d98611eef1de499910085daa6b17956fb60e","isMergeCommit":false,"messageTitle":"Add Parser class to process user commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":227,"deletions":0}}},{"hash":"87dae48ea0cf55dca1df4e315cff4c4f8771ca84","isMergeCommit":false,"messageTitle":"Update Jinjja to use Parser and Command to process user commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":263}}},{"hash":"743152e497e02fad0bc6ef4180355daa6b6996ee","isMergeCommit":false,"messageTitle":"Add CommandType enum that has all possible commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"26218ca07d9fa9cc98568d804ed6cac3ca794761","isMergeCommit":false,"messageTitle":"Update Parser to use CommandType enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":12}}},{"hash":"01d59f00f82e9cf216cfe313c755f8d28ec6d669","isMergeCommit":false,"messageTitle":"Add Ui class to handle interactions with user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":144,"deletions":0}}},{"hash":"954a5071a7f4a0f885ea5a39fa2316b34c71d262","isMergeCommit":false,"messageTitle":"Update Commands and TaskList to use Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":108}}},{"hash":"d49d972f05ee8fcd0ce23cb6dfd5899ade0639d3","isMergeCommit":false,"messageTitle":"Update Jinjja to use and pass Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":35}}},{"hash":"1f3d660056abf27a513f0b5afc1fe28ed99bf15c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreOOP\u0027","messageBody":"Extract out Ui, Storage, Parser, TaskList and Command classes for better\nOOP design.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"ce2a07dda235bacd637f94345cdcdbaa68aac0a3","isMergeCommit":false,"messageTitle":"Shift all classes to respective packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":40}}},{"hash":"a627a47c395e0e357042ab01c07f448e2008518c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"Organise all code into packages jinjja, jinjja.command,\njinjja.exception, jinjja.parser, jinjja.storage, jinjja.task, jinjja.ui\n","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"32458e7244a1a11c602320404a6fc4a18fd196ea","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"c676917e9f025dc45243ece095ed4feb600153b8","isMergeCommit":false,"messageTitle":"Update gradle build to use Jinjja as mainClass","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"e00a109299886e6519cfd1ffbec8a8bbdefc31e7","isMergeCommit":false,"messageTitle":"Update storage path to fit gradle build","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e0293a9e8ebd15bb9ec856323a46093eed4a1242","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"Configure codebase as a Gradle project and update storage accordingly\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"ecfc65e683a6f707ebcf70b8148c0e48ac2de496","isMergeCommit":false,"messageTitle":"Add 30 JUnit tests for Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":275,"deletions":0}}},{"hash":"230f321b6fdffcd43e3f5ce9fb60330ef4b790f8","isMergeCommit":false,"messageTitle":"Add 8 tests for Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":0}}},{"hash":"fc7fe6e63894a6d2fe8ff5bdaf1b5fb2be762636","isMergeCommit":false,"messageTitle":"Add 12 tests for TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":192,"deletions":0}}},{"hash":"f2d4c23cd240292d9f92f6b7259efb550d9e429c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"Add JUnit testcases for Parser, Task and TaskList compatible with Gradle\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"ed03ff0be9937af6a1f03d8374c90f45cfd8ca44","isMergeCommit":false,"messageTitle":"Restore filepath to use ip/ for compatibility with JAR build","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"5c0bcca9502f7a5d07c43c6e710b2b64ff989806","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"Compile Jinjja as a executable jar file, restore filepath\n","tags":["A-Jar"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-03T00:00:00","commitResults":[{"hash":"684d531ef620781ec92a45cde489cd93922bcf13","isMergeCommit":false,"messageTitle":"Add header comments for public methods for Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":4}}},{"hash":"7453e0e6f7da22d12a4ce533aac27aad00ba7b49","isMergeCommit":false,"messageTitle":"Add header comments for Storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"df0e42b302ed199dca5e760dee078e45d0398d5e","isMergeCommit":false,"messageTitle":"Add header comments for Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"6d833c76d13c33c69a5f5cfb96acbbf850009f69","isMergeCommit":false,"messageTitle":"Add header comments for AddCommand and ListCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":2}}},{"hash":"567bbe67a1a26bad99929393456532c8b304069a","isMergeCommit":false,"messageTitle":"Add switch fallback statement for unknown parsed commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"182c0e40d2de933c25b0b97dc7700acba77a3ce2","isMergeCommit":false,"messageTitle":"Add FindCommand to search for Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":0}}},{"hash":"ad0a9d5e7b082e4c844782bf4a9d6402480583ee","isMergeCommit":false,"messageTitle":"Add Ui printing for FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"f8338f9448a46132e360140edbe03a5a6b8d6111","isMergeCommit":false,"messageTitle":"Add Find command parsing","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"0d72275ed3504d43a5e663098a16cbd9f5a79eef","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"Enforce coding standard according to SE-EDU website for Java\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"d57c51037d4a434b6c4a5d58de61e0037d8010b3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"Add JavaDoc header comments to methods for clarity and explainability\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"2fd3e2fe5e4ffc8ac8424ec4122f1690e4ef3db9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"Add find command to search through Tasks for those matching user-specified descriptions\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"eb1d01c1cc6f518cc88a55d13fc3d1c3d7dc0569","isMergeCommit":false,"messageTitle":"Add checkstyle to gradle build","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"284bc44c7c5e73a2acf21013d7358c918c265f8f","isMergeCommit":false,"messageTitle":"Fix checkstyle errors in main","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}},{"hash":"fd8f57e57769bd2b3cc40bc808cfe8184d2dabab","isMergeCommit":false,"messageTitle":"Fix style for import statements in tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":7}}},{"hash":"dd25855fea5613f9a30f52b8415c4139278f6ba4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"Add given checkstyle from SE-EDU and fix main and test files\nstyles accordingly.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"a84553fb847ad7eafcd46ab5f901745103bd845b","isMergeCommit":false,"messageTitle":"Add boilerplate for setting up GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":0}}},{"hash":"613d5f3d3608f8d569bad3d6c85ecbc87d204634","isMergeCommit":false,"messageTitle":"Add Launcher to change application launch path","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"java":{"insertions":13,"deletions":0}}},{"hash":"1e40c8f05718dd583b26c9a5a579343199516c70","isMergeCommit":false,"messageTitle":"Add basic styling for GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":1}}},{"hash":"e9815f77ad74086f4dbab2177a5abe869663797c","isMergeCommit":false,"messageTitle":"Add user echoing to GUI with auto-scrolling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":12}}},{"hash":"519d022fb7565aa3c3db2d1140095663ca6f3fb9","isMergeCommit":false,"messageTitle":"Add boilerplate for Jinjja to echo user input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"4d5af11fd757c0af2aeb2eca431a966dcdc857f8","isMergeCommit":false,"messageTitle":"Modify GUI to shift Jinjja responses to left side","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":2}}},{"hash":"a078ffbc241afa0a899ef613ffdb0a64973a2599","isMergeCommit":false,"messageTitle":"Add fxml styling to resources","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":66,"deletions":0}}},{"hash":"1b13729f33b2bebd6a84c5c9e29d405319bd0a7d","isMergeCommit":false,"messageTitle":"Add MainWindow to separate controller and view of GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":96}}},{"hash":"a7d4a87d825753ee5e1b124a3e55f45ce1bd1b7b","isMergeCommit":false,"messageTitle":"Shift Storage load to run() and fix checkstyle for GUI window","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":12}}},{"hash":"be419e75aae7ebee36a0f037c6afbb57493e8962","isMergeCommit":false,"messageTitle":"Add toggling of GUI and CLI when creating Jinjja instance","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}},{"hash":"4877e14ff0f8bb6f4739b92947b9d94545352b24","isMergeCommit":false,"messageTitle":"Refactor UI for polymorphism when using Cli and Gui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":301,"deletions":163}}},{"hash":"aa0b795990a1b92b636c0fd299a127430b49380c","isMergeCommit":false,"messageTitle":"Refactor old Ui to become Cli in Commands and Jinjja","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":57}}},{"hash":"8da8ac8533caedebf916ad1326d28c4132cc6618","isMergeCommit":false,"messageTitle":"Refactor more to simplify code using polymorphism for using both GUI and CLI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":178,"deletions":69}}}]},{"date":"2025-09-09T00:00:00","commitResults":[{"hash":"0fdf15a342e6e08dc58383201736d7a986dfe0e5","isMergeCommit":false,"messageTitle":"Bugfix for Gui to properly return Jinjja response","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"b14d4c2ea4977bc40219200b63ab3dff228a7065","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"Add default GUI option to Jinjja when using Gradle\n","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"47513b143ad59cb7479817a95726ee67c2584ec8","isMergeCommit":false,"messageTitle":"Add assertions to Commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"be4133c632aed0e2dfee5ac22ec54dc0909b0048","isMergeCommit":false,"messageTitle":"Add assertions to Parser and Storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":3}}},{"hash":"fe8ccc69b668586fe05784f0beb7b79b75b4c44a","isMergeCommit":false,"messageTitle":"Add assertions to Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":5}}},{"hash":"8ad17d28b6cfb09ad4e6ccea566e53be7dc90975","isMergeCommit":false,"messageTitle":"Fix Parser testing to account for AssertionError when Java assertions are enabled","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":6}}},{"hash":"da25c74262125330048bd4c61851d0ce5a667dde","isMergeCommit":false,"messageTitle":"Add assertions to Jinjja","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"33b148232eb34493e7eca2019b114bf1cddb5974","isMergeCommit":false,"messageTitle":"Parser class: extract helper method to reduce duplication","messageBody":"Parser methods have repetitive string building logic for joining input\nparts with spaces. Methods like parseTodoCommand, parseDeadlineCommand,\nparseEventCommand, and parseFindCommand all contain nearly identical\nStringBuilder patterns.\n\nThe duplicated string building code reduces maintainability and violates\nthe DRY principle. Consolidating this logic improves code quality and\nmakes future changes easier to implement.\n\nLet\u0027s extract the common string building logic into a helper method\nbuildStringFromParts() and refactor all parsing methods to use it.\n\nThis refactoring reduces each parsing method\u0027s length significantly:\n* parseTodoCommand: reduced from 15 to 6 lines\n* parseDeadlineCommand: reduced from 40 to 25 lines\n* parseEventCommand: reduced from 45 to 30 lines\n* parseFindCommand: reduced from 15 to 6 lines\n\nThe helper method centralizes the string concatenation logic and makes\nthe parsing methods more focused on their primary responsibilities.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":70}}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"95da537d1a9c87c548d4861246e5c994a3bff700","isMergeCommit":false,"messageTitle":"Parser class: simplify complex conditional expressions","messageBody":"Parser methods parseDeadlineCommand and parseEventCommand have complex\nboolean conditions that combine multiple checks with logical operators.\nThese compound conditions reduce readability and make it harder to\nunderstand what specific validations are being performed.\n\nComplex expressions violate the principle of making code self-documenting\nand increase cognitive load when reading the logic flow.\n\nLet\u0027s extract the complex boolean expressions into descriptive boolean\nvariables that clearly indicate their purpose.\n\nIn parseDeadlineCommand:\n* hasDelimiter checks if \"/by\" delimiter was found\n* hasDescription verifies description exists before delimiter\n* hasDate ensures date content exists after delimiter\n\nIn parseEventCommand:\n* hasDelimiter checks if both \"/from\" and \"/to\" delimiters exist\n* hasDescription verifies description exists before \"/from\"\n* isValidIndex ensures proper ordering of delimiters\n\nThis approach makes the validation logic self-documenting and easier\nto understand at first glance.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"88592854495193a0801e04ef1225bb2bb44379a4","isMergeCommit":true,"messageTitle":"Merge pull request #1 from tathan08/branch-A-Assertions","messageBody":"Assertions","fileTypesAndContributionMap":{}},{"hash":"9f90741cf0640456bc8b3bad07e95f00b5b61dd5","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b1a37829bed2b85c3a045604104353527b50dfe6","isMergeCommit":true,"messageTitle":"Merge pull request #2 from tathan08/branch-A-CodeQuality","messageBody":"Code Quality","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"tathan08":{"java":2407,"md":0,"fxml":66,"sh":1,"bat":1,"gradle":22,"txt":9}},"authorContributionVariance":{"tathan08":159569.34},"authorDisplayNameMap":{"tathan08":"CS2103T-T08-4 TAN ..THAN"}}
