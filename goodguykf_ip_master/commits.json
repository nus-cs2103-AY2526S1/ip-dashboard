{"authorDailyContributionsMap":{"goodguykf":[{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"2ec4e0b6431d2984ee9b88eec1a5b00dad90e32b","isMergeCommit":false,"messageTitle":"Initial Commit to initialise chatbot","messageBody":"This commit changes renamed the chatbot and also at\nthe same time allows the chatbot to greet its user.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"a08420b024f431fdfe28156bc6a5ae81e5c683b8","isMergeCommit":false,"messageTitle":"Upgrading Skeletal structure","messageBody":"Improved the skeleton structure to add feedback capabilities\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"715cc0916685365e70b65882239c774fc1514e9e","isMergeCommit":false,"messageTitle":"Add and List","messageBody":"I have added a fixed String array to collect task sent by user\nand the ability to reprint all the lists.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"fa4856723e4dd2358bef6e1ed72fa26d61746dec","isMergeCommit":false,"messageTitle":"Mark and Unmark as Done","messageBody":"Created Task Class and the ability to mark and unmark tasks\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":3}}},{"hash":"4f3786e5b82f016e1b8e8a400b04055abd56932c","isMergeCommit":false,"messageTitle":"ToDos, Events, Deadlines","messageBody":"Add support for tracking three types of tasks.\n\nToDos: tasks without any date/time attached to it\nDeadlines: tasks that need to be done before a specific date/time\nEvents: tasks that start at a specific date/time and ends at a specific date/time\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":104,"deletions":6}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"c5afb4a224582307534039e52f761d24e84a1505","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"Creating automated text UI testing using the input/output\nredirection technique to semi-automate the testing of friday.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"04004eb4a9dca319fde1729e2cfc67bab5d84d34","isMergeCommit":false,"messageTitle":"Handle Errors","messageBody":"Created exceptions, try and catch block to catch some\npotential errors that user might make. Updated the testcases to\ntest exception handling.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":1},"java":{"insertions":10,"deletions":0}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"f109af64d58e2f7229cf7d96f8cff78989afa143","isMergeCommit":false,"messageTitle":"Delete","messageBody":"Set up delete and some relevant exceptions. Updated the test cases\nto test the correct output.\n","tags":["Level-7","Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":1}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"eb2f629420df7c4f4f43261acc638c076a156889","isMergeCommit":false,"messageTitle":"Add Saving of Task List Mechanism","messageBody":"The current list right now is not saved and will be lost\nwhen the chatbot is closed.\n\nThis need to be changes as we want the list to be saved for\nfuture references.\n\nCreated file reader and file writer to read and write the stored list\ninto a file to store it.\n\nSo that the list is stored into the device the chatbot is operating\non and the task list can be retrieved again when needed.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":342,"deletions":81}}},{"hash":"ef3599002aad5b3fe806c02380d496801bf7df25","isMergeCommit":false,"messageTitle":"Change dates represented as String to Time","messageBody":"The date and time are represented as Strings.\n\nWe have changed the date and time to be represented, as\nTime object.\n\nThis is done so that we can compare and store it properly as\nit is intended to be used.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":32,"deletions":12}}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"998e324acfcbf21bd6f066f4ba9753d94910c0c6","isMergeCommit":false,"messageTitle":"Add more OOP to the chatbot","messageBody":"Currently the body of that chatbot is lumped into a\nsingle long string of code.\n\nThiw will make the code cleaner,\nless repetitive, and easier to expand.\n\nMore classes have been created to cater to more OOP\n\nSo that we can see and pin point pain points\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":5},"java":{"insertions":562,"deletions":214},"sh":{"insertions":4,"deletions":1}}},{"hash":"c6d41da3f4518da3c31ee49d183572d4f8ea9f79","isMergeCommit":false,"messageTitle":"Seperate classes into packages","messageBody":"All classes in the project are placed directly in the source root folder\n(src/main/java) without any package structure. This makes it difficult to manage\ndependencies and locate specific classes, especially as the project grows.\n\nWithout packages, the codebase becomes cluttered, hard to maintain,\nand prone to naming conflicts. Grouping related classes together improves readability, organization, and encapsulation.\n\nMove classes into appropriately named packages. For example, all task-related classes\nare placed in friday.task, command-related classes in friday.command, and UI classes\nin friday.ui. Update each class with a package declaration and adjust import statements accordingly.\n\nPackages reflect logical grouping of classes by functionality, making the project modular.\nThis approach allows controlled access between classes, reduces dependency errors,\nand aligns with Java best practices for large-scale projects.\n\nKeeping src/main/java as the source root ensures compatibility with build tools and\ntesting scripts. This refactoring also prepares the code for future extension,\nsuch as adding more commands, tasks, or storage features.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":81},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"ab2f0a212a6bfae3bd538eee4b83ba23955cf4b7","isMergeCommit":false,"messageTitle":"Seperate Classes into Pacakges","messageBody":"All classes in the project are placed directly in the source root folder\n(src/main/java) without any package structure. This makes it difficult to manage\ndependencies and locate specific classes, especially as the project grows.\n\nWithout packages, the codebase becomes cluttered, hard to maintain,\nand prone to naming conflicts. Grouping related classes together improves readability, organization, and encapsulation.\n\nMove classes into appropriately named packages. For example, all task-related classes\nare placed in friday.task, command-related classes in friday.command, and UI classes\nin friday.ui. Update each class with a package declaration and adjust import statements accordingly.\n\nPackages reflect logical grouping of classes by functionality, making the project modular.\nThis approach allows controlled access between classes, reduces dependency errors,\nand aligns with Java best practices for large-scale projects.\n\nKeeping src/main/java as the source root ensures compatibility with build tools and\ntesting scripts. This refactoring also prepares the code for future extension,\nsuch as adding more commands, tasks, or storage features.\n","tags":["A-Packages2"],"fileTypesAndContributionMap":{"java":{"insertions":118,"deletions":62},"md":{"insertions":3,"deletions":3}}},{"hash":"fec74917e2df4a9f96fbb83c2aff94a9fea8549e","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch","messageBody":"You have a local fork of the Duke repo and want to\nget changes from the original upstream repository.\n\nYour local fork may be outdated and missing commits from\nthe upstream repo, such as the add-gradle-support branch.\n\nUse git fetch upstream to retrieve all updates from the\nupstream remote without changing your local branches.\n\nFetching updates keeps your local repository aware of\nupstream changes safely, so you can inspect or merge them\nlater without overwriting local work.\n\nAfter fetching, you can merge a specific branch like\nupstream/add-gradle-support into your local master to integrate the changes.\n","fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"ab3478816161621fe36dfe146d8704bde9d2388c","isMergeCommit":false,"messageTitle":"Update Gradle setup","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":8}}},{"hash":"28e3ee0f89c324988ded257eb5d19bd8184c58be","isMergeCommit":false,"messageTitle":"Add JUnit Tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":2},"java":{"insertions":80,"deletions":0}}},{"hash":"de4f24dd1ece447ef67fa8ca457cd70b733186f1","isMergeCommit":false,"messageTitle":"Create JAR Files","messageBody":"Friday bot runs through cradle and is not easily portable.\n\nUsers cannot run the program outside the development set up.\n\nCreate a runnable JAR file with shadowJar\n\nThe JAR bundles all dependencies and specifies the entry point,\nmaking it portable and easy to run with java -jar.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":3},"java":{"insertions":1,"deletions":2}}},{"hash":"9a1a33a6dd834140760471fa7d8aee0462dfb87e","isMergeCommit":false,"messageTitle":"Add JavaDoc","messageBody":"Currently most methods and class headers are not added.\n\nThis may cause confusion on what each class represents and what\neach method do.\n\nAdd JavaDoc to most non-trivial classes and methods.\n\nIt is done so that others who look at this code and want to improve it,\nknowns what each class or method do at a glance.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":132,"deletions":28}}},{"hash":"759392bef57c780ee3d3943fb489a9269b4d2b11","isMergeCommit":false,"messageTitle":"Rectify code to follow convention","messageBody":"Some of the variables and practices are not in line with conventions.\n\nThis is so that the code can be easily readable for others.\n\nChanged and alter the naming of some variable and indentations.\n\nSo that it follwos the convention that is set.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":32,"deletions":12}}}]}]},"authorFileTypeContributionMap":{"goodguykf":{"java":1095,"md":3,"fxml":0,"sh":5,"bat":1,"gradle":7,"txt":38}},"authorContributionVariance":{"goodguykf":62370.996},"authorDisplayNameMap":{"goodguykf":"CS2103T-T14-2 TAN ..FENG"}}
