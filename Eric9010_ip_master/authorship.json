[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"# monet.Monet project template","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"1. After that, locate the `src/main/java/monet.Monet.java` file, right-click it, and choose `Run monet.Monet.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"Eric9010":2,"-":24}},{"path":"data/monet.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"D | 0 | submit report | 2025-10-15T23:59","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"E | 1 | team meeting | 2025-09-15T14:00 | 2025-09-15T16:00","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"T | 1 | read book","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"D | 1 | return book | 2025-08-30T18:00","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false}],"authorContributionMap":{"Eric9010":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"# monet.Monet User Guide","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"Eric9010":1,"-":29}},{"path":"src/main/java/monet/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents the set of valid commands for the Monet chatbot.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"public enum Command {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"    LIST,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    MARK,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    UNMARK,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    DELETE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    TODO,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    DEADLINE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    EVENT,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    BYE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    FIND,","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    UNKNOWN // Represents an invalid command","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false}],"authorContributionMap":{"Eric9010":17}},{"path":"src/main/java/monet/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" * Represents a task with a deadline. It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    // Defines the expected format for user date/time input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    // Defines the desired format for displaying the date/time to the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Deadline task from user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * Parses the date string into a LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     * @param byString The date/time string for the deadline.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the date/time string is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    public Deadline(String description, String byString) throws MonetException {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"        super(description);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"            // Attempt to parse the user-provided date string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"            this.by \u003d LocalDateTime.parse(byString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"            // If parsing fails, throw a custom exception with a relevant message.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid date format for deadline. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Deadline task when loading from the data file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * @param by A pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"        // Formats the LocalDateTime object into a user-friendly string for display.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"        // Converts the task to a machine-readable string for saving to file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":59}},{"path":"src/main/java/monet/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" * Represents a task that is an event with a start and end time. It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    // Defines the expected format for user date/time input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    // Defines the desired format for displaying the date/time to the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * Constructs an Event task from user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     * @param fromString The start date/time string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     * @param toString The end date/time string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If any date/time string is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    public Event(String description, String fromString, String toString) throws MonetException {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        super(description);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"            this.from \u003d LocalDateTime.parse(fromString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            this.to \u003d LocalDateTime.parse(toString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid date format for event. Please use \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"     * Constructs an Event task when loading from the data file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * @param from The start time as a pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @param to The end time as a pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"                + \" to: \" + to.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":60}},{"path":"src/main/java/monet/Monet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T22:34:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T11:34:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Combines the different components: Ui, Storage, Parser, and TaskList.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * Main class for the Monet chatbot application.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class Monet {","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T22:34:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new Monet application instance.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"     * Initializes the UI, storage, and loads any existing tasks from the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    public Monet(String filePath){","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"            tasks \u003d new TaskList(storage.load()); // Load tasks from the storage file at startup.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        } catch (MonetException e) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"            ui.showError(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"            tasks \u003d new TaskList(); // Start with an empty task list if loading fails.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"     * Runs the main application loop, processing user commands until the exit command is given.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"    public void run() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"            try {","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"                ui.divider();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"                Command command \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"                // Switch case for different commands.","lastModifiedDate":"2025-08-30T13:20:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"                switch (command) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"                case BYE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"                    isExit \u003d true;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"                case LIST:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"                    ui.showTaskList(tasks);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"                case MARK:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"                case UNMARK:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"                    handleMarkUnmark(command, fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"                case DELETE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"                    handleDelete(fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"                case TODO:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"                case DEADLINE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"                case EVENT:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"                    handleAddTask(command, fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"                case FIND:","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"                    handleFind(fullCommand);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"                    break;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"                default:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"                    throw new MonetException(\"I don\u0027t know what that means. Please check your input!\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"            } catch (MonetException | IOException e) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"                // Catches both application-specific and file-related errors.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"            } finally {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"                ui.divider();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a new task, adds it to the task list,","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     * shows a confirmation to the user, and saves the updated list to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"     * @param command The type of task to add (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"    private void handleAddTask(Command command, String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"        Task newTask;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"        // Parse the user input to create the correct task type.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"        switch (command) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"        case TODO:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Todo(Parser.parseTodo(fullCommand));","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"        case DEADLINE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"            String[] deadlineDetails \u003d Parser.parseDeadline(fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"        case EVENT:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"            String[] eventDetails \u003d Parser.parseEvent(fullCommand);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Event(eventDetails[0], eventDetails[1], eventDetails[2]);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"            return; // Should not happen","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(newTask); // Execute the action: Add the task to the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"        ui.showTaskAdded(newTask, tasks.getSize()); // Show UI confirmation.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks()); // Save the updated list to disk.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a task index to delete, removes the task,","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"     * shows a confirmation, and saves the changes.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"delete 2\").","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"    private void handleDelete(String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"        int index \u003d Parser.parseIndex(fullCommand, tasks.getSize());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"        Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"        ui.showTaskDeleted(deletedTask, tasks.getSize());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T11:34:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a task index to mark or unmark, updates the task\u0027s status,","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"     * shows a confirmation, and saves the changes.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"     * @param command The action to perform (MARK or UNMARK).","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"mark 1\").","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"    private void handleMarkUnmark(Command command, String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"        int index \u003d Parser.parseIndex(fullCommand, tasks.getSize());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"        if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"            ui.showTaskMarked(task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"        } else {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"            ui.showTaskUnmarked(task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a keyword, finds matching tasks, and displays them.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"     * This command does not modify the task list, so it does not save to the file.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"find book\").","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the keyword is missing from the input.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eric9010"},"content":"    private void handleFind(String fullCommand) throws MonetException {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eric9010"},"content":"        String keyword \u003d Parser.parseFind(fullCommand); // Parse the input to get the search keyword.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eric9010"},"content":"        TaskList foundTasks \u003d tasks.findTasks(keyword); // Execute the search logic using the TaskList.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eric9010"},"content":"        ui.showFoundTasks(foundTasks); // Display the results using the UI.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eric9010"},"content":"     * Creates an instance of Monet and starts the run loop.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eric9010"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eric9010"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eric9010"},"content":"        new Monet(\"./data/monet.txt\").run();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false}],"authorContributionMap":{"Eric9010":170}},{"path":"src/main/java/monet/MonetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Custom exception class for the Monet application.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * Used for all application-specific errors, such as parsing errors or invalid user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class MonetException extends Exception {","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new MonetException with the specified detail message.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    public MonetException(String message) {","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"        super(message);","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false}],"authorContributionMap":{"Eric9010":16}},{"path":"src/main/java/monet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * Contains methods to parse various types of commands and their arguments.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Parses the user\u0027s full input string to determine the command type.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full line of input from the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     * @return The corresponding Command enum.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    public static Command parseCommand(String fullInput) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"        String commandWord \u003d fullInput.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"            return Command.LIST;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"            return Command.MARK;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"            return Command.UNMARK;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"            return Command.DELETE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"            return Command.TODO;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        case \"event\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            return Command.EVENT;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            return Command.BYE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        case \"find\":","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"            return Command.FIND;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for a \"todo\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"todo \u003cdescription\u003e\"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the description is empty.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"    public static String parseTodo(String fullInput) throws MonetException {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"        // Splits the input into 2 parts: the command word and the rest of the string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"        // The limit \u00272\u0027 ensures the description, which may contain spaces, is kept as one part.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description for a todo cannot be empty.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"        return parts[1];","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for a \"deadline\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"     * @return A String array containing the description [0] and the deadline string [1].","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the format is incorrect or parts are missing.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"    public static String[] parseDeadline(String fullInput) throws MonetException {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description for a deadline cannot be empty.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"        // The description part is then split by the \"/by\" delimiter to separate content and date.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"        String[] deadlineParts \u003d parts[1].split(\" /by \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"        return deadlineParts;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for an \"event\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"     * @return A String array containing the description [0], from-time [1], and to-time [2].","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the format is incorrect or parts are missing.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"    public static String[] parseEvent(String fullInput) throws MonetException {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description for an event cannot be empty.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"        String[] eventParts \u003d parts[1].split(\" /from \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"        if (eventParts.length \u003c 2 || eventParts[0].trim().isEmpty() || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"        if (timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid event format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"        // Return the three distinct parts: description, from-time, and to-time.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"        return new String[]{eventParts[0].trim(), timeParts[0].trim(), timeParts[1].trim()};","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"     * Parses the keyword for a \"find\" command.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"find \u003ckeyword\u003e\"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"     * @return The keyword to search for.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the keyword is missing.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"    public static String parseFind(String fullInput) throws MonetException {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Please enter a keyword to find.\");","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"        return parts[1].trim();","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"    // Parses the task index from commands like \"mark\", \"unmark\", and \"delete\"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"     * Parses the task index from commands like \"mark\", \"unmark\", and \"delete\".","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string (e.g., \"mark 2\").","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"     * @param listSize The current size of the task list for validation.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"     * @return The 0-based index of the task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the index is not a number or is out of bounds.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"    public static int parseIndex(String fullInput, int listSize) throws MonetException {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Please specify the task number.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"            // Convert the user-provided 1-based index to a 0-based index for the ArrayList.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"            int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"            // Validate that the index is within the bounds of the current task list size.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"            if (index \u003c 0 || index \u003e\u003d listSize) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"                throw new MonetException(\"monet.Task number not found. Please provide a valid task number.\");","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"            return index;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"            // Catch cases where the user types e.g., \"mark one\" instead of \"mark 1\".","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Please enter a valid number for the task index.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false}],"authorContributionMap":{"Eric9010":153}},{"path":"src/main/java/monet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":" * Handles loading tasks from and saving tasks to a file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * @param filePath The path of the file to be used for storing tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException if the file contains corrupted data.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"    public ArrayList\u003cTask\u003e load() throws MonetException{","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        // Create a File object from the given path to interact with the file system.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"            return loadedTasks; // Return empty list if no file exists.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"                if (line.trim().isEmpty()) { // Skip any empty lines that might be in the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"                    continue;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"                // Parse the line and add the resulting Task object to the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"                Task task \u003d parseTaskFromFileString(line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"            // Catch cases where the file is not found, returns an empty list instead.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"File not found, will be created on first save.\");","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"        return loadedTasks;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"     * Saves the current list of tasks to the storage file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The ArrayList of tasks to save.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error writing to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"        // Ensures that the parent directory (e.g., \"./data\") exists.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        // If it doesn\u0027t, it will be created. Prevents crashes on the first run.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"            // Convert each task to its machine-readable file format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"            fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"        fw.close();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * Parses a single line from the file into a Task object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     * This is a private helper method for the load() function.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"     * @param line The string line from the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"     * @return The corresponding Task object, or null if the line is corrupted.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException if the line contains a known but malformed task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"    private Task parseTaskFromFileString(String line) throws MonetException {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"Warning: Corrupted line in data file will be ignored: \" + line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"            return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"        Task task;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"            case \"T\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"                break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"            case \"D\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"                // Add specific validation for deadline format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"                    System.out.println(\"Warning: Corrupted deadline task in data file will be ignored: \" + line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"                    return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"                break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"            case \"E\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"                // Add specific validation for event format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"                    System.out.println(\"Warning: Corrupted event task in data file will be ignored: \" + line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"                    return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"                break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"            default:","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"                // If the type is unknown, it\u0027s also a corrupted line.","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"                System.out.println(\"Warning: Unknown task type in data file will be ignored: \" + line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"                return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"        return task;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false}],"authorContributionMap":{"Eric9010":133}},{"path":"src/main/java/monet/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents a generic task. This is an abstract base class for specific task types","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * like Todo, Deadline, and Event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T12:04:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T12:04:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        return this.description;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     * Returns a status icon representing whether the task is done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @return \"X\" if the task is done, \" \" (space) otherwise.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X or leave it blank","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"     * Returns a machine-readable string representation of the task for saving to a file.","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"     * This method must be implemented by all subclasses.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false}],"authorContributionMap":{"Eric9010":54}},{"path":"src/main/java/monet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Contains the task list and provides operations to manipulate it.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * This class encapsulates the ArrayList of tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * Constructs a TaskList with pre-loaded tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @param tasks An ArrayList of tasks to initialize the list with.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"     * Removes a task from the task list at a specified index.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"     * @param index The 0-based index of the task to be removed.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"     * @return The Task object that was removed from the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     * The search is case-sensitive.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"     * @return A new TaskList containing only the matching tasks.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        ArrayList\u003cTask\u003e foundTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"        // Iterate through every task in the list.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"            // Check if the task\u0027s description contains the keyword.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"                foundTasksList.add(task);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"        // Return a new TaskList composed of the found tasks.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"        return new TaskList(foundTasksList);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false}],"authorContributionMap":{"Eric9010":80}},{"path":"src/main/java/monet/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents a simple \"To-do\" task without any specific date/time.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"        super(description);","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":26}},{"path":"src/main/java/monet/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Handles all user interface interactions. This includes printing messages to the console","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * and reading user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new Ui task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     * Initialises scanner to allow user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     * Reads the next full line of input from the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @return The user\u0027s input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"     * Prints the welcome message when the chatbot starts.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Hello! I\u0027m monet.Monet\");","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        divider();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"     * Prints the goodbye message when the chatbot exits.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"     * Prints an error message.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Sorry! \" + message);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     * Prints a divider for visual separation.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    public void divider(){","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * Prints the list of tasks to the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"Your task list is empty. Add some tasks!\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"            return;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"  \" + (i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"     * Prints a confirmation message after a task has been successfully added.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * @param taskCount The total number of tasks in the list now.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"     * Prints a confirmation message after a task has been deleted.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"     * @param taskCount The total number of tasks remaining in the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"    public void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"     * Prints a confirmation message after a task has been marked as done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"     * Prints a confirmation message after a task has been marked as not done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"     * Prints the list of tasks found by a search.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"     * Displays a special message if no tasks are found.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The TaskList containing the tasks to be displayed.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"    public void showFoundTasks(TaskList tasks) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\" No tasks matching your keyword were found.\");","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"            return;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"  \" + (i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false}],"authorContributionMap":{"Eric9010":136}},{"path":"src/test/java/monet/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    public void parseDeadline_validInput_success() throws MonetException {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"        // Test a valid input","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"        String input \u003d \"deadline return book /by 2025-08-30 1800\";","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"        String[] result \u003d Parser.parseDeadline(input);","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"        assertArrayEquals(new String[]{\"return book\", \"2025-08-30 1800\"}, result);","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    public void parseDeadline_missingByKeyword_exceptionThrown() {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        // Test a command that is missing the \"/by\" keyword","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"        String input \u003d \"deadline return book 2025-08-30 1800\";","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        // Assert that executing this parse throws a MonetException","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"        MonetException exception \u003d assertThrows(MonetException.class, () -\u003e {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"            Parser.parseDeadline(input);","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        });","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"        // Check if the error message is what we expect","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"        assertEquals(\"Invalid deadline format. Use: deadline \u003cdescription\u003e /by \u003cdate\u003e\", exception.getMessage());","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    public void parseDeadline_missingDescription_exceptionThrown() {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        // Test a command where the description is missing","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        String input \u003d \"deadline /by 2025-08-30 1800\";","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        assertThrows(MonetException.class, () -\u003e {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"            Parser.parseDeadline(input);","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        });","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false}],"authorContributionMap":{"Eric9010":38}},{"path":"src/test/java/monet/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    public void deleteTask_validIndex_success() throws MonetException {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"        // Set up the initial state","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(new Todo(\"task 2\"));","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(new Todo(\"task 3\"));","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        // Execute the method to be tested","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"        tasks.deleteTask(1); // Delete \"task 2\"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        // Assert the expected outcome","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"        assertEquals(2, tasks.getSize()); // Check if the size is correct","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        assertEquals(\"[T][ ] task 3\", tasks.getTask(1).toString()); // Check if \"task 3\" shifted to the correct index","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    @Test","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    public void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"        // Set up","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(new Todo(\"task 1\"));","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"        // Assert that trying to delete a task at an out-of-bounds index","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        // throws the expected exception from the underlying ArrayList","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"            tasks.deleteTask(1); // Index 1 is out of bounds for a list of size 1","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"        });","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-30T09:59:06","isFullCredit":false}],"authorContributionMap":{"Eric9010":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"todo read book","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"mark 1","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"delete 2","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"delete 99","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"bye","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false}],"authorContributionMap":{"Eric9010":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"java -classpath ..\\bin monet.Monet \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Eric9010":1,"-":20}}]
