[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"# monet.Monet project template","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"1. After that, locate the `src/main/java/monet.Monet.java` file, right-click it, and choose `Run monet.Monet.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"Eric9010":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-04T12:36:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T23:37:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"checkstyle {","lastModifiedDate":"2025-09-04T12:36:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-04T12:36:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-04T12:36:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-04T12:36:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"    mainClass.set(\"monet.Launcher\")","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    // mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2025-09-05T00:21:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"sourceSets {","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"    main {","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"        resources {","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"            // This line tells Gradle to treat everything in this directory as a resource.","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"            srcDirs \u003d [\"src/main/resources\"]","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"Eric9010":31,"-":40}},{"path":"data/monet.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"E | 0 | HIGH | midterm exam | 2025-10-20T09:00 | 2025-10-20T11:00","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"T | 1 | LOW | read book","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"D | 0 | MEDIUM | return book | 2025-09-26T17:00","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false}],"authorContributionMap":{"Eric9010":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"# Monet User Guide 🤖🎨","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"Welcome to **Monet**\\! Monet is a personal assistant chatbot that helps you manage your tasks, deadlines, and events ","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"directly from the command line. ","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"Its clean, text-based interface is designed for speed and efficiency, accompanied by a host of helpful features","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"and beautiful art.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"### Quick Start","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"1.  Download the `monet.jar` file from the project\u0027s ","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"[releases page](https://www.google.com/search?q\u003dhttps://github.com/Eric9010/ip/releases).","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"2.  Place the JAR file in an empty folder.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"3.  Open a command prompt or terminal in that folder.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"4.  Run the application with the following command:","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    ```","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    java -jar \"monet.jar\"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    ```","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"-----","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"## Features and Commands","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"Monet understands a variety of commands to help you manage your tasks.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"### Adding a Task","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"You can add three types of tasks: **To-Dos**, **Deadlines**, and **Events**. ","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"You can also assign a priority to any task when you create it.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"**A Note on Priority:**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"You can optionally set a priority for any new task using the `/p \u003clevel\u003e` flag at the end of the command.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"* `/p 1`: **High** Priority","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"* `/p 2`: **Medium** Priority","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"* `/p 3`: **Low** Priority","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"If you don\u0027t specify a priority, it will default to **Medium**.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"#### **`todo`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"Adds a simple to-do task that doesn\u0027t have a specific date or time.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"* **Format:** `todo \u003cdescription\u003e [/p \u003clevel\u003e]`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"* **Example:** `todo read book /p 3`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"#### **`deadline`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"Adds a task that needs to be done before a specific date and time.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"* **Format:** `deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e [/p \u003clevel\u003e]`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"* **Example:** `deadline submit report /by 2025-10-15 2359 /p 1`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"#### **`event`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"Adds a task that has a specific start and end time.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"* **Format:** `event \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e [/p \u003clevel\u003e]`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"* **Example:** `event team meeting /from 2025-09-15 1400 /to 2025-09-15 1600 /p 1`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"-----","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"### Managing Your Tasks","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"These commands help you view and modify your existing tasks.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"#### **`list`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"Displays all the tasks currently in your list.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"* **Format:** `list`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"* **Example:** `list`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"#### **`mark` and `unmark`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"Mark a task as complete or incomplete. The `\u003ctask_number\u003e` corresponds to the number shown in the `list` command.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"* **Format:** `mark \u003ctask_number\u003e` or `unmark \u003ctask_number\u003e`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"* **Example:** `mark 2`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"#### **`delete`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"Removes a task from your list permanently.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"* **Format:** `delete \u003ctask_number\u003e`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"* **Example:** `delete 3`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"-----","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"### Finding Tasks","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"If your list gets long, you can search for tasks by keyword or filter them by priority.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"#### **`find`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"Searches for all tasks whose description contains a specific keyword.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"* **Format:** `find \u003ckeyword\u003e`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"* **Example:** `find book`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"#### **`priority`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"Displays all tasks that match a given priority level.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"* **Format:** `priority \u003clevel\u003e` (1\u003dHigh, 2\u003dMedium, 3\u003dLow)","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"* **Example:** `priority 1`","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"-----","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"### Exiting the Program","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"#### **`bye`**","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"Exits the Monet chatbot.","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"-----","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"## Command Summary","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"Here is a quick reference table for all available commands:","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"| Command | Format | Example |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"| :--- | :--- | :--- |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"| `todo` | `todo \u003cdescription\u003e [/p \u003clevel\u003e]` | `todo read book /p 3` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"| `deadline` | `deadline \u003cdesc\u003e /by \u003cdate\u003e [/p \u003clevel\u003e]` | `deadline return book /by 2025-12-02 1800` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"| `event` | `event \u003cdesc\u003e /from \u003cdate\u003e /to \u003cdate\u003e [/p \u003clevel\u003e]`| `event project meeting /from 2025-09-15 1400 /to 1600 /p 1` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"| `list` | `list` | `list` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"| `mark` | `mark \u003ctask_number\u003e` | `mark 1` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"| `unmark` | `unmark \u003ctask_number\u003e` | `unmark 2` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"| `delete` | `delete \u003ctask_number\u003e` | `delete 1` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"| `find` | `find \u003ckeyword\u003e` | `find report` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"| `priority` | `priority \u003clevel\u003e` | `priority 1` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"| `bye` | `bye` | `bye` |","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false}],"authorContributionMap":{"Eric9010":113,"-":19}},{"path":"src/main/java/monet/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents the set of valid commands for the Monet chatbot.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"public enum Command {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"    LIST,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    MARK,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    UNMARK,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    DELETE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    TODO,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    DEADLINE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    EVENT,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    BYE,","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    FIND,","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    PRIORITY,","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    UNKNOWN // Represents an invalid command","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false}],"authorContributionMap":{"Eric9010":18}},{"path":"src/main/java/monet/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" * Represents a task with a deadline. It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    // Defines the expected format for user date/time input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    // Defines the desired format for displaying the date/time to the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Deadline task from user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * Parses the date string into a LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     * @param byString The date/time string for the deadline.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the deadline task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the date/time string is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    public Deadline(String description, String byString, Priority priority) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        super(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"            // Attempt to parse the user-provided date string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            this.by \u003d LocalDateTime.parse(byString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            // If parsing fails, throw a custom exception with a relevant message.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid date format f\u0027r deadline.  Prithee useth \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Deadline task when loading from the data file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @param by A pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the deadline task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    public Deadline(String description, LocalDateTime by, Priority priority) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        super(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"        // Formats the LocalDateTime object into a user-friendly string for display.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"        // Converts the task to a machine-readable string for saving to file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + priority.name() + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":61}},{"path":"src/main/java/monet/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" * Represents a task that is an event with a start and end time. It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    // Defines the expected format for user date/time input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    // Defines the desired format for displaying the date/time to the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"     * Constructs an Event task from user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     * @param fromString The start date/time string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     * @param toString The end date/time string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the event.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If any date/time string is in an invalid format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    public Event(String description, String fromString, String toString, Priority priority) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        super(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            this.from \u003d LocalDateTime.parse(fromString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"            this.to \u003d LocalDateTime.parse(toString.trim(), INPUT_FORMATTER);","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid date format f\u0027r event. Prithee useth \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     * Constructs an Event task when loading from the data file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @param from The start time as a pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * @param to The end time as a pre-parsed LocalDateTime object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the event.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, Priority priority) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        super(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(OUTPUT_FORMATTER)","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"                + \" to: \" + to.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + priority.name()","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"                + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":63}},{"path":"src/main/java/monet/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"public class Launcher {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":12}},{"path":"src/main/java/monet/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"import monet.gui.MainWindow;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":" * A GUI for Monet using FXML.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    // Instantiate the Monet application logic","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    private Monet monet \u003d new Monet(\"./data/monet.txt\");","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"            stage.setTitle(\"Monet\");","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"            // Give the controller access to the Monet instance","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMonet(monet);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            stage.show();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":36}},{"path":"src/main/java/monet/Monet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T22:34:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T11:34:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Main class for the Monet chatbot application.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * Supports a GUI interface using the UI class for displayed messages.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class Monet {","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T22:34:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"     * Constructor for Monet.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    public Monet(String filePath) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        ui \u003d new Ui(); // Instantiate the Ui class","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"        } catch (MonetException e) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"     * Returns the welcome message for the chatbot.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"     * @return A welcome string.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"     * Processes user input and returns the chatbot\u0027s response as a string using Ui class.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     * Main entry point for the GUI.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @return The chatbot\u0027s response string.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"            Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"            switch (command) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"            case BYE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"                return ui.getGoodbyeMessage();","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"            case LIST:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"                return ui.getTaskListMessage(tasks);","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"            case MARK:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"            case UNMARK:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"                return handleMarkUnmark(command, input);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"            case DELETE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"                return handleDelete(input);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"            case TODO:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"            case DEADLINE:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"            case EVENT:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"                return handleAddTask(command, input);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"            case FIND:","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"                return handleFind(input);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"            case PRIORITY: // NEW: Handle the priority command","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"                return handlePriority(input);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"            default:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"                return \"I knoweth not what yond means.  Prithee checketh thy did input!\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        } catch (MonetException | IOException e) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"            return ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a new task, adds it to the task list,","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"     * shows a confirmation to the user, and saves the updated list to the file.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"     * @param command The type of task to add (TODO, DEADLINE, or EVENT).","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"    private String handleAddTask(Command command, String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"        Task newTask;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"        // Parse the user input to create the correct task type.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"        switch (command) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"        case TODO: {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"            Object[] todoDetails \u003d Parser.parseTodo(fullCommand);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"            String description \u003d (String) todoDetails[0];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"            Priority priority \u003d (Priority) todoDetails[1];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Todo(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"        case DEADLINE: {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"            Object[] deadlineDetails \u003d Parser.parseDeadline(fullCommand);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"            String description \u003d (String) deadlineDetails[0];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"            String byString \u003d (String) deadlineDetails[1];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"            Priority priority \u003d (Priority) deadlineDetails[2];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Deadline(description, byString, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"        case EVENT: {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"            Object[] eventDetails \u003d Parser.parseEvent(fullCommand);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"            String description \u003d (String) eventDetails[0];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"            String fromString \u003d (String) eventDetails[1];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"            String toString \u003d (String) eventDetails[2];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"            Priority priority \u003d (Priority) eventDetails[3];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"            newTask \u003d new Event(description, fromString, toString, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid task typeth f\u0027r adding.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"        tasks.addTask(newTask); // Execute the action: Add the task to the list.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks()); // Save the updated list to disk.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"        return ui.getTaskAddedMessage(newTask, tasks.getSize()); // Show UI confirmation.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"     * Handles the entire workflow for deleting a task.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"     * This involves three steps:","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"     * 1. Parsing the user input to get the task index.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"     * 2. Executing the deletion on the TaskList.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"     * 3. Saving the updated TaskList to storage.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"delete 2\").","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted confirmation message from the Ui.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"    private String handleDelete(String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"        int index \u003d Parser.parseIndex(fullCommand, tasks.getSize());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"        Task deletedTask \u003d tasks.deleteTask(index);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"        return ui.getTaskDeletedMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T11:34:36","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a task index to mark or unmark, updates the task\u0027s status,","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"     * shows a confirmation, and saves the changes.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"     * @param command The action to perform (MARK or UNMARK).","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"mark 1\").","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the user input is in an invalid format.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error saving the tasks to the file.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"    private String handleMarkUnmark(Command command, String fullCommand) throws MonetException, IOException {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"        int index \u003d Parser.parseIndex(fullCommand, tasks.getSize());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"        String response;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"        if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eric9010"},"content":"            response \u003d ui.getTaskMarkedMessage(task);","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eric9010"},"content":"        } else {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eric9010"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eric9010"},"content":"            response \u003d ui.getTaskUnmarkedMessage(task);","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eric9010"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eric9010"},"content":"        return response;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for a keyword, finds matching tasks, and displays them.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eric9010"},"content":"     * This command does not modify the task list, so it does not save to the file.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"find book\").","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the keyword is missing from the input.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eric9010"},"content":"    private String handleFind(String fullCommand) throws MonetException {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Eric9010"},"content":"        String keyword \u003d Parser.parseFind(fullCommand);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Eric9010"},"content":"        TaskList foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Eric9010"},"content":"        return ui.getFoundTasksMessage(foundTasks);","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Eric9010"},"content":"     * Parses the user input for the \u0027priority\u0027 command, filters the task list,","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Eric9010"},"content":"     * and returns a formatted string of the results.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Eric9010"},"content":"     * @param fullCommand The full user input string (e.g., \"priority 1\").","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Eric9010"},"content":"     * @return A string containing the list of tasks with the specified priority.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the priority level is invalid.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Eric9010"},"content":"    private String handlePriority(String fullCommand) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Eric9010"},"content":"        Priority priority \u003d Parser.parsePriorityLevel(fullCommand);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Eric9010"},"content":"        TaskList filteredTasks \u003d tasks.filterByPriority(priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Eric9010"},"content":"        return ui.showPriorityTaskList(priority, filteredTasks); // Assumes you added this to Ui","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T11:01:18","isFullCredit":false}],"authorContributionMap":{"Eric9010":189}},{"path":"src/main/java/monet/MonetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Custom exception class for the Monet application.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * Used for all application-specific errors, such as parsing errors or invalid user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class MonetException extends Exception {","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new MonetException with the specified detail message.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * @param message The detail message for the exception.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    public MonetException(String message) {","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"        super(message);","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T19:52:14","isFullCredit":false}],"authorContributionMap":{"Eric9010":16}},{"path":"src/main/java/monet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import javafx.util.Pair;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * Contains methods to parse various types of commands and their arguments.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * Parses the user\u0027s full input string to determine the command type.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full line of input from the user.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     * @return The corresponding Command enum.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public static Command parseCommand(String fullInput) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        String commandWord \u003d fullInput.split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        case \"list\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"            return Command.LIST;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"            return Command.MARK;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"            return Command.UNMARK;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"            return Command.DELETE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"            return Command.TODO;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        case \"event\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            return Command.EVENT;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"            return Command.BYE;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        case \"find\":","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"            return Command.FIND;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"        case \"priority\": // NEW: Handle the priority command","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"            return Command.PRIORITY;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"     * A private helper method to find and extract the priority flag from a command\u0027s content.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"     * @param content The part of the user command after the main command word.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"     * @return A Pair containing the content with the priority flag removed, and the parsed Priority.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the priority level is not a valid number.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    private static Pair\u003cString, Priority\u003e extractPriority(String content) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"        // Splits the content by the \"/p\" flag.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d content.split(\" /p \");","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"            // Priority flag exists","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"            String remainingContent \u003d parts[0].trim();","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"            try {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"                int level \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"                return new Pair\u003c\u003e(remainingContent, Priority.of(level));","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"                throw new MonetException(\"Priority level must be a number (1, 2, or 3).\");","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"        } else {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"            // No priority flag, return the original content and default priority","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"            return new Pair\u003c\u003e(content, Priority.MEDIUM);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for a \"todo\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"to do [description] /p [level]\"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"     * @return The description of the todo task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the description is empty.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"    public static Object[] parseTodo(String fullInput) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"        // Splits the input into 2 parts: the command word and the rest of the string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"        // The limit \u00272\u0027 ensures the description, which may contain spaces, is kept as one part.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description for a todo cannot be empty.\");","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"        String content \u003d parts[1];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"        Pair\u003cString, Priority\u003e result \u003d extractPriority(content);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"        return new Object[]{result.getKey(), result.getValue()};","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for a \"deadline\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"deadline [description] /by [date] /p [level]\"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"     * @return A String array containing the description [0] and the deadline string [1].","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the format is incorrect or parts are missing.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"    public static Object[] parseDeadline(String fullInput) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description f\u0027r a deadline cannot beest barren.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"        Pair\u003cString, Priority\u003e contentAndPriority \u003d extractPriority(parts[1]);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"        String content \u003d contentAndPriority.getKey();","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"        Priority priority \u003d contentAndPriority.getValue();","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"        // The description part is then split by the \"/by\" delimiter to separate content and date.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"        String[] deadlineParts \u003d content.split(\" /by \", 2);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[0].trim().isEmpty() || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid format. Prithee useth: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"        return new Object[]{deadlineParts[0].trim(), deadlineParts[1].trim(), priority};","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"     * Parses the arguments for an \"event\" command.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"event [description] /from [yyyy-MM-dd HHmm] /to [yyyy-MM-dd HHmm]\"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"     * @return A String array containing the description [0], from-time [1], and to-time [2].","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the format is incorrect or parts are missing.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"    public static Object[] parseEvent(String fullInput) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"The description f\u0027r an event cannot beest barren.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"        Pair\u003cString, Priority\u003e contentAndPriority \u003d extractPriority(parts[1]);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"        String content \u003d contentAndPriority.getKey();","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"        Priority priority \u003d contentAndPriority.getValue();","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"        String[] eventParts \u003d content.split(\" /from \", 2);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"        if (eventParts.length \u003c 2 || eventParts[0].trim().isEmpty() || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid format. Prithee useth: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"        String[] timeParts \u003d eventParts[1].split(\" /to \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"        if (timeParts.length \u003c 2 || timeParts[0].trim().isEmpty() || timeParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Invalid format. Prithee useth: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"        return new Object[]{eventParts[0].trim(), timeParts[0].trim(), timeParts[1].trim(), priority};","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"     * Parses the keyword for a \"find\" command.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"     * Expected format: \"find [keyword]\"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"     * @return The keyword to search for.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the keyword is missing.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eric9010"},"content":"    public static String parseFind(String fullInput) throws MonetException {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Prithee ent\u0027r a keyword to findeth.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eric9010"},"content":"        return parts[1].trim();","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eric9010"},"content":"    // Parses the task index from commands like \"mark\", \"unmark\", and \"delete\"","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eric9010"},"content":"     * Parses the task index from commands like \"mark\", \"unmark\", and \"delete\".","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input string (e.g., \"mark 2\").","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eric9010"},"content":"     * @param listSize The current size of the task list for validation.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eric9010"},"content":"     * @return The 0-based index of the task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the index is not a number or is out of bounds.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Eric9010"},"content":"    public static int parseIndex(String fullInput, int listSize) throws MonetException {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Prithee specifyeth the task number.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Eric9010"},"content":"            // Convert the user-provided 1-based index to a 0-based index for the ArrayList.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Eric9010"},"content":"            int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Eric9010"},"content":"            // Validate that the index is within the bounds of the current task list size.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Eric9010"},"content":"            if (index \u003c 0 || index \u003e\u003d listSize) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Eric9010"},"content":"                throw new MonetException(\"Task number not hath found.  Prithee provideth a valid task number\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Eric9010"},"content":"            return index;","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Eric9010"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Eric9010"},"content":"            // Catch cases where the user types e.g., \"mark one\" instead of \"mark 1\".","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Prithee ent\u0027r a valid number f\u0027r the task index\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Eric9010"},"content":"     * Parses the priority level from a \"priority\" command.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Eric9010"},"content":"     * @param fullInput The full user input (e.g., \"priority 1\").","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Eric9010"},"content":"     * @return The Priority enum.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException If the level is missing or not a number.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Eric9010"},"content":"    public static Priority parsePriorityLevel(String fullInput) throws MonetException {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d fullInput.split(\" \", 2);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Prithee specifyeth a priority leveleth (1\u003dHigh, 2\u003dMedium, 3\u003dLow).\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Eric9010"},"content":"            int level \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Eric9010"},"content":"            return Priority.of(level);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Eric9010"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Eric9010"},"content":"            throw new MonetException(\"Priority leveleth might not but beest a number (1, 2, or 3).\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-28T00:19:09","isFullCredit":false}],"authorContributionMap":{"Eric9010":211}},{"path":"src/main/java/monet/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents the priority levels for a task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"public enum Priority {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"    HIGH, MEDIUM, LOW;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Converts an integer to a Priority level.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     * 1 \u003d HIGH, 2 \u003d MEDIUM, 3 \u003d LOW.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * Defaults to MEDIUM if the integer is invalid.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * @param level The priority level as an integer.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     * @return The corresponding Priority enum.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public static Priority of(int level) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        switch (level) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"        case 1:","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"            return HIGH;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        case 3:","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"            return LOW;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"            return MEDIUM; // Default to MEDIUM for 2 or any other number","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false}],"authorContributionMap":{"Eric9010":26}},{"path":"src/main/java/monet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.File;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":" * Handles loading tasks from and saving tasks to a file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":" *","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":" * The storage format is a plain text file where each line represents one task,","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":" * with fields separated by \" | \".","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":" *","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":" * Format Details:","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":" * - Todo:      T | [Status] | [Priority] | [Description]","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":" * - Deadline:  D | [Status] | [Priority] | [Description] | [ByDateTime]","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":" * - Event:     E | [Status] | [Priority] | [Description] | [FromDateTime] | [ToDateTime]","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":" *","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":" * Where:","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":" * - [Status] is \u00271\u0027 for done, \u00270\u0027 for not done.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":" * - [Priority] is one of \u0027HIGH\u0027, \u0027MEDIUM\u0027, \u0027LOW\u0027.","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":" * - DateTimes are stored in ISO 8601 format (e.g., 2025-09-12T18:00).","lastModifiedDate":"2025-09-18T12:19:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"public class Storage {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"     * @param filePath The path of the file to be used for storing tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException if the file contains corrupted data.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    public ArrayList\u003cTask\u003e load() throws MonetException {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        // Create a File object from the given path to interact with the file system.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"            return loadedTasks; // Return empty list if no file exists.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"                if (line.trim().isEmpty()) { // Skip any empty lines that might be in the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"                    continue;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"                // Parse the line and add the resulting Task object to the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"                Task task \u003d parseTaskFromFileString(line);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"                    loadedTasks.add(task);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"                }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"            // Catch cases where the file is not found, returns an empty list instead.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"            System.out.println(\"Fileth not hath found, shall beest did create on first saveth.\");","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        return loadedTasks;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"     * Saves the current list of tasks to the storage file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The ArrayList of tasks to save.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"     * @throws IOException If there is an error writing to the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"        // Ensures that the parent directory (e.g., \"./data\") exists.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"        // If it doesn\u0027t, it will be created. Prevents crashes on the first run.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"            // Convert each task to its machine-readable file format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"            fw.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"        fw.close();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"     * Parses a single line from the file into a Task object.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"     * This is a private helper method for the load() function.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"     * @param line The string line from the file.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"     * @return The corresponding Task object, or null if the line is corrupted.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"     * @throws MonetException if the line contains a known but malformed task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"    private Task parseTaskFromFileString(String line) throws MonetException {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"        // Format: T | 0 | MEDIUM | read book","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"        String warning \u003d \"Warning: Corrupted line in data fileth shall be ignored: \";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-11T21:06:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"        if (parts.length \u003c 4) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"            System.out.println(warning + line);","lastModifiedDate":"2025-09-11T21:06:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"            return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"        Priority priority \u003d Priority.valueOf(parts[2]); // Convert string back to enum","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"        String description \u003d parts[3];","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"        Task task;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"        // Use assert to validate the acceptable task types","lastModifiedDate":"2025-09-11T20:51:47","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"        assert type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\") : \"Unknown task typeth in fileth\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-11T20:51:47","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"        switch (type) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"        case \"T\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"            task \u003d new Todo(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"        case \"D\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"            // Add specific validation for deadline format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"            if (parts.length \u003c 5) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"                System.out.println(warning + line);","lastModifiedDate":"2025-09-11T21:06:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"                return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"            task \u003d new Deadline(description, by, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"        case \"E\":","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"            // Add specific validation for event format.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"            if (parts.length \u003c 6) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"                System.out.println(warning + line);","lastModifiedDate":"2025-09-11T21:06:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"                return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[5]);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"            task \u003d new Event(description, from, to, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"            break;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"        default:","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"            // If the type is unknown, it\u0027s also a corrupted line.","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"            System.out.println(warning + line);","lastModifiedDate":"2025-09-11T21:06:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"            return null;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"        return task;","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T12:23:28","isFullCredit":false}],"authorContributionMap":{"Eric9010":153}},{"path":"src/main/java/monet/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents a generic task. This is an abstract base class for specific task types","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * like Todo, Deadline, and Event.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T12:04:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T12:04:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    protected Priority priority;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:02:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * Constructs a general Task from user input.","lastModifiedDate":"2025-09-05T00:02:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T00:02:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-09-05T00:02:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:02:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    public Task(String description, Priority priority) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     * Overloaded constructor that defaults to MEDIUM priority.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        // By default, all tasks are created with MEDIUM priority unless specified.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        this(description, Priority.MEDIUM);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        return this.description;","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"     * Returns a status icon representing whether the task is done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"     * @return \"X\" if the task is done, \" \" (space) otherwise.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X or leave it blank","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"     * Returns a character representing the priority.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * @return \u0027H\u0027 for HIGH, \u0027M\u0027 for MEDIUM, \u0027L\u0027 for LOW.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"    public char getPriorityIcon() {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"        return this.priority.name().charAt(0);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"    public Priority getPriority() {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"        return this.priority;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"        return \"[\" + getPriorityIcon() + \"]\" + \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"     * Returns a machine-readable string representation of the task for saving to a file.","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"     * This method must be implemented by all subclasses.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted string suitable for file storage.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T12:03:34","isFullCredit":false}],"authorContributionMap":{"Eric9010":83}},{"path":"src/main/java/monet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * Contains the task list and provides operations to manipulate it.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" * This class encapsulates the ArrayList of tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     * Constructs a TaskList with pre-loaded tasks.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     * @param tasks An ArrayList of tasks to initialize the list with.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.size();","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     * @param task The Task object to be added to the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        this.tasks.add(task);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"     * Removes a task from the task list at a specified index.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"     * @param index The 0-based index of the task to be removed.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     * @return The Task object that was removed from the list.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"        // We assert that the index is valid. This should always be true.","lastModifiedDate":"2025-09-11T20:51:47","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size() : \"Task index is out of bounds\";","lastModifiedDate":"2025-09-11T20:51:47","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"     * Uses Java Streams.","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"     * @return A new TaskList containing only the matching tasks.","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"        // Convert the list to a stream, filter based on the condition, and collect the results into a new list.","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"        ArrayList\u003cTask\u003e foundTasksList \u003d this.tasks.stream()","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"        return new TaskList(foundTasksList);","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-11T21:20:35","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"     * Filters the current task list to find tasks of a specific priority level.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"     * The original list is not modified.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority level (e.g., HIGH, MEDIUM, LOW) to filter tasks by.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"     * @return A new TaskList containing only the tasks that match the specified priority.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"    public TaskList filterByPriority(Priority priority) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"        ArrayList\u003cTask\u003e foundTasksList \u003d this.tasks.stream()","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"                .filter(task -\u003e task.getPriority() \u003d\u003d priority)","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"        return new TaskList(foundTasksList);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T12:33:19","isFullCredit":false}],"authorContributionMap":{"Eric9010":92}},{"path":"src/main/java/monet/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":" * Represents a simple \"To-do\" task without any specific date/time.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":" * It is a subclass of Task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new Todo task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority of the todo task.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"    public Todo(String description, Priority priority) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"        super(description, priority);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    @Override","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + priority.name() + \" | \" + description;","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T07:37:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-22T13:31:05","isFullCredit":false}],"authorContributionMap":{"Eric9010":27}},{"path":"src/main/java/monet/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet;","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":" * Handles the formatting of messages to be displayed to the user.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":" * Now decoupled from the console and instead returns strings for GUI use.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"public class Ui {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"     * Constructs a new Ui task.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"     * Initialises scanner to allow user input.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    public Ui() {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"     * Formats multiple lines of text into a single, newline-separated string.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"     * Utility method that makes use of varargs.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"     * @param messages A variable number of strings to be joined.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"     * @return A single formatted string.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    private String formatMessages(String... messages) {","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"        // Inside the method, \u0027messages\u0027 is treated as a String array (String[]).","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"        for (int i \u003d 0; i \u003c messages.length; i++) {","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            sb.append(messages[i]);","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"            // Append a newline after each message except the last one.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            if (i \u003c messages.length - 1) {","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * Returns the welcome message for the chatbot.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * @return A welcome string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"        // Refactored: Uses the varargs helper for cleaner code.","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        return formatMessages(","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"                \"Hello! I\u0027m Monet\",","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"                \"What can i doth f\u0027r thee?\"","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"     * Returns the goodbye message for the chatbot.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     * @return A goodbye string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"        return \"Au revoir!\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted error message.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"     * @param message The error message content.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted error string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"        return \"Alas! \" + message;","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string representing the list of tasks.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The TaskList to be displayed.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted string of the tasks.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Eric9010"},"content":"    public String getTaskListMessage(TaskList tasks) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Eric9010"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Eric9010"},"content":"            return \"Thy task listeth is barren. Addeth some tasks!\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Eric9010"},"content":"        return formatTaskList(\"H\u0027re art the tasks in thy listeth:\", tasks);","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string for a newly added task.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Eric9010"},"content":"     * @param taskCount The new total number of tasks.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted confirmation string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Eric9010"},"content":"    public String getTaskAddedMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Eric9010"},"content":"        return formatMessages(","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Eric9010"},"content":"                \"Ay. I has\u0027t did add this task:\",","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Eric9010"},"content":"                \"   \" + task,","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Eric9010"},"content":"                \"Anon thee has\u0027t \" + taskCount + \" tasks in thy listeth.\"","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string for a deleted task.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Eric9010"},"content":"     * @param taskCount The new total number of tasks.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted confirmation string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Eric9010"},"content":"    public String getTaskDeletedMessage(Task task, int taskCount) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Eric9010"},"content":"        return formatMessages(","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Eric9010"},"content":"                \"Ay. I\u0027ve did remove this task:\",","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Eric9010"},"content":"                \"   \" + task,","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Eric9010"},"content":"                \"Anon thee has\u0027t \" + taskCount + \" tasks in thy listeth.\"","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string for a task marked as done.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted confirmation string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Eric9010"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Eric9010"},"content":"        return formatMessages(","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Eric9010"},"content":"                \"That\u0027s good that\u0027s gone! I\u0027ve did mark this task as done:\",","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Eric9010"},"content":"                \"   \" + task","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string for a task marked as not done.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Eric9010"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted confirmation string.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:10:29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Eric9010"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Eric9010"},"content":"        return formatMessages(","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Eric9010"},"content":"                \"\u0027Tis agreed, I\u0027ve unmark\u0027d this task:\",","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Eric9010"},"content":"                \"   \" + task","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T10:41:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Eric9010"},"content":"     * Returns a formatted string for the results of a find command.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The TaskList of found tasks.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted string of the search results.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Eric9010"},"content":"    public String getFoundTasksMessage(TaskList tasks) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Eric9010"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Eric9010"},"content":"            return \"Nay matching tasks w\u0027re hath found.\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Eric9010"},"content":"        return formatTaskList(\"H\u0027re art the matching tasks in thy listeth:\", tasks);","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Eric9010"},"content":"     * Formats a list of tasks filtered by priority into a display-ready string.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Eric9010"},"content":"     *","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Eric9010"},"content":"     * @param priority The priority level that was used for filtering, included in the message header.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Eric9010"},"content":"     * @param tasks The TaskList (presumably pre-filtered) containing the tasks to be displayed.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Eric9010"},"content":"     * @return A formatted string containing the list of tasks, or a \u0027not found\u0027 message.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Eric9010"},"content":"    public String showPriorityTaskList(Priority priority, TaskList tasks) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Eric9010"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Eric9010"},"content":"            return \"Nay tasks hath found with \" + priority.name() + \" priority.\";","lastModifiedDate":"2025-09-19T18:24:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Eric9010"},"content":"        // Formats and returns the full list of tasks.","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Eric9010"},"content":"        return formatTaskList(\"Showing tasks with \" + priority.name() + \" priority:\", tasks);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Eric9010"},"content":"    // Helper method to format the list of tasks","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Eric9010"},"content":"    private String formatTaskList(String header, TaskList tasks) {","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Eric9010"},"content":"        StringBuilder sb \u003d new StringBuilder(header);","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Eric9010"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Eric9010"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Eric9010"},"content":"            sb.append(\"  \").append(i + 1).append(\".\").append(tasks.getTask(i).toString());","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Eric9010"},"content":"            // Append a newline for each task except the last one","lastModifiedDate":"2025-09-12T12:47:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Eric9010"},"content":"            if (i \u003c tasks.getSize() - 1) {","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Eric9010"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Eric9010"},"content":"            }","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Eric9010"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-08-30T12:43:29","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-08-29T13:05:12","isFullCredit":false}],"authorContributionMap":{"Eric9010":174}},{"path":"src/main/java/monet/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet.gui;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":" * Represents a dialog box consisting of an ImageView and a Label.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"        try {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"        }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * Flips the dialog box to align to the left for the chatbot\u0027s messages.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"    private void flip() {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"    public static DialogBox getMonetDialog(String text, Image img) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"        db.flip();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"        return db;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":59}},{"path":"src/main/java/monet/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"package monet.gui;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"import monet.Monet;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"/**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":" * Controller for MainWindow. Provides the layout for the main window and handles user interaction.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":" */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Eric9010"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Eric9010"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Eric9010"},"content":"    private Monet monet;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Eric9010"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Eric9010"},"content":"    private Image monetImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/monet.png\"));","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Eric9010"},"content":"     * Initializes the controller.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Eric9010"},"content":"     * Binds the scroll pane to the dialog container\u0027s height.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Eric9010"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Eric9010"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Eric9010"},"content":"        // The welcome message will be shown after the monet instance is set.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Eric9010"},"content":"     * Sets the Monet instance for this controller.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Eric9010"},"content":"     * Shows welcome message.","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Eric9010"},"content":"     * @param m The Monet instance.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Eric9010"},"content":"    public void setMonet(Monet m) {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Eric9010"},"content":"        monet \u003d m;","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Eric9010"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Eric9010"},"content":"                DialogBox.getMonetDialog(monet.getWelcomeMessage(), monetImage)","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T00:46:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Eric9010"},"content":"    /**","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Eric9010"},"content":"     * Creates two dialog boxes, one for user input and one for Monet\u0027s reply.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Eric9010"},"content":"     * Appends them to the dialog container and clears the user input field.","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Eric9010"},"content":"     */","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Eric9010"},"content":"    @FXML","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Eric9010"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Eric9010"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Eric9010"},"content":"        String response \u003d monet.getResponse(input); // The core interaction","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Eric9010"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Eric9010"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Eric9010"},"content":"                DialogBox.getMonetDialog(response, monetImage)","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Eric9010"},"content":"        );","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Eric9010"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Eric9010"},"content":"    }","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Eric9010"},"content":"}","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" styleClass\u003d\"dialog-box\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" styleClass\u003d\"dialog-label\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"            \u003cfont\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"                \u003cFont name\u003d\"French Script MT\" size\u003d\"24.0\" /\u003e","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"200.0\" fitWidth\u003d\"150.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Eric9010"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"1000.0\" prefWidth\u003d\"1000.0\" styleClass\u003d\"background\" stylesheets\u003d\"@style.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"monet.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Eric9010"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"880.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-18T22:46:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Eric9010"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"880.0\" layoutY\u003d\"960.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"120.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Eric9010"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"960.0\" prefWidth\u003d\"1000.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Eric9010"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Eric9010"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"960.0\" prefWidth\u003d\"1000.0\" /\u003e","lastModifiedDate":"2025-09-19T18:48:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Eric9010"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Eric9010"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Eric9010"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-05T00:19:41","isFullCredit":false}],"authorContributionMap":{"Eric9010":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eric9010"},"content":"todo read book","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Eric9010"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Eric9010"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Eric9010"},"content":"mark 1","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Eric9010"},"content":"delete 2","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Eric9010"},"content":"list","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Eric9010"},"content":"delete 99","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Eric9010"},"content":"bye","lastModifiedDate":"2025-08-27T23:56:59","isFullCredit":false}],"authorContributionMap":{"Eric9010":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Eric9010"},"content":"java -classpath ..\\bin monet.Monet \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-29T13:22:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Eric9010":1,"-":20}}]
