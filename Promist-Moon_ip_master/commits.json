{"authorDailyContributionsMap":{"Promist-Moon":[{"date":"2025-08-19T00:00:00","commitResults":[{"hash":"aa94fd762331dad595c95c335c0c01e16900a401","isMergeCommit":false,"messageTitle":"Chatbot for iP needs initial skeletal setup","messageBody":"Duke was the default setup for CS2103T\u0027s iP project, chatbot needs to be personalised\n\nRename Duke.java to Locky.java and update greeting and exit messages.\n\nLocky is short and memorable and tied to the Gen-Z phrase \"lock in\" making it effective for a study to-do chatbot.\n\nAll traces of \"Duke\" are removed from the codebase to avoid confusion\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":10},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"f76d10bb1c0529d155a34039d25762f1efe1392c","isMergeCommit":false,"messageTitle":"The chatbot only greets the user once and then waits for input, but does not properly echo commands or exit cleanly when \"bye\" is typed.","messageBody":"Without a loop that echoes the commands, the chatbot will not meet Level 1 requirements\n\nAn input loop that echoes any user command back to the console is implemented, and \"bye\" is added as a termination connection.\n\nEchoing commands is the most rudimentary way to assess the chatbot\u0027s interaction with user response, and adding a termination condition ensures it does not run forever.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}},{"hash":"463df8b484c137480464c50c1073eed10fe7392f","isMergeCommit":false,"messageTitle":"The chatbot currently has no way to retain previous commands and list them out.","messageBody":"The chatbot should be able to store commands in a list and return them as prompted, in order to meet Duke Level-2 requirements.\n\nImplement an ArrayList to store user-entered text, update the loop to add non-list commands to the list, and handle list command to print all stored tasks.\n\nArrayList has no fixed limit on the number of items in a list, hence can expand dynamically. Additional conditional should be implemented to add list feature.\n\nEach added task is acknowledged with a confirmation message, and tasks are displayed in a numbered format when \"list\" is entered.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}}]},{"date":"2025-08-21T00:00:00","commitResults":[{"hash":"b67f4d041311f72a49382d03fc4bfdacf21d85ed","isMergeCommit":false,"messageTitle":"Add the ability to mark tasks as done or undone to Locky.","messageBody":"Mark tasks as done to meet Level-3 specs in CS2103T iP\n\nIntroduce a class Task with properties description and isDone, and use mark and unmark markers to mark a task as done.\n\nUse a Task class to employ encapsulation to ensure code remains modular and external code does not interfere with internal.\n\nDisplay tasks with internal toString() method with [X] and [] markers.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":3}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"2a590be7945e9b01634c03915e34995c08c20e73","isMergeCommit":false,"messageTitle":"Add support for three different task types: Todo, Deadline, and Event","messageBody":"Meet iP requirements of CS2103T Level 4.\n\nApply inheritance by creating 3 subclasses of superclass Task, with Deadline taking in extra parameter deadline and Event extra parameters start and end.\n\nAdd additional support for extracting deadlines through importing Java regex library.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":94,"deletions":16}}},{"hash":"9d256dcf4af306a13d305928032e5fdd076c3514","isMergeCommit":false,"messageTitle":"Add A-TextUiTesting with input/output redirection","messageBody":"Include input.txt and EXPECTED.txt within text-ui-test directory with runtest.sh scripts\n\nVerify chatbot responses to common commands and reduce need for manual testing.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"734e2f8cb63c439e8ac029bf1b3306e92afe24c9","isMergeCommit":false,"messageTitle":"Add error handling for invalid task inputs","messageBody":"Meet CS2103T iP Level 5 requirements.\n\nImplement the extension A-Exceptions by creating new LockyException class.\nCreate new function handleLine that throws LockyException for various incorrect inputs.\nUpdate input.txt and EXPECTED.txt to handle errors.\n\nDedicated LockyException communicates user-specific error in Locky, not generic runtime failure.\nNew function handleLine allows separation of concerns by isolating a function for parsing and validation, hence easier future maintenance of code.\nEnsure Locky is tested for invalid test cases.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":118,"deletions":60}}},{"hash":"e5193919d74f74e188179505a1e52f871a56bbf5","isMergeCommit":false,"messageTitle":"Add delete task feature to Locky.","messageBody":"Meet Level 6 requirements in CS2103T iP Level-6.\n\nAdd switch case \"delete\" to handleLine, within mark and unmark case.\n\nThis keeps parser patterns consistent. Keep in \"mark\" \"unmark\" case to reduce redundancy in error handling as all features require a task number.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":5,"deletions":1}}},{"hash":"4052ecb05a222bd871c4aa934bbc54c079ff9492","isMergeCommit":false,"messageTitle":"Fix inputs and expected outputs with updated test cases.","messageBody":"Previously, no error handling for new \"delete\" task feature.\n\nAdded test cases \"delete\" and \"delete 2\".\n\nThese test cases implement both error handling and checking whether delete removes the task from list properly.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2025-08-26T00:00:00","commitResults":[{"hash":"ade1e7994330d604f2eb6b8811779153ae468ec2","isMergeCommit":false,"messageTitle":"Add auto save/load to Locky tasks","messageBody":"Task data is only kept in memory, so terminating Locky deletes all tasks.\nThis breaks iP Level 7 requirements and breaks user experience.\n\nAdd persistence so Locky saves after each change and loads on startup.\nUse a simple line-based format and a fixed path ./data/locky.txt.\n\nLet\u0027s:\n* introduce Storage to read/write tasks\n* wire Storage into TaskList and save on every mutation\n* load existing tasks during startup in Locky\n* keep STDOUT clean; send persistence warnings to STDERR\n\nUsing a dedicated Storage class keeps I/O concerns separate from UI,\nmaking the code easier to test and extend.\n","fileTypesAndContributionMap":{"java":{"insertions":231,"deletions":45}}},{"hash":"fbf26b7f6a17176db7729be5ad347345f10b959a","isMergeCommit":false,"messageTitle":"Separate responsibilities into classes.","messageBody":"Locky.java previously contained most of the logic for handling tasks,\nI/O, and user interaction, which made the code monolithic and harder\nto maintain.\n\nLet\u0027s:\n* add TaskList class to encapsulate task collection and operations\n* keep Locky focused on the main loop and parsing user commands\n* introduce Locky.run() and delegate responsibilities instead of\n  static methods in main\n\nThis OOP refactor improves code organisation, readability, and testability\nby following separation of concerns principles.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":2}}},{"hash":"546170f110c4996721d941b2a02b0386c16eaf34","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 into master (Level-7 features)","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"98ccd11b946ba2177aa232c80d6b9ddd77695408","isMergeCommit":false,"messageTitle":"Add support for LocalDateTime object for deadline and event tasks.","messageBody":"Previously, dates were inputted as strings, which made it difficult\nto scan whether deadlines were appropriate dates\n\nLet\u0027s\n- Store deadlines and events using java.time.LocalDateTime instead of raw Strings.\n- Accept user input in multiple formats (e.g., yyyy-MM-dd HHmm, ISO-8601).\n- Enhance Storage to parse and serialize dates consistently.\n- Update Task, Deadline, and Event classes to work with LocalDateTime fields.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":310,"deletions":45},"sh":{"insertions":6,"deletions":0}}},{"hash":"b16c802f878f01cbbb228a7b20359af2e28c9638","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027 into master","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"05b0a29a5587063e66f697ef8a46ec2989aad0b7","isMergeCommit":false,"messageTitle":"Add Parser class for greater OOP support","messageBody":"Parsing was previously done in Locky class, which\n\nLet\u0027s\n- Move parsing logic (regex and date/time handling) out of Locky into a new Parser class.\n- Provide dedicated methods to parse command line input, deadlines, and events.\n- Simplify Locky\u0027s handleLine() method to use Parser methods\n\nThis improves OOP design by giving Parser single responsibility.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":205,"deletions":47}}},{"hash":"69a4ced994609da44da0f50e3cb45259b1e7c1c3","isMergeCommit":false,"messageTitle":"Reorganise classes into packages.","messageBody":"Previously, all classes lied under src/main/java.\n\nLet\u0027s\n- Move Locky into locky.app\n- Move Deadline, Event, Todo, Task and TaskList into locky.tasks\n- Move DateTimeFormat, Parser and Storage into locky.utils\n- Move LockyException into locky.error\n- Update test script runtest.sh to new structure.\n\nOrganising into packages helps for easier management of code and modularity.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":28},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":2,"deletions":2}}},{"hash":"61ecaa184f998621ed18a6d36628842a80da8dfe","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 into master","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"e8ba9e5be423744e0e9669f7ed73d998ba93040a","isMergeCommit":false,"messageTitle":"Add JUnit tests","messageBody":"Add tests for both Parser parseCommandLine method\nand Storage parseLine method in Locky.utils package.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":0}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"57cbc0ee7f606d66c43309607991610c2ca5fee3","isMergeCommit":false,"messageTitle":"Modify .gitignore file to use Locky instead of Duke.","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2}}},{"hash":"6886c434b29dc0917109425ed2d6cfd87552da77","isMergeCommit":false,"messageTitle":"Update methods of DateTimeFormat.","messageBody":"Some format declarations were repeated across classes.\n\nDefining new DateTimeFormatter constants reduces\nredundancy in repeating constant declarations.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":14}}},{"hash":"8ad0f8a750ce96220335cca50a858f9ca1d89b4d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027 into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2dd79e1d2b67a1911b767477c4bd3254b84d9193","isMergeCommit":false,"messageTitle":"Reorder import statements to adhere to coding standards.","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":72}}},{"hash":"3bcf9ab75ee8ebb4923e85cd4c70833fd8dfa624","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027 into master","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"3cf4286cedc1b347fe293d3d8b074da82758d3a2","isMergeCommit":false,"messageTitle":"Fix checkstyle issues in Locky packages and test files","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":150,"deletions":100}}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"d6cc4bfa64f04ff75ed77de0a5a471ac4027ea55","isMergeCommit":false,"messageTitle":"Add GUI with JavaFXML to Locky","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":192,"deletions":58}}},{"hash":"50749f373660f27cdeb3963c9f2df152a86c99e7","isMergeCommit":false,"messageTitle":"Create onboarding message for Locky chatbot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":3}}},{"hash":"fb179089d8f64e13aab0d27d3c06f3d29964c2f4","isMergeCommit":false,"messageTitle":"Add header comments for classes and methods","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":3}}},{"hash":"1580878fe0094aa2f5a7c33c090df5d971dbc438","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027 into master","messageBody":"","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"Promist-Moon":{"java":1295,"md":0,"fxml":66,"sh":8,"bat":1,"gradle":23,"txt":18}},"authorContributionVariance":{"Promist-Moon":25139.1},"authorDisplayNameMap":{"Promist-Moon":"CS2103T-W08-2 EMIL..ANDY"}}
