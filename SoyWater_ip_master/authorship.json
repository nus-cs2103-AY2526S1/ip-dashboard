[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"# Shadow project template","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Shadow_. Given below are instructions on how to use it.","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"1. After that, locate the `src/main/java/Shadow.java` file, right-click it, and choose `Run Shadow.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    implementation \u0027com.google.code.gson:gson:2.13.1\u0027","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"checkstyle {","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    mainClass.set(\"Shadow\")","lastModifiedDate":"2025-08-29T02:10:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"    archiveFileName \u003d \"shadow.jar\"","lastModifiedDate":"2025-08-29T02:10:12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"SoyWater":8,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"# Shadow User Guide","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":29}},{"path":"src/main/java/Shadow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"import shadow.commands.Parser;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"import shadow.ui.Ui;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"public class Shadow {","lastModifiedDate":"2025-08-21T16:36:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"        Ui.getInstance().sayHello();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"        while (true) {","lastModifiedDate":"2025-08-21T17:21:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printCommandInput();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"                String demand \u003d Ui.getInstance().readDemand();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"                if (demand.toLowerCase().startsWith(\"bye\")) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"                    Ui.getInstance().sayBye();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"                    break;","lastModifiedDate":"2025-08-21T17:21:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-21T17:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"                Parser.parse(demand);","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printError(e.getMessage());","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-21T17:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        Ui.getInstance().closeReader();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:05:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:05:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":22,"-":2}},{"path":"src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"/*","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":" * Copyright (C) 2011 Google Inc.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * you may not use this file except in compliance with the License.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * You may obtain a copy of the License at","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" *      http://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * See the License for the specific language governing permissions and","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * limitations under the License.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"package com.google.gson.typeadapters;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapterFactory;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"import java.util.Map;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":" * Adapts values whose runtime type may differ from their declaration type. This is necessary when a","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":" * field\u0027s type is not the same type that GSON should create when deserializing that field. For","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":" * example, consider these types:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":" * abstract class Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":" *   int x;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":" *   int y;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":" * class Circle extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":" *   int radius;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":" * class Rectangle extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":" *   int width;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":" *   int height;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":" * class Diamond extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":" *   int width;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":" *   int height;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":" * class Drawing {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":" *   Shape bottomShape;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":" *   Shape topShape;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003eWithout additional type information, the serialized JSON is ambiguous. Is the bottom shape in","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":" * this drawing a rectangle or a diamond?","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":" * {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":" *   \"bottomShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":" *     \"width\": 10,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":" *     \"height\": 5,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 0,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":" *   },","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":" *   \"topShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":" *     \"radius\": 2,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 4,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 1","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":" *   }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":" * This class addresses this problem by adding type information to the serialized JSON and honoring","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":" * that type information when the JSON is deserialized:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":" * {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":" *   \"bottomShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":" *     \"type\": \"Diamond\",","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":" *     \"width\": 10,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":" *     \"height\": 5,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 0,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":" *   },","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":" *   \"topShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":" *     \"type\": \"Circle\",","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":" *     \"radius\": 2,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 4,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 1","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":" *   }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":" * Both the type field name ({@code \"type\"}) and the type labels ({@code \"Rectangle\"}) are","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":" * configurable.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":" * \u003ch2\u003eRegistering Types\u003c/h2\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":" * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field name to the","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":" * {@link #of} factory method. If you don\u0027t supply an explicit type field name, {@code \"type\"} will","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":" * be used.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":" * RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":" *     \u003d RuntimeTypeAdapterFactory.of(Shape.class, \"type\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":" * Next register all of your subtypes. Every subtype must be explicitly registered. This protects","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":" * your application from injection attacks. If you don\u0027t supply an explicit type label, the type\u0027s","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":" * simple name will be used.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Rectangle.class, \"Rectangle\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Circle.class, \"Circle\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Diamond.class, \"Diamond\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":" * Finally, register the type adapter factory in your application\u0027s GSON builder:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":" * Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":" *     .registerTypeAdapterFactory(shapeAdapterFactory)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":" *     .create();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":" * Like {@code GsonBuilder}, this API supports chaining:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":" * RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory \u003d RuntimeTypeAdapterFactory.of(Shape.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Rectangle.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Circle.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Diamond.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SoyWater"},"content":" * \u003ch2\u003eSerialization and deserialization\u003c/h2\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SoyWater"},"content":" * In order to serialize and deserialize a polymorphic object, you must specify the base type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SoyWater"},"content":" * explicitly.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SoyWater"},"content":" * Diamond diamond \u003d new Diamond();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SoyWater"},"content":" * String json \u003d gson.toJson(diamond, Shape.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SoyWater"},"content":" * And then:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SoyWater"},"content":" * Shape shape \u003d gson.fromJson(json, Shape.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SoyWater"},"content":"public final class RuntimeTypeAdapterFactory\u003cT\u003e implements TypeAdapterFactory {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SoyWater"},"content":"    private final Class\u003c?\u003e baseType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SoyWater"},"content":"    private final String typeFieldName;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SoyWater"},"content":"    private final Map\u003cString, Class\u003c?\u003e\u003e labelToSubtype \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SoyWater"},"content":"    private final Map\u003cClass\u003c?\u003e, String\u003e subtypeToLabel \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SoyWater"},"content":"    private final boolean maintainType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SoyWater"},"content":"    private boolean recognizeSubtypes;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SoyWater"},"content":"    private RuntimeTypeAdapterFactory(Class\u003c?\u003e baseType, String typeFieldName, boolean maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SoyWater"},"content":"        if (typeFieldName \u003d\u003d null || baseType \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SoyWater"},"content":"            throw new NullPointerException();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SoyWater"},"content":"        this.baseType \u003d baseType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SoyWater"},"content":"        this.typeFieldName \u003d typeFieldName;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SoyWater"},"content":"        this.maintainType \u003d maintainType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code typeFieldName} as the type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SoyWater"},"content":"     * field name. Type field names are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SoyWater"},"content":"     * @param maintainType true if the type field should be included in deserialized objects","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SoyWater"},"content":"            Class\u003cT\u003e baseType, String typeFieldName, boolean maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, maintainType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code typeFieldName} as the type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"SoyWater"},"content":"     * field name. Type field names are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, false);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code \"type\"} as the type field","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"SoyWater"},"content":"     * name.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, \"type\", false);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SoyWater"},"content":"     * Ensures that this factory will handle not just the given {@code baseType}, but any subtype of","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SoyWater"},"content":"     * that type.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e recognizeSubtypes() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SoyWater"},"content":"        this.recognizeSubtypes \u003d true;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SoyWater"},"content":"     * Registers {@code type} identified by {@code label}. Labels are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if either {@code type} or {@code label} have already been","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"SoyWater"},"content":"     *     registered on this type adapter.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type, String label) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SoyWater"},"content":"        if (type \u003d\u003d null || label \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SoyWater"},"content":"            throw new NullPointerException();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"SoyWater"},"content":"        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"types and labels must be unique\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"SoyWater"},"content":"        labelToSubtype.put(label, type);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"SoyWater"},"content":"        subtypeToLabel.put(type, label);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"SoyWater"},"content":"     * Registers {@code type} identified by its {@link Class#getSimpleName simple name}. Labels are","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"SoyWater"},"content":"     * case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if either {@code type} or its simple name have already been","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"SoyWater"},"content":"     *     registered on this type adapter.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"SoyWater"},"content":"        return registerSubtype(type, type.getSimpleName());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"SoyWater"},"content":"    public \u003cR\u003e TypeAdapter\u003cR\u003e create(Gson gson, TypeToken\u003cR\u003e type) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"SoyWater"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"SoyWater"},"content":"            return null;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"SoyWater"},"content":"        Class\u003c?\u003e rawType \u003d type.getRawType();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"SoyWater"},"content":"        boolean handle \u003d","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"SoyWater"},"content":"                recognizeSubtypes ? baseType.isAssignableFrom(rawType) : baseType.equals(rawType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"SoyWater"},"content":"        if (!handle) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"SoyWater"},"content":"            return null;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"SoyWater"},"content":"        TypeAdapter\u003cJsonElement\u003e jsonElementAdapter \u003d gson.getAdapter(JsonElement.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"SoyWater"},"content":"        Map\u003cString, TypeAdapter\u003c?\u003e\u003e labelToDelegate \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"SoyWater"},"content":"        Map\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e subtypeToDelegate \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"SoyWater"},"content":"        for (Map.Entry\u003cString, Class\u003c?\u003e\u003e entry : labelToSubtype.entrySet()) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"SoyWater"},"content":"            TypeAdapter\u003c?\u003e delegate \u003d gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"SoyWater"},"content":"            labelToDelegate.put(entry.getKey(), delegate);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"SoyWater"},"content":"            subtypeToDelegate.put(entry.getValue(), delegate);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"SoyWater"},"content":"        return new TypeAdapter\u003cR\u003e() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"SoyWater"},"content":"            @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"SoyWater"},"content":"            public R read(JsonReader in) throws IOException {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"SoyWater"},"content":"                JsonElement jsonElement \u003d jsonElementAdapter.read(in);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"SoyWater"},"content":"                JsonElement labelJsonElement;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"SoyWater"},"content":"                if (maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"SoyWater"},"content":"                    labelJsonElement \u003d jsonElement.getAsJsonObject().get(typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"SoyWater"},"content":"                } else {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"SoyWater"},"content":"                    labelJsonElement \u003d jsonElement.getAsJsonObject().remove(typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"SoyWater"},"content":"                if (labelJsonElement \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"SoyWater"},"content":"                            \"cannot deserialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"SoyWater"},"content":"                                    + baseType","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"SoyWater"},"content":"                                    + \" because it does not define a field named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"SoyWater"},"content":"                                    + typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"SoyWater"},"content":"                String label \u003d labelJsonElement.getAsString();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"SoyWater"},"content":"                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"SoyWater"},"content":"                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) labelToDelegate.get(label);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"SoyWater"},"content":"                if (delegate \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"SoyWater"},"content":"                            \"cannot deserialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"SoyWater"},"content":"                                    + baseType","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"SoyWater"},"content":"                                    + \" subtype named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"SoyWater"},"content":"                                    + label","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"SoyWater"},"content":"                                    + \"; did you forget to register a subtype?\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"SoyWater"},"content":"                return delegate.fromJsonTree(jsonElement);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"SoyWater"},"content":"            @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"SoyWater"},"content":"            public void write(JsonWriter out, R value) throws IOException {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"SoyWater"},"content":"                Class\u003c?\u003e srcType \u003d value.getClass();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"SoyWater"},"content":"                String label \u003d subtypeToLabel.get(srcType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"SoyWater"},"content":"                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"SoyWater"},"content":"                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) subtypeToDelegate.get(srcType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"SoyWater"},"content":"                if (delegate \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"SoyWater"},"content":"                            \"cannot serialize \" + srcType.getName() + \"; did you forget to register a subtype?\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"SoyWater"},"content":"                JsonObject jsonObject \u003d delegate.toJsonTree(value).getAsJsonObject();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"SoyWater"},"content":"                if (maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"SoyWater"},"content":"                    jsonElementAdapter.write(out, jsonObject);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"SoyWater"},"content":"                    return;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"SoyWater"},"content":"                JsonObject clone \u003d new JsonObject();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"SoyWater"},"content":"                if (jsonObject.has(typeFieldName)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"SoyWater"},"content":"                            \"cannot serialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"SoyWater"},"content":"                                    + srcType.getName()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"SoyWater"},"content":"                                    + \" because it already defines a field named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"SoyWater"},"content":"                                    + typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"SoyWater"},"content":"                clone.add(typeFieldName, new JsonPrimitive(label));","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"SoyWater"},"content":"                for (Map.Entry\u003cString, JsonElement\u003e e : jsonObject.entrySet()) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"SoyWater"},"content":"                    clone.add(e.getKey(), e.getValue());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"SoyWater"},"content":"                jsonElementAdapter.write(out, clone);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"SoyWater"},"content":"        }.nullSafe();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false}],"authorContributionMap":{"SoyWater":327}},{"path":"src/main/java/shadow/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents an abstract command in the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * Subclasses of this class define specific actions to be executed.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Provides a default behavior for determining whether executing this command should terminate the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"     * Executes the main logic or action of this command.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"     * This method is abstract and must be implemented by subclasses.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    public abstract void execute();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Indicates whether this command signals an exit condition.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @return {@code true} if this command causes the application to exit; {@code false} otherwise.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":24}},{"path":"src/main/java/shadow/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * Represents a command to delete a specific task from the task list in storage.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * This command removes the task at the specified index and provides feedback to the user upon successful removal.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"     * Creates a new DeleteTask command to remove a task at the specified index.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be removed","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private DeleteTask(int taskIndex) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Executes the delete operation by removing the task at the given index","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * from storage, then prints a confirmation message.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void execute() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        Task removed \u003d Storage.getInstance().removeTask(this.taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        System.out.printf(\"Removed: %s%n\", removed.toString());","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * Creates an instance of {@link DeleteTask} based on the provided input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * This factory method expects exactly two input elements: the command keyword","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * (e.g., \"delete\") and the task number to delete. It parses the task number,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * validates that it refers to a valid task in {@link Storage}, and constructs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * the {@code DeleteTask} accordingly.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is expected to be the \"delete\" command keyword\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} is the task number to delete (1-based index)\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code DeleteTask} instance with the validated task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts.length !\u003d 2}\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts[1]} is not a valid number\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003ethe task number is out of bounds\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    public static DeleteTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: delete \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        } else {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"                int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"                if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"                    throw new IllegalArgumentException(\"You have inputted an invalid task number\");","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                return new DeleteTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(\"Usage: delete \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":71}},{"path":"src/main/java/shadow/commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import shadow.ui.Ui;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * Represents a command that finds and displays tasks matching a given keyword.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"public class FindTask extends Command {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * Constructs a FindTask with a filtered list of tasks.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @param tasks the list of tasks that match the search keyword","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    private FindTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Executes the find command.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * If no tasks are found, it displays a \"Found nothing\" message.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * Otherwise, it displays the list of found tasks with their corresponding index.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    public void execute() {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"            Ui.getInstance().println(\"Found nothing\");","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"            return;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); ++i) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"            Ui.getInstance().println(String.format(\"%d: %s\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * Creates a new FindTask based on the input command parts.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @param parts the parts of the command input, where parts[1] should be the search string","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * @return findTask object with filtered tasks","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the command format is invalid","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    public static FindTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: find \u003cfindString\u003e\");","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        } else {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"                String findString \u003d parts[1];","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"                return new FindTask(FindTask.filterTasks(Storage.getInstance().getTasks(), findString));","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(\"Usage: delete \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * Filters the given list of tasks by the specified keyword.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * @param tasks      the list of tasks to filter","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     * @param findString the keyword to filter tasks by","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     * @return a list of tasks whose names contain the given keyword","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"    private static List\u003cTask\u003e filterTasks(List\u003cTask\u003e tasks, String findString) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        return tasks","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"                .stream()","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"                .filter(task -\u003e task.contains(findString))","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false}],"authorContributionMap":{"SoyWater":75}},{"path":"src/main/java/shadow/commands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.ui.Ui;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * Represents a command for listing all tasks currently stored in the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * {@code ListTasks} is a singleton class which extends the {@code Command} abstract class.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * It provides functionality to display all tasks with their respective indices and descriptions.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class ListTasks extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    private static ListTasks instance;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to prevent direct instantiation.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * ListTasks is a singleton.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    private ListTasks() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Executes the list operation by printing all tasks stored in Storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * Each task is displayed with its index (starting from 1) and description.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void execute() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        for (int i \u003d 0; i \u003c Storage.getInstance().getTasks().size(); ++i) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"            Ui.getInstance().println(String.format(\"%d: %s\", i + 1, Storage.getInstance().getTasks().get(i)));","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code ListTasks} command.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * @param parts the command parts parsed from user input (ignored in this method)","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code ListTasks} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException never thrown by this method but declared for consistency","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    public static ListTasks of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        if (ListTasks.instance \u003d\u003d null) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"            ListTasks.instance \u003d new ListTasks();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        return ListTasks.instance;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false}],"authorContributionMap":{"SoyWater":49}},{"path":"src/main/java/shadow/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Represents a command to mark a specific task as done.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * This class encapsulates the logic for identifying the task to be marked","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * based on its index and delegating the marking operation to {@code Storage}.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class MarkTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to create a MarkTask command for marking a task as done.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Instances should be created via the factory method {@code MarkTask.create(int)}.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    private MarkTask(int taskIndex) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * Executes the mark operation by marking the specified task as done in storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void execute() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().markTask(this.taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@code MarkTask} command from the given input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Expects exactly two parts: the command and the task number.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * Parses the task number (1-based) and converts it to a zero-based index.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Validates the index against the current list of tasks in {@link Storage}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Throws an {@link IllegalArgumentException} if the input is malformed or the index is invalid.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * @param parts the command parts parsed from user input","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code MarkTask} instance targeting the specified task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input format is invalid, or the task number is out of range","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    public static MarkTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: mark \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"            if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(\"You have inputted an invalid task number\");","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"            return new MarkTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: mark \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":58}},{"path":"src/main/java/shadow/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.Map;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.TaskFactory;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * The {@code Parser} class is responsible for interpreting user input and deciding","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * whether it represents a command to be executed or a task to be created. This class","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * serves as the primary mechanism for converting user input into executable actions","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * or new tasks within the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private static final Map\u003cString, Function\u003cString[], Command\u003e\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    static {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"mark\", MarkTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"unmark\", UnmarkTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"list\", ListTasks::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"delete\", DeleteTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"find\", FindTask::of);","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * Parses and processes a user input string to determine whether it is a command","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * or a task creation request.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * If the input matches a known command (e.g., \"delete\", \"unmark\", etc.), it is executed via {@code handleCommand}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * Otherwise, the input is passed to {@link TaskFactory#createTask(String[])} to create a new task, which is then","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * added to {@link Storage}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * @param demand the raw input string entered by the user","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    public static void parse(String demand) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        if (demand.trim().isEmpty()) {","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            return;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        String[] parts \u003d demand.split(\" \", 2);","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        parts[0] \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"            if (handleCommand(parts)) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"                return;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"            Storage.getInstance().addTasks(TaskFactory.createTask(parts));","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * Attempts to handle the parsed input as a command.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"     * If the first part of the input matches a known command keyword, the corresponding","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * command is created and executed.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is the command keyword\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} (optional) is the command argument\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"     * @return {@code true} if the input was successfully handled as a command,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"     *         {@code false} if the keyword is not recognized","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"    private static boolean handleCommand(String[] parts) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"        Function\u003cString[], Command\u003e command \u003d commands.get(parts[0]);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"            return false;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        command.apply(parts).execute();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        return true;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false}],"authorContributionMap":{"SoyWater":80}},{"path":"src/main/java/shadow/commands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Represents the command to unmark a task as not done.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * This command interacts with the {@link Storage} class to update the task status.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"public class UnmarkTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to create an UnmarkTask command for unmarking a task as not done.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Instances should be created via the factory method {@code UnmarkTask.create(int)}.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be unmarked","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private UnmarkTask(int taskIndex) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * Executes the unmark operation by marking the specified task as not done in storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    public void execute() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().unmarkTask(this.taskIndex);","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * Creates an instance of {@link UnmarkTask} based on the provided input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * This factory method expects the input array to contain exactly two elements:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * the command type (e.g., \"unmark\") and the task number to unmark. The task number","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * is parsed, validated against the task list in {@link Storage}, and then used","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * to construct the {@code UnmarkTask}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is expected to be the \"unmark\" command keyword\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} is the task number to unmark (1-based index)\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code UnmarkTask} instance with the validated task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts.length !\u003d 2}\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts[1]} is not a valid number\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003ethe task number is out of bounds\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    public static UnmarkTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: unmark \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        } else {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"                int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"                if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"                    throw new IllegalArgumentException(\"You have inputted an invalid task number\");","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                return new UnmarkTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(\"Usage: unmark \u003cshadow.tasks.Task Number\u003e\");","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":71}},{"path":"src/main/java/shadow/parsers/DateTimeAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.parsers;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * A custom {@link TypeAdapter} implementation for serializing and deserializing","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * {@link LocalDateTime} objects using Gson.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":" * This adapter converts {@link LocalDateTime} instances into ISO-8601 formatted","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":" * strings for JSON serialization and parses ISO-8601 formatted strings back into","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":" * {@link LocalDateTime} objects during deserialization.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":" * It is designed to be used with {@link GsonBuilder}\u0027s {@code registerTypeAdapter}","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":" * method for seamless integration into the serialization and deserialization workflow.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"public class DateTimeAdapter extends TypeAdapter\u003cLocalDateTime\u003e {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * Serializes a {@link LocalDateTime} object to JSON.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Writes the date-time as a formatted string using the defined formatter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * If the value is {@code null}, writes a JSON null value.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @param out the {@link JsonWriter} to write to","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @param value the {@link LocalDateTime} value to serialize, may be {@code null}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    public void write(JsonWriter out, LocalDateTime value) throws IOException {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            out.nullValue();","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        } else {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"            out.value(value.format(formatter));","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * Deserializes a {@link LocalDateTime} object from JSON.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * Reads a date-time string from JSON and parses it using the defined formatter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @param in the {@link JsonReader} to read from","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    public LocalDateTime read(JsonReader in) throws IOException {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        String str \u003d in.nextString();","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        return LocalDateTime.parse(str, formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false}],"authorContributionMap":{"SoyWater":62}},{"path":"src/main/java/shadow/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.parsers;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * A utility class providing methods to parse, format, and calculate time-related operations","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * with {@link LocalDateTime} objects.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * This class handles multiple recognized date-time formats, allowing flexible parsing","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * of input strings. It also provides functionality to convert {@link LocalDateTime} objects","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * to a consistent string representation and compare dates for time calculations.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private static final List\u003cDateTimeFormatter\u003e formatters \u003d List.of(","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ISO_LOCAL_DATE_TIME,","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"h:mm a dd/MM/yyyy\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\")","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy, EEEE, HH:mm\");","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * Parses a date-time string into a {@link LocalDateTime} object.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Tries multiple predefined formats until one successfully parses the input.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * If none match, throws an {@link IllegalArgumentException}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @param input the date-time string to parse","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input does not match any supported format","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    public static LocalDateTime parse(String input) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        for (DateTimeFormatter formatter : DateTimeParser.formatters) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"               // continue","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        throw new IllegalArgumentException(\"Unrecognized date/time format: \" + input);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * Formats a {@link LocalDateTime} object into a string using a consistent pattern.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * @param dateTime the {@link LocalDateTime} to format","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @return the formatted date-time string","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        return dateTime.format(DateTimeParser.formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * Calculates the number of whole days between the current time and the given {@link LocalDateTime}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"     * @param dateTime the target date-time to compare with now","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * @return the number of days left (positive if in the future, negative if in the past)","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"    public static long timeLeft(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        return ChronoUnit.DAYS.between(LocalDateTime.now(), dateTime);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false}],"authorContributionMap":{"SoyWater":68}},{"path":"src/main/java/shadow/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.io.Reader;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.io.Writer;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.typeadapters.RuntimeTypeAdapterFactory;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeAdapter;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.DeadLine;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Event;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.ToDo;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":" * A singleton class responsible for managing the storage of tasks.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":" * Provides methods to load, save, add, remove, and modify tasks.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":" * Tasks are persisted in a JSON file in the user\u0027s home directory.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    private static Storage instance;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    private final Gson gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    private final Type taskListType \u003d new TypeToken\u003cList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new {@code Storage} instance.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * Initializes the storage directory and file path in the user\u0027s home directory,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * sets up Gson serialization with custom adapters for {@link Task} and {@link LocalDateTime},","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * and attempts to load existing tasks from disk.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * If the storage directory does not exist, it will be created.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"    private Storage() {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        String userHome \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        Path appDir \u003d Paths.get(userHome, \".shadowData\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        this.filePath \u003d appDir.resolve(\"tasks.json\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        this.gson \u003d new GsonBuilder()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"                .registerTypeAdapterFactory(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"                        RuntimeTypeAdapterFactory.of(Task.class, \"type\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(ToDo.class, \"todo\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(DeadLine.class, \"deadline\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(Event.class, \"event\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"                )","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"                .registerTypeAdapter(LocalDateTime.class, new DateTimeAdapter())","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                .create();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"            if (!Files.exists(appDir)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"                Files.createDirectories(appDir);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to create storage directory: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        load();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code Storage} class.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code Storage} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"        if (Storage.instance \u003d\u003d null) {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"            Storage.instance \u003d new Storage();","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"        return Storage.instance;","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"     * Loads tasks from the JSON file into memory.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"     * If the file does not exist, no action is taken.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"     * If an error occurs during reading, an error message is printed to standard error.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"    private void load() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"            return;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"        try (Reader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"            List\u003cTask\u003e load \u003d gson.fromJson(reader, taskListType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"            if (load !\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"                this.tasks \u003d load;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"     * Saves the current list of tasks to the JSON file.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"     * If an error occurs during writing, an error message is printed to standard error.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"    public void save() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"        try (Writer writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"            gson.toJson(tasks, taskListType, writer);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":"     * Adds a new task to the list and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"     * @param task the {@link Task} to add","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":"    public void addTasks(Task task) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SoyWater"},"content":"     * Removes the task at the specified index and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to remove","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SoyWater"},"content":"     * @return the removed {@link Task}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SoyWater"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SoyWater"},"content":"        Task removed \u003d this.tasks.remove(i);","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SoyWater"},"content":"        return removed;","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SoyWater"},"content":"     * Returns the current list of tasks stored in memory.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SoyWater"},"content":"     * @return a {@link List} of {@link Task} objects","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SoyWater"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SoyWater"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SoyWater"},"content":"     * Marks the task at the specified index as done and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to mark","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SoyWater"},"content":"    public void markTask(int i) {","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SoyWater"},"content":"        this.tasks.get(i).mark();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SoyWater"},"content":"     * Unmarks the task at the specified index as not done and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to unmark","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SoyWater"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SoyWater"},"content":"        this.tasks.get(i).unmark();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false}],"authorContributionMap":{"SoyWater":183}},{"path":"src/main/java/shadow/tasks/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeParser;","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * Represents a task with a specific deadline, extending the functionality of the {@link Task} class.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * A DeadLine task includes a deadline date and time by which the task is expected to be completed.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new DeadLine task with the specified name and deadline.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     * @param deadline the date and time by which the task must be completed","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    public DeadLine(String name, LocalDateTime deadline) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        long timeLeft \u003d DateTimeParser.timeLeft(this.deadline);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        return String.format(\"[D]%s (by: %s): \", super.toString(), DateTimeParser.format(this.deadline))","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"                + (timeLeft \u003c 0 ? \"deadline passed\" : timeLeft + \" days left\");","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link DeadLine} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Expects the input to contain a task name and a deadline separated by the \"/by\" delimiter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Parses the deadline date-time using {@link DateTimeParser}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null} or improperly formatted, throws an {@link IllegalArgumentException}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * with usage instructions.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the deadline task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description and deadline, separated by \"/by\"","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code DeadLine} instance representing the task with its deadline","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null} or missing the \"/by\" part","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    public static DeadLine of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: deadline \u003ctaskName\u003e /by \u003cby\u003e\");","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        String[] deadlineDetails \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: deadline \u003ctaskName\u003e /by \u003cby\u003e\");","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime deadlineDateTime \u003d DateTimeParser.parse(deadlineDetails[1].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        DeadLine deadline \u003d new DeadLine(deadlineDetails[0].trim(), deadlineDateTime);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        System.out.printf(\"Added: %s%n\", deadline);","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        return deadline;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":60}},{"path":"src/main/java/shadow/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeParser;","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * Represents an event task with a name, start time, and end time.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * An Event is a subclass of {@link Task} that includes additional","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * attributes for start and end date-time values. It provides functionality","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * to format its details into a string representation, calculate the","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * time remaining until the event starts, and validate input parsing","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * for creating new event instances.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new Event task with the specified name, start time, and end time.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the event","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * @param startTime the date and time when the event starts","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * @param endTime the date and time when the event ends","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        long daysLeft \u003d DateTimeParser.timeLeft(this.startTime);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        return String.format(","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"                \"[E]%s (from: %s to: %s): \",","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"                super.toString(),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"                DateTimeParser.format(this.startTime),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"                DateTimeParser.format(this.endTime)","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        ) + (daysLeft \u003c 0 ? \"event passed\" : daysLeft + \" days left\");","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link Event} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * Expects the input to contain a task name, a start time, and an end time,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * separated by the delimiters \"/from\" and \"/to\" respectively.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * Parses the start and end times using {@link DateTimeParser}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null} or improperly formatted, throws an {@link IllegalArgumentException}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * with usage instructions.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the event task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description, start time, and end time","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code Event} instance representing the task with its start and end times","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null} or missing required delimiters","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    public static Event of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\");","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        String[] fromSplit \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\");","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"        String[] toSplit \u003d fromSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\");","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime startTime \u003d DateTimeParser.parse(toSplit[0].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime endTime \u003d DateTimeParser.parse(toSplit[1].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(fromSplit[0].trim(), startTime, endTime);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        System.out.printf(\"Added: %s%n\", event);","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        return event;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":77}},{"path":"src/main/java/shadow/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a task with a name and a completion status.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * A task can be marked as completed or unmarked if it is not completed.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"public class Task {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"    private final String name;","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code isMarked} flag to {@code true} and prints a confirmation","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * message to the console, including the task\u0027s string representation.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void mark() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        System.out.println(\"Noted, the following task has been marked:\");","lastModifiedDate":"2025-08-21T23:24:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        System.out.println(this);","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Unmarks the task (marks it as not completed).","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code isMarked} flag to {@code false} and prints a confirmation","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * message to the console, including the task\u0027s string representation.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        System.out.println(\"Noted, the following task has been unmarked:\");","lastModifiedDate":"2025-08-21T23:24:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        System.out.println(this);","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        return String.format(","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"                \"[%s] %s\",","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"                this.isMarked ? \"X\" : \" \",","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"                this.name","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:55:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * Checks if this task\u0027s name contains the specified substring.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     * @param match the substring to search for in the task\u0027s name","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"     * @return true if the name contains the substring; false otherwise","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    public boolean contains(String match) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        return this.name.contains(match);","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:55:12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false}],"authorContributionMap":{"SoyWater":66}},{"path":"src/main/java/shadow/tasks/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.Map;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * A factory class responsible for creating instances of different types of {@link Task}.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * The factory determines the type of task to create based on input parameters","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * and maps task types to their respective creation methods.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class TaskFactory {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    private static final Map\u003cString, Function\u003cString, Task\u003e\u003e taskCreators \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    static {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"        taskCreators.put(\"todo\", ToDo::of);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        taskCreators.put(\"deadline\", DeadLine::of);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        taskCreators.put(\"event\", Event::of);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Creates a {@link Task} instance based on the provided input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * The first element of the {@code parts} array is used to determine the task type.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * The second element (if present) is used as the task argument passed to the corresponding task factory.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is the task type identifier (e.g. \"todo\", \"event\")\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} (optional) is the task description or argument\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code Task} created by the corresponding factory function","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if {@code parts[0]} does not match any registered task type","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    public static Task createTask(String[] parts) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        Function\u003cString, Task\u003e factory \u003d taskCreators.get(type);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        if (factory \u003d\u003d null) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Unknown Command\");","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        return factory.apply(parts.length \u003c 2 ? null : parts[1]);","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false}],"authorContributionMap":{"SoyWater":45}},{"path":"src/main/java/shadow/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a ToDo task, a specific type of task that only includes","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * a description without any associated time constraints.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * A ToDo task is a subclass of {@link Task}. It inherits the ability to","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * mark and unmark tasks, as well as the ability to check if its name contains","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * specified substrings. Additionally, it provides a string representation","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * that distinguishes it as a ToDo task.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new ToDo task with the specified name.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the ToDo task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link ToDo} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * Trims the input and constructs a {@code ToDo} object using it as the task name.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null}, an {@link IllegalArgumentException} is thrown to indicate incorrect usage.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code ToDo} instance representing the task","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    public static ToDo of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: todo \u003ctaskName\u003e\");","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        ToDo todo \u003d new ToDo(input.trim());","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        System.out.printf(\"Added: %s%n\", todo.toString());","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        return todo;","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":49}},{"path":"src/main/java/shadow/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * The {@code Ui} class provides an interface for interacting with the user through console input and output.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * It is implemented as a singleton to ensure only one instance is created and used throughout the application.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * This class manages user input, displays messages, and handles the formatting of console output.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    private static Ui ui;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    private final Scanner userInput;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Private constructor for the Ui class.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Initializes the user input scanner.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * This constructor is private to enforce a singleton pattern or controlled instantiation.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private Ui() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        this.userInput \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code Ui} class.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code Ui} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        if (Ui.ui \u003d\u003d null) {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            Ui.ui \u003d new Ui();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        return Ui.ui;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Prints a line of text to the standard output.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @param line the string to be printed","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    public void println(String line) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * @return the user\u0027s input as a string","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    public String readDemand() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        return userInput.nextLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * Closes the input reader to release associated resources.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    public void closeReader() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        userInput.close();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     * Prints a greeting message along with ASCII art to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * Prompts the user for input afterward.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    public void sayHello() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        String asciiArt \u003d","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"                \"\"\"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"                         ____  _               _","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"                        / ___|| |__   __ _  __| | _____      __","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"                        \\\\___ \\\\| \u0027_ \\\\ / _` |/ _` |/ _ \\\\ \\\\ /\\\\ / /","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"                         ___) | | | | (_| | (_| | (_) \\\\ V  V /","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"                        |____/|_| |_|\\\\__,_|\\\\__,_|\\\\___/ \\\\_/\\\\_/","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"                ","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"                \"\"\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        String sayHello \u003d \"Hello, this is\\n\" + asciiArt + \"What\u0027s your demand today?\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        this.printLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"        System.out.println(sayHello);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"     * Prints a separator line to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    public void printLine() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"        System.out.println(\"_________________________________________________________\");","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"     * Prints a farewell message to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    public void sayBye() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"        String sayBye \u003d \"Very well, contact me again when you have more demands.\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        System.out.println(sayBye);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"     * Prints the command prompt symbol (\"\u003e \") to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"    public void printCommandInput() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"     * Prints an error message to the standard output.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"     * @param error the error message to be printed","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"    public void printError(String error) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        System.out.println(error);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false}],"authorContributionMap":{"SoyWater":112}},{"path":"src/test/java/shadow/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"class EventTest {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    void constructor_validInputs_initializesCorrectly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 10, 1, 10, 0);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 10, 1, 12, 0);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"[E]\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"[ ] Team meeting\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"from:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"to:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    void toString_futureEvent_displaysDaysLeft() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(7);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Conference\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"days left\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    void toString_pastEvent_displaysEventPassed() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().minusDays(3);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Past meeting\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"event passed\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    void mark_event_markedCorrectlyInToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Review session\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"        event.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[X] Review session\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    void unmark_event_unmarkedCorrectlyInToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Unmark test\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        event.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        event.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[ ] Unmark test\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"    void of_validIsoFormatInput_returnsEventInstance() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Project deadline /from 2025-12-01T09:00 /to 2025-12-01T17:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[E]\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Project deadline\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"    void of_validCustomFormatInput_returnsEventInstance() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Team sync /from 01/12/2025 09:00 /to 01/12/2025 10:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Team sync\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    void of_nullInput_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"            Event.of(null);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"    void of_missingFrom_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Project deadline\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"    void of_missingTo_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Launch /from 2025-09-10T09:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"    void of_inputWithExtraSpaces_parsesCorrectly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"  Client call   /from 2025-11-05T10:00   /to 2025-11-05T11:00 \";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Client call\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"from:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"to:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"    void of_unrecognizedDateFormat_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Bad input /from someday /to next week\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"        assertTrue(ex.getMessage().contains(\"Unrecognized date/time format\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"    void of_startAfterEnd_parsesButMayBeIllogical() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Backwards time /from 2025-12-01T17:00 /to 2025-12-01T09:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Backwards time\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false}],"authorContributionMap":{"SoyWater":137}},{"path":"src/test/java/shadow/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"class TaskTest {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"    void constructor_validName_setsNameAndUnmarked() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Read a book\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    void mark_unmarkedTask_setsMarkedTrueAndUpdatesToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Submit report\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Submit report\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    void mark_alreadyMarkedTask_keepsMarkedTrue() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Complete homework\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        task.mark(); // First mark","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        task.mark(); // Second mark","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Complete homework\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    void unmark_markedTask_setsMarkedFalseAndUpdatesToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Clean room\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Clean room\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    void unmark_unmarkedTask_keepsMarkedFalse() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Wash dishes\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        task.unmark(); // Call without marking first","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Wash dishes\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    void toString_newTask_hasEmptyCheckboxAndCorrectName() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Feed cat\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Feed cat\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    void toString_markedTask_hasXCheckboxAndCorrectName() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Water plants\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Water plants\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    void toString_unmarkedAfterMark_hasEmptyCheckbox() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Do laundry\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Do laundry\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    void toString_nameWithSpaces_displaysProperly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"   Task with spaces   \");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ]    Task with spaces   \", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    void mark_thenUnmark_thenMarkAgain_hasCorrectState() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Cycle state\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"    void toString_emptyName_displaysBracketsOnly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] \", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false}],"authorContributionMap":{"SoyWater":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"todo Buy groceries","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"deadline Submit assignment /by Sunday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"event Conference /from Monday /to Wednesday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"todo   Walk the dog","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"deadline  Renew license /by  30th Aug","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"event Workshop /from 9am /to 12pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"todo","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"deadline Fix bugs","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"event Launch party /from Friday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"mark 1","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"mark 3","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"mark 6","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"mark 10","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"unmark 3","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"unmark 6","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"unmark 0","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"unmark -1","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"todo Finish book","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"deadline Pay bills /by tomorrow","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"event Gym class /from 6pm /to 7pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"foobar something here","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"event Concert /from 5pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"deadline Read paper /by","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"todo","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"delete 1","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"delete 3","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"delete -1","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"delete 200","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"bye","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false}],"authorContributionMap":{"SoyWater":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"java -classpath ..\\bin Shadow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"java -classpath ../bin Shadow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":37}}]
