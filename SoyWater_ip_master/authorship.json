[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"# Shadow project template","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Shadow_. Given below are instructions on how to use it.","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"1. After that, locate the `src/main/java/Shadow.java` file, right-click it, and choose `Run Shadow.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":3,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    implementation \u0027com.google.code.gson:gson:2.13.1\u0027","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"checkstyle {","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    toolVersion \u003d \u002711.0.1\u0027","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:38:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"    mainClass.set(\"shadow.ui.Launcher\")","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    archiveFileName \u003d \"shadow.jar\"","lastModifiedDate":"2025-08-29T02:10:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-10T16:17:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"SoyWater":23,"-":38}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"# Shadow User Guide","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":29}},{"path":"src/main/java/Shadow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"import shadow.commands.Command;","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"import shadow.commands.Parser;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.ui.Ui;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"public class Shadow {","lastModifiedDate":"2025-08-21T16:36:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"        while (true) {","lastModifiedDate":"2025-08-21T17:21:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printCommandInput();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"                String demand \u003d Ui.getInstance().readDemand();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"                if (demand.toLowerCase().startsWith(\"bye\")) {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"                    Ui.getInstance().sayBye();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"                    break;","lastModifiedDate":"2025-08-21T17:21:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-21T17:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"                Parser.parse(demand);","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"                Ui.getInstance().printError(e.getMessage());","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-21T17:11:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        Ui.getInstance().closeReader();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    public String getResponse(String demand) {","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        Command command \u003d Parser.parse(demand);","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        return \"hi\";","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T12:23:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:05:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:05:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":27,"-":2}},{"path":"src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"/*","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":" * Copyright (C) 2011 Google Inc.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * you may not use this file except in compliance with the License.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * You may obtain a copy of the License at","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" *      http://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * See the License for the specific language governing permissions and","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * limitations under the License.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"package com.google.gson.typeadapters;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonObject;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapterFactory;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"import java.util.Map;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":" * Adapts values whose runtime type may differ from their declaration type. This is necessary when a","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":" * field\u0027s type is not the same type that GSON should create when deserializing that field. For","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":" * example, consider these types:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":" * abstract class Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":" *   int x;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":" *   int y;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":" * class Circle extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":" *   int radius;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":" * class Rectangle extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":" *   int width;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":" *   int height;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":" * class Diamond extends Shape {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":" *   int width;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":" *   int height;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":" * class Drawing {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":" *   Shape bottomShape;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":" *   Shape topShape;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003eWithout additional type information, the serialized JSON is ambiguous. Is the bottom shape in","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":" * this drawing a rectangle or a diamond?","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":" * {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":" *   \"bottomShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":" *     \"width\": 10,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":" *     \"height\": 5,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 0,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":" *   },","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":" *   \"topShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":" *     \"radius\": 2,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 4,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 1","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":" *   }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":" * This class addresses this problem by adding type information to the serialized JSON and honoring","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":" * that type information when the JSON is deserialized:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":" * {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":" *   \"bottomShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":" *     \"type\": \"Diamond\",","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":" *     \"width\": 10,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":" *     \"height\": 5,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 0,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 0","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":" *   },","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":" *   \"topShape\": {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":" *     \"type\": \"Circle\",","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":" *     \"radius\": 2,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":" *     \"x\": 4,","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":" *     \"y\": 1","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":" *   }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":" * }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":" * Both the type field name ({@code \"type\"}) and the type labels ({@code \"Rectangle\"}) are","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":" * configurable.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":" * \u003ch2\u003eRegistering Types\u003c/h2\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":" * Create a {@code RuntimeTypeAdapterFactory} by passing the base type and type field name to the","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":" * {@link #of} factory method. If you don\u0027t supply an explicit type field name, {@code \"type\"} will","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":" * be used.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":" * RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":" *     \u003d RuntimeTypeAdapterFactory.of(Shape.class, \"type\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":" * Next register all of your subtypes. Every subtype must be explicitly registered. This protects","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":" * your application from injection attacks. If you don\u0027t supply an explicit type label, the type\u0027s","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":" * simple name will be used.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Rectangle.class, \"Rectangle\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Circle.class, \"Circle\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":" * shapeAdapterFactory.registerSubtype(Diamond.class, \"Diamond\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":" * Finally, register the type adapter factory in your application\u0027s GSON builder:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":" * Gson gson \u003d new GsonBuilder()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":" *     .registerTypeAdapterFactory(shapeAdapterFactory)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":" *     .create();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":" * Like {@code GsonBuilder}, this API supports chaining:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":" * RuntimeTypeAdapterFactory\u003cShape\u003e shapeAdapterFactory \u003d RuntimeTypeAdapterFactory.of(Shape.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Rectangle.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Circle.class)","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SoyWater"},"content":" *     .registerSubtype(Diamond.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SoyWater"},"content":" * \u003ch2\u003eSerialization and deserialization\u003c/h2\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SoyWater"},"content":" * In order to serialize and deserialize a polymorphic object, you must specify the base type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SoyWater"},"content":" * explicitly.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SoyWater"},"content":" * Diamond diamond \u003d new Diamond();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SoyWater"},"content":" * String json \u003d gson.toJson(diamond, Shape.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SoyWater"},"content":" * And then:","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SoyWater"},"content":" *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SoyWater"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SoyWater"},"content":" * Shape shape \u003d gson.fromJson(json, Shape.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SoyWater"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SoyWater"},"content":"public final class RuntimeTypeAdapterFactory\u003cT\u003e implements TypeAdapterFactory {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SoyWater"},"content":"    private final Class\u003c?\u003e baseType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SoyWater"},"content":"    private final String typeFieldName;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SoyWater"},"content":"    private final Map\u003cString, Class\u003c?\u003e\u003e labelToSubtype \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SoyWater"},"content":"    private final Map\u003cClass\u003c?\u003e, String\u003e subtypeToLabel \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SoyWater"},"content":"    private final boolean maintainType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SoyWater"},"content":"    private boolean recognizeSubtypes;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SoyWater"},"content":"    private RuntimeTypeAdapterFactory(Class\u003c?\u003e baseType, String typeFieldName, boolean maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SoyWater"},"content":"        if (typeFieldName \u003d\u003d null || baseType \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SoyWater"},"content":"            throw new NullPointerException();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SoyWater"},"content":"        this.baseType \u003d baseType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SoyWater"},"content":"        this.typeFieldName \u003d typeFieldName;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SoyWater"},"content":"        this.maintainType \u003d maintainType;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code typeFieldName} as the type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SoyWater"},"content":"     * field name. Type field names are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SoyWater"},"content":"     * @param maintainType true if the type field should be included in deserialized objects","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SoyWater"},"content":"            Class\u003cT\u003e baseType, String typeFieldName, boolean maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, maintainType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code typeFieldName} as the type","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"SoyWater"},"content":"     * field name. Type field names are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType, String typeFieldName) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, typeFieldName, false);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"SoyWater"},"content":"     * Creates a new runtime type adapter for {@code baseType} using {@code \"type\"} as the type field","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"SoyWater"},"content":"     * name.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SoyWater"},"content":"    public static \u003cT\u003e RuntimeTypeAdapterFactory\u003cT\u003e of(Class\u003cT\u003e baseType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SoyWater"},"content":"        return new RuntimeTypeAdapterFactory\u003c\u003e(baseType, \"type\", false);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SoyWater"},"content":"     * Ensures that this factory will handle not just the given {@code baseType}, but any subtype of","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SoyWater"},"content":"     * that type.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e recognizeSubtypes() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SoyWater"},"content":"        this.recognizeSubtypes \u003d true;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SoyWater"},"content":"     * Registers {@code type} identified by {@code label}. Labels are case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if either {@code type} or {@code label} have already been","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"SoyWater"},"content":"     *     registered on this type adapter.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type, String label) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SoyWater"},"content":"        if (type \u003d\u003d null || label \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SoyWater"},"content":"            throw new NullPointerException();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"SoyWater"},"content":"        if (subtypeToLabel.containsKey(type) || labelToSubtype.containsKey(label)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"types and labels must be unique\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"SoyWater"},"content":"        labelToSubtype.put(label, type);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"SoyWater"},"content":"        subtypeToLabel.put(type, label);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"SoyWater"},"content":"     * Registers {@code type} identified by its {@link Class#getSimpleName simple name}. Labels are","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"SoyWater"},"content":"     * case-sensitive.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if either {@code type} or its simple name have already been","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"SoyWater"},"content":"     *     registered on this type adapter.","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"SoyWater"},"content":"    public RuntimeTypeAdapterFactory\u003cT\u003e registerSubtype(Class\u003c? extends T\u003e type) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"SoyWater"},"content":"        return registerSubtype(type, type.getSimpleName());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"SoyWater"},"content":"    public \u003cR\u003e TypeAdapter\u003cR\u003e create(Gson gson, TypeToken\u003cR\u003e type) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"SoyWater"},"content":"        if (type \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"SoyWater"},"content":"            return null;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"SoyWater"},"content":"        Class\u003c?\u003e rawType \u003d type.getRawType();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"SoyWater"},"content":"        boolean handle \u003d","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"SoyWater"},"content":"                recognizeSubtypes ? baseType.isAssignableFrom(rawType) : baseType.equals(rawType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"SoyWater"},"content":"        if (!handle) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"SoyWater"},"content":"            return null;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"SoyWater"},"content":"        TypeAdapter\u003cJsonElement\u003e jsonElementAdapter \u003d gson.getAdapter(JsonElement.class);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"SoyWater"},"content":"        Map\u003cString, TypeAdapter\u003c?\u003e\u003e labelToDelegate \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"SoyWater"},"content":"        Map\u003cClass\u003c?\u003e, TypeAdapter\u003c?\u003e\u003e subtypeToDelegate \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"SoyWater"},"content":"        for (Map.Entry\u003cString, Class\u003c?\u003e\u003e entry : labelToSubtype.entrySet()) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"SoyWater"},"content":"            TypeAdapter\u003c?\u003e delegate \u003d gson.getDelegateAdapter(this, TypeToken.get(entry.getValue()));","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"SoyWater"},"content":"            labelToDelegate.put(entry.getKey(), delegate);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"SoyWater"},"content":"            subtypeToDelegate.put(entry.getValue(), delegate);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"SoyWater"},"content":"        return new TypeAdapter\u003cR\u003e() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"SoyWater"},"content":"            @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"SoyWater"},"content":"            public R read(JsonReader in) throws IOException {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"SoyWater"},"content":"                JsonElement jsonElement \u003d jsonElementAdapter.read(in);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"SoyWater"},"content":"                JsonElement labelJsonElement;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"SoyWater"},"content":"                if (maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"SoyWater"},"content":"                    labelJsonElement \u003d jsonElement.getAsJsonObject().get(typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"SoyWater"},"content":"                } else {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"SoyWater"},"content":"                    labelJsonElement \u003d jsonElement.getAsJsonObject().remove(typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"SoyWater"},"content":"                if (labelJsonElement \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"SoyWater"},"content":"                            \"cannot deserialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"SoyWater"},"content":"                                    + baseType","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"SoyWater"},"content":"                                    + \" because it does not define a field named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"SoyWater"},"content":"                                    + typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"SoyWater"},"content":"                String label \u003d labelJsonElement.getAsString();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"SoyWater"},"content":"                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"SoyWater"},"content":"                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) labelToDelegate.get(label);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"SoyWater"},"content":"                if (delegate \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"SoyWater"},"content":"                            \"cannot deserialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"SoyWater"},"content":"                                    + baseType","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"SoyWater"},"content":"                                    + \" subtype named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"SoyWater"},"content":"                                    + label","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"SoyWater"},"content":"                                    + \"; did you forget to register a subtype?\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"SoyWater"},"content":"                return delegate.fromJsonTree(jsonElement);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"SoyWater"},"content":"            @Override","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"SoyWater"},"content":"            public void write(JsonWriter out, R value) throws IOException {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"SoyWater"},"content":"                Class\u003c?\u003e srcType \u003d value.getClass();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"SoyWater"},"content":"                String label \u003d subtypeToLabel.get(srcType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"SoyWater"},"content":"                @SuppressWarnings(\"unchecked\") // registration requires that subtype extends T","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"SoyWater"},"content":"                TypeAdapter\u003cR\u003e delegate \u003d (TypeAdapter\u003cR\u003e) subtypeToDelegate.get(srcType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"SoyWater"},"content":"                if (delegate \u003d\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"SoyWater"},"content":"                            \"cannot serialize \" + srcType.getName() + \"; did you forget to register a subtype?\");","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"SoyWater"},"content":"                JsonObject jsonObject \u003d delegate.toJsonTree(value).getAsJsonObject();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"SoyWater"},"content":"                if (maintainType) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"SoyWater"},"content":"                    jsonElementAdapter.write(out, jsonObject);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"SoyWater"},"content":"                    return;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"SoyWater"},"content":"                JsonObject clone \u003d new JsonObject();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"SoyWater"},"content":"                if (jsonObject.has(typeFieldName)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"SoyWater"},"content":"                    throw new JsonParseException(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"SoyWater"},"content":"                            \"cannot serialize \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"SoyWater"},"content":"                                    + srcType.getName()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"SoyWater"},"content":"                                    + \" because it already defines a field named \"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"SoyWater"},"content":"                                    + typeFieldName);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"SoyWater"},"content":"                clone.add(typeFieldName, new JsonPrimitive(label));","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"SoyWater"},"content":"                for (Map.Entry\u003cString, JsonElement\u003e e : jsonObject.entrySet()) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"SoyWater"},"content":"                    clone.add(e.getKey(), e.getValue());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"SoyWater"},"content":"                }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"SoyWater"},"content":"                jsonElementAdapter.write(out, clone);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"SoyWater"},"content":"        }.nullSafe();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false}],"authorContributionMap":{"SoyWater":327}},{"path":"src/main/java/shadow/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents an abstract command in the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * Subclasses of this class define specific actions to be executed.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Provides a default behavior for determining whether executing this command should terminate the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"     * Executes the main logic or action of this command.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"     * This method is abstract and must be implemented by subclasses.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    public abstract String execute();","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Indicates whether this command signals an exit condition.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @return {@code true} if this command causes the application to exit; {@code false} otherwise.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        return false;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":24}},{"path":"src/main/java/shadow/commands/CreateDeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.DeadLine;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * A specific implementation of the {@link Command} class that creates a new {@link DeadLine} task","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * and adds it to the storage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * \u003cp /\u003e","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * The {@code CreateDeadLine} class encapsulates the creation and saving of a deadline task.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * It includes methods to execute the task addition and to parse input for creating the deadline task.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"public class CreateDeadLine extends Command {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    private final DeadLine deadline;","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new {@code CreateDeadLine} command with the specified {@link DeadLine} task.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * The {@link DeadLine} task encapsulates the description and deadline details of a task.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @param deadline the {@link DeadLine} task to be created and managed by this command","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    private CreateDeadLine(DeadLine deadline) {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Executes the addition of a new {@link DeadLine} task to the storage and returns a confirmation message.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * @return a string message confirming the addition of the {@link DeadLine} task, including its details","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().addTask(this.deadline);","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        return \"Added:\\n\" + deadline.toString();","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@code CreateDeadLine} command instance from the given parts array.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Validates that the array contains exactly two elements, representing","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * the task details and deadline. If validation passes, a new {@code CreateDeadLine}","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * object is instantiated with a {@link DeadLine} task created from the parsed deadline details.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *              parts[0] is expected to be the command keyword \"deadline\"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     *              parts[1] contains the task description and deadline separated by \"/by\"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code CreateDeadLine} instance representing the command","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the array does not contain exactly two elements","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    public static CreateDeadLine of(String[] parts) {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"deadline\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(DeadLine.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:40:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        return new CreateDeadLine(DeadLine.of(parts[1]));","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false}],"authorContributionMap":{"SoyWater":58}},{"path":"src/main/java/shadow/commands/CreateEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Event;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * Represents a command to create an event task in the system.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * The {@code CreateEvent} command encapsulates the creation of an event","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * task and its addition to the storage. It inherits functionality from","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * the {@link Command} class and implements specific behavior for execution.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class CreateEvent extends Command {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    private final Event event;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new {@code CreateEvent} command with the specified event.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @param event the {@link Event} task to be created and added to the system","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private CreateEvent(Event event) {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        this.event \u003d event;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * Executes the command, adding the associated event to the storage and returning","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * a confirmation message with the event details.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * @return a {@code String} message confirming the event addition, including the details of the event","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().addTask(this.event);","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        return \"Added:\\n\" + event.toString();","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance of {@link CreateEvent} using the provided array of input parts.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * The input array is expected to contain a command keyword and the event description with","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * start and end times. Validates the input to ensure it has exactly two elements.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array where:","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     *              - {@code parts[0]} is the command keyword (e.g., \"event\")","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     *              - {@code parts[1]} contains the event description and time details in the","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *                expected format \"taskName /from \u003cfrom\u003e /to \u003cto\u003e\"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code CreateEvent} instance that encapsulates the {@link Event} task created","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     *         from the description and time details","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input array does not contain exactly two elements","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    public static CreateEvent of(String[] parts) {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"event\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(Event.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        return new CreateEvent(Event.of(parts[1]));","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false}],"authorContributionMap":{"SoyWater":56}},{"path":"src/main/java/shadow/commands/CreateToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.ToDo;","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * Represents a command for creating a new {@link ToDo} task and adding it to storage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * This class is a specific implementation of the {@link Command} class, designed","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * to handle the creation and addition of {@link ToDo} tasks.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"public class CreateToDo extends Command {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    private final ToDo todo;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new {@code CreateToDo} command with the specified {@code ToDo} task.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * This command is responsible for adding the provided {@code ToDo} task to storage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @param todo the {@code ToDo} task to be added","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private CreateToDo(ToDo todo) {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * Executes the command to add the {@code ToDo} task to the storage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * The task is added to the list of existing tasks managed by the {@code Storage} singleton instance.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * @return a {@code String} message confirming the task has been added,","lastModifiedDate":"2025-09-10T17:38:17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * including the string representation of the task","lastModifiedDate":"2025-09-10T17:38:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().addTask(this.todo);","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        return \"Added:\\n\" + this.todo.toString();","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@code CreateToDo} command from the given input parts.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * The input should be an array where the first element specifies the command","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * keyword (\"todo\") and the second element provides the task description.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     *              - {@code parts[0]} is expected to be \"todo\"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *              - {@code parts[1]} is the description of the task to be created","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code CreateToDo} instance representing the command to create a {@code ToDo} task","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input array does not have exactly two elements","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"    public static CreateToDo of(String[] parts) {","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"todo\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(ToDo.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:38:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        return new CreateToDo(ToDo.of(parts[1]));","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T11:01:27","isFullCredit":false}],"authorContributionMap":{"SoyWater":57}},{"path":"src/main/java/shadow/commands/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * Represents a command to delete a specific task from the task list in storage.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * This command removes the task at the specified index and provides feedback to the user upon successful removal.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: delete \u003cTask Number\u003e\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * Creates a new DeleteTask command to remove a task at the specified index.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be removed","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    private DeleteTask(int taskIndex) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * Executes the delete operation by removing the task at the given index","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * from storage, then prints a confirmation message.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        Task removed \u003d Storage.getInstance().removeTask(this.taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        return String.format(\"Removed: %s\", removed.toString());","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Creates an instance of {@link DeleteTask} based on the provided input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * This factory method expects exactly two input elements: the command keyword","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * (e.g., \"delete\") and the task number to delete. It parses the task number,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * validates that it refers to a valid task in {@link Storage}, and constructs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * the {@code DeleteTask} accordingly.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is expected to be the \"delete\" command keyword\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} is the task number to delete (1-based index)\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code DeleteTask} instance with the validated task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts.length !\u003d 2}\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts[1]} is not a valid number\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003ethe task number is out of bounds\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    public static DeleteTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"delete\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(DeleteTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"            if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"                String invalidTaskNumberErrorMessage \u003d \"You have inputted an invalid task number\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(invalidTaskNumberErrorMessage);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"            return new DeleteTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(DeleteTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":75}},{"path":"src/main/java/shadow/commands/FindTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * Represents a command that finds and displays tasks matching a given keyword.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"public class FindTask extends Command {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: find \u003cfindString\u003e\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Constructs a FindTask with a filtered list of tasks.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * @param tasks the list of tasks that match the search keyword","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private FindTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Executes the find command.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * If no tasks are found, it displays a \"Found nothing\" message.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * Otherwise, it displays the list of found tasks with their corresponding index.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"            return \"You don\u0027t have any tasks matching your search\";","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Found:\\n\");","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); ++i) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            sb.append(String.format(\"%d: %s\\n\", i + 1, this.tasks.get(i)));","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * Creates a new FindTask based on the input command parts.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * @param parts the parts of the command input, where parts[1] should be the search string","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * @return findTask object with filtered tasks","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the command format is invalid","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"    public static FindTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"find\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(FindTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"            String findString \u003d parts[1];","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"            return new FindTask(FindTask.filterTasks(Storage.getInstance().getTasks(), findString));","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(FindTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     * Filters the given list of tasks by the specified keyword.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"     * @param tasks      the list of tasks to filter","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"     * @param findString the keyword to filter tasks by","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"     * @return a list of tasks whose names contain the given keyword","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    private static List\u003cTask\u003e filterTasks(List\u003cTask\u003e tasks, String findString) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        return tasks","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"                .stream()","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"                .filter(task -\u003e task.contains(findString))","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false}],"authorContributionMap":{"SoyWater":79}},{"path":"src/main/java/shadow/commands/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Represents a command for listing all tasks currently stored in the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * {@code ListTasks} is a singleton class which extends the {@code Command} abstract class.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * It provides functionality to display all tasks with their respective indices and descriptions.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"public class ListTasks extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    private static ListTasks instance;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to prevent direct instantiation.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * ListTasks is a singleton.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private ListTasks() {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * Executes the list operation by printing all tasks stored in Storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Each task is displayed with its index (starting from 1) and description.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"        StringBuilder sb \u003d new StringBuilder(\"List of tasks:\\n\");","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        for (int i \u003d 0; i \u003c Storage.getInstance().getTasks().size(); ++i) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"            sb.append(String.format(\"%d: %s\\n\", i + 1, Storage.getInstance().getTasks().get(i)));","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code ListTasks} command.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * @param parts the command parts parsed from user input (ignored in this method)","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code ListTasks} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException never thrown by this method but declared for consistency","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    public static ListTasks of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"list\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        if (ListTasks.instance \u003d\u003d null) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"            ListTasks.instance \u003d new ListTasks();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"        return ListTasks.instance;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false}],"authorContributionMap":{"SoyWater":51}},{"path":"src/main/java/shadow/commands/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Represents a command to mark a specific task as done.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * This class encapsulates the logic for identifying the task to be marked","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * based on its index and delegating the marking operation to {@code Storage}.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class MarkTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: mark \u003cTask Number\u003e\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to create a MarkTask command for marking a task as done.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * Instances should be created via the factory method {@code MarkTask.create(int)}.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    private MarkTask(int taskIndex) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Executes the mark operation by marking the specified task as done in storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().markTask(this.taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        return \"Noted, the following task has been marked:\\n\"","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"                + Storage.getInstance().getTasks().get(this.taskIndex).toString();","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@code MarkTask} command from the given input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Expects exactly two parts: the command and the task number.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * Parses the task number (1-based) and converts it to a zero-based index.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * Validates the index against the current list of tasks in {@link Storage}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * Throws an {@link IllegalArgumentException} if the input is malformed or the index is invalid.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @param parts the command parts parsed from user input","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code MarkTask} instance targeting the specified task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input format is invalid, or the task number is out of range","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    public static MarkTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"mark\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(MarkTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"            if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"                String invalidTaskNumberErrorMessage \u003d \"You have inputted an invalid task number\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(invalidTaskNumberErrorMessage);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"            return new MarkTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(MarkTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":65}},{"path":"src/main/java/shadow/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.Map;","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.util.function.Function;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * The {@code Parser} class is responsible for interpreting user input and deciding","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * whether it represents a command to be executed or a task to be created. This class","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * serves as the primary mechanism for converting user input into executable actions","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * or new tasks within the application.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    private static final Map\u003cString, Function\u003cString[], Command\u003e\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    static {","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"mark\", MarkTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"unmark\", UnmarkTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"list\", ListTasks::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"delete\", DeleteTask::of);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"find\", FindTask::of);","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"todo\", CreateToDo::of);","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"event\", CreateEvent::of);","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"deadline\", CreateDeadLine::of);","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"source\", Source::of);","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        commands.put(\"bye\", parts -\u003e new TerminateCommand());","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Parses the given string input to determine the appropriate command to execute.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * The method analyzes the command keyword (the first word in the input) and","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * matches it with a predefined set of commands. If the command is found,","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * it applies the associated function to interpret the input and generate the appropriate Command object.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * If the input is empty or unrecognized, it returns a singleton instance of {@code UnknownCommand}.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @param demand the user input string representing the command and its arguments","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * @return a {@code Command} object corresponding to the parsed input;","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     *         returns {@code UnknownCommand} if the command is empty or unrecognized","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    public static Command parse(String demand) {","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        if (demand.trim().isEmpty()) {","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            return UnknownCommand.getInstance();","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        String[] parts \u003d demand.split(\" \", 2);","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        parts[0] \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        Function\u003cString[], Command\u003e command \u003d commands.get(parts[0]);","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"            return UnknownCommand.getInstance();","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        return command.apply(parts);","lastModifiedDate":"2025-09-05T12:20:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T23:42:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false}],"authorContributionMap":{"SoyWater":53}},{"path":"src/main/java/shadow/commands/Source.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * Represents a command that sets a source file path for the application\u0027s storage.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * This command allows the user to designate either a temporary or default file path","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * for task storage. The file path can either be explicitly provided or set to a default value.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class Source extends Command {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    private final String filePath;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    private Source(String filePath) {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Executes the command to set the source file path for the application\u0027s storage.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * If the file path is \"default\", it resets the source path to the predefined default value.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Otherwise, it attempts to set a temporary source file path based on the provided input.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * @return a message indicating whether the default file path was set or if the temporary","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     *         file path was successfully updated, including the specific file path if applicable","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if an error occurs while reading from the specified file","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        if (filePath.equalsIgnoreCase(\"default\")) {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"            Storage.getInstance().setDefaultSourcePath();","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            return \"Default file path set\";","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"            Storage.getInstance().setTemporarySourcePath(filePath);","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"            return \"Temporary file path set to \" + filePath;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * Factory method to create a new Source command from the given input parts.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * Expects the first element of the parts array to be the literal \"source\", and","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * the second element to be the file path to be used.","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings containing the command elements;","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     *              parts[0] should be \"source\", and parts[1] should be the file path","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * @return a new Source instance initialized with the provided file path","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input format is invalid (e.g., parts length is not 2)","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @throws AssertionError if parts[0] do not equal \"source\"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    public static Source of(String[] parts) {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"source\"));","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Usage: source \u003cfile path\u003e\");","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        return new Source(parts[1]);","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false}],"authorContributionMap":{"SoyWater":64}},{"path":"src/main/java/shadow/commands/TerminateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a command that terminates the application.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * This command signals the application to exit when executed.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Typically, invoked when the user specifies an exit command in the application\u0027s input.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"public class TerminateCommand extends Command {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"        return \"Terminating application\";","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        return true;","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false}],"authorContributionMap":{"SoyWater":19}},{"path":"src/main/java/shadow/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a command that handles unknown or unrecognized user input.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * This command is used as a fallback when the provided input does not match any known commands.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"    private static final UnknownCommand unknownCommand \u003d new UnknownCommand();","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"        return \"Unknown command\";","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Provides access to the singleton instance of the {@code UnknownCommand} class.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * This method ensures that only one instance of {@code UnknownCommand} exists","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * and is reused whenever needed.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton instance of {@code UnknownCommand}","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    public static UnknownCommand getInstance() {","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        return UnknownCommand.unknownCommand;","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-05T12:20:21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T12:17:54","isFullCredit":false}],"authorContributionMap":{"SoyWater":25}},{"path":"src/main/java/shadow/commands/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.commands;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import shadow.storage.Storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * Represents the command to unmark a task as not done.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * This command interacts with the {@link Storage} class to update the task status.","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:42:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"public class UnmarkTask extends Command {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: unmark \u003cTask Number\u003e\";","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Private constructor to create an UnmarkTask command for unmarking a task as not done.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * Instances should be created via the factory method {@code UnmarkTask.create(int)}.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @param taskIndex the index of the task to be unmarked","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    private UnmarkTask(int taskIndex) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Executes the unmark operation by marking the specified task as not done in storage.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public String execute() {","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        Storage.getInstance().unmarkTask(this.taskIndex);","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        return \"Noted, the following task has been unmarked:\\n\"","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"                + Storage.getInstance().getTasks().get(this.taskIndex).toString();","lastModifiedDate":"2025-09-04T23:11:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * Creates an instance of {@link UnmarkTask} based on the provided input parts.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * This factory method expects the input array to contain exactly two elements:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * the command type (e.g., \"unmark\") and the task number to unmark. The task number","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * is parsed, validated against the task list in {@link Storage}, and then used","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * to construct the {@code UnmarkTask}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @param parts an array of strings where:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     *              \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[0]} is expected to be the \"unmark\" command keyword\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     *                  \u003cli\u003e{@code parts[1]} is the task number to unmark (1-based index)\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     *              \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code UnmarkTask} instance with the validated task index","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if:","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts.length !\u003d 2}\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003e{@code parts[1]} is not a valid number\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     *         \u003cli\u003ethe task number is out of bounds\u003c/li\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"    public static UnmarkTask of(String[] parts) throws IllegalArgumentException {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        assert(parts[0].equals(\"unmark\"));","lastModifiedDate":"2025-09-10T17:31:19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(UnmarkTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"            if (taskIndex \u003e\u003d Storage.getInstance().getTasks().size() || taskIndex \u003c 0) {","lastModifiedDate":"2025-08-29T01:30:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"                throw new IllegalArgumentException(\"You have inputted an invalid task number\");","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"            return new UnmarkTask(taskIndex);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(UnmarkTask.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:46:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false}],"authorContributionMap":{"SoyWater":76}},{"path":"src/main/java/shadow/parsers/DateTimeAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.parsers;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * A custom {@link TypeAdapter} implementation for serializing and deserializing","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * {@link LocalDateTime} objects using Gson.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":" * This adapter converts {@link LocalDateTime} instances into ISO-8601 formatted","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":" * strings for JSON serialization and parses ISO-8601 formatted strings back into","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":" * {@link LocalDateTime} objects during deserialization.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":" * It is designed to be used with {@link GsonBuilder}\u0027s {@code registerTypeAdapter}","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":" * method for seamless integration into the serialization and deserialization workflow.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"public class DateTimeAdapter extends TypeAdapter\u003cLocalDateTime\u003e {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * Serializes a {@link LocalDateTime} object to JSON.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Writes the date-time as a formatted string using the defined formatter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * If the value is {@code null}, writes a JSON null value.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @param out the {@link JsonWriter} to write to","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @param value the {@link LocalDateTime} value to serialize, may be {@code null}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    public void write(JsonWriter out, LocalDateTime value) throws IOException {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            out.nullValue();","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        } else {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"            out.value(value.format(formatter));","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * Deserializes a {@link LocalDateTime} object from JSON.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * Reads a date-time string from JSON and parses it using the defined formatter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @param in the {@link JsonReader} to read from","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    public LocalDateTime read(JsonReader in) throws IOException {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        String str \u003d in.nextString();","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        return LocalDateTime.parse(str, formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false}],"authorContributionMap":{"SoyWater":62}},{"path":"src/main/java/shadow/parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.parsers;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * A utility class providing methods to parse, format, and calculate time-related operations","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * with {@link LocalDateTime} objects.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * This class handles multiple recognized date-time formats, allowing flexible parsing","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * of input strings. It also provides functionality to convert {@link LocalDateTime} objects","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * to a consistent string representation and compare dates for time calculations.","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:45:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"public class DateTimeParser {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    private static final List\u003cDateTimeFormatter\u003e formatters \u003d List.of(","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ISO_LOCAL_DATE_TIME,","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"h:mm a dd/MM/yyyy\"),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm dd-MM-yyyy\")","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy, EEEE, HH:mm\");","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * Parses a date-time string into a {@link LocalDateTime} object.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Tries multiple predefined formats until one successfully parses the input.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * If none match, throws an {@link IllegalArgumentException}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @param input the date-time string to parse","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @return the parsed {@link LocalDateTime} object","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input does not match any supported format","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    public static LocalDateTime parse(String input) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        for (DateTimeFormatter formatter : DateTimeParser.formatters) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            try {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"               // continue","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        throw new IllegalArgumentException(\"Unrecognized date/time format: \" + input);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * Formats a {@link LocalDateTime} object into a string using a consistent pattern.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * @param dateTime the {@link LocalDateTime} to format","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @return the formatted date-time string","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        return dateTime.format(DateTimeParser.formatter);","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * Calculates the number of whole days between the current time and the given {@link LocalDateTime}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"     * @param dateTime the target date-time to compare with now","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * @return the number of days left (positive if in the future, negative if in the past)","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"    public static long timeLeft(LocalDateTime dateTime) {","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"        return ChronoUnit.DAYS.between(LocalDateTime.now(), dateTime);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false}],"authorContributionMap":{"SoyWater":68}},{"path":"src/main/java/shadow/parsers/FilePathParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.parsers;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * A utility class for parsing, validating, and managing file paths.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * This class provides methods to transform input file paths into standardized","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * formats, handle user-specific path expansions, and perform optional validations","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * on the paths. It also includes functionality to create parent directories","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * if necessary.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"public class FilePathParser {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * Resolves a user-provided file path, applying transformations such as expanding","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * tilde characters, removing quotes, normalizing slashes, and validating the path.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * Additionally, optional creation of parent directories and checking for illegal","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * characters are supported.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * @param inputPath the input file path to resolve; must not be null or empty","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * @param createParentDirs if true, ensures that all parent directories exist by creating them if necessary","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * @param checkIllegalChars if true, checks the resolved path for illegal characters","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     *                          and throws an exception if any are found","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * @return the resolved and normalized file path as a {@link Path} object","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input path is null, empty,","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     *                                  or contains illegal characters when validation is enabled","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs while creating parent directories","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    public static Path resolveUserPath(","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"            String inputPath,","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"            boolean createParentDirs,","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"            boolean checkIllegalChars","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    ) throws IOException {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        if (inputPath \u003d\u003d null || inputPath.isEmpty()) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Input path cannot be null or empty.\");","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        String expanded \u003d expandTilde(inputPath);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        String unquoted \u003d removeQuotes(expanded);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        String slashed \u003d normalizeSlashes(unquoted);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        Path path \u003d normalizePath(slashed);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        if (checkIllegalChars) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"            validateIllegalCharacters(path);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        if (createParentDirs) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"            createParentDirectories(path);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        return path;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * Expands a tilde (\"~\") in the provided file path to the user\u0027s home directory.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     * If the path starts with a tilde, it is replaced with the value of the system","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"     * property \"user.home\". If the path does not start with a tilde, it is returned","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * unchanged.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * @param path the file path to process; must not be null","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     * @return the path with the tilde expanded to the user\u0027s home directory, or","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     *         the original path if no tilde is found","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"    private static String expandTilde(String path) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        return path.startsWith(\"~\")","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"                ? path.replaceFirst(\"^~\", System.getProperty(\"user.home\"))","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"                : path;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"     * Removes surrounding single or double quotes from the given string if both are present.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"     * If the string does not start and end with matching quotes, the string is returned unchanged.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"     * @param path the input string to process; must not be null","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"     * @return the string without surrounding quotes or the original string if no surrounding quotes are found","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    private static String removeQuotes(String path) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"        if ((path.startsWith(\"\\\"\") \u0026\u0026 path.endsWith(\"\\\"\"))","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"                || (path.startsWith(\"\u0027\") \u0026\u0026 path.endsWith(\"\u0027\"))) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"            return path.substring(1, path.length() - 1);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"        return path;","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"     * Normalizes the given file path by replacing all backslashes with forward slashes for Windows file paths.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"     * @param path the file path to normalize; must not be null","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"     * @return the normalized file path with backslashes replaced by forward slashes","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"    private static String normalizeSlashes(String path) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"        return path.replace(\"\\\\\", \"/\");","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"     * Converts the input string representing a file path into a normalized {@link Path} object.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"     * The normalization process converts the path to an absolute path and resolves any redundant","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"     * elements such as \".\" and \"..\".","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"     * @param inputPath the input file path as a string; must not be null","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"     * @return the normalized {@link Path} object representing the input file path","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"    private static Path normalizePath(String inputPath) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"        return Paths.get(inputPath).toAbsolutePath().normalize();","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"     * Validates a file\u0027s path to ensure it does not contain any illegal characters.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"     * Illegal characters include: `\u003c`, `\u003e`, `:`, `\"`, `/`, `\\`, `|`, `?`, `*`.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"     * If the path contains any of these characters, an {@link IllegalArgumentException}","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"     * is thrown with a descriptive message.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"     * @param path the {@link Path} object representing the file\u0027s path to validate","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the file\u0027s name contains any illegal characters","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"    private static void validateIllegalCharacters(Path path) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"        String filename \u003d path.getFileName().toString();","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"        Pattern illegal \u003d Pattern.compile(\"[\u003c\u003e:\\\"/\\\\\\\\|?*]\");","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"        if (illegal.matcher(filename).find()) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(\"Path contains illegal characters: \" + filename);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"     * Ensures that all parent directories for the given path exist by creating them","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":"     * if they do not already exist.","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"     * @param path the {@link Path} object representing the file or directory","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":"     *             for which parent directories need to be created","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an I/O error occurs during directory creation","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":"    private static void createParentDirectories(Path path) throws IOException {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SoyWater"},"content":"        Path parent \u003d path.getParent();","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SoyWater"},"content":"        if (parent !\u003d null \u0026\u0026 !Files.exists(parent)) {","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SoyWater"},"content":"            Files.createDirectories(parent);","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-11T22:14:56","isFullCredit":false}],"authorContributionMap":{"SoyWater":143}},{"path":"src/main/java/shadow/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.storage;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.io.Reader;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.io.Writer;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import java.util.List;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"import com.google.gson.typeadapters.RuntimeTypeAdapterFactory;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeAdapter;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.FilePathParser;","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.DeadLine;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Event;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.Task;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"import shadow.tasks.ToDo;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":" * A singleton class responsible for managing the storage of tasks.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":" * Provides methods to load, save, add, remove, and modify tasks.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":" * Tasks are persisted in a JSON file in the user\u0027s home directory.","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    private static final String DEFAULT_FILE_HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    private static final Path DEFAULT_FILE_DIRECTORY \u003d Paths.get(DEFAULT_FILE_HOME, \".shadowData\");","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    private static final Path DEFAULT_FILE_PATH \u003d DEFAULT_FILE_DIRECTORY.resolve(\"tasks.json\");","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    private static Storage instance;","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:47:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    private final Gson gson;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"    private Path filePath;","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    private final Type taskListType \u003d new TypeToken\u003cList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new {@code Storage} instance.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * Initializes the storage directory and file path in the user\u0027s home directory,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * sets up Gson serialization with custom adapters for {@link Task} and {@link LocalDateTime},","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * and attempts to load existing tasks from disk.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * If the storage directory does not exist, it will be created.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    private Storage() {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        this.filePath \u003d DEFAULT_FILE_PATH;","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        this.gson \u003d new GsonBuilder()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"                .registerTypeAdapterFactory(","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"                        RuntimeTypeAdapterFactory.of(Task.class, \"type\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(ToDo.class, \"todo\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(DeadLine.class, \"deadline\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"                                .registerSubtype(Event.class, \"event\")","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"                )","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"                .registerTypeAdapter(LocalDateTime.class, new DateTimeAdapter())","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"                .setPrettyPrinting()","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"                .create();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"            if (!Files.exists(DEFAULT_FILE_DIRECTORY)) {","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"                Files.createDirectories(DEFAULT_FILE_DIRECTORY);","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to create storage directory: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"        load();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code Storage} class.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code Storage} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    public static Storage getInstance() {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"        if (Storage.instance \u003d\u003d null) {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"            Storage.instance \u003d new Storage();","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"        return Storage.instance;","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"     * Loads tasks from the JSON file into memory.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"     * If the file does not exist, no action is taken.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"     * If an error occurs during reading, an error message is printed to standard error.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"    private void load() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"            return;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        try (Reader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"            List\u003cTask\u003e load \u003d gson.fromJson(reader, taskListType);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"            if (load !\u003d null) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"                this.tasks \u003d load;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"            }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to load tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"     * Saves the current list of tasks to the JSON file.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"     * If an error occurs during writing, an error message is printed to standard error.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":"    public void save() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"        try (Writer writer \u003d Files.newBufferedWriter(filePath)) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"            gson.toJson(tasks, taskListType, writer);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":"            System.err.println(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"     * Adds a new task to the list and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"SoyWater"},"content":"     * @param task the {@link Task} to add","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"SoyWater"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-05T12:22:47","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"SoyWater"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"SoyWater"},"content":"     * Removes the task at the specified index and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to remove","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"SoyWater"},"content":"     * @return the removed {@link Task}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"SoyWater"},"content":"    public Task removeTask(int i) {","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"SoyWater"},"content":"        Task removed \u003d this.tasks.remove(i);","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"SoyWater"},"content":"        return removed;","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:35:20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"SoyWater"},"content":"     * Returns the current list of tasks stored in memory.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"SoyWater"},"content":"     * @return a {@link List} of {@link Task} objects","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"SoyWater"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"SoyWater"},"content":"        return this.tasks;","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"SoyWater"},"content":"     * Marks the task at the specified index as done and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to mark","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"SoyWater"},"content":"    public void markTask(int i) {","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"SoyWater"},"content":"        this.tasks.get(i).mark();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"SoyWater"},"content":"     * Unmarks the task at the specified index as not done and persists the updated list.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"SoyWater"},"content":"     * @param i the index of the task to unmark","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"SoyWater"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"SoyWater"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"SoyWater"},"content":"        this.tasks.get(i).unmark();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"SoyWater"},"content":"        save();","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-28T14:39:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"SoyWater"},"content":"     * Sets a temporary source file path for storing tasks and initializes","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"SoyWater"},"content":"     * a new task list. The provided path is resolved and validated using","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"SoyWater"},"content":"     * {@link FilePathParser#resolveUserPath(String, boolean, boolean)}.","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"SoyWater"},"content":"     * @param path the temporary source file path to be set. This path is resolved","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"SoyWater"},"content":"     *             to an absolute, normalized form and must not contain illegal characters.","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"SoyWater"},"content":"     * @throws IOException if an error occurs while resolving the path or creating","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"SoyWater"},"content":"     *                     necessary parent directories.","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"SoyWater"},"content":"    public void setTemporarySourcePath(String path) throws IOException {","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"SoyWater"},"content":"        this.filePath \u003d FilePathParser.resolveUserPath(path, true, true);","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"SoyWater"},"content":"        load();","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"SoyWater"},"content":"     * Sets the default source file path for storing tasks and initializes a new task list.","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"SoyWater"},"content":"     * This method resets the file path to the predefined default value and replaces the","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"SoyWater"},"content":"     * current in-memory list of tasks with an empty list. It also attempts to load any","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"SoyWater"},"content":"     * existing tasks from the default file path into memory.","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"SoyWater"},"content":"    public void setDefaultSourcePath() {","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"SoyWater"},"content":"        this.filePath \u003d DEFAULT_FILE_PATH;","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"SoyWater"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"SoyWater"},"content":"        load();","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T22:15:40","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T14:25:09","isFullCredit":false}],"authorContributionMap":{"SoyWater":218}},{"path":"src/main/java/shadow/tasks/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeParser;","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * Represents a task with a specific deadline, extending the functionality of the {@link Task} class.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * A DeadLine task includes a deadline date and time by which the task is expected to be completed.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"public class DeadLine extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: deadline \u003ctaskName\u003e /by \u003cby\u003e\";","lastModifiedDate":"2025-09-10T17:40:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:40:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new DeadLine task with the specified name and deadline.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * @param deadline the date and time by which the task must be completed","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    public DeadLine(String name, LocalDateTime deadline) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        long timeLeft \u003d DateTimeParser.timeLeft(this.deadline);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        return String.format(\"[D]%s (by: %s): \", super.toString(), DateTimeParser.format(this.deadline))","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"                + (timeLeft \u003c 0 ? \"deadline passed\" : timeLeft + \" days left\");","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link DeadLine} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * Expects the input to contain a task name and a deadline separated by the \"/by\" delimiter.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Parses the deadline date-time using {@link DateTimeParser}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null} or improperly formatted, throws an {@link IllegalArgumentException}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * with usage instructions.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the deadline task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description and deadline, separated by \"/by\"","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code DeadLine} instance representing the task with its deadline","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null} or missing the \"/by\" part","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    public static DeadLine of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(DeadLine.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:40:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        String[] deadlineDetails \u003d input.split(\"/by\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(DeadLine.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:40:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime deadlineDateTime \u003d DateTimeParser.parse(deadlineDetails[1].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        return new DeadLine(deadlineDetails[0].trim(), deadlineDateTime);","lastModifiedDate":"2025-09-05T12:21:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":63}},{"path":"src/main/java/shadow/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import shadow.parsers.DateTimeParser;","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * Represents an event task with a name, start time, and end time.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * An Event is a subclass of {@link Task} that includes additional","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" * attributes for start and end date-time values. It provides functionality","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * to format its details into a string representation, calculate the","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * time remaining until the event starts, and validate input parsing","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * for creating new event instances.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\";","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new Event task with the specified name, start time, and end time.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the event","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * @param startTime the date and time when the event starts","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * @param endTime the date and time when the event ends","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    public Event(String name, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        long daysLeft \u003d DateTimeParser.timeLeft(this.startTime);","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        return String.format(","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"                \"[E]%s (from: %s to: %s): \",","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"                super.toString(),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"                DateTimeParser.format(this.startTime),","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"                DateTimeParser.format(this.endTime)","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        ) + (daysLeft \u003c 0 ? \"event passed\" : daysLeft + \" days left\");","lastModifiedDate":"2025-08-28T17:14:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link Event} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * Expects the input to contain a task name, a start time, and an end time,","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * separated by the delimiters \"/from\" and \"/to\" respectively.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * Parses the start and end times using {@link DateTimeParser}.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null} or improperly formatted, throws an {@link IllegalArgumentException}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * with usage instructions.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the event task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description, start time, and end time","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code Event} instance representing the task with its start and end times","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null} or missing required delimiters","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"    public static Event of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(Event.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"        String[] fromSplit \u003d input.split(\"/from\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        if (fromSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(Event.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        String[] toSplit \u003d fromSplit[1].split(\"/to\", 2);","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"        if (toSplit.length \u003c 2) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(Event.ERROR_MESSAGE);","lastModifiedDate":"2025-09-10T17:39:46","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime startTime \u003d DateTimeParser.parse(toSplit[0].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime endTime \u003d DateTimeParser.parse(toSplit[1].trim());","lastModifiedDate":"2025-08-28T17:03:33","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        return new Event(fromSplit[0].trim(), startTime, endTime);","lastModifiedDate":"2025-09-05T12:21:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":80}},{"path":"src/main/java/shadow/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a task with a name and a completion status.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * A task can be marked as completed or unmarked if it is not completed.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"public class Task {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"    private final String name;","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new Task with the specified name.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    public Task(String name) {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code isMarked} flag to {@code true} and prints a confirmation","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * message to the console, including the task\u0027s string representation.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void mark() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * Unmarks the task (marks it as not completed).","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Sets the {@code isMarked} flag to {@code false} and prints a confirmation","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * message to the console, including the task\u0027s string representation.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    public void unmark() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        return String.format(","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"                \"[%s] %s\",","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"                this.isMarked ? \"X\" : \" \",","lastModifiedDate":"2025-08-24T20:58:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"                this.name","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:55:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     * Checks if this task\u0027s name contains the specified substring.","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * @param match the substring to search for in the task\u0027s name","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * @return true if the name contains the substring; false otherwise","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"    public boolean contains(String match) {","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        return this.name.contains(match);","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T12:01:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T17:55:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T17:46:06","isFullCredit":false}],"authorContributionMap":{"SoyWater":62}},{"path":"src/main/java/shadow/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":" * Represents a ToDo task, a specific type of task that only includes","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":" * a description without any associated time constraints.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * A ToDo task is a subclass of {@link Task}. It inherits the ability to","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * mark and unmark tasks, as well as the ability to check if its name contains","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" * specified substrings. Additionally, it provides a string representation","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":" * that distinguishes it as a ToDo task.","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:52:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    public static final String ERROR_MESSAGE \u003d \"Usage: todo \u003ctaskName\u003e\";","lastModifiedDate":"2025-09-10T17:38:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Constructs a new ToDo task with the specified name.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * @param name the name or description of the ToDo task","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    public ToDo(String name) {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        super(name);","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     * Creates a new {@link ToDo} task from the given input string.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * Trims the input and constructs a {@code ToDo} object using it as the task name.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     * If the input is {@code null}, an {@link IllegalArgumentException} is thrown to indicate incorrect usage.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * Upon successful creation, the task is printed to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"     * @param input the raw user input containing the task description","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"     * @return a new {@code ToDo} instance representing the task","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * @throws IllegalArgumentException if the input is {@code null}","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"    public static ToDo of(String input) {","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"            throw new IllegalArgumentException(ToDo.ERROR_MESSAGE);","lastModifiedDate":"2025-09-11T17:21:01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-22T12:31:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        return new ToDo(input.trim());","lastModifiedDate":"2025-09-05T12:21:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T11:43:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-21T23:35:28","isFullCredit":false}],"authorContributionMap":{"SoyWater":48}},{"path":"src/main/java/shadow/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":" * Represents a custom dialog box for user interaction in a GUI-based application.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":" * This class extends the HBox layout and uses FXML for its structure and appearance.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":" * A DialogBox contains a label for the dialog text and an image view for a display picture.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"     * Creates a new DialogBox with the specified text and image.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"     * Loads the associated FXML layout, initializes the DialogBox, and sets its content.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"     * @param text the text to be displayed in the dialog","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"     * @param i the image to be displayed in the dialog","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    public DialogBox(String text, Image i) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        displayPicture.setImage(i);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     * Reverses the order of the child nodes within the DialogBox and sets its alignment to top-left.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * @return the current DialogBox instance with reversed child nodes and updated alignment","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    private DialogBox flip() {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        Collections.reverse(children);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        this.getChildren().setAll(children);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        return this;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     * Creates a user dialog box with the specified dialog text and image.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     * @param s the string to be displayed in the dialog box","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     * @param i the image to be displayed in the dialog box","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     * @return a new instance of {@code DialogBox} containing the provided text and image","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        return new DialogBox(s, i);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"     * Creates a Duke dialog box with the specified text and image.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"     * The dialog box is flipped such that the image is on the left and the text is on the right.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"     * @param s the string to be displayed in the dialog box","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"     * @param i the image to be displayed in the dialog box","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"     * @return a new instance of {@code DialogBox} containing the provided text and image, flipped for Duke\u0027s perspective","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    public static DialogBox getDukeDialog(String s, Image i) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"        return (new DialogBox(s, i)).flip();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":85}},{"path":"src/main/java/shadow/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * The Launcher class serves as the entry point to the application.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * It is responsible for launching the JavaFX application by invoking the {@code Application.launch} method","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * with the main application class, {@code Main}, and the provided runtime arguments.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class Launcher {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":14}},{"path":"src/main/java/shadow/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":" * Represents the main application class of a JavaFX program.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":" * The {@code Main} class extends {@code Application} and serves as the entry point for the JavaFX GUI.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":" * It is responsible for initializing and displaying the primary stage of the application.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":" * The application is configured to load the main user interface layout from an FXML file.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"     * Starts the JavaFX application by initializing and displaying the main stage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"     * This method loads the primary user interface from an FXML file and sets it as the scene of the stage.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"     * It also handles any IOExceptions that occur during FXML loading.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"     * @param stage the primary stage for this application","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    @Override","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            stage.show();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":38}},{"path":"src/main/java/shadow/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"import shadow.commands.Command;","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"import shadow.commands.Parser;","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"import java.util.Objects;","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":" * Represents the main window of the application that serves as the primary user interface.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":" * This class extends {@code AnchorPane} and handles user interactions as well as output display.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    private final String userImagePath \u003d \"/images/DaUser.jpg\";","lastModifiedDate":"2025-09-10T17:48:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    private final String shadowImagePath \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2025-09-10T17:48:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(userImagePath))","lastModifiedDate":"2025-09-10T17:48:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(shadowImagePath))","lastModifiedDate":"2025-09-10T17:48:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"    );","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     * Initializes the main UI parts within the {@code MainWindow} class.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * This method sets up a binding between the vertical scrolling value of the","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     * {@code ScrollPane} and the height of the {@code VBox} dialog container.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"     * Ensures that the scroll position automatically adjusts to display the","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"     * most recently added dialog at the bottom of the container.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"     * Handles user input from the text field and processes it as a command.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"     * This method first retrieves the user input, parses it into a command using the {@code Parser} class,","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"     * executes the command, and updates the dialog container with appropriate responses. If the command","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"     * signals an exit condition, the application is terminated.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     * In case of an invalid input (e.g., unrecognized or malformed command), an error message","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"     * is displayed in the dialog container. The method ensures that the user\u0027s input field is","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"     * cleared after the command is handled, regardless of the outcome.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"     * Key operations include:","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"     * - Parsing user input into a {@code Command} object.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     * - Executing the parsed command and capturing its response.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * - Adding dialog boxes to the {@code dialogContainer} to display both the user\u0027s input and the application\u0027s response.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     * - Handling {@code IllegalArgumentException} to display meaningful error messages for invalid inputs.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"     * - Clearing the user input field after processing.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"     * This method is triggered by an associated event in the JavaFX interface, typically tied","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"     * to a button click or pressing the Enter key when the input field is focused.","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-09-05T12:35:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"    @FXML","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        String userTextInput \u003d userInput.getText();","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        try {","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"            Command shadowCommand \u003d Parser.parse(userTextInput);","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"            String shadowResponse \u003d executeCommand(shadowCommand);","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"            showUserInputAndShadowResponse(userTextInput, shadowResponse);","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"            showUserInputAndShadowResponse(userTextInput, e.getMessage());","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"        } finally {","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"            userInput.clear();","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"    private String executeCommand(Command cmd) {","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"        if (cmd.isExit()) {","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"            Platform.exit();","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"        return cmd.execute();","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"    private void showUserInputAndShadowResponse(String userInput, String shadowResponse) {","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"                DialogBox.getUserDialog(userInput, userImage),","lastModifiedDate":"2025-09-11T17:06:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"                DialogBox.getDukeDialog(shadowResponse, dukeImage)","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"        );","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-09-05T12:23:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":99}},{"path":"src/main/java/shadow/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.ui;","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:02:41","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"/**","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":" * The {@code Ui} class provides an interface for interacting with the user through console input and output.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":" * It is implemented as a singleton to ensure only one instance is created and used throughout the application.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":" * This class manages user input, displays messages, and handles the formatting of console output.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":" */","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    private static Ui ui;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    private final Scanner userInput;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"     * Private constructor for the Ui class.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"     * Initializes the user input scanner.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"     * This constructor is private to enforce a singleton pattern or controlled instantiation.","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:42:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    private Ui() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        this.userInput \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"     * Returns the singleton instance of the {@code Ui} class.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"     * Creates a new instance if it does not already exist.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"     * @return the singleton {@code Ui} instance","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        if (Ui.ui \u003d\u003d null) {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"            Ui.ui \u003d new Ui();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        return Ui.ui;","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"     * Prints a line of text to the standard output.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"     * @param line the string to be printed","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    public void println(String line) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"        System.out.println(line);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"     * @return the user\u0027s input as a string","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    public String readDemand() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        return userInput.nextLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"     * Closes the input reader to release associated resources.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    public void closeReader() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        userInput.close();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"     * Prints a greeting message along with ASCII art to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"     * Prompts the user for input afterward.","lastModifiedDate":"2025-09-04T15:54:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    public void sayHello() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        String asciiArt \u003d","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"                \"\"\"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"                         ____  _               _","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"                        / ___|| |__   __ _  __| | _____      __","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"                        \\\\___ \\\\| \u0027_ \\\\ / _` |/ _` |/ _ \\\\ \\\\ /\\\\ / /","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"                         ___) | | | | (_| | (_| | (_) \\\\ V  V /","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"                        |____/|_| |_|\\\\__,_|\\\\__,_|\\\\___/ \\\\_/\\\\_/","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"                ","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"                \"\"\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        String sayHello \u003d \"Hello, this is\\n\" + asciiArt + \"What\u0027s your demand today?\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        this.printLine();","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"        System.out.println(sayHello);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"     * Prints a separator line to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    public void printLine() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"        System.out.println(\"_________________________________________________________\");","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"     * Prints a farewell message to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    public void sayBye() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"        String sayBye \u003d \"Very well, contact me again when you have more demands.\";","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        System.out.println(sayBye);","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"     * Prints the command prompt symbol (\"\u003e \") to the console.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"    public void printCommandInput() {","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:14:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"    /**","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"     * Prints an error message to the standard output.","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"     *","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"     * @param error the error message to be printed","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"     */","lastModifiedDate":"2025-08-29T11:21:46","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"    public void printError(String error) {","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"        System.out.println(error);","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T00:46:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-28T18:03:42","isFullCredit":false}],"authorContributionMap":{"SoyWater":112}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"            fx:controller\u003d\"shadow.ui.MainWindow\"\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-09-04T22:47:26","isFullCredit":false}],"authorContributionMap":{"SoyWater":44}},{"path":"src/test/java/shadow/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"class EventTest {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"    void constructor_validInputs_initializesCorrectly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.of(2025, 10, 1, 10, 0);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d LocalDateTime.of(2025, 10, 1, 12, 0);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Team meeting\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"[E]\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"[ ] Team meeting\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"from:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"to:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"    void toString_futureEvent_displaysDaysLeft() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(7);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Conference\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"days left\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"    void toString_pastEvent_displaysEventPassed() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().minusDays(3);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Past meeting\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        String output \u003d event.toString();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        assertTrue(output.contains(\"event passed\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    void mark_event_markedCorrectlyInToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Review session\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"        event.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[X] Review session\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"    void unmark_event_unmarkedCorrectlyInToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime start \u003d LocalDateTime.now().plusDays(2);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"        LocalDateTime end \u003d start.plusHours(1);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d new Event(\"Unmark test\", start, end);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"        event.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        event.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[ ] Unmark test\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"    void of_validIsoFormatInput_returnsEventInstance() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Project deadline /from 2025-12-01T09:00 /to 2025-12-01T17:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"[E]\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Project deadline\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"    void of_validCustomFormatInput_returnsEventInstance() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Team sync /from 01/12/2025 09:00 /to 01/12/2025 10:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Team sync\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    void of_nullInput_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"            Event.of(null);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"SoyWater"},"content":"    void of_missingFrom_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Project deadline\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"SoyWater"},"content":"    void of_missingTo_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Launch /from 2025-09-10T09:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"Usage: event \u003ctaskName\u003e /from \u003cfrom\u003e /to \u003cto\u003e\", ex.getMessage());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"SoyWater"},"content":"    void of_inputWithExtraSpaces_parsesCorrectly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"  Client call   /from 2025-11-05T10:00   /to 2025-11-05T11:00 \";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Client call\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"from:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"to:\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"SoyWater"},"content":"    void of_unrecognizedDateFormat_throwsException() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Bad input /from someday /to next week\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"SoyWater"},"content":"        IllegalArgumentException ex \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"SoyWater"},"content":"            Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"SoyWater"},"content":"        });","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"SoyWater"},"content":"        assertTrue(ex.getMessage().contains(\"Unrecognized date/time format\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"SoyWater"},"content":"    void of_startAfterEnd_parsesButMayBeIllogical() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"SoyWater"},"content":"        String input \u003d \"Backwards time /from 2025-12-01T17:00 /to 2025-12-01T09:00\";","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"SoyWater"},"content":"        Event event \u003d Event.of(input);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"SoyWater"},"content":"        assertNotNull(event);","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"SoyWater"},"content":"        assertTrue(event.toString().contains(\"Backwards time\"));","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false}],"authorContributionMap":{"SoyWater":137}},{"path":"src/test/java/shadow/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"package shadow.tasks;","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"class TaskTest {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"    void constructor_validName_setsNameAndUnmarked() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Read a book\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Read a book\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"    void mark_unmarkedTask_setsMarkedTrueAndUpdatesToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Submit report\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Submit report\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"    void mark_alreadyMarkedTask_keepsMarkedTrue() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Complete homework\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"        task.mark(); // First mark","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"        task.mark(); // Second mark","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Complete homework\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"    void unmark_markedTask_setsMarkedFalseAndUpdatesToString() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Clean room\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Clean room\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"    void unmark_unmarkedTask_keepsMarkedFalse() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Wash dishes\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"        task.unmark(); // Call without marking first","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Wash dishes\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"SoyWater"},"content":"    void toString_newTask_hasEmptyCheckboxAndCorrectName() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Feed cat\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Feed cat\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"SoyWater"},"content":"    void toString_markedTask_hasXCheckboxAndCorrectName() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Water plants\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Water plants\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"SoyWater"},"content":"    void toString_unmarkedAfterMark_hasEmptyCheckbox() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Do laundry\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Do laundry\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"SoyWater"},"content":"    void toString_nameWithSpaces_displaysProperly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"   Task with spaces   \");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ]    Task with spaces   \", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"SoyWater"},"content":"    void mark_thenUnmark_thenMarkAgain_hasCorrectState() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"Cycle state\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"SoyWater"},"content":"        task.unmark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"SoyWater"},"content":"        task.mark();","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[X] Cycle state\", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"SoyWater"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"SoyWater"},"content":"    void toString_emptyName_displaysBracketsOnly() {","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"SoyWater"},"content":"        Task task \u003d new Task(\"\");","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"SoyWater"},"content":"        assertEquals(\"[ ] \", task.toString());","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"SoyWater"},"content":"    }","lastModifiedDate":"2025-08-29T01:59:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"SoyWater"},"content":"}","lastModifiedDate":"2025-08-29T01:58:58","isFullCredit":false}],"authorContributionMap":{"SoyWater":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SoyWater"},"content":"todo Buy groceries","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"SoyWater"},"content":"deadline Submit assignment /by Sunday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"SoyWater"},"content":"event Conference /from Monday /to Wednesday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"SoyWater"},"content":"todo   Walk the dog","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"SoyWater"},"content":"deadline  Renew license /by  30th Aug","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"SoyWater"},"content":"event Workshop /from 9am /to 12pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"SoyWater"},"content":"todo","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"SoyWater"},"content":"deadline Fix bugs","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"SoyWater"},"content":"event Launch party /from Friday","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"SoyWater"},"content":"mark 1","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"SoyWater"},"content":"mark 3","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"SoyWater"},"content":"mark 6","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"mark 10","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"SoyWater"},"content":"unmark 3","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"SoyWater"},"content":"unmark 6","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"SoyWater"},"content":"unmark 0","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"unmark -1","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"SoyWater"},"content":"todo Finish book","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"SoyWater"},"content":"deadline Pay bills /by tomorrow","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"SoyWater"},"content":"event Gym class /from 6pm /to 7pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"SoyWater"},"content":"foobar something here","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"SoyWater"},"content":"event Concert /from 5pm","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"SoyWater"},"content":"deadline Read paper /by","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"SoyWater"},"content":"todo","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"SoyWater"},"content":"delete 1","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"SoyWater"},"content":"delete 3","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"SoyWater"},"content":"delete -1","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"SoyWater"},"content":"delete 200","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"SoyWater"},"content":"","lastModifiedDate":"2025-08-22T12:33:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"SoyWater"},"content":"list","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"SoyWater"},"content":"bye","lastModifiedDate":"2025-08-22T12:16:15","isFullCredit":false}],"authorContributionMap":{"SoyWater":43}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"SoyWater"},"content":"java -classpath ..\\bin Shadow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"SoyWater"},"content":"java -classpath ../bin Shadow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T16:36:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"SoyWater":1,"-":37}}]
