[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"Used ChatGPT to help with identifying the cause of certain errors, checking if the code that I ","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"wrote was efficient or if there were room for improvement, and general queries on how to proceed ","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"when I am stuck on a task or increment.","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"Tasks:","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"- Packages: generated a directory tree to outline where classes should be moved when organizing","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"classes into packages.","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"- JUnit: generated example test cases to get an idea of how to write test cases.","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"- JavaDoc: generated example Javadoc comments to get an idea on the syntax and important details","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"to include in a header comment.","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false}],"authorContributionMap":{"christopherchong":10}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-27T18:16:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"checkstyle {","lastModifiedDate":"2025-08-27T18:16:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-08-27T18:16:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T18:16:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-29T17:02:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    mainClass.set(\"haru.Haru\")","lastModifiedDate":"2025-08-27T18:16:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"    archiveFileName \u003d \"haru.jar\"","lastModifiedDate":"2025-08-27T20:52:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"christopherchong":7,"-":38}},{"path":"src/main/java/haru/Haru.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T14:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.command.Command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.parser.Parser;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":" * Entry point of the Haru task manager application.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":" * The {@code Haru} class initializes the user interface, storage,","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":" * and task list, and facilitates their interaction. It is responsible","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":" * for starting the application loop and handling user commands until exit.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"public class Haru {","lastModifiedDate":"2025-08-19T22:40:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    private final Storage storage;","lastModifiedDate":"2025-08-27T03:18:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T03:18:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    private final Ui ui;","lastModifiedDate":"2025-08-27T03:18:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T12:47:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     * Creates a new Haru instance with the given file path.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * @param filePath The file path to the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    public Haru(Path filePath) {","lastModifiedDate":"2025-08-27T17:43:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-27T17:43:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T17:59:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        try {","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"            storage.verifyTaskFile();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"            tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"        } catch (HaruException | IOException e) {","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"            tasks \u003d new TaskList(); // overwrites corrupted haru.txt","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"     * Starts the main program loop for Haru.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"     * Displays the welcome message, processes user commands,","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"     * and runs until the exit command is provided.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"    public void run() {","lastModifiedDate":"2025-08-27T03:11:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"            try {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2025-08-27T03:11:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"            } catch (HaruException | IOException e) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T17:59:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"     * Entry point of the application.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"     * @param args Command-line arguments.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"        Path filePath \u003d Paths.get(\"src\", \"data\", \"haru.txt\");","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"        new Haru(filePath).run();","lastModifiedDate":"2025-08-27T17:43:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T14:25:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-19T22:40:50","isFullCredit":false}],"authorContributionMap":{"christopherchong":73}},{"path":"src/main/java/haru/HaruException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":" * Acts as the base class for all exceptions in the application.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":" *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003eEach specific error is represented as a static nested subclass,","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":" * such as {@link InvalidCommandException} or {@link DateTimeParseException}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" * These provide user-friendly error messages formatted with a separator line","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" * for consistency in the UI.\u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"public class HaruException extends Exception {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    private static final String LINE \u003d","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"            \"___________________________________________________________________________________\\n\";","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     * Creates a {@code HaruException} with an error message,","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     * formatted with horizontal separator lines.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     * @param message the details of the error message.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    public HaruException(String message) {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"        super(formatMessage(message));","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"     * Formats the error message with horizontal separator lines before and after.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     * @param message The error message to be formatted.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * @return The error message with horizontal separator lines surrounding it.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    private static String formatMessage(String message) {","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        return LINE + message + \"\\n\" + LINE;","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the task file cannot be read because it is corrupted.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    public static class CorruptedFileException extends HaruException {","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"        public CorruptedFileException() {","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"            super(\"The task file is corrupted!\");","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"     * Thrown when an unrecognized command is provided.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidCommandException extends HaruException {","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"        public InvalidCommandException() {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"            super(\"I don\u0027t recognize that command :(\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"     * Thrown when a number is expected but was not provided.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"    public static class NumberFormatException extends HaruException {","lastModifiedDate":"2025-08-21T11:25:21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"        public NumberFormatException() {","lastModifiedDate":"2025-08-21T11:25:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"            super(\"A number was not entered! :(\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T11:25:21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T11:25:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T11:25:21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"     * Thrown when there is no tasks in the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"    public static class NoTasksException extends HaruException {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"        public NoTasksException() {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"            super(\"There are no tasks!\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"     * Thrown when there is no tasks in the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidIndexException extends HaruException {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"christopherchong"},"content":"        public InvalidIndexException() {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"christopherchong"},"content":"            super(\"Number entered was invalid!\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the task to be marked was already marked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"christopherchong"},"content":"    public static class MarkException extends HaruException {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"christopherchong"},"content":"        public MarkException() {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"christopherchong"},"content":"            super(\"Task is already marked!\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the task to be unmarked was already unmarked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"christopherchong"},"content":"    public static class UnmarkException extends HaruException {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"christopherchong"},"content":"        public UnmarkException() {","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"christopherchong"},"content":"            super(\"Task is already unmarked!\");","lastModifiedDate":"2025-08-21T21:19:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the input does not match the format required for todo.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidTodoException extends HaruException {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"christopherchong"},"content":"        public InvalidTodoException() {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"christopherchong"},"content":"            super(\"The task was not entered correctly!\\n\" + \"Try doing \\\"todo \u003ctask\u003e\\\"\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the input does not match the format required for deadline.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidDeadlineException extends HaruException {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"christopherchong"},"content":"        public InvalidDeadlineException() {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"christopherchong"},"content":"            super(\"The task was not entered correctly!\\n\" + \"Try doing \\\"deadline \u003ctask\u003e /by \u003cdate/time\u003e\\\"\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the input does not match the format required for event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidEventException extends HaruException {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"christopherchong"},"content":"        public InvalidEventException() {","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"christopherchong"},"content":"            super(\"The task was not entered correctly!\\n\" + \"Try \\\"event \u003ctask\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e\\\"\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-21T11:54:02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the date time input does not match the format required.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"christopherchong"},"content":"    public static class DateTimeParseException extends HaruException {","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"christopherchong"},"content":"        public DateTimeParseException() {","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"christopherchong"},"content":"            super(\"The date was not entered correctly!\\n\" + \"Try following day/month/year time (e.g. 2/12/2019 1800)\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the date time input for \u0027to\u0027 is earlier than \u0027from\u0027.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"christopherchong"},"content":"    public static class DateTimeOrderException extends HaruException {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"christopherchong"},"content":"        public DateTimeOrderException() {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"christopherchong"},"content":"            super(\"The \u0027to\u0027 date is earlier than the \u0027from\u0027 date!\\n\" + \"Try entering the dates again!\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"christopherchong"},"content":"     * Thrown when the date time input for \u0027to\u0027 is the same as \u0027from\u0027.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"christopherchong"},"content":"    public static class SameDateTimeException extends HaruException {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"christopherchong"},"content":"        public SameDateTimeException() {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"christopherchong"},"content":"            super(\"The \u0027to\u0027 and \u0027from\u0027 dates are the same!\\n\" + \"Try entering the dates again!\");","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"christopherchong"},"content":"     * Thrown when no description was provided in the find command.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"christopherchong"},"content":"    public static class InvalidFindException extends HaruException {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"christopherchong"},"content":"        public InvalidFindException() {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"christopherchong"},"content":"            super(\"No description was provided. Enter a keyword!\");","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-21T02:28:53","isFullCredit":false}],"authorContributionMap":{"christopherchong":160}},{"path":"src/main/java/haru/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.task.Task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":" * Represents a command that adds a task to the task list.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    /** Task to be added. */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    private final Task task;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code AddCommand} with the specified task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"        ui.showAddedTask(task, tasks.size());","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"        storage.updateTaskList(tasks);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":32}},{"path":"src/main/java/haru/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":" * Represents an abstract command that can be executed in the application.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":" * Each {@code Command} defines a specific action that operates on the task list,","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":" * interacts with the user interface, and may update the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":" * Subclasses must implement the {@link #execute(TaskList, Ui, Storage)} method","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":" * to define their behavior.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":" * By default, a command does not terminate the program unless {@link #isExit()} is overridden.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"     * Executes a command with the given task list, user interface, and storage.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"     * @param tasks The task list to operate on.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     * @param ui The user interface to display messages to the user.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     * @param storage The storage handler to update the task file.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * @throws HaruException If an error specific to command execution occurs.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     * @throws IOException If an I/O error occurs while accessing storage.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException, IOException;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"     * Indicates whether this command will terminate the program.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"     * By default, commands do not exit.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"     * @return {@code true} if this command should exit the program;","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"        return false;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":44}},{"path":"src/main/java/haru/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":" * Represents a command that deletes a task in the task list.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    /** Index of the task in the task list to be deleted. */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    private final int index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code DeleteCommand} with the index of the task to be deleted.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException, IOException {","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.InvalidIndexException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        String taskInfo \u003d tasks.get(index).getTaskInfo();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"        ui.showDeletedTask(taskInfo, tasks.size());","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        storage.updateTaskList(tasks);","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":37}},{"path":"src/main/java/haru/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" * Represents a command that terminates the application.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"        ui.showExitMessage();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"        return true;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":20}},{"path":"src/main/java/haru/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" * Represents a command that finds tasks in the task list by a specific description.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    /** Description to find tasks in the task list by. */","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"    private final String description;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code FindCommand} with a specified description.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.NoTasksException();","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"            if (tasks.get(i).getTaskInfo().contains(description)) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"                taskList.append(\"\\t\").append(i + 1).append(\". \").append(tasks.get(i).getTaskInfo()).append(\"\\n\");","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false}],"authorContributionMap":{"christopherchong":38}},{"path":"src/main/java/haru/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" * Represents a command that lists the tasks in the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.NoTasksException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"        ui.showAllTasks(tasks);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":19}},{"path":"src/main/java/haru/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.task.Task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" * Represents a command that marks a task in the task list.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    /** Index of the task in the task list to be marked. */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    private final int index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code MarkCommand} with the index of the task to be marked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException, IOException {","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.InvalidIndexException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        if (task.getStatus().equals(\"X\")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.MarkException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"        task.markDone();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"        ui.showMarkMessage(task);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"        storage.updateTaskList(tasks);","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":40}},{"path":"src/main/java/haru/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.task.Task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" * Represents a command that marks a task in the task list.","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    /** Index of the task in the task list to be unmarked. */","lastModifiedDate":"2025-08-28T03:01:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    private final int index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code UnmarkCommand} with the index of the task to be unmarked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"        this.index \u003d index;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws HaruException, IOException {","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.InvalidIndexException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        if (task.getStatus().equals(\" \")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.UnmarkException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"        task.markUndone();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"        ui.showUnmarkMessage(task);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"        storage.updateTaskList(tasks);","lastModifiedDate":"2025-08-27T20:51:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false}],"authorContributionMap":{"christopherchong":40}},{"path":"src/main/java/haru/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.parser;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.command.AddCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.command.Command;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"import haru.command.DeleteCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import haru.command.ExitCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"import haru.command.FindCommand;","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"import haru.command.ListCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"import haru.command.MarkCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"import haru.command.UnmarkCommand;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"import haru.task.Deadline;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"import haru.task.Event;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"import haru.task.Todo;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":" * Parses user input and converts it into an executable {@link Command}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":" * The {@code Parser} identifies the type of command from the input string","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":" * and constructs the corresponding {@code Command} object.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T01:23:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * Parses the given user input and returns the corresponding {@link Command}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"     * \u003cp\u003eList of supported commands:","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code list}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code mark \u003cindex\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code unmark \u003cindex\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code todo \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code deadline \u003cdescription\u003e /by \u003cdate time\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code event \u003cdescription\u003e /from \u003cdate time\u003e /to \u003cdate time\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code delete \u003cindex\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code bye}\u003c/li\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"     *     \u003cli\u003e{@code find \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-08-29T12:57:41","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"     * @param input The input to be parsed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"     * @return the corresponding {@code Command} object.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"     * @throws HaruException If the input is invalid, incomplete, or formatted incorrectly.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"    public static Command parse(String input) throws HaruException {","lastModifiedDate":"2025-08-27T03:11:47","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"        String command;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"            String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"            command \u003d inputArray[0];","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"            arguments \u003d inputArray[1];","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"        } else {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"            command \u003d input;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"        switch (command) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"        case \"list\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"            if (arguments.isEmpty() || !arguments.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.NumberFormatException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"            int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"christopherchong"},"content":"        case \"todo\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"christopherchong"},"content":"            if (arguments.isEmpty() || !arguments.matches(\".*[a-zA-Z0-9].*\")) {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.InvalidTodoException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"christopherchong"},"content":"            return new AddCommand(new Todo(arguments));","lastModifiedDate":"2025-08-27T03:11:47","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"christopherchong"},"content":"        case \"deadline\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"christopherchong"},"content":"            if (!arguments.contains(\" /by \")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.InvalidDeadlineException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"christopherchong"},"content":"            String[] argumentsArray \u003d arguments.split(\" /by \", 2);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"christopherchong"},"content":"            String description \u003d argumentsArray[0];","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"christopherchong"},"content":"            try {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"christopherchong"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/y Hmm\");","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"christopherchong"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(argumentsArray[1], formatter);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"christopherchong"},"content":"                return new AddCommand(new Deadline(description, by));","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"christopherchong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.DateTimeParseException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"christopherchong"},"content":"        case \"event\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"christopherchong"},"content":"            if (!arguments.contains(\" /from \") || !arguments.contains(\" /to \")","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"christopherchong"},"content":"                    || arguments.lastIndexOf(\" /to \") \u003c arguments.lastIndexOf(\" /from \")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.InvalidEventException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"christopherchong"},"content":"            String[] argumentsArray \u003d arguments.split(\" /from \", 2);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"christopherchong"},"content":"            String description \u003d argumentsArray[0];","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"christopherchong"},"content":"            String dates \u003d argumentsArray[1];","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"christopherchong"},"content":"            String[] datesArray \u003d dates.split(\" /to \", 2);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"christopherchong"},"content":"            try {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"christopherchong"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/y Hmm\");","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"christopherchong"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(datesArray[0], formatter);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"christopherchong"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(datesArray[1], formatter);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"christopherchong"},"content":"                if (to.isBefore(from)) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"christopherchong"},"content":"                    throw new HaruException.DateTimeOrderException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"christopherchong"},"content":"                } else if (to.isEqual(from)) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"christopherchong"},"content":"                    throw new HaruException.SameDateTimeException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"christopherchong"},"content":"                }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"christopherchong"},"content":"                return new AddCommand(new Event(description, from, to));","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"christopherchong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.DateTimeParseException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"christopherchong"},"content":"        case \"delete\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"christopherchong"},"content":"            if (arguments.isEmpty() || !arguments.matches(\"\\\\d+\")) {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.NumberFormatException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"christopherchong"},"content":"            int index \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"christopherchong"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"christopherchong"},"content":"        case \"find\": {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"christopherchong"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.InvalidFindException();","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"christopherchong"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"christopherchong"},"content":"        case \"bye\": {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"christopherchong"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"christopherchong"},"content":"        default: {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"christopherchong"},"content":"            throw new HaruException.InvalidCommandException();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T01:23:10","isFullCredit":false}],"authorContributionMap":{"christopherchong":139}},{"path":"src/main/java/haru/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.storage;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"import haru.task.Deadline;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"import haru.task.Event;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"import haru.task.Task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"import haru.task.Todo;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":" * Performs file operations on the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":" *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":" * The {@code Storage} class is responsible for file operations such as verifying the","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":" * existence of the task file, loading from the file, and saving to the file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"    /** Path of the task list file. */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    private final Path filePath;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2025-08-27T17:43:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"     * Checks if the task file exists. If not, it is created.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"     * @throws IOException If an I/O error occurs while accessing storage.","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"    public void verifyTaskFile() throws IOException {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"        Path folderPath \u003d filePath.getParent();","lastModifiedDate":"2025-08-27T17:43:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"        if (!Files.exists(folderPath)) {","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"            Files.createDirectories(folderPath);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"        } else if (!Files.exists(filePath)) {","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"     * Loads tasks from the task file into a {@code TaskList} object.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"     * @return a {@code TaskList} object with tasks from the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"     * @throws HaruException If the task file is corrupted.","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"     * @throws IOException If an I/O error occurs while accessing storage.","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T14:55:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"    public ArrayList\u003cTask\u003e loadTaskList() throws HaruException, IOException {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"        File f \u003d new File(filePath.toString());","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"            try {","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"                String task \u003d sc.nextLine();","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"                String[] arguments \u003d task.split(\"\\\\|\");","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"                boolean isDone \u003d arguments[1].equals(\"1\");","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"                String description \u003d arguments[2];","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"                switch (task.charAt(0)) {","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"                    tasks.add(new Todo(isDone, description));","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"                    break;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"christopherchong"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"christopherchong"},"content":"                    DateTimeFormatter deadlineFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"christopherchong"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(arguments[3], deadlineFormatter);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"christopherchong"},"content":"                    tasks.add(new Deadline(isDone, description, by));","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"christopherchong"},"content":"                    break;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"christopherchong"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"christopherchong"},"content":"                    DateTimeFormatter eventFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"christopherchong"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(arguments[3], eventFormatter);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"christopherchong"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(arguments[4], eventFormatter);","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"christopherchong"},"content":"                    tasks.add(new Event(isDone, description, from, to));","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"christopherchong"},"content":"                    break;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"christopherchong"},"content":"                default:","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"christopherchong"},"content":"                    throw new HaruException.CorruptedFileException();","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"christopherchong"},"content":"                }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"christopherchong"},"content":"            } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"christopherchong"},"content":"                throw new HaruException.CorruptedFileException();","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"christopherchong"},"content":"            }","lastModifiedDate":"2025-08-27T00:54:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"christopherchong"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"christopherchong"},"content":"     * Updates the task file using the current {@link TaskList}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"christopherchong"},"content":"     * @param tasks The {@link TaskList} used to update the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"christopherchong"},"content":"     * @throws IOException If an I/O error occurs while accessing storage.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"christopherchong"},"content":"    public void updateTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"christopherchong"},"content":"        FileWriter f \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"christopherchong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"christopherchong"},"content":"            f.write(tasks.get(i).getTaskInfoForFile() + System.lineSeparator());","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"christopherchong"},"content":"        f.close();","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T00:35:00","isFullCredit":false}],"authorContributionMap":{"christopherchong":111}},{"path":"src/main/java/haru/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":" * Represents a {@code Deadline} task with a specified due date/time.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Deadline} task marked as not done.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     * @param by The due date/time of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Deadline} task with a given completion status.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     * @param by The due date/time of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime by) {","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        super(description, isDone, \u0027D\u0027);","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2025-08-20T18:50:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"        return super.getTaskInfo() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2025-08-26T19:09:17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"        return super.getTaskInfoForFile() + \"|\" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-08-26T18:32:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false}],"authorContributionMap":{"christopherchong":44}},{"path":"src/main/java/haru/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":" * Represents an {@code Event} task with a start and end date/time.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"    protected LocalDateTime startDateTime;","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Event} task marked as not done.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     * @param startDateTime The start date/time of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     * @param endDateTime The end date/time of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Event} task with a given completion status.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * @param isDone Whether the event is completed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"     * @param startDateTime The start date/time of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"     * @param endDateTime The end date/time of the event.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"    public Event(boolean isDone, String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        super(description, isDone, \u0027E\u0027);","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2025-08-20T18:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\");","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"        return super.getTaskInfo() + \" (from: \" + startDateTime.format(formatter)","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"                + \" to: \" + endDateTime.format(formatter) + \")\";","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"    @Override","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2025-08-26T19:12:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        return super.getTaskInfoForFile() + \"|\" + startDateTime.format(formatter)","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"                + \"|\" + endDateTime.format(formatter);","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false}],"authorContributionMap":{"christopherchong":53}},{"path":"src/main/java/haru/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":" * Represents a generic task with a description, type, and completion status.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":" * Base class for the following task types: {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"public class Task {","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"    protected String description;","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-20T19:07:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    protected char type;","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code Task} with the given description and type.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     * @param type The type of the task. (e.g., \u0027T\u0027, \u0027D\u0027, \u0027E\u0027)","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    public Task(String description, char type) {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T19:07:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@code Task} with the given description, type, and completion status.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"     * @param type The type of the task. (e.g., \u0027T\u0027, \u0027D\u0027, \u0027E\u0027)","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"    public Task(String description, boolean isDone, char type) {","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"    /** @return {@code \u0027X\u0027} if the task is done; {@code \u0027 \u0027} otherwise. */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    public String getStatus() {","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-20T19:07:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"    /** @return A formatted string with task type, completion status, and description. */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"        return \"[\" + type + \"] [\" + getStatus() + \"] \" + description;","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"    /** Marks the task as completed. */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-20T19:07:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"    /** Marks the task as not completed. */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"    public void markUndone() {","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-20T19:07:47","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"     * Returns a formatted string of the task to be saved to the task file.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"     * @return Information of the task in storage format.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"    public String getTaskInfoForFile() {","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"        return type + \"|\" + (isDone ? \"1\" : \"0\") + \"|\" + description;","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T17:18:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-20T15:31:00","isFullCredit":false}],"authorContributionMap":{"christopherchong":68}},{"path":"src/main/java/haru/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":" * Represents a list of tasks using an {@link ArrayList}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":" * Provides methods to add, remove, retrieve, and query tasks in the list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"     * Creates an empty {@code TaskList}.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"     * Creates a {@code TaskList} from an existing task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"     * @param tasks The list of tasks to initialize with.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"    /** @return The number of tasks in the list. */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    public int size() {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"     * @return {@code true} if the list contains no tasks;","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"     *         {@code false} otherwise.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"     * Retrieves a task from the task list at the specified index.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"     * @param index The index of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"     * @return The task at the given index in the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"     * @param task The task to add.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"     * Removes a task from the task list at the specified index.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"     * @param index The index of the task to remove from the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"    public void remove(int index) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false}],"authorContributionMap":{"christopherchong":70}},{"path":"src/main/java/haru/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":" * Represents a {@code Todo} task without a specific due date/time.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Todo} task marked as not done.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"     * Creates a new {@link Todo} task with a given completion status.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        super(description, isDone, \u0027T\u0027);","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T16:22:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-20T18:32:25","isFullCredit":false}],"authorContributionMap":{"christopherchong":25}},{"path":"src/main/java/haru/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.ui;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import haru.task.Task;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T17:10:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"/**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":" * Handles all interactions with the user.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":" *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":" * \u003cp\u003eThe {@code Ui} class is responsible for reading user input as well as","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":" * displaying messages to the user, such as greetings, errors, and updates to the task list.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":" */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"public class Ui {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    private static final String LINE \u003d","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"            \"___________________________________________________________________________________\";","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    private static final String LINEN \u003d","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"            \"___________________________________________________________________________________\\n\";","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"    private final Scanner sc;","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    public Ui() {","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"     * @return The user input as a {@code String} object","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        return sc.hasNextLine() ? sc.nextLine() : \"\";","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T03:08:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Hello! I\u0027m Haru\\nWhat can I do for you?\");","lastModifiedDate":"2025-08-27T17:54:00","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"     * Displays the exit message when the application ends.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"    public void showExitMessage() {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"     * Displays a confirmation message that a task was marked as done.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"    public void showMarkMessage(Task task) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"\\t\" + task.getTaskInfo());","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"     * Displays a confirmation message that a task was unmarked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"    public void showUnmarkMessage(Task task) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Got it! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"\\t\" + task.getTaskInfo());","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"christopherchong"},"content":"     * Displays all tasks in the task list to the user.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"christopherchong"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"christopherchong"},"content":"    public void showAllTasks(TaskList tasks) {","lastModifiedDate":"2025-08-27T01:07:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Here are the tasks that you\u0027ve set:\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"christopherchong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"christopherchong"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + tasks.get(i).getTaskInfo());","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"christopherchong"},"content":"     * Displays a confirmation message that a task has been added, along with the","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"christopherchong"},"content":"     * updated number of tasks.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"christopherchong"},"content":"     * @param task The task that was added.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"christopherchong"},"content":"     * @param taskCount The number of tasks in the task list after adding the new task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"christopherchong"},"content":"    public void showAddedTask(Task task, int taskCount) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"\\t\" + task.getTaskInfo());","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"There are now \" + taskCount + \" task(s)!\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"christopherchong"},"content":"     * Displays a confirmation message that a task has been deleted, along with the","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"christopherchong"},"content":"     * updated number of tasks.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"christopherchong"},"content":"     * @param taskInfo The information of the task that was deleted.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"christopherchong"},"content":"     * @param taskCount The number of tasks in the task list after deleting the task.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"christopherchong"},"content":"    public void showDeletedTask(String taskInfo, int taskCount) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"Understood! I\u0027ve removed this task:\\n\\t\" + taskInfo);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"christopherchong"},"content":"        System.out.println(\"There are now \" + taskCount + \" task(s)!\");","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"christopherchong"},"content":"     * Displays specified tasks in the task list to the user.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"christopherchong"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:26:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"christopherchong"},"content":"    public void showTaskList(StringBuilder taskList) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"christopherchong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"christopherchong"},"content":"            System.out.println(\"There were no tasks matching the description!\");","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"christopherchong"},"content":"        } else {","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"christopherchong"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"christopherchong"},"content":"            System.out.print(taskList);","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"christopherchong"},"content":"        System.out.println(LINEN);","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:02:53","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"christopherchong"},"content":"    /**","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"christopherchong"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"christopherchong"},"content":"     *","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"christopherchong"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"christopherchong"},"content":"     */","lastModifiedDate":"2025-08-28T21:00:06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"christopherchong"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"christopherchong"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-26T21:14:56","isFullCredit":false}],"authorContributionMap":{"christopherchong":145}},{"path":"src/test/java/haru/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"class ListCommandTest {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"    void setUp() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"        storage \u003d null;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    void execute_throwsNoTasksExceptionIfEmptyTaskList() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"        ListCommand list \u003d new ListCommand();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NoTasksException.class, () -\u003e list.execute(tasks, ui, storage));","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false}],"authorContributionMap":{"christopherchong":30}},{"path":"src/test/java/haru/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"class MarkCommandTest {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"        Path tempFile \u003d Files.createTempFile(\"haru_test\", \".txt\");","lastModifiedDate":"2025-08-31T17:17:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        try (FileWriter writer \u003d new FileWriter(tempFile.toFile())) {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"            writer.write(\"T|0|read book\\n\");","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"            writer.write(\"T|0|write report\\n\");","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        storage \u003d new Storage(tempFile);","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"    void execute_marksTaskSuccessfully() throws HaruException, IOException {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"        MarkCommand mark \u003d new MarkCommand(0);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"        mark.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"        assertEquals(\"X\", tasks.get(0).getStatus(), \"Task should be marked done\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"    void execute_throwsMarkExceptionIfAlreadyMarked() {","lastModifiedDate":"2025-08-31T17:17:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"        tasks.get(0).markDone();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"        MarkCommand mark \u003d new MarkCommand(0);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.MarkException.class, () -\u003e mark.execute(tasks, ui, storage));","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    void execute_throwsInvalidIndexExceptionIfIndexOutOfBounds() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"        MarkCommand mark \u003d new MarkCommand(5);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidIndexException.class, () -\u003e mark.execute(tasks, ui, storage));","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false}],"authorContributionMap":{"christopherchong":55}},{"path":"src/test/java/haru/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.command;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"import haru.storage.Storage;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"import haru.task.TaskList;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"import haru.ui.Ui;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"        Path tempFile \u003d Files.createTempFile(\"haru_test\", \".txt\");","lastModifiedDate":"2025-08-31T17:17:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        try (FileWriter writer \u003d new FileWriter(tempFile.toFile())) {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"            writer.write(\"T|1|read book\\n\");","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"            writer.write(\"T|1|write report\\n\");","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"        }","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"        storage \u003d new Storage(tempFile);","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        tasks \u003d new TaskList(storage.loadTaskList());","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"    void execute_marksTaskSuccessfully() throws HaruException, IOException {","lastModifiedDate":"2025-08-27T21:24:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"        UnmarkCommand unmark \u003d new UnmarkCommand(0);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"        unmark.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"        assertEquals(\" \", tasks.get(0).getStatus(), \"Task should be unmarked\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"    void execute_throwsUnmarkExceptionIfAlreadyUnmarked() {","lastModifiedDate":"2025-08-31T17:17:41","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"        tasks.get(0).markUndone();","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"        UnmarkCommand unmark \u003d new UnmarkCommand(0);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.UnmarkException.class, () -\u003e unmark.execute(tasks, ui, storage));","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"    void execute_throwsInvalidIndexExceptionIfIndexOutOfBounds() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"        UnmarkCommand unmark \u003d new UnmarkCommand(5);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidIndexException.class, () -\u003e unmark.execute(tasks, ui, storage));","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false}],"authorContributionMap":{"christopherchong":55}},{"path":"src/test/java/haru/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"package haru.parser;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-28T02:34:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"import haru.HaruException;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"import haru.command.AddCommand;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"import haru.command.Command;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"import haru.command.DeleteCommand;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"import haru.command.ListCommand;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"import haru.command.MarkCommand;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"import haru.command.UnmarkCommand;","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"    // list","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"    void parseListCommand_returnsListCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"list\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof ListCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"    // mark","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"    void parseMarkCommand_returnsMarkCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof MarkCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"christopherchong"},"content":"    void parseMarkWithoutNumber_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"christopherchong"},"content":"    void parseMarkWithoutNumber2_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"mark e\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"christopherchong"},"content":"    // unmark","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"christopherchong"},"content":"    void parseUnmarkCommand_returnsUnmarkCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"unmark 2\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof UnmarkCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"christopherchong"},"content":"    void parseUnmarkWithoutNumber_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"unmark\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"christopherchong"},"content":"    void parseUnmarkWithoutNumber2_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"unmark e\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"christopherchong"},"content":"    // to-do","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"christopherchong"},"content":"    void parseTodoCommand_returnsAddCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"todo read book\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof AddCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"christopherchong"},"content":"    void parseTodoWithoutDescription_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidTodoException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"christopherchong"},"content":"    // deadline","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"christopherchong"},"content":"    void parseDeadlineCommand_returnsAddCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"deadline return book /by 2/12/2019 1800\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof AddCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"christopherchong"},"content":"    void parseDeadlineWithoutBy_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidDeadlineException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"deadline return book 2/12/2019 1800\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"christopherchong"},"content":"    void parseDeadlineWithInvalidDate_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"deadline return book /by 2/15/2019 1800\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"christopherchong"},"content":"    // event","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"christopherchong"},"content":"    void parseEventCommand_returnsAddCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"event project meeting /from 2/12/2019 1400 /to 2/12/2019 1600\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof AddCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithoutFrom_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidEventException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting 2/12/2019 1600 /to 2/12/2019 1400\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithoutTo_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidEventException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting /from 2/12/2019 1600 2/12/2019 1700\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithInvalidFrom_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting /from 2/15/2019 1600 /to 2/12/2019 1400\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithInvalidTo_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting /from 2/12/2019 1600 /to 2/15/2019 1400\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithSameDates_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.SameDateTimeException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting /from 2/12/2019 1600 /to 2/12/2019 1600\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"christopherchong"},"content":"    void parseEventWithInvalidDateOrder_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.DateTimeOrderException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"event meeting /from 2/12/2019 1600 /to 2/12/2019 1400\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"christopherchong"},"content":"    // delete","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"christopherchong"},"content":"    void parseDeleteCommand_returnsDeleteCommand() throws HaruException {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"christopherchong"},"content":"        Command cmd \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"christopherchong"},"content":"        assertTrue(cmd instanceof DeleteCommand);","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"christopherchong"},"content":"    void parseDeleteWithoutNumber_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"delete\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"christopherchong"},"content":"    void parseDeleteWithoutNumber2_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.NumberFormatException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"delete e\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"christopherchong"},"content":"    // invalid command","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"christopherchong"},"content":"    @Test","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"christopherchong"},"content":"    void parseInvalidCommand_throwsHaruException() {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"christopherchong"},"content":"        assertThrows(HaruException.InvalidCommandException.class, () -\u003e {","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"christopherchong"},"content":"            Parser.parse(\"blah\");","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"christopherchong"},"content":"        });","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"christopherchong"},"content":"    }","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"christopherchong"},"content":"}","lastModifiedDate":"2025-08-27T20:33:23","isFullCredit":false}],"authorContributionMap":{"christopherchong":178}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"christopherchong"},"content":"list","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"christopherchong"},"content":"todo borrow book","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"christopherchong"},"content":"deadline assignment /by 2/12/2025 1800","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"christopherchong"},"content":"event meeting /from 2/10/2025 1500 2/10/2025 1600","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"christopherchong"},"content":"event meeting /from 2/10/2025 1500 /to 2/10/2025 1600","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"list","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"mark 1","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"mark 2","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"christopherchong"},"content":"list","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"christopherchong"},"content":"unmark 2","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"christopherchong"},"content":"unmark 3","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"christopherchong"},"content":"mark 1","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"todo read book","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"christopherchong"},"content":"find book","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"christopherchong"},"content":"delete 1","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"christopherchong"},"content":"list","lastModifiedDate":"2025-08-21T21:07:22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"christopherchong"},"content":"mark e","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"christopherchong"},"content":"unmark e","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"christopherchong"},"content":"todo","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"christopherchong"},"content":"deadline report /by 2/15/2025 1800","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"deadline","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"christopherchong"},"content":"event","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"christopherchong"},"content":"random","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"christopherchong"},"content":"delete","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"delete5","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"delete 5","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"find","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"christopherchong"},"content":"find school","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"christopherchong"},"content":"bye","lastModifiedDate":"2025-08-20T23:02:03","isFullCredit":false}],"authorContributionMap":{"christopherchong":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"christopherchong"},"content":"REM delete previous test haru.txt before running","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"christopherchong"},"content":"if exist src\\data\\haru.txt del src\\data\\haru.txt","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"christopherchong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\haru\\*.java","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"christopherchong"},"content":"java -classpath ..\\bin haru.Haru \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"christopherchong"},"content":"","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"christopherchong"},"content":"REM delete haru.txt created during the test","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"christopherchong"},"content":"if exist src rmdir /s /q src","lastModifiedDate":"2025-09-01T02:14:28","isFullCredit":false}],"authorContributionMap":{"christopherchong":8,"-":19}}]
