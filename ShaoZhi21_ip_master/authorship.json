[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"# Jimmy project template","lastModifiedDate":"2025-08-20T01:39:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"This is a project template for a greenfield Java project. It\u0027s named Jimmy, a musical task management assistant. Given below are instructions on how to use it.","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"1. After that, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see Jimmy\u0027s GUI window open with the title \"Jimmy - Task Management Assistant\".","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"## CheckStyle","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"This project uses CheckStyle to enforce coding standards and detect style violations.","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"### Running CheckStyle","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"To check if your code complies with the style rules:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"```bash","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"# Check main source code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleMain","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"# Check test code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleTest","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"# Check both main and test code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleMain checkstyleTest","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"### Viewing Reports","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"CheckStyle generates HTML reports in the `build/reports/checkstyle/` directory:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"- `main.html` - Report for main source code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"- `test.html` - Report for test code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"### Suppressing Rules","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"#### Global Suppressions","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"Edit `config/checkstyle/suppressions.xml` to suppress rules for specific files or patterns:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"```xml","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"\u003csuppress checks\u003d\"MagicNumber\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"\u003csuppress checks\u003d\"UnusedImports\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"#### Inline Suppressions","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"To suppress a rule for a specific code segment, use:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.OFF: RuleName","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"// Your code here","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.ON: RuleName","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"Example:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.OFF: MagicNumber","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"int timeout \u003d 5000; // This magic number is acceptable here","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.ON: MagicNumber","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"### Configuration Files","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"- `config/checkstyle/checkstyle.xml` - Contains the style rules","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"- `config/checkstyle/suppressions.xml` - Contains global suppressions","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"### Common Rules","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"Some common CheckStyle rules enforced in this project:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"- **LineLength**: Lines should not exceed 120 characters","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"- **MagicNumber**: Avoid using magic numbers (use constants instead)","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"- **FinalParameters**: Method parameters should be final","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"- **UnusedImports**: Remove unused import statements","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"- **WhitespaceAround**: Proper spacing around operators and braces","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":70,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"java {","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-09-01T03:58:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2025-09-01T03:58:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"    applicationDefaultJvmArgs \u003d [\u0027-ea\u0027]","lastModifiedDate":"2025-09-12T16:25:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    archiveBaseName \u003d \"jimmy\"","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"checkstyle {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    toolVersion \u003d \u002710.12.5\u0027","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"    configProperties \u003d [","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        \u0027suppressionFile\u0027: file(\"${rootDir}/config/checkstyle/suppressions.xml\")","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"    ]","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"checkstyleTest {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    configProperties \u003d [","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"        \u0027suppressionFile\u0027: file(\"${rootDir}/config/checkstyle/suppressions.xml\")","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    ]","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"tasks.withType(Checkstyle) {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"    reports {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"        xml.required \u003d false","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        html.required \u003d true","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":47,"-":39}},{"path":"data/jimmy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | go public","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | read book","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"T | 0 | test","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | deadline submit report | 2024-12-15T23:59:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | deadline submit report | 2024-12-20T18:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"E | 0 | event team meeting | 2024-12-25T14:00:00 | 2024-12-25T16:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | cs2103 | 2025-08-29T18:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"0 | hi!","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"T | 0 | Bubu","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":10}},{"path":"docs/CHECKSTYLE_EXAMPLES.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"# CheckStyle Examples and Best Practices","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"This document provides examples of how to use CheckStyle effectively in the Jimmy project.","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"## Inline Suppressions","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"### Suppressing Magic Numbers","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.OFF: MagicNumber","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"int timeout \u003d 5000; // This magic number is acceptable for timeout","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.ON: MagicNumber","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"### Suppressing Line Length","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.OFF: LineLength","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"String veryLongString \u003d \"This is a very long string that exceeds the 120 character limit but is necessary for this specific use case\";","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.ON: LineLength","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"### Suppressing Multiple Rules","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.OFF: MagicNumber, LineLength","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"int magicNumber \u003d 42;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"String longString \u003d \"This is a very long string with a magic number that we want to suppress\";","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"//CHECKSTYLE.ON: MagicNumber, LineLength","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"## Common Violations and Fixes","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"### 1. Magic Number Violation","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"**Violation:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"if (status \u003d\u003d 3) { // Magic number","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"    // do something","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"**Fix:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"private static final int STATUS_COMPLETED \u003d 3;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"if (status \u003d\u003d STATUS_COMPLETED) {","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    // do something","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"### 2. Line Length Violation","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"**Violation:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"String veryLongVariableName \u003d \"This is a very long string that exceeds the 120 character limit and causes a CheckStyle violation\";","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"**Fix:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"String veryLongVariableName \u003d \"This is a very long string that exceeds the 120 character limit \" +","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    \"and causes a CheckStyle violation\";","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"### 3. Unused Imports","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"**Violation:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList; // Unused import","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Map;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"public class Example {","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"    private List\u003cString\u003e items;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    private Map\u003cString, String\u003e data;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"**Fix:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Map;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"public class Example {","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"    private List\u003cString\u003e items;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    private Map\u003cString, String\u003e data;","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"### 4. Whitespace Around Operators","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"**Violation:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"int result\u003da+b*c; // Missing spaces around operators","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"**Fix:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"int result \u003d a + b * c; // Proper spacing","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"### 5. Final Parameters","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"**Violation:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"public void processData(String input) { // Parameter not final","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    // method body","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"**Fix:**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"```java","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"public void processData(final String input) { // Parameter is final","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    // method body","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"## Best Practices","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"1. **Use constants instead of magic numbers**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"2. **Keep lines under 120 characters**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"3. **Remove unused imports**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"4. **Use proper spacing around operators**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"5. **Consider making parameters final**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"6. **Use suppressions sparingly and document why they\u0027re needed**","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"## Running CheckStyle","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"```bash","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"# Check main source code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleMain","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"# Check test code","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleTest","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"# Check both","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"./gradlew checkstyleMain checkstyleTest","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"## Viewing Reports","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"CheckStyle generates HTML reports in `build/reports/checkstyle/`:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"- Open `main.html` to view main source code violations","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"- Open `test.html` to view test code violations","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"The reports provide detailed information about each violation, including:","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"- File and line number","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"- Rule violated","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"- Description of the violation","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"- Suggestions for fixing","lastModifiedDate":"2025-09-01T11:02:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":149}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"# Jimmy User Guide","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"Jimmy is a musical task management assistant that helps you organize your todos, deadlines, and events with a cheerful, musical personality! 🎵","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"## Features","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"Jimmy can help you with:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"- **Todo tasks**: Simple tasks to remember","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"- **Deadline tasks**: Tasks with specific due dates","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"- **Event tasks**: Tasks with start and end times","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"- **Task management**: Mark tasks as done, delete tasks, find tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"- **Musical personality**: Jimmy responds with musical phrases and emojis! 🎶","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"## Getting Started","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"Launch Jimmy and you\u0027ll be greeted by Melody, your musical task assistant! She\u0027ll guide you through the available commands.","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"### First Launch","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"When you first start Jimmy, you\u0027ll see:","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"- A welcome message from Melody with musical emojis 🎵","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"- A clean chat interface ready for your commands","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"- An input field at the bottom to type your tasks","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"- A Send button to submit your commands","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"### Product Screenshot","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"![Jimmy GUI](Ui.png)","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"## Adding Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"### Adding Todo Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"Create simple tasks without specific dates:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"todo Buy groceries","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"**Expected Output**: Jimmy will add the task and show a confirmation message with musical flair! 🎵","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"### Adding Deadline Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"Create tasks with specific due dates:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"deadline Submit assignment /by 25/12/2024 2359","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"**Date Format**: Use `dd/MM/yyyy HHmm` format (e.g., 25/12/2024 2359 for Dec 25, 2024 at 11:59 PM)","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"### Adding Event Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"Create tasks with start and end times:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"event Team meeting /from 25/12/2024 1400 /to 25/12/2024 1500","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"**Time Format**: Use 24-hour format (1400 \u003d 2:00 PM, 1500 \u003d 3:00 PM)","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"## Managing Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"### List All Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"View all your tasks:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"list","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"### Mark Tasks as Done","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"Mark a task as completed:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"mark 1","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"### Unmark Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"Mark a completed task as incomplete:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"unmark 1","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"### Delete Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"Remove a task from your list:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"delete 1","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"### Find Tasks","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"Search for tasks containing specific keywords:","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"find meeting","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"## Error Handling","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"Jimmy handles common errors gracefully with musical personality:","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"### Common Error Scenarios","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"- **Invalid commands**: Clear error messages with suggestions and musical phrases","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"- **Missing files**: Automatic file creation and recovery","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"- **Invalid dates**: Helpful format suggestions (e.g., \"Expected formats: dd/MM/yyyy HHmm\")","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"- **Index errors**: User-friendly messages with current task count","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"- **Missing parameters**: Specific guidance on what\u0027s required (e.g., \"/by\" for deadlines)","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"- **Duplicate keywords**: Detection of repeated keywords in commands","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"### Example Error Messages","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"❌ Error: Deadline command must include \u0027/by\u0027 keyword.","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"🎵 Dadada! Don\u0027t worry, just add /by followed by your date! 🎵","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"```","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"## Advanced Features","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"### Task Persistence","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"- All tasks are automatically saved to `data/jimmy.txt`","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"- Tasks persist between application restarts","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"- No data loss even if the application crashes","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"### Search Functionality","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"- Case-insensitive search across all task descriptions","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"- Find tasks by keywords or phrases","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"- Search works with partial matches","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"## Getting Help","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"Type `help` to see all available commands and Jimmy\u0027s musical responses! 🎵","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"### Quick Reference","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"- `list` - Show all tasks","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"- `mark X` - Mark task X as done","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"- `unmark X` - Mark task X as not done","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"- `delete X` - Remove task X","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"- `find keyword` - Search for tasks","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"- `bye` - Exit the application","lastModifiedDate":"2025-09-16T12:14:37","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":100,"-":23}},{"path":"nonexistent/directory/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"T | 0 | Test task","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a dialog box with improved asymmetric design for user vs bot conversations.","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":" * Supports different styles for user messages, bot responses, and error messages.","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        assert img !\u003d null : \"Avatar image must not be null\";","lastModifiedDate":"2025-09-12T16:26:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     * Flips the dialog box for bot messages (avatar on left, text on right).","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    private void flip() {","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates a user dialog box with right-aligned styling.","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * User messages: avatar on right, text on left (flipped layout).","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        db.flip(); // Flip so avatar is on right, text on left","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        db.dialog.getStyleClass().add(\"user-message\");","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        db.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        db.setMaxWidth(600); // Prevent excessive width","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        return db;","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates a bot dialog box with left-aligned styling.","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     * Bot messages: avatar on left, text on right (normal layout).","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    public static DialogBox getJimmyDialog(String text, Image img) {","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        // No flip - avatar stays on left, text on right","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        db.dialog.getStyleClass().add(\"bot-message\");","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        db.setMaxWidth(600); // Prevent excessive width","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        return db;","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates an error dialog box with distinctive error styling.","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"     * Error messages: avatar on left, text on right (normal layout).","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"        // No flip - avatar stays on left, text on right","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"        db.dialog.getStyleClass().add(\"error-message\");","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        db.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        db.setMaxWidth(600); // Prevent excessive width","lastModifiedDate":"2025-09-16T11:14:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        return db;","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:18:06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":88}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"public class Launcher {","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.Jimmy;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":" * A modern GUI for Jimmy using FXML with improved UX and responsive design.","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    private Jimmy jimmy \u003d new Jimmy();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"            // Set window properties for better UX","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setTitle(\"Jimmy - Task Management Assistant\");","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setMinHeight(400);","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setMinWidth(500);","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setWidth(800);","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setHeight(700);","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"            // Enable window resizing","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"            stage.setResizable(true);","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"            // Center the window on screen","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"            stage.centerOnScreen();","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T11:15:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJimmy(jimmy);  // inject the Jimmy instance","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"            stage.show();","lastModifiedDate":"2025-09-01T12:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:13:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T11:56:50","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":44}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":" * Controller for the main GUI with improved asymmetric conversation design.","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":" * Features better error handling, responsive layout, and enhanced UX.","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    private jimmy.Jimmy jimmy;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    // Avatar images for chat interface","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dudu.jpg\"));","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    private Image jimmyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bubu.jpg\"));","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        // Auto-scroll to bottom when new messages are added","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        dialogContainer.heightProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2025-09-16T11:47:50","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"            scrollPane.setVvalue(1.0);","lastModifiedDate":"2025-09-16T11:47:50","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        });","lastModifiedDate":"2025-09-16T11:47:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        // Add welcome message","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        addWelcomeMessage();","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"    /** Injects the Jimmy instance */","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    public void setJimmy(jimmy.Jimmy j) {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        jimmy \u003d j;","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"     * Handles user input with improved error detection and asymmetric conversation display.","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates distinct visual styles for user messages, bot responses, and errors.","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    @FXML","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"            return; // Don\u0027t process empty input","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        // Add user message (right-aligned)","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        HBox userWrapper \u003d new HBox();","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        userWrapper.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        userWrapper.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        dialogContainer.getChildren().add(userWrapper);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"        // Get bot response","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"        String response \u003d jimmy.getResponse(input);","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"        // Check if response contains error indicators","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"        boolean isError \u003d response.contains(\"Error:\") || ","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                         response.contains(\"Invalid\") || ","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                         response.contains(\"cannot be empty\") ||","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"                         response.contains(\"I don\u0027t know what\") ||","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                         response.contains(\"Bleh\");","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"        // Add bot response with appropriate styling (left-aligned)","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        HBox botWrapper \u003d new HBox();","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        botWrapper.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"        if (isError) {","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"            botWrapper.getChildren().add(DialogBox.getErrorDialog(response, jimmyImage));","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"        } else {","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"            botWrapper.getChildren().add(DialogBox.getJimmyDialog(response, jimmyImage));","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"        dialogContainer.getChildren().add(botWrapper);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"     * Adds a welcome message to the conversation.","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    private void addWelcomeMessage() {","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        String welcomeText \u003d \"🎵 Dadada! Hello! I\u0027m Melody, your musical task assistant! 🎵\\n\" +","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"                           \"Lalalala! I can help you manage todos, deadlines, and events! 🎶\\n\" +","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"                           \"Type \u0027help\u0027 to see what musical magic I can do! Dadada! 🎵\";","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"        HBox welcomeWrapper \u003d new HBox();","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"        welcomeWrapper.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"        welcomeWrapper.getChildren().add(DialogBox.getJimmyDialog(welcomeText, jimmyImage));","lastModifiedDate":"2025-09-16T12:07:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"        dialogContainer.getChildren().add(welcomeWrapper);","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:15:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":99}},{"path":"src/main/java/jimmy/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.TaskList;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.command.Parser;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.storage.Storage;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.ui.Ui;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":" * Main class for the Jimmy task management application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":" * Jimmy is a command-line task manager that allows users to add, mark, unmark,","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":" * list, and delete tasks. It supports different types of tasks including","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":" * Todo, Deadline, and Event tasks.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"public class Jimmy {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * Command keywords supported by the application.","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * Using an enum avoids magic strings and reduces deep nesting.","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    private enum CommandKeyword {","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, FIND, DELETE, BLAH, UNKNOWN","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    private static CommandKeyword toKeyword(String word) {","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        if (word \u003d\u003d null) {","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.UNKNOWN;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        switch (word) {","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        case \"bye\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.BYE;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        case \"list\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.LIST;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        case \"mark\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.MARK;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        case \"unmark\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.UNMARK;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        case \"todo\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.TODO;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        case \"deadline\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.DEADLINE;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"        case \"event\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.EVENT;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"        case \"find\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.FIND;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        case \"delete\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.DELETE;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        case \"blah\":","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.BLAH;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        default:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"            return CommandKeyword.UNKNOWN;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     * Gets the data file path, ensuring it works both in development and when packaged as JAR.","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     * When running from JAR, uses the data folder beside the JAR file.","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     * When running in development, uses the project\u0027s data directory.","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     * No hardcoded paths - all paths are dynamically determined.","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The path to the data file as a string","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"    private static String getDataFilePath() {","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"            // Get the directory where the JAR file is located","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"            String jarPath \u003d Jimmy.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath();","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"            Path jarDir \u003d Paths.get(jarPath).getParent();","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"            // If running from JAR, use the data folder beside the JAR file","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"            if (jarPath.endsWith(\".jar\")) {","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"                Path dataDir \u003d jarDir.resolve(\"data\");","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"                String jarDataPath \u003d dataDir.resolve(\"jimmy.txt\").toString();","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"                System.out.println(\"DEBUG: Running from JAR, using data folder beside JAR: \" + jarDataPath);","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"                return jarDataPath;","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"DEBUG: Exception in getDataFilePath: \" + e.getMessage());","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"            // Fall back to relative path if we can\u0027t determine JAR location","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        // Fall back to relative path (for development or if JAR detection fails)","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"DEBUG: Running in development mode, using relative path: data/jimmy.txt\");","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        return \"data/jimmy.txt\";","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    private TaskList guiTaskList; // persisted across GUI inputs","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"    private Storage guiStorage;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     * Main entry point for the Jimmy application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * Initializes the storage, UI, and task list, then starts the main application loop.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(getDataFilePath());","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(loadedTasks);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"        // User input","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"        run(taskList, scanner, ui, storage);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"     * Main application loop that processes user commands.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"     * Continuously reads user input and executes corresponding commands","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"     * until the user types \"bye\".","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"     * @param taskList The list of tasks to manage","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"     * @param scanner Scanner for reading user input","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     * @param ui User interface for displaying messages","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * @param storage Storage system for persisting tasks","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"    public static void run(TaskList taskList, Scanner scanner, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        boolean running \u003d true;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        while (scanner.hasNextLine() \u0026\u0026 running) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"                Parser.ParsedCommand parsed \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"                String command \u003d parsed.command;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"                CommandKeyword keyword \u003d toKeyword(command);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"                switch (keyword) {","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"                case BYE:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"                    running \u003d false;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"                case LIST:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskList(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"                case MARK:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidMarkCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a mark cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"                    int markIndex \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"                    if (markIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Task index \" + (markIndex + 1) + \" is out of range. You have \" + taskList.getSize() + \" tasks.\");","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"                    Task markedTask \u003d taskList.getTask(markIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.markTaskAsDone(markIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskMarkedAsDone(markedTask);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"                case UNMARK:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidUnmarkCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of an unmark cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"                    int unmarkIndex \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"                    if (unmarkIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Task index \" + (unmarkIndex + 1) + \" is out of range. You have \" + taskList.getSize() + \" tasks.\");","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"                    Task unmarkedTask \u003d taskList.getTask(unmarkIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.markTaskAsNotDone(unmarkIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskMarkedAsNotDone(unmarkedTask);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"                case TODO:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidTodoCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"                    Task todoTask \u003d new Todo(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.addTask(todoTask);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskAdded(todoTask, taskList.getSize());","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"                case DEADLINE:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidDeadlineCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a deadline must include \u0027/by\u0027.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"                    String deadlineDesc \u003d Parser.extractDeadlineDescription(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"                    String by \u003d Parser.extractDeadlineDate(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"                        Task deadlineTask \u003d new Deadline(deadlineDesc, by);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"                        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"                        storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"                        ui.showTaskAdded(deadlineTask, taskList.getSize());","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"                case EVENT:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidEventCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of an event must include \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ShaoZhi21"},"content":"                    String eventDesc \u003d Parser.extractEventDescription(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ShaoZhi21"},"content":"                    String from \u003d Parser.extractEventFrom(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ShaoZhi21"},"content":"                    String to \u003d Parser.extractEventTo(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ShaoZhi21"},"content":"                        Task eventTask \u003d new Event(eventDesc, from, to);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ShaoZhi21"},"content":"                        taskList.addTask(eventTask);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ShaoZhi21"},"content":"                        storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ShaoZhi21"},"content":"                        ui.showTaskAdded(eventTask, taskList.getSize());","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ShaoZhi21"},"content":"                case FIND:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidFindCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a find cannot be empty.\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ShaoZhi21"},"content":"                    java.util.List\u003cTask\u003e matches \u003d taskList.findByKeyword(parsed.fullInput);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showMatchingTasks(matches);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ShaoZhi21"},"content":"                case BLAH:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ShaoZhi21"},"content":"                    throw new JimmyException(\"I don\u0027t know what blah is. Bleh.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ShaoZhi21"},"content":"                case DELETE:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidDeleteCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a delete cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ShaoZhi21"},"content":"                    int deleteIndex \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ShaoZhi21"},"content":"                    if (deleteIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Task index \" + (deleteIndex + 1) + \" is out of range. You have \" + taskList.getSize() + \" tasks.\");","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-16T11:56:44","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ShaoZhi21"},"content":"                    Task removedTask \u003d taskList.getTask(deleteIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.removeTask(deleteIndex);","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskDeleted(removedTask, taskList.getSize());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ShaoZhi21"},"content":"                    break;","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ShaoZhi21"},"content":"                case UNKNOWN:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ShaoZhi21"},"content":"                default:","lastModifiedDate":"2025-09-12T16:59:16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ShaoZhi21"},"content":"                    throw new JimmyException(\"I don\u0027t know what that means. Please use a valid command like \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027list\u0027, \u0027mark\u0027, \u0027unmark\u0027, \u0027delete\u0027, or \u0027find\u0027.\");","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (JimmyException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ShaoZhi21"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ShaoZhi21"},"content":"        scanner.close();","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ShaoZhi21"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ShaoZhi21"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ShaoZhi21"},"content":"        if (guiStorage \u003d\u003d null || guiTaskList \u003d\u003d null) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ShaoZhi21"},"content":"            guiStorage \u003d new Storage(getDataFilePath());","lastModifiedDate":"2025-09-16T13:07:36","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ShaoZhi21"},"content":"            java.util.List\u003cTask\u003e loaded \u003d guiStorage.load();","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ShaoZhi21"},"content":"            guiTaskList \u003d new TaskList(loaded);","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ShaoZhi21"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ShaoZhi21"},"content":"        jimmy.ui.GuiUi guiUi \u003d new jimmy.ui.GuiUi(out);","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ShaoZhi21"},"content":"            // Process exactly one line using the same logic as CLI","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ShaoZhi21"},"content":"            Scanner singleLine \u003d new Scanner(input + \"\\n\");","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ShaoZhi21"},"content":"            run(guiTaskList, singleLine, guiUi, guiStorage);","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ShaoZhi21"},"content":"        } finally {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ShaoZhi21"},"content":"            // no-op","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ShaoZhi21"},"content":"        return out.toString().trim();","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:16:58","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":263}},{"path":"src/main/java/jimmy/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Parses user input commands for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to extract command types and arguments from user input strings.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Supports various command formats and validates input before processing.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String KEY_BY \u003d \"/by\";","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String KEY_FROM \u003d \"/from\";","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String KEY_TO \u003d \"/to\";","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_POSITIVE_INDEX \u003d \"Task index must be a positive number.\";","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_VALID_NUMBER \u003d \"Task index must be a valid number.\";","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_EMPTY_INPUT \u003d \"Input cannot be empty or contain only whitespace.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_INVALID_CHARACTERS \u003d \"Input contains invalid special characters.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_MULTIPLE_SPACES \u003d \"Multiple consecutive spaces are not allowed.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_DUPLICATE_KEYWORD \u003d \"Keyword appears multiple times in the command.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_MISSING_DESCRIPTION \u003d \"Description cannot be empty.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String ERR_MISSING_DATE \u003d \"Date/time parameter is missing or empty.\";","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     * Represents a parsed command with its type and full input.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * Contains the extracted command and the complete user input for further processing.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    public static class ParsedCommand {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"        /** The extracted command type (e.g., \"todo\", \"deadline\", \"mark\") */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        public final String command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"        /** The complete user input string for further parsing */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        public final String fullInput;  ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"         * Constructs a new ParsedCommand with the specified command and input.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"         *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"         * @param command The extracted command type","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"         * @param fullInput The complete user input string","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"         */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        public ParsedCommand(String command, String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"            this.command \u003d command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"            this.fullInput \u003d fullInput;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a user input string into a ParsedCommand object.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on the first space to separate command from arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates input format and handles common errors.","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * @param userInput The user\u0027s input string","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A ParsedCommand object containing the command and full input","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if input format is invalid","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    public static ParsedCommand parseCommand(String userInput) throws JimmyException {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        if (userInput \u003d\u003d null) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Input cannot be null.\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        // Normalize input: trim and collapse multiple spaces","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        String normalizedInput \u003d userInput.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        if (normalizedInput.isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_EMPTY_INPUT);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"        // Check for invalid characters (basic validation)","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"        if (containsInvalidCharacters(normalizedInput)) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_INVALID_CHARACTERS);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        String[] inputParts \u003d normalizedInput.split(\" \", 2);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        String command \u003d inputParts[0];","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"        String fullInput \u003d inputParts.length \u003e 1 ? inputParts[1] : \"\";","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        return new ParsedCommand(command, fullInput);","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if input contains invalid special characters.","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     * ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     * @param input The input string to validate","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if input contains invalid characters, false otherwise","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    private static boolean containsInvalidCharacters(String input) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        // Allow alphanumeric, spaces, common punctuation, and task keywords","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        return !input.matches(\"^[a-zA-Z0-9\\\\s.,!?/\\\\-:]+$\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a mark command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the mark command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidMarkCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if an unmark command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the unmark command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidUnmarkCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a todo command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the todo command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidTodoCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a deadline command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command contains the required \"/by\" keyword and validates format.","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the deadline command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if command format is invalid","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidDeadlineCommand(String fullInput) throws JimmyException {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"        if (fullInput.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_MISSING_DESCRIPTION);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"        // Check for duplicate /by keywords","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"        int byCount \u003d (fullInput.length() - fullInput.replace(KEY_BY, \"\").length()) / KEY_BY.length();","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        if (byCount \u003e 1) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_DUPLICATE_KEYWORD + \" (\" + KEY_BY + \")\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"        if (!fullInput.contains(KEY_BY)) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Deadline command must include \u0027/by\u0027 keyword.\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"        // Validate that description and date are not empty","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        String[] parts \u003d fullInput.split(KEY_BY);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"        if (parts[0].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_MISSING_DESCRIPTION);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_MISSING_DATE);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"        return true;","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if an event command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command contains both \"/from\" and \"/to\" keywords and validates format.","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the event command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if command format is invalid","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidEventCommand(String fullInput) throws JimmyException {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"        if (fullInput.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_MISSING_DESCRIPTION);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"        // Check for duplicate keywords","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"        int fromCount \u003d (fullInput.length() - fullInput.replace(KEY_FROM, \"\").length()) / KEY_FROM.length();","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"        int toCount \u003d (fullInput.length() - fullInput.replace(KEY_TO, \"\").length()) / KEY_TO.length();","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"        if (fromCount \u003e 1) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_DUPLICATE_KEYWORD + \" (\" + KEY_FROM + \")\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"        if (toCount \u003e 1) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_DUPLICATE_KEYWORD + \" (\" + KEY_TO + \")\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"        if (!containsAllKeywords(fullInput, KEY_FROM, KEY_TO)) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Event command must include both \u0027/from\u0027 and \u0027/to\u0027 keywords.\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"        // Validate that all parts are not empty","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"        String[] fromParts \u003d fullInput.split(KEY_FROM);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"        if (fromParts[0].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_MISSING_DESCRIPTION);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"        String[] toParts \u003d fromParts[1].split(KEY_TO);","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"        if (toParts[0].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Start time cannot be empty.\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ShaoZhi21"},"content":"        if (toParts.length \u003c 2 || toParts[1].trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"End time cannot be empty.\");","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ShaoZhi21"},"content":"        return true;","lastModifiedDate":"2025-09-16T11:56:52","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a delete command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the delete command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidDeleteCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidFindCommand(String fullInput) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a command contains all required keywords.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ShaoZhi21"},"content":"     * Uses varargs to check for multiple required keywords in a single call.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string to validate","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ShaoZhi21"},"content":"     * @param requiredKeywords The required keywords to check for (varargs)","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if all required keywords are present, false otherwise","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean containsAllKeywords(String fullInput, String... requiredKeywords) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ShaoZhi21"},"content":"        for (String keyword : requiredKeywords) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ShaoZhi21"},"content":"            if (!fullInput.contains(keyword)) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ShaoZhi21"},"content":"                return false;","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ShaoZhi21"},"content":"        return true;","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the description part from a deadline command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/by\" and returns the part before it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the deadline command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The description part of the deadline","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractDeadlineDescription(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(KEY_BY)[0].trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the date part from a deadline command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/by\" and returns the part after it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the deadline command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The date part of the deadline","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractDeadlineDate(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(KEY_BY)[1].trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the description part from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/from\" and returns the part before it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The description part of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventDescription(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(KEY_FROM)[0].trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the start time from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/from\" and \"/to\" to get the start time.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The start time of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventFrom(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(KEY_FROM)[1].split(KEY_TO)[0].trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the end time from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/to\" and returns the part after it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The end time of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventTo(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(KEY_TO)[1].trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a task index from the input string.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ShaoZhi21"},"content":"     * Converts the string to a 1-based index and validates it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The input string containing the task index","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The 0-based index for internal use","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if the index is invalid or not a number","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ShaoZhi21"},"content":"    public static int parseTaskIndex(String fullInput) throws JimmyException {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ShaoZhi21"},"content":"        String trimmed \u003d fullInput.trim();","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ShaoZhi21"},"content":"        boolean isNumber;","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ShaoZhi21"},"content":"            Integer.parseInt(trimmed);","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ShaoZhi21"},"content":"            isNumber \u003d true;","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ShaoZhi21"},"content":"            isNumber \u003d false;","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ShaoZhi21"},"content":"        if (!isNumber) {","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_VALID_NUMBER);","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ShaoZhi21"},"content":"        int index \u003d Integer.parseInt(trimmed) - 1;","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ShaoZhi21"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(ERR_POSITIVE_INDEX);","lastModifiedDate":"2025-09-12T16:52:12","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ShaoZhi21"},"content":"        return index;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":316}},{"path":"src/main/java/jimmy/exception/JimmyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.exception;","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Custom exception class for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * Used to represent application-specific errors that occur during task operations.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Extends RuntimeException to provide unchecked exception behavior.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class JimmyException extends RuntimeException {","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new JimmyException with the specified error message.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"     * The message describes what went wrong in the application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The error message describing the exception","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    public JimmyException(String message) {","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        super(message);","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":19}},{"path":"src/main/java/jimmy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.storage;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":" * Manages the persistence of tasks in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":" * Handles loading tasks from files and saving tasks to files.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":" * Supports various task types (Todo, Deadline, Event) with proper serialization.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    /** The file path where tasks are stored */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    private final Path filePath;","lastModifiedDate":"2025-09-12T16:52:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * The file path will be used for both loading and saving tasks.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"     * @param filePath The path to the file for storing tasks","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        assert this.filePath !\u003d null : \"Storage path must not be null\";","lastModifiedDate":"2025-09-12T16:26:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses the file content and reconstructs Task objects.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates the file and directory if they don\u0027t exist.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list of loaded tasks, or an empty list if the file doesn\u0027t exist","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if there are file access issues or data corruption","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e load() throws JimmyException {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"            if (Files.exists(filePath)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"                for (String line : lines) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"                    if (line.trim().isEmpty()) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"                        continue;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"                    if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"                        continue;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"                    String type \u003d parts[0];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task;","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"                    if (type.equals(\"T\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"                    } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                        if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"                        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"                            task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"                        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"                            System.out.println(\"Warning: Could not parse deadline date \u0027\" + by + \"\u0027 for task: \" + description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"                    } else if (type.equals(\"E\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"                        if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"                        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"                            task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"                        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"                            System.out.println(\"Warning: Could not parse event dates for task: \" + description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"                    } else {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"                        // unknown record type; skip defensively","lastModifiedDate":"2025-09-12T16:52:41","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"                        continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"                    if (isDone) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Cannot access storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Permission denied accessing storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Unexpected error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        assert tasks !\u003d null : \"Loaded tasks list must not be null\";","lastModifiedDate":"2025-09-12T16:26:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"     * Converts each task to its file representation and writes to disk.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates the file and directory if they don\u0027t exist.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The list of tasks to save","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if there are file access issues","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"    public void save(List\u003cTask\u003e tasks) throws JimmyException {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Tasks list cannot be null.\");","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(tasks.size());","lastModifiedDate":"2025-09-12T16:52:41","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"            if (task \u003d\u003d null) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"                throw new JimmyException(\"Task in list cannot be null.\");","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"            // Ensure directory exists","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"            Files.write(filePath, lines); ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Cannot write to storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Permission denied writing to storage file: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Unexpected error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-16T11:56:57","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":146}},{"path":"src/main/java/jimmy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a deadline task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" * A deadline task has a description and a specific due date and time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides deadline-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    /** The due date and time for the deadline task */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for parsing input date strings in \"d/M/yyyy HHmm\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for displaying dates in \"MMM dd yyyy, h:mm a\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Deadline task with the given description and due date string.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * The due date string will be parsed into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     * @param by The due date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if the date format is invalid or date doesn\u0027t exist","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    public Deadline(String description, String by) throws JimmyException {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     * @param by The due date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * Tries multiple date formats in order of preference.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates that the date actually exists (e.g., Feb 30 is invalid).","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateTimeStr The date string to parse","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if the date string cannot be parsed or date doesn\u0027t exist","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws JimmyException {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        if (dateTimeStr \u003d\u003d null || dateTimeStr.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Date cannot be empty.\");","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        String trimmed \u003d dateTimeStr.trim();","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the format \"2/12/2019 1800\"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"            return LocalDateTime.parse(trimmed, INPUT_FORMATTER);","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"            // If parsing fails, try alternative formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd HH:mm\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                return LocalDateTime.parse(trimmed, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"                    // Try \"dd-MM-yyyy HH:mm\" format","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"                    return LocalDateTime.parse(trimmed, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"                        // Try ISO format","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"                        return LocalDateTime.parse(trimmed, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \u0027\" + trimmed + ","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"                            \"\u0027. Expected formats: dd/MM/yyyy HHmm, yyyy-MM-dd HH:mm, dd-MM-yyyy HH:mm, or ISO format\");","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-16T11:57:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the due date and time for this deadline task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The due date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"        return by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the deadline task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"D | status | description | dueDateTime\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the deadline task for display.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"[D] [status] description (by: formattedDueDate)\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A formatted string representation of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[D] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString() + \" (by: \" + by.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":118}},{"path":"src/main/java/jimmy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * Represents an event task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" * An event task has a description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides event-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    /** The start date and time of the event */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    /** The end date and time of the event */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for parsing input date strings in \"d/M/yyyy HHmm\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for displaying dates in \"MMM dd yyyy, h:mm a\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     * The date strings will be parsed into LocalDateTime objects.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates that start time is before end time.","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"     * @param from The start date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"     * @param to The end date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if date format is invalid or start time is not before end time","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    public Event(String description, String from, String to) throws JimmyException {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        // Validate that start time is before end time","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        if (!this.from.isBefore(this.to)) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Start time must be before end time. Start: \" + ","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"                this.from.format(DISPLAY_FORMATTER) + \", End: \" + this.to.format(DISPLAY_FORMATTER));","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * @param from The start date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * @param to The end date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"     * Tries multiple date formats in order of preference.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates that the date actually exists (e.g., Feb 30 is invalid).","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateTimeStr The date string to parse","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if the date string cannot be parsed or date doesn\u0027t exist","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) throws JimmyException {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        if (dateTimeStr \u003d\u003d null || dateTimeStr.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Date cannot be empty.\");","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        String trimmed \u003d dateTimeStr.trim();","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the format \"2/12/2019 1800\"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"            return LocalDateTime.parse(trimmed, INPUT_FORMATTER);","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"            // If parsing fails, try alternative formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd HH:mm\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"                return LocalDateTime.parse(trimmed, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"                    // Try \"dd-MM-yyyy HH:mm\" format","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"                    return LocalDateTime.parse(trimmed, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"                        // Try ISO format","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"                        return LocalDateTime.parse(trimmed, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (DateTimeParseException e4) {","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \u0027\" + trimmed + ","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"                            \"\u0027. Expected formats: dd/MM/yyyy HHmm, yyyy-MM-dd HH:mm, dd-MM-yyyy HH:mm, or ISO format\");","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-16T11:57:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the start date and time of this event task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The start date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        return from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the end date and time of this event task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The end date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"        return to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the event task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"E | status | description | startDateTime | endDateTime\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"               from.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) + \" | \" + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"               to.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the event task for display.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"[E] [status] description (from: startDateTime to: endDateTime)\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A formatted string representation of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[E] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString() + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"               \" (from: \" + from.format(DISPLAY_FORMATTER) + \" to: \" + to.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":144}},{"path":"src/main/java/jimmy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * This is the base class for all types of tasks (Todo, Deadline, Event).","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Each task has a description and can be marked as done or not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    /** Indicates whether the task has been completed */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /** The description or title of the task */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    protected String description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task description","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        return description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns \"X\" if the task is done, \" \" (space) if not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * @return \"X\" for completed tasks, \" \" for incomplete tasks","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"1 | description\" for completed tasks, \"0 | description\" for incomplete tasks.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"     * This is the same as the description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task description","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        return description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":78}},{"path":"src/main/java/jimmy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-12T17:05:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Manages a collection of tasks in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to add, remove, mark, and retrieve tasks from the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" * The TaskList maintains the order of tasks and provides size information.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    /** The list of tasks */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The initial list of tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task to add","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        assert task !\u003d null : \"Task to add must not be null\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        assert tasks.size() \u003e 0 : \"Task list size should be positive after add\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"     * Adds multiple tasks to the list using varargs.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The tasks to add (varargs)","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    public void addTasks(Task... tasks) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"            assert task !\u003d null : \"Vararg task must not be null\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"            this.tasks.add(task);","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 0-based for internal use.","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 0-based index of the task to remove","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for remove\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 0-based for internal use.","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 0-based index of the task to mark as done","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for mark\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks a task as not done at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 0-based for internal use.","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 0-based index of the task to mark as not done","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for unmark\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 0-based for internal use.","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 0-based index of the task to retrieve","lastModifiedDate":"2025-09-12T16:52:51","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task at the specified index","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds for getTask\";","lastModifiedDate":"2025-09-12T16:26:32","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The number of tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns all tasks in the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list containing all tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the list contains no tasks, false otherwise","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"     * Removes all tasks from the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"     * The list will be empty after this call returns.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"    public void clear() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.clear();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"     * Finds tasks that match the given date string.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"     * Searches through Deadline and Event tasks for date matches.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"     * Supports multiple date formats: dd/MM/yyyy, yyyy-MM-dd, dd-MM-yyyy.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"     * ","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"     * This method uses a robust date parsing approach","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"     * with multiple fallback formats to handle various user input patterns.","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"     * The implementation gracefully handles parsing errors and provides clear","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"     * error messages for invalid date formats.","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateStr The date string to search for (supports multiple formats)","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list of tasks that match the given date, empty list if no matches or invalid date","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IllegalArgumentException if the date format is not recognized","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e findTasksByDate(String dateStr) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the date in various formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"            java.time.LocalDate searchDate \u003d null;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"            // Try \"dd/MM/yyyy\" format first (e.g., \"2/12/2019\")","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"                searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"                    java.time.format.DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (Exception e1) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"                    searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"                        java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (Exception e2) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"                    // Try \"dd-MM-yyyy\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"                        searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"                            java.time.format.DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (Exception e3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new IllegalArgumentException(\"Invalid date format. Use dd/MM/yyyy, yyyy-MM-dd, or dd-MM-yyyy\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"            final java.time.LocalDate finalSearchDate \u003d searchDate;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"                    if (deadline.getBy().toLocalDate().equals(finalSearchDate)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"                    if (event.getFrom().toLocalDate().equals(finalSearchDate) || ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"                        event.getTo().toLocalDate().equals(finalSearchDate)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ShaoZhi21"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ShaoZhi21"},"content":"     * Finds tasks that contain all the specified keywords.","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ShaoZhi21"},"content":"     * Performs case-insensitive, tokenized search across task descriptions and dates.","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ShaoZhi21"},"content":"     * ","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ShaoZhi21"},"content":"     * This method implements a sophisticated search algorithm","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ShaoZhi21"},"content":"     * that tokenizes the search query and performs partial matching across multiple","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ShaoZhi21"},"content":"     * task fields. The search is order-insensitive and supports partial keyword matches.","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ShaoZhi21"},"content":"     * ","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ShaoZhi21"},"content":"     * @param keyword The search keyword(s) - can be multiple words separated by spaces","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list of tasks containing all the specified keywords","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e findByKeyword(String keyword) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ShaoZhi21"},"content":"        // Early return for null/empty input to prevent unnecessary processing","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ShaoZhi21"},"content":"        if (keyword \u003d\u003d null || keyword.isBlank()) {","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ShaoZhi21"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ShaoZhi21"},"content":"        // Tokenize search query for flexible multi-word matching","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ShaoZhi21"},"content":"        String[] tokens \u003d keyword.toLowerCase().trim().split(\"\\\\s+\");","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.stream()","lastModifiedDate":"2025-09-12T17:05:20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ShaoZhi21"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ShaoZhi21"},"content":"                    // Build comprehensive searchable text including dates","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ShaoZhi21"},"content":"                    StringBuilder sb \u003d new StringBuilder(task.getDescription().toLowerCase());","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ShaoZhi21"},"content":"                    if (task instanceof Deadline) {","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ShaoZhi21"},"content":"                        Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ShaoZhi21"},"content":"                        sb.append(\u0027 \u0027).append(String.valueOf(d.getBy()));","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ShaoZhi21"},"content":"                    } else if (task instanceof Event) {","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ShaoZhi21"},"content":"                        Event e \u003d (Event) task;","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ShaoZhi21"},"content":"                        sb.append(\u0027 \u0027).append(String.valueOf(e.getFrom()))","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ShaoZhi21"},"content":"                          .append(\u0027 \u0027).append(String.valueOf(e.getTo()));","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ShaoZhi21"},"content":"                    String haystack \u003d sb.toString();","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ShaoZhi21"},"content":"                    // Match if ALL tokens are present (order-insensitive, partial allowed)","lastModifiedDate":"2025-09-16T11:03:22","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ShaoZhi21"},"content":"                    return java.util.Arrays.stream(tokens).allMatch(haystack::contains);","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ShaoZhi21"},"content":"                })","lastModifiedDate":"2025-09-12T17:22:04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ShaoZhi21"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-09-12T17:05:20","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":245}},{"path":"src/main/java/jimmy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a simple todo task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * A todo task is a basic task with just a description and no specific time constraints.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides todo-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[T] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":29}},{"path":"src/main/java/jimmy/ui/GuiUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.ui;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * UI adapter that accumulates outputs into a StringBuilder for GUI use.","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Reuses the same messages as the console UI, but returns text to caller.","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class GuiUi extends Ui {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    private final StringBuilder out;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    public GuiUi(StringBuilder out) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"        this.out \u003d out;","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    private void println(String line) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        out.append(line).append(\"\\n\");","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎵 Dadada! Hope to see you again soon! Lalalala! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎶 Lalalala! Here\u0027s your task symphony! 🎶\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"            println((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"            println(\"Dadada... no tasks to sing about! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎉 Dadada! Task completed! Lalalala! 🎉\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsNotDone(Task task) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎵 Lalalala! Task unmarked! Dadada! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎶 Dadada! New task added to the melody! 🎶\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        println(task.toString());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"Lalalala! Now you have \" + totalTasks + \" tasks in your symphony! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎵 Lalalala! Task removed from the song! Dadada! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        println(task.toString());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"Now your symphony has \" + totalTasks + \" tasks! 🎶\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAddedSimple(String description) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎵 Dadada! Added: \" + description + \" Lalalala! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"    public void showError(String... messages) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎵 Dadada... Oops! Something went off-key! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"            println(\"Lalalala: \" + message);","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    public void showMatchingTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"        println(\"🎶 Lalalala! Here\u0027s your matching task melody! 🎶\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"            println((i + 1) + \".\" + t.toString());","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"            println(\"Dadada... no matching notes in your symphony! 🎵\");","lastModifiedDate":"2025-09-16T11:46:49","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-12T15:16:08","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":91}},{"path":"src/main/java/jimmy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.ui;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Handles user interface and display operations for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to show welcome messages, task lists, and various status updates.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * All output is formatted consistently with clear visual separators.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows a formatted greeting with the application name.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        showFormattedLines(","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"            \" Hello! I\u0027m Jimmy\",","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"            \" What can I do for you?\"","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        );","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows a formatted farewell message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        showFormattedLines(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a list of all tasks with their numbers.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"     * Each task is shown on a separate line with its index.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The list of tasks to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the task with its completion status.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was marked as done","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the task with its completion status.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was marked as not done","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsNotDone(Task task) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the added task and the new total count.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was added","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     * @param totalTasks The total number of tasks after adding","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the deleted task and the new total count.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was deleted","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     * @param totalTasks The total number of tasks after deletion","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a simple message confirming that a task was added.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows just the description of the added task.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the task that was added","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAddedSimple(String description) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"added: \" + description);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error message in a formatted box.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"     * @param messages The error messages to display (varargs)","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"    public void showError(String... messages) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a loading error message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error without the formatted box for system-level errors.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The loading error message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Error loading tasks: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a saving error message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error without the formatted box for system-level errors.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The saving error message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"    public void showSavingError(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Error saving tasks: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays warning messages to the user.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the warnings without the formatted box for system-level messages.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"     * @param messages The warning messages to display (varargs)","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"    public void showWarning(String... messages) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"        for (String message : messages) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"Warning: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"    public void showMatchingTasks(java.util.List\u003cjimmy.task.Task\u003e tasks) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"            jimmy.task.Task t \u003d tasks.get(i);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print((i + 1) + \".\" + t.toString());","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays multiple formatted lines with consistent formatting.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"     * Uses varargs to accept any number of lines to display.","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"     * @param lines The lines to display (varargs)","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"    public void showFormattedLines(String... lines) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(line);","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-01T12:50:23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":188}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"         prefWidth\u003d\"600.0\"","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"         stylesheets\u003d\"@/css/dialog-box.css\"\u003e","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"               fitHeight\u003d\"40.0\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"               fitWidth\u003d\"40.0\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"               pickOnBounds\u003d\"true\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"               preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" spacing\u003d\"4.0\" maxWidth\u003d\"500.0\"\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"        \u003cLabel fx:id\u003d\"dialog\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"               text\u003d\"Label\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"               wrapText\u003d\"true\" ","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"               minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"      \u003c/children\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"  \u003c/children\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2025-09-16T11:16:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"            minHeight\u003d\"400.0\" minWidth\u003d\"500.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"            prefHeight\u003d\"700.0\" prefWidth\u003d\"800.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"            fx:controller\u003d\"MainWindow\"","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"            stylesheets\u003d\"@/css/main.css\"\u003e","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        \u003c!-- Input area with better styling --\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        \u003cHBox fx:id\u003d\"inputContainer\" ","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"              alignment\u003d\"CENTER_LEFT\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"              spacing\u003d\"10.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"              AnchorPane.bottomAnchor\u003d\"10.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"              AnchorPane.leftAnchor\u003d\"10.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"              AnchorPane.rightAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"            \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"                       onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"                       prefHeight\u003d\"45.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"                       HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"                       promptText\u003d\"Type your message here...\" /\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"            \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"                    mnemonicParsing\u003d\"false\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"                    onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"                    prefHeight\u003d\"45.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"                    prefWidth\u003d\"80.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"                    text\u003d\"Send\" /\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        \u003c!-- Main conversation area --\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-12T15:54:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"                    vbarPolicy\u003d\"AS_NEEDED\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"                    pannable\u003d\"true\"","lastModifiedDate":"2025-09-16T11:47:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"                    AnchorPane.bottomAnchor\u003d\"65.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"                    AnchorPane.leftAnchor\u003d\"10.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"                    AnchorPane.rightAnchor\u003d\"10.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"                    AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"                      spacing\u003d\"8.0\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"                      alignment\u003d\"TOP_LEFT\"","lastModifiedDate":"2025-09-16T11:16:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"                      minHeight\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-16T11:47:50","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-01T12:28:47","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":57}},{"path":"src/test/java/jimmy/JimmyTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.TaskList;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.command.Parser;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"public class JimmyTest {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddTodoTask() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"        // Test adding a todo task","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Buy groceries\", taskList.getTask(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", taskList.getTask(0).getStatusIcon()); // Not done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddDeadlineTask() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        // Test adding a deadline task","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        Task deadline \u003d new Deadline(\"Submit assignment\", \"25/12/2024 2359\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Submit assignment\", taskList.getTask(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", taskList.getTask(0).getStatusIcon()); // Not done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddEventTask() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"        // Test adding an event task","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"        Task event \u003d new Event(\"Team meeting\", \"25/12/2024 1400\", \"25/12/2024 1500\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Team meeting\", taskList.getTask(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", taskList.getTask(0).getStatusIcon()); // Not done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        // Add a task and mark it as done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsDone(0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", taskList.getTask(0).getStatusIcon()); // Done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        // Add a task, mark it as done, then unmark it","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsDone(0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", taskList.getTask(0).getStatusIcon()); // Done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsNotDone(0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", taskList.getTask(0).getStatusIcon()); // Not done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"        // Add multiple tasks and delete one","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 1\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 2\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 3\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.removeTask(1); // Delete middle task","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Task 1\", taskList.getTask(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Task 3\", taskList.getTask(1).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFindTasks() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"        // Add tasks with different descriptions","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy milk\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Submit assignment\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy bread\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"        // Find tasks containing \"buy\"","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findByKeyword(\"buy\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        // Find tasks containing \"assignment\"","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        foundTasks \u003d taskList.findByKeyword(\"assignment\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, foundTasks.size());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Submit assignment\", foundTasks.get(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFindTasksCaseInsensitive() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy GROCERIES\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"buy milk\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"BUY bread\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findByKeyword(\"buy\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(3, foundTasks.size());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFindTasksNoMatches() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Submit assignment\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findByKeyword(\"nonexistent\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, foundTasks.size());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFindTasksEmptySearch() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e foundTasks \u003d taskList.findByKeyword(\"\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        // Empty search may return 0 or all tasks depending on implementation","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(foundTasks.size() \u003e\u003d 0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"    public void testMarkTaskIndexOutOfBounds() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"        // Test negative index","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsDone(-1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"        // Test index too high","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsDone(1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsDone(999));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"    public void testUnmarkTaskIndexOutOfBounds() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"        // Test negative index","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsNotDone(-1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"        // Test index too high","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsNotDone(1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.markTaskAsNotDone(999));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeleteTaskIndexOutOfBounds() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"        // Test negative index","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.removeTask(-1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"        // Test index too high","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.removeTask(1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.removeTask(999));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"    public void testGetTaskIndexOutOfBounds() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"        // Test negative index","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.getTask(-1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"        // Test index too high","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.getTask(1));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.getTask(999));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEmptyTaskList() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListWithMultipleTasks() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 1\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Deadline(\"Task 2\", \"25/12/2024 2359\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Event(\"Task 3\", \"25/12/2024 1400\", \"25/12/2024 1500\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListToString() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Deadline(\"Submit assignment\", \"25/12/2024 2359\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ShaoZhi21"},"content":"        String result \u003d taskList.toString();","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ShaoZhi21"},"content":"        // Just verify the toString method returns a non-empty string","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(result.length() \u003e 0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListWithMixedCompletionStatus() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ShaoZhi21"},"content":"        Task todo3 \u003d new Todo(\"Task 3\");","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo1);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todo3);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ShaoZhi21"},"content":"        // Mark first and third tasks as done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsDone(0);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsDone(2);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", taskList.getTask(0).getStatusIcon()); // Done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", taskList.getTask(1).getStatusIcon()); // Not done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", taskList.getTask(2).getStatusIcon()); // Done","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListClear() {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 1\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(new Todo(\"Task 2\"));","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ShaoZhi21"},"content":"        // Clear all tasks","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d taskList.getSize() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ShaoZhi21"},"content":"            taskList.removeTask(i);","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-09-16T12:03:43","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":250}},{"path":"src/test/java/jimmy/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.command;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommand() {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.ParsedCommand parsed \u003d Parser.parseCommand(\"todo buy milk\");","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"todo\", parsed.command);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"buy milk\", parsed.fullInput);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandWithNoArguments() {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.ParsedCommand parsed \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"list\", parsed.command);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"\", parsed.fullInput);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    // Test input validation and error handling","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandNullInput() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(null));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandEmptyInput() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(\"\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(\"   \"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandInvalidCharacters() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(\"todo buy@milk\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(\"todo buy#milk\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseCommand(\"todo buy$milk\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandValidCharacters() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        // Should not throw exceptions","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.parseCommand(\"todo buy milk, eggs and bread!\");","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.parseCommand(\"deadline submit assignment /by 25/12/2024 2359\");","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.parseCommand(\"event meeting /from 25/12/2024 1400 /to 25/12/2024 1500\");","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandNormalizeSpaces() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.ParsedCommand parsed \u003d Parser.parseCommand(\"  todo   buy   milk  \");","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"todo\", parsed.command);","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"buy milk\", parsed.fullInput);","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    // Test command validation methods","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    public void testIsValidTodoCommand() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(Parser.isValidTodoCommand(\"buy milk\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(Parser.isValidTodoCommand(\"\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(Parser.isValidTodoCommand(\"   \"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    public void testIsValidDeadlineCommand() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(Parser.isValidDeadlineCommand(\"submit assignment /by 2024-12-25\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidDeadlineCommand(\"\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidDeadlineCommand(\"submit assignment\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidDeadlineCommand(\"submit assignment /by\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidDeadlineCommand(\"/by 2024-12-25\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    public void testIsValidDeadlineCommandDuplicateKeywords() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"            Parser.isValidDeadlineCommand(\"submit assignment /by 2024-12-25 /by 2024-12-26\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"    public void testIsValidEventCommand() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(Parser.isValidEventCommand(\"meeting /from 2pm /to 3pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidEventCommand(\"\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidEventCommand(\"meeting\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidEventCommand(\"meeting /from 2pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.isValidEventCommand(\"meeting /to 3pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    public void testIsValidEventCommandDuplicateKeywords() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"            Parser.isValidEventCommand(\"meeting /from 2pm /from 3pm /to 4pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"            Parser.isValidEventCommand(\"meeting /from 2pm /to 3pm /to 4pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"    // Test extraction methods","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    public void testExtractDeadlineDescription() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"submit assignment\", Parser.extractDeadlineDescription(\"submit assignment /by 2024-12-25\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"buy groceries\", Parser.extractDeadlineDescription(\"buy groceries /by tomorrow\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"    public void testExtractDeadlineDate() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"2024-12-25\", Parser.extractDeadlineDate(\"submit assignment /by 2024-12-25\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"tomorrow\", Parser.extractDeadlineDate(\"buy groceries /by tomorrow\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    public void testExtractEventDescription() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"team meeting\", Parser.extractEventDescription(\"team meeting /from 2pm /to 3pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    public void testExtractEventFrom() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"2pm\", Parser.extractEventFrom(\"team meeting /from 2pm /to 3pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"    public void testExtractEventTo() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"3pm\", Parser.extractEventTo(\"team meeting /from 2pm /to 3pm\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"    // Test task index parsing","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseTaskIndex() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, Parser.parseTaskIndex(\"1\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, Parser.parseTaskIndex(\"3\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseTaskIndexInvalid() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseTaskIndex(\"abc\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseTaskIndex(\"0\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseTaskIndex(\"-1\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(JimmyException.class, () -\u003e Parser.parseTaskIndex(\"\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    // Test utility methods","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"    public void testContainsAllKeywords() {","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(Parser.containsAllKeywords(\"meeting /from 2pm /to 3pm\", \"/from\", \"/to\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(Parser.containsAllKeywords(\"meeting /from 2pm\", \"/from\", \"/to\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(Parser.containsAllKeywords(\"deadline /by tomorrow\", \"/by\"));","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:34","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":149}},{"path":"src/test/java/jimmy/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.storage;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.File;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String TEST_FILE \u003d \"test_storage.txt\";","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    private static final String INVALID_PATH \u003d \"/invalid/path/that/does/not/exist/test.txt\";","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"        // Clean up any existing test files","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        cleanupTestFiles();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    @AfterEach","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    public void tearDown() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        // Clean up test files after each test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        cleanupTestFiles();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    private void cleanupTestFiles() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"            Files.deleteIfExists(Paths.get(TEST_FILE));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"            // Ignore cleanup errors","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    public void testStorageCreation() {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(storage);","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadEmptyFile() {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"nonexistent.txt\");","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, tasks.size()); ","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadAndSaveTasks() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"        // Add different types of tasks","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Todo(\"Buy groceries\"));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Deadline(\"Submit assignment\", \"25/12/2024 2359\"));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Event(\"Team meeting\", \"25/12/2024 1400\", \"25/12/2024 1500\"));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        // Save tasks - handle potential storage issues","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"            // Load tasks and verify","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"            List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"            assertEquals(3, loadedTasks.size());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"            assertEquals(\"Buy groceries\", loadedTasks.get(0).getDescription());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"            assertEquals(\"Submit assignment\", loadedTasks.get(1).getDescription());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"            assertEquals(\"Team meeting\", loadedTasks.get(2).getDescription());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"            // If storage fails, that\u0027s also acceptable for this test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"            assertTrue(e instanceof Exception);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"    public void testSaveEmptyTaskList() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e emptyTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        // Should not throw exception when saving empty list","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"            storage.save(emptyTasks);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"            // Verify file was created and is empty","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"            assertTrue(new File(TEST_FILE).exists());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"            List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"            assertEquals(0, loadedTasks.size());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"            // If storage fails, that\u0027s also acceptable for this test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"            assertTrue(e instanceof Exception);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadCorruptedFile() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        // Create a file with invalid content","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"            Files.write(Paths.get(TEST_FILE), \"invalid task data\".getBytes());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"            // Test setup failed","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle corrupted file gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadFileWithInvalidFormat() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"        // Create a file with malformed task data","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"            Files.write(Paths.get(TEST_FILE), \"T|0|Invalid task format\\nD|1|Missing date\\n\".getBytes());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"            // Test setup failed","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle malformed data gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"        // Should either load valid tasks or return empty list","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(tasks);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"    public void testSaveWithNullTaskList() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle null task list gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        assertThrows(Exception.class, () -\u003e storage.save(null));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFilePermissionHandling() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"        // Test with a path that might have permission issues","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(INVALID_PATH);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle permission errors gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"    public void testSaveToReadOnlyLocation() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"        // Create a read-only file","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"            File testFile \u003d new File(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"            testFile.createNewFile();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"            testFile.setReadOnly();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"            Storage storage \u003d new Storage(TEST_FILE);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"            tasks.add(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"            // Should handle read-only file gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"            assertThrows(Exception.class, () -\u003e storage.save(tasks));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"            // Clean up","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"            testFile.setWritable(true);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"            // Test setup failed, skip test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadNonExistentDirectory() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"nonexistent/directory/test.txt\");","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle non-existent directory gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"        // May return 0 or 1 depending on implementation","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(tasks.size() \u003e\u003d 0);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"    public void testSaveToNonExistentDirectory() {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"nonexistent/directory/test.txt\");","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Todo(\"Test task\"));","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"        // Should handle non-existent directory gracefully","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"            storage.save(tasks);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"            // If it doesn\u0027t throw, that\u0027s also acceptable","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ShaoZhi21"},"content":"            // Expected behavior - directory doesn\u0027t exist","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ShaoZhi21"},"content":"            assertTrue(e instanceof Exception);","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T12:03:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":199}},{"path":"src/test/java/jimmy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeadlineCreation() {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"15/1/2024 1800\");","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", deadline.getStatusIcon());     ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 18, 0), deadline.getBy()); ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeadlineStatusChange() {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        Deadline deadline \u003d new Deadline(\"Pay bills\", \"20/1/2024 1400\");","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", deadline.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 20, 14, 0), deadline.getBy());","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":23}},{"path":"src/test/java/jimmy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"public class EventTest {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEventCreation() {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        Event event \u003d new Event(\"Team meeting\", \"15/1/2024 0900\", \"15/1/2024 1000\");","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", event.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 9, 0), event.getFrom()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 10, 0), event.getTo()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEventStatusChange() {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        Event event \u003d new Event(\"Conference call\", \"16/1/2024 1400\", \"16/1/2024 1500\");","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", event.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 16, 14, 0), event.getFrom()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 16, 15, 0), event.getTo()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":25}},{"path":"src/test/java/jimmy/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":" * AI-assisted test suite for TaskList class.","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":" * Enhanced with comprehensive test cases generated using AI assistance","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":" * to ensure robust coverage of all TaskList functionality.","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    private Task todoTask;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private Event eventTask;","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    public void setUp() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        // AI-assisted: Comprehensive test setup with different task types","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"        todoTask \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"        deadlineTask \u003d new Deadline(\"Submit report\", LocalDateTime.of(2024, 12, 25, 23, 59));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"        eventTask \u003d new Event(\"Team meeting\", ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"            LocalDateTime.of(2024, 12, 20, 10, 0), ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"            LocalDateTime.of(2024, 12, 20, 11, 0));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListCreation() {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test for varargs addTasks method","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddMultipleTasks() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"        Task task1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        Task task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        Task task3 \u003d new Todo(\"Task 3\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTasks(task1, task2, task3);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(task1, taskList.getTask(0));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(task2, taskList.getTask(1));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(task3, taskList.getTask(2));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test task removal functionality","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(deadlineTask, taskList.getTask(0));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test task marking functionality","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(todoTask.isDone);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsDone(0);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(todoTask.isDone);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    public void testMarkTaskAsNotDone() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(todoTask.isDone);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.markTaskAsNotDone(0);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"        assertFalse(todoTask.isDone);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test getAllTasks method","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"    public void testGetAllTasks() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, allTasks.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(allTasks.contains(todoTask));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(allTasks.contains(deadlineTask));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"        // Verify it returns a copy, not the original list","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"        allTasks.clear();","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test clear functionality","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    public void testClear() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.clear();","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test findByKeyword with various scenarios","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"    public void testFindByKeyword() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"        // Test single keyword match","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e results \u003d taskList.findByKeyword(\"groceries\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(results.contains(todoTask));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"        // Test case insensitive search","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"        results \u003d taskList.findByKeyword(\"GROCERIES\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"        // Test multi-word search","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"        results \u003d taskList.findByKeyword(\"team meeting\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(results.contains(eventTask));","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"        // Test no matches","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"        results \u003d taskList.findByKeyword(\"nonexistent\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"        // Test null/empty input","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"        results \u003d taskList.findByKeyword(null);","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"        results \u003d taskList.findByKeyword(\"\");","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, results.size());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"    // AI-assisted: Test edge cases and error conditions","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEdgeCases() {","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"        // Test empty task list operations","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"        // Note: TaskList uses assertions for bounds checking, not exceptions","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"        // These would throw AssertionError in debug mode, not IndexOutOfBoundsException","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"        // In production builds, assertions are typically disabled","lastModifiedDate":"2025-09-16T11:04:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":168}},{"path":"src/test/java/jimmy/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTask() {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Test Task\", task.getDescription());","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskStatusChanges() {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Another Task\");","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", task.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", task.getStatusIcon());    ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":22}},{"path":"src/test/java/jimmy/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"public class TodoTest {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Buy groceries\", todo.getDescription());","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", todo.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTodoStatusChange() {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", todo.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":20}},{"path":"src/test/java/jimmy/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.ui;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class UiTest {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    public void testUiCreation() {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(ui);","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testShowTaskList() {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Task(\"Test task\"));","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        // This test just ensures the method doesn\u0027t throw an exception","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(ui); // If we get here, no exception was thrown","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"todo Buy groceries","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"deadline Submit report /by 2025-08-25","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"event Team meeting /at 2025-08-22 14:00","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"todo Read a book","lastModifiedDate":"2025-08-21T11:02:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"deadline Finish assignment /by 2025-08-30","lastModifiedDate":"2025-08-21T11:02:17","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"java -classpath ../bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":1,"-":37}}]
