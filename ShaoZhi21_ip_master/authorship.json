[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"# Jimmy project template","lastModifiedDate":"2025-08-20T01:39:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"1. After that, locate the `src/main/java/Jimmy.java` file, right-click it, and choose `Run Jimmy.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-20T01:39:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"java {","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"    mainClass.set(\"jimmy.Jimmy\")","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    archiveBaseName \u003d \"jimmy\"","lastModifiedDate":"2025-08-27T12:27:35","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"checkstyle {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    toolVersion \u003d \u002710.12.5\u0027","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"checkstyleTest {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"tasks.withType(Checkstyle) {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    reports {","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        xml.required \u003d false","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        html.required \u003d true","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":24,"-":39}},{"path":"data/jimmy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | join sports club","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | go public","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"T | 1 | read book","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"T | 0 | test","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | deadline submit report | 2024-12-15T23:59:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | deadline submit report | 2024-12-20T18:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"E | 0 | event team meeting | 2024-12-25T14:00:00 | 2024-12-25T16:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"D | 0 | cs2103 | 2025-08-29T18:00:00","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"0 | remove 9","lastModifiedDate":"2025-08-27T12:38:48","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":9}},{"path":"src/main/java/jimmy/Jimmy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.TaskList;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.command.Parser;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.storage.Storage;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.ui.Ui;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":" * Main class for the Jimmy task management application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":" * Jimmy is a command-line task manager that allows users to add, mark, unmark,","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":" * list, and delete tasks. It supports different types of tasks including","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":" * Todo, Deadline, and Event tasks.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"public class Jimmy {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     * Main entry point for the Jimmy application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * Initializes the storage, UI, and task list, then starts the main application loop.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"data/jimmy.txt\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(loadedTasks);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"        // User input","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        run(taskList, scanner, ui, storage);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"     * Main application loop that processes user commands.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"     * Continuously reads user input and executes corresponding commands","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     * until the user types \"bye\".","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"     * @param taskList The list of tasks to manage","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * @param scanner Scanner for reading user input","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     * @param ui User interface for displaying messages","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * @param storage Storage system for persisting tasks","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"    public static void run(TaskList taskList, Scanner scanner, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"        boolean running \u003d true;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"        while (scanner.hasNextLine() \u0026\u0026 running) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"                Parser.ParsedCommand parsed \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"                String command \u003d parsed.command;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"                ","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"                    running \u003d false;","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskList(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"mark\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidMarkCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a mark cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                    int argument \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task \u003d taskList.getTask(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.markTaskAsDone(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskMarkedAsDone(task);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidUnmarkCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of an unmark cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"                    int argument \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task \u003d taskList.getTask(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.markTaskAsNotDone(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskMarkedAsNotDone(task);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"todo\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidTodoCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task \u003d new Todo(parsed.fullInput);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskAdded(task, taskList.getSize());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidDeadlineCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a deadline must include \u0027/by\u0027.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"                    String description \u003d Parser.extractDeadlineDescription(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"                    String by \u003d Parser.extractDeadlineDate(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"                        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"                        storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"                        ui.showTaskAdded(task, taskList.getSize());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"event\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidEventCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of an event must include \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"                    String description \u003d Parser.extractEventDescription(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"                    String from \u003d Parser.extractEventFrom(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"                    String to \u003d Parser.extractEventTo(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"                        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"                        storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"                        ui.showTaskAdded(task, taskList.getSize());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"Invalid date format: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"find\")) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidFindCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a find cannot be empty.\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"                    java.util.List\u003cTask\u003e matches \u003d taskList.findByKeyword(parsed.fullInput);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showMatchingTasks(matches);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"blah\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"                    throw new JimmyException(\"I don\u0027t know what blah is. Bleh.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (command.equals(\"delete\")) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"                    if (!Parser.isValidDeleteCommand(parsed.fullInput)) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new JimmyException(\"The description of a delete cannot be empty.\");","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"                    int argument \u003d Parser.parseTaskIndex(parsed.fullInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"                    Task removedTask \u003d taskList.getTask(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.removeTask(argument);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskDeleted(removedTask, taskList.getSize());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"                } else {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task \u003d new Task(userInput);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"                    storage.save(taskList.getAllTasks());","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"                    ui.showTaskAddedSimple(userInput);","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (JimmyException e) {","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"        scanner.close();","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:01:25","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":150}},{"path":"src/main/java/jimmy/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Parses user input commands for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to extract command types and arguments from user input strings.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Supports various command formats and validates input before processing.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"     * Represents a parsed command with its type and full input.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * Contains the extracted command and the complete user input for further processing.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    public static class ParsedCommand {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        /** The extracted command type (e.g., \"todo\", \"deadline\", \"mark\") */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        public final String command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        /** The complete user input string for further parsing */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        public final String fullInput;  ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"         * Constructs a new ParsedCommand with the specified command and input.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"         *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"         * @param command The extracted command type","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"         * @param fullInput The complete user input string","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"         */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        public ParsedCommand(String command, String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"            this.command \u003d command;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"            this.fullInput \u003d fullInput;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a user input string into a ParsedCommand object.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on the first space to separate command from arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * @param userInput The user\u0027s input string","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A ParsedCommand object containing the command and full input","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"    public static ParsedCommand parseCommand(String userInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"        String[] inputParts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        String command \u003d inputParts[0];","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        String fullInput \u003d inputParts.length \u003e 1 ? inputParts[1] : \"\";","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        return new ParsedCommand(command, fullInput);","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a mark command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the mark command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidMarkCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if an unmark command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the unmark command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidUnmarkCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a todo command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the todo command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidTodoCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a deadline command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command contains the required \"/by\" keyword.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the deadline command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidDeadlineCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.contains(\"/by\");","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if an event command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command contains both \"/from\" and \"/to\" keywords.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the event command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidEventCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.contains(\"/from\") \u0026\u0026 fullInput.contains(\"/to\");","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"     * Validates if a delete command has valid arguments.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks that the command has a non-empty description.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the delete command is valid, false otherwise","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidDeleteCommand(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    public static boolean isValidFindCommand(String fullInput) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"        return !fullInput.trim().isEmpty();","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the description part from a deadline command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/by\" and returns the part before it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the deadline command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The description part of the deadline","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractDeadlineDescription(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(\"/by\")[0].trim();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the date part from a deadline command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/by\" and returns the part after it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the deadline command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The date part of the deadline","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractDeadlineDate(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(\"/by\")[1].trim();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the description part from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/from\" and returns the part before it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The description part of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventDescription(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(\"/from\")[0].trim();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the start time from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/from\" and \"/to\" to get the start time.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The start time of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventFrom(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"     * Extracts the end time from an event command.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"     * Splits the input on \"/to\" and returns the part after it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The full input string after the event command","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The end time of the event","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"    public static String extractEventTo(String fullInput) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"        return fullInput.split(\"/to\")[1].trim();","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a task index from the input string.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"     * Converts the string to a 1-based index and validates it.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"     * @param fullInput The input string containing the task index","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The 0-based index for internal use","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws JimmyException if the index is invalid or not a number","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"    public static int parseTaskIndex(String fullInput) throws JimmyException {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"            int index \u003d Integer.parseInt(fullInput.trim()) - 1;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"            if (index \u003c 0) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"                throw new JimmyException(\"Task index must be a positive number.\");","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"            return index;","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"            throw new JimmyException(\"Task index must be a valid number.\");","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:39","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":194}},{"path":"src/main/java/jimmy/exception/JimmyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.exception;","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Custom exception class for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * Used to represent application-specific errors that occur during task operations.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Extends RuntimeException to provide unchecked exception behavior.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class JimmyException extends RuntimeException {","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new JimmyException with the specified error message.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"     * The message describes what went wrong in the application.","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The error message describing the exception","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:04:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    public JimmyException(String message) {","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        super(message);","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:18","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":19}},{"path":"src/main/java/jimmy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.storage;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Todo;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Deadline;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Event;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.File;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":" * Manages the persistence of tasks in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":" * Handles loading tasks from files and saving tasks to files.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":" * Supports various task types (Todo, Deadline, Event) with proper serialization.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"public class Storage {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    /** The file path where tasks are stored */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    private Path filePath;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     * The file path will be used for both loading and saving tasks.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     * @param filePath The path to the file for storing tasks","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses the file content and reconstructs Task objects.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates the file and directory if they don\u0027t exist.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list of loaded tasks, or an empty list if the file doesn\u0027t exist","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"            if (Files.exists(filePath)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"                List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"                for (String line : lines) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"                    if (line.trim().isEmpty()) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"                        continue;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"                    if (parts.length \u003c 3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"                        continue;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"                    String type \u003d parts[0];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"                    boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"                    String description \u003d parts[2];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"                    Task task;","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"                    if (type.equals(\"T\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"                        task \u003d new Todo(description);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"                    } else if (type.equals(\"D\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"                        if (parts.length \u003c 4) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                        String by \u003d parts[3];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"                            task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"                            System.out.println(\"Warning: Could not parse deadline date \u0027\" + by + \"\u0027 for task: \" + description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"                    } else if (type.equals(\"E\")) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"                        if (parts.length \u003c 5) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"                        String from \u003d parts[3];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"                        String to \u003d parts[4];","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"                        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"                            task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"                        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"                            System.out.println(\"Warning: Could not parse event dates for task: \" + description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"                            continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"                        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"                    } else {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"                        continue; ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"                    ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"                    if (isDone) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"                        task.markAsDone();","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"     * Converts each task to its file representation and writes to disk.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     * Creates the file and directory if they don\u0027t exist.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The list of tasks to save","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"            Files.write(filePath, lines); ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":122}},{"path":"src/main/java/jimmy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a deadline task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * A deadline task has a description and a specific due date and time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides deadline-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /** The due date and time for the deadline task */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for parsing input date strings in \"d/M/yyyy HHmm\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for displaying dates in \"MMM dd yyyy, h:mm a\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Deadline task with the given description and due date string.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"     * The due date string will be parsed into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * @param by The due date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * @param by The due date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     * Tries multiple date formats in order of preference.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateTimeStr The date string to parse","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IllegalArgumentException if the date string cannot be parsed","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the format \"2/12/2019 1800\"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"            return LocalDateTime.parse(dateTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"            // If parsing fails, try alternative formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd HH:mm\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"                return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (Exception e2) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"                    return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (Exception e3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"                    throw new IllegalArgumentException(\"Invalid date format: \" + dateTimeStr + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"                        \". Expected format: dd/MM/yyyy HHmm, yyyy-MM-dd HH:mm, or ISO format\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the due date and time for this deadline task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The due date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"        return by;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the deadline task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"D | status | description | dueDateTime\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the deadline task for display.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"[D] [status] description (by: formattedDueDate)\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A formatted string representation of the deadline task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[D] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString() + \" (by: \" + by.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":102}},{"path":"src/main/java/jimmy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Represents an event task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * An event task has a description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides event-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /** The start date and time of the event */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    /** The end date and time of the event */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for parsing input date strings in \"d/M/yyyy HHmm\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    /** Formatter for displaying dates in \"MMM dd yyyy, h:mm a\" format */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * The date strings will be parsed into LocalDateTime objects.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * @param from The start date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     * @param to The end date and time as a string","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"     * @param from The start date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"     * @param to The end date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * Tries multiple date formats in order of preference.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateTimeStr The date string to parse","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The parsed LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IllegalArgumentException if the date string cannot be parsed","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    private LocalDateTime parseDateTime(String dateTimeStr) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the format \"2/12/2019 1800\"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"            return LocalDateTime.parse(dateTimeStr, INPUT_FORMATTER);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"            // If parsing fails, try alternative formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd HH:mm\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"                return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (Exception e2) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"                    return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (Exception e3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"                    throw new IllegalArgumentException(\"Invalid date format: \" + dateTimeStr + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"                        \". Expected format: dd/MM/yyyy HHmm, yyyy-MM-dd HH:mm, or ISO format\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the start date and time of this event task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The start date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"        return from;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the end date and time of this event task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The end date and time as a LocalDateTime object","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"        return to;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the event task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"E | status | description | startDateTime | endDateTime\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"               from.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) + \" | \" + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"               to.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the event task for display.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"[E] [status] description (from: startDateTime to: endDateTime)\"","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A formatted string representation of the event task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[E] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString() + ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"               \" (from: \" + from.format(DISPLAY_FORMATTER) + \" to: \" + to.format(DISPLAY_FORMATTER) + \")\";","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":121}},{"path":"src/main/java/jimmy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * This is the base class for all types of tasks (Todo, Deadline, Event).","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Each task has a description and can be marked as done or not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    /** Indicates whether the task has been completed */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /** The description or title of the task */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    protected String description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task description","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"        return description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task\u0027s completion status.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns \"X\" if the task is done, \" \" (space) if not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     * @return \"X\" for completed tasks, \" \" for incomplete tasks","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task suitable for file storage.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"     * Format: \"1 | description\" for completed tasks, \"0 | description\" for incomplete tasks.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A string representation for file storage","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"     * This is the same as the description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task description","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"        return description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":78}},{"path":"src/main/java/jimmy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Manages a collection of tasks in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to add, remove, mark, and retrieve tasks from the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * The TaskList maintains the order of tasks and provides size information.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskList {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    /** The list of tasks */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The initial list of tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task to add","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 1-based (user-friendly).","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 1-based index of the task to remove","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.remove(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 1-based (user-friendly).","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 1-based index of the task to mark as done","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"     * Marks a task as not done at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 1-based (user-friendly).","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 1-based index of the task to mark as not done","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    public void markTaskAsNotDone(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"     * The index is 1-based (user-friendly).","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"     * @param index The 1-based index of the task to retrieve","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The task at the specified index","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns the current number of tasks in the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"     * @return The number of tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    public int getSize() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     * Returns all tasks in the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list containing all tasks","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"     * @return true if the list contains no tasks, false otherwise","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"     * Removes all tasks from the list.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"     * The list will be empty after this call returns.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    public void clear() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.clear();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     * Finds tasks that match the given date string.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * Searches through Deadline and Event tasks for date matches.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     * Supports multiple date formats: dd/MM/yyyy, yyyy-MM-dd, dd-MM-yyyy.","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"     * @param dateStr The date string to search for","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"     * @return A list of tasks that match the given date","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e findTasksByDate(String dateStr) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"        try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"            // Try to parse the date in various formats","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"            java.time.LocalDate searchDate \u003d null;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"            // Try \"dd/MM/yyyy\" format first (e.g., \"2/12/2019\")","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"            try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"                searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"                    java.time.format.DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"            } catch (Exception e1) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"                // Try \"yyyy-MM-dd\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"                try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"                    searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"                        java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"                } catch (Exception e2) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"                    // Try \"dd-MM-yyyy\" format","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"                    try {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"                        searchDate \u003d java.time.LocalDate.parse(dateStr, ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"                            java.time.format.DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"                    } catch (Exception e3) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"                        throw new IllegalArgumentException(\"Invalid date format. Use dd/MM/yyyy, yyyy-MM-dd, or dd-MM-yyyy\");","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"            final java.time.LocalDate finalSearchDate \u003d searchDate;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"                    if (deadline.getBy().toLocalDate().equals(finalSearchDate)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"                    if (event.getFrom().toLocalDate().equals(finalSearchDate) || ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"                        event.getTo().toLocalDate().equals(finalSearchDate)) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"                    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"                }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ShaoZhi21"},"content":"            ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ShaoZhi21"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.println(\"Error parsing date: \" + e.getMessage());","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ShaoZhi21"},"content":"        ","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ShaoZhi21"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ShaoZhi21"},"content":"    public List\u003cTask\u003e findByKeyword(String keyword) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ShaoZhi21"},"content":"        String query \u003d keyword.toLowerCase().trim();","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ShaoZhi21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ShaoZhi21"},"content":"            if (task.getDescription().toLowerCase().contains(query)) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ShaoZhi21"},"content":"                matches.add(task);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ShaoZhi21"},"content":"            }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ShaoZhi21"},"content":"        return matches;","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":191}},{"path":"src/main/java/jimmy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":" * Represents a simple todo task in the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":" * A todo task is a basic task with just a description and no specific time constraints.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":" * Inherits from the Task class and provides todo-specific functionality.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:02:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        super(description);","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    @Override","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"    public String toString() {","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"        return \"[T] \" + \"[\" + super.getStatusIcon() + \"]\" + \" \" + super.toString();","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T11:00:04","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":29}},{"path":"src/main/java/jimmy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.ui;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"/**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":" * Handles user interface and display operations for the Jimmy task management system.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":" * Provides methods to show welcome messages, task lists, and various status updates.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":" * All output is formatted consistently with clear visual separators.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":" */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"public class Ui {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows a formatted greeting with the application name.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\" Hello! I\u0027m Jimmy\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays the goodbye message when the application exits.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows a formatted farewell message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ShaoZhi21"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a list of all tasks with their numbers.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ShaoZhi21"},"content":"     * Each task is shown on a separate line with its index.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ShaoZhi21"},"content":"     * @param tasks The list of tasks to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ShaoZhi21"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print((i + 1) + \".\" + task.toString());","lastModifiedDate":"2025-08-27T20:17:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the task with its completion status.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was marked as done","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the task with its completion status.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was marked as not done","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskMarkedAsNotDone(Task task) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the added task and the new total count.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was added","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ShaoZhi21"},"content":"     * @param totalTasks The total number of tasks after adding","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the deleted task and the new total count.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ShaoZhi21"},"content":"     * @param task The task that was deleted","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ShaoZhi21"},"content":"     * @param totalTasks The total number of tasks after deletion","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskDeleted(Task task, int totalTasks) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a simple message confirming that a task was added.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows just the description of the added task.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ShaoZhi21"},"content":"     * @param description The description of the task that was added","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ShaoZhi21"},"content":"    public void showTaskAddedSimple(String description) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"added: \" + description);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error message in a formatted box.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The error message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ShaoZhi21"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a loading error message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error without the formatted box for system-level errors.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The loading error message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ShaoZhi21"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Error loading tasks: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a saving error message.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the error without the formatted box for system-level errors.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The saving error message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ShaoZhi21"},"content":"    public void showSavingError(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Error saving tasks: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ShaoZhi21"},"content":"    /**","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ShaoZhi21"},"content":"     * Displays a warning message to the user.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ShaoZhi21"},"content":"     * Shows the warning without the formatted box for system-level messages.","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ShaoZhi21"},"content":"     *","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ShaoZhi21"},"content":"     * @param message The warning message to display","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ShaoZhi21"},"content":"     */","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ShaoZhi21"},"content":"    public void showWarning(String message) {","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Warning: \" + message);","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ShaoZhi21"},"content":"    public void showMatchingTasks(java.util.List\u003cjimmy.task.Task\u003e tasks) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ShaoZhi21"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ShaoZhi21"},"content":"            jimmy.task.Task t \u003d tasks.get(i);","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print((i + 1) + \".\" + t.toString());","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ShaoZhi21"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ShaoZhi21"},"content":"        }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ShaoZhi21"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T20:32:00","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T10:59:31","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":172}},{"path":"src/test/java/jimmy/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.command;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.exception.JimmyException;","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommand() {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.ParsedCommand parsed \u003d Parser.parseCommand(\"todo buy milk\");","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"todo\", parsed.command);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"buy milk\", parsed.fullInput);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    public void testParseCommandWithNoArguments() {","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        Parser.ParsedCommand parsed \u003d Parser.parseCommand(\"list\");","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"list\", parsed.command);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"\", parsed.fullInput);","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:07","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":22}},{"path":"src/test/java/jimmy/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.storage;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class StorageTest {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    public void testStorageCreation() {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(storage);","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testLoadEmptyFile() {","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        Storage storage \u003d new Storage(\"nonexistent.txt\");","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, tasks.size()); ","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:14","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":23}},{"path":"src/test/java/jimmy/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeadlineCreation() {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"15/1/2024 1800\");","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", deadline.getStatusIcon());     ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 18, 0), deadline.getBy()); ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    public void testDeadlineStatusChange() {","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        Deadline deadline \u003d new Deadline(\"Pay bills\", \"20/1/2024 1400\");","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        deadline.markAsDone();","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", deadline.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 20, 14, 0), deadline.getBy());","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:19","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":23}},{"path":"src/test/java/jimmy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"public class EventTest {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEventCreation() {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        Event event \u003d new Event(\"Team meeting\", \"15/1/2024 0900\", \"15/1/2024 1000\");","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Team meeting\", event.getDescription());","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", event.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 9, 0), event.getFrom()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 15, 10, 0), event.getTo()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testEventStatusChange() {","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        Event event \u003d new Event(\"Conference call\", \"16/1/2024 1400\", \"16/1/2024 1500\");","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        event.markAsDone();","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", event.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 16, 14, 0), event.getFrom()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(LocalDateTime.of(2024, 1, 16, 15, 0), event.getTo()); ","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:24","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":25}},{"path":"src/test/java/jimmy/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskListCreation() {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testAddTask() {","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        taskList.addTask(task);","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:29","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":25}},{"path":"src/test/java/jimmy/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"public class TaskTest {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTask() {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Test Task\");","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Test Task\", task.getDescription());","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTaskStatusChanges() {","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"        Task task \u003d new Task(\"Another Task\");","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", task.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsDone();","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", task.getStatusIcon());    ","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        task.markAsNotDone();","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:37","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":22}},{"path":"src/test/java/jimmy/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.task;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"public class TodoTest {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"        Todo todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"Buy groceries\", todo.getDescription());","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\" \", todo.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    public void testTodoStatusChange() {","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"        todo.markAsDone();","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"        assertEquals(\"X\", todo.getStatusIcon()); ","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:41","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":20}},{"path":"src/test/java/jimmy/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"package jimmy.ui;","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T12:42:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T20:10:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ShaoZhi21"},"content":"import java.util.List;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ShaoZhi21"},"content":"import jimmy.task.Task;","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ShaoZhi21"},"content":"","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ShaoZhi21"},"content":"public class UiTest {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ShaoZhi21"},"content":"    public void testUiCreation() {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(ui);","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ShaoZhi21"},"content":"    ","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ShaoZhi21"},"content":"    @Test","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"    public void testShowTaskList() {","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ShaoZhi21"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ShaoZhi21"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ShaoZhi21"},"content":"        tasks.add(new Task(\"Test task\"));","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ShaoZhi21"},"content":"        // This test just ensures the method doesn\u0027t throw an exception","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ShaoZhi21"},"content":"        assertNotNull(ui); // If we get here, no exception was thrown","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ShaoZhi21"},"content":"    }","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ShaoZhi21"},"content":"}","lastModifiedDate":"2025-08-27T13:01:54","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoZhi21"},"content":"todo Buy groceries","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ShaoZhi21"},"content":"deadline Submit report /by 2025-08-25","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ShaoZhi21"},"content":"event Team meeting /at 2025-08-22 14:00","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ShaoZhi21"},"content":"todo Read a book","lastModifiedDate":"2025-08-21T11:02:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ShaoZhi21"},"content":"deadline Finish assignment /by 2025-08-30","lastModifiedDate":"2025-08-21T11:02:17","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ShaoZhi21"},"content":"java -classpath ..\\bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ShaoZhi21"},"content":"java -classpath ../bin Jimmy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T01:31:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ShaoZhi21":1,"-":37}}]
