[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"test {","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    useJUnitPlatform()","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    testLogging {","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"        showExceptions true","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"        showCauses true","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"        showStackTraces true","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T11:20:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    mainClass.set(\"sage.main.Sage\")","lastModifiedDate":"2025-08-31T11:12:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"shadowJar {","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"    archiveBaseName \u003d \"sage\"","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:22:19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":18,"rahulmllvrp":23}},{"path":"data/sage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"T | 1 | read book","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"D | 0 | return book | 2025-12-02T18:00","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"E | 1 | project meeting | 2025-10-10T14:00 | 2025-10-10T16:00","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":3}},{"path":"src/main/java/sage/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" * Represents an abstract command for adding a task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":" * This class provides common functionality for adding different types of tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    protected Task task;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an AddCommand with the specified task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the add command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * Adds the task to the TaskList, displays a confirmation message to the user,","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * and saves the updated task list to storage.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList to add the task to.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to display messages to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage to save the updated task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.addTask(task);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showMessage(\"Got it. I\u0027ve added this task:\\n   \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"        try {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"        } catch (SageException e) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":42}},{"path":"src/main/java/sage/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Deadline;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to add a Deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an AddDeadlineCommand with the given description and due date/time for the Deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * @param by The due date and time of the Deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"    public AddDeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"        super(new Deadline(description, by));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":19}},{"path":"src/main/java/sage/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Event;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to add an Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an AddEventCommand with the given description, start time, and end time for the Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * @param from The start date and time of the Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * @param to The end date and time of the Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    public AddEventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"        super(new Event(description, from, to));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":20}},{"path":"src/main/java/sage/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Todo;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to add a Todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an AddTodoCommand with the given description for the Todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"        super(new Todo(description));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":16}},{"path":"src/main/java/sage/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" * Represents an abstract command that can be executed by the chatbot.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" * All concrete command classes must extend this class.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"public abstract class Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the command with the given TaskList, Ui, and Storage components.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList to operate on.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to interact with the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage to save/load tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If an error occurs during command execution.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws SageException;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:43:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns true if this command is an exit command, indicating the chatbot should terminate.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"        return false;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:43:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T12:43:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":29}},{"path":"src/main/java/sage/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a DeleteCommand with the specified task index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to delete.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the delete command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * Deletes the task at the specified index from the TaskList,","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * saves the updated task list to storage, and displays a confirmation message.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList to operate on.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to display messages to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage to save the updated task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the task index is invalid.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        Task removedTask \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n   \" + removedTask + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":38}},{"path":"src/main/java/sage/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to exit the chatbot application.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the exit command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * This command does not perform any operations on the task list or storage.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList (not used by this command).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui (not used by this command).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage (not used by this command).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        // Nothing to execute","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns true, indicating that this is an exit command and the chatbot should terminate.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * @return True.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"        return true;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":31}},{"path":"src/main/java/sage/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Task;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    private String keyword;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SageException {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"            ui.showMessage(\"No matching tasks found.\");","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"        } else {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"            ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":26}},{"path":"src/main/java/sage/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the list command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays all tasks currently in the TaskList to the user via the Ui.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList containing the tasks to be listed.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to display the task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage (not used by this command).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showMessage(tasks.getTasksAsString());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":22}},{"path":"src/main/java/sage/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a MarkCommand with the specified task index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to mark.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the mark command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks the task at the specified index as done in the TaskList,","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * saves the updated task list to storage, and displays a confirmation message.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList to operate on.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to display messages to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage to save the updated task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the task index is invalid.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.markTask(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n   \" + tasks.getTask(taskIndex));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":37}},{"path":"src/main/java/sage/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    private final int taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an UnmarkCommand with the specified task index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to unmark.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"     * Executes the unmark command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks the task at the specified index as not done in the TaskList,","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * saves the updated task list to storage, and displays a confirmation message.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The TaskList to operate on.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * @param ui The Ui to display messages to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * @param storage The Storage to save the updated task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the task index is invalid.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.unmarkTask(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n   \" + tasks.getTask(taskIndex));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":37}},{"path":"src/main/java/sage/exception/SageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.exception;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":" * Represents an exception specific to the Sage chatbot application.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":" * This exception is thrown when an error occurs during the execution of Sage commands.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"public class SageException extends Exception {","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a SageException with the specified detail message.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"     * @param message The detail message (which is saved for later retrieval by the Throwable.getMessage() method).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    public SageException(String message) {","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"        super(message);","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":15}},{"path":"src/main/java/sage/main/Sage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.main;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:45:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.Command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import sage.parser.Parser;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"import sage.storage.Storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.TaskList;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"import sage.ui.Ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":" * Represents the main class of the Sage chatbot application.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":" * This class initializes the UI, Storage, and TaskList components,","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":" * and contains the main loop for running the chatbot.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"public class Sage {","lastModifiedDate":"2025-08-21T11:23:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:23:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    private Storage storage;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    private Ui ui;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:54:39","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"    private static final String FILE_PATH \u003d \"./data/sage.txt\";","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:23:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a new Sage object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * Initializes the UI, Storage, and loads tasks from the specified file path.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * If loading fails, an empty TaskList is created.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    public Sage(String filePath) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        try {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"        } catch (SageException e) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"     * Runs the Sage chatbot application.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays a welcome message, then enters a loop to read and execute commands","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"     * until an exit command is received.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"    public void run() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"        while (!isExit) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"            try {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"            } catch (SageException e) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"            }","lastModifiedDate":"2025-08-21T12:32:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"        ui.showGoodbye();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"     * Main method to start the Sage chatbot application.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahulmllvrp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahulmllvrp"},"content":"        new Sage(FILE_PATH).run();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:23:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T11:23:03","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":70}},{"path":"src/main/java/sage/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.parser;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.AddDeadlineCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.AddEventCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.AddTodoCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.Command;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.DeleteCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.ExitCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.FindCommand;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.ListCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.MarkCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"import sage.command.UnmarkCommand;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":" * Deals with making sense of the user command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":" * Parses user input strings into Command objects and extracts relevant arguments.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"public class Parser {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses the full command string from the user and returns a corresponding Command object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the command is unrecognized or has invalid format/arguments.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    public static Command parse(String fullCommand) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        String commandWord \u003d parts[0];","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"        switch (commandWord) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"        case \"bye\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"        case \"list\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"            return new ListCommand();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"        case \"mark\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"            return parseMarkCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"        case \"unmark\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"            return parseUnmarkCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"        case \"delete\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"            return parseDeleteCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"        case \"todo\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"            return parseTodoCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"        case \"deadline\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"            return parseDeadlineCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"        case \"event\":","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"            return parseEventCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"        case \"find\":","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"            return parseFindCommand(arguments);","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"        default:","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for a \u0027mark\u0027 command and returns a MarkCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027mark\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A MarkCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseMarkCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Please specify the task number to mark.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahulmllvrp"},"content":"        int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahulmllvrp"},"content":"        return new MarkCommand(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for an \u0027unmark\u0027 command and returns an UnmarkCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027unmark\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahulmllvrp"},"content":"     * @return An UnmarkCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseUnmarkCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Please specify the task number to unmark.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahulmllvrp"},"content":"        int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahulmllvrp"},"content":"        return new UnmarkCommand(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for a \u0027delete\u0027 command and returns a DeleteCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027delete\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A DeleteCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseDeleteCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Please specify the task number to delete.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahulmllvrp"},"content":"        int taskIndex \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahulmllvrp"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for a \u0027todo\u0027 command and returns an AddTodoCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027todo\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahulmllvrp"},"content":"     * @return An AddTodoCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseTodoCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rahulmllvrp"},"content":"        return new AddTodoCommand(arguments);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for a \u0027deadline\u0027 command and returns an AddDeadlineCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027deadline\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rahulmllvrp"},"content":"     * @return An AddDeadlineCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing, or date format is incorrect.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseDeadlineCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rahulmllvrp"},"content":"        if (!arguments.contains(\" /by \")) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Invalid deadline format. Please use: deadline \u003cdescription\u003e /by \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rahulmllvrp"},"content":"        String[] deadlineParts \u003d arguments.split(\" /by \");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rahulmllvrp"},"content":"        LocalDateTime by \u003d parseDateTime(deadlineParts[1]);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rahulmllvrp"},"content":"        return new AddDeadlineCommand(deadlineParts[0], by);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses arguments for an \u0027event\u0027 command and returns an AddEventCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string for the \u0027event\u0027 command.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rahulmllvrp"},"content":"     * @return An AddEventCommand object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the arguments are invalid or missing, or date format is incorrect.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseEventCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rahulmllvrp"},"content":"        if (!arguments.contains(\" /from \") || !arguments.contains(\" /to \")) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Invalid event format. Please use: event \u003cdescription\u003e /from \u003cd/M/yyyy HHmm\u003e /to \u003cd/M/yyyy HHmm\u003e\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rahulmllvrp"},"content":"        String[] eventParts \u003d arguments.split(\" /from \");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rahulmllvrp"},"content":"        String[] fromToParts \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rahulmllvrp"},"content":"        LocalDateTime from \u003d parseDateTime(fromToParts[0]);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rahulmllvrp"},"content":"        LocalDateTime to \u003d parseDateTime(fromToParts[1]);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rahulmllvrp"},"content":"        return new AddEventCommand(eventParts[0], from, to);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rahulmllvrp"},"content":"  ","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses the arguments for the find command and returns a FindCommand.","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rahulmllvrp"},"content":"     *","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rahulmllvrp"},"content":"     * @param arguments The arguments string containing the keyword to search for.","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A FindCommand with the specified keyword.","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the keyword is empty.","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rahulmllvrp"},"content":"    private static Command parseFindCommand(String arguments) throws SageException {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rahulmllvrp"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"The keyword for find cannot be empty.\");","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rahulmllvrp"},"content":"        return new FindCommand(arguments);","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses a date and time string into a LocalDateTime object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rahulmllvrp"},"content":"     * @param dateTime The date and time string to parse (expected format: d/M/yyyy HHmm).","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the date and time string is not in the expected format.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rahulmllvrp"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws SageException {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rahulmllvrp"},"content":"        try {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rahulmllvrp"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rahulmllvrp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Invalid date format. Please use: d/M/yyyy HHmm\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":180}},{"path":"src/main/java/sage/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.storage;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.io.File;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"import sage.exception.SageException;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Deadline;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Event;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Todo;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"public class Storage {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    private final File file;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"     * If the file or its parent directories do not exist, they are created.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If an error occurs during file loading or parsing.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"    public ArrayList\u003cTask\u003e load() throws SageException {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"        try {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"            if (!file.exists()) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"                file.getParentFile().mkdirs(); // Create parent directories if they don\u0027t exist","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"                file.createNewFile(); // Create the file if it doesn\u0027t exist","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"            }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"                tasks.add(parseLineToTask(line));","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"            }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"        return tasks;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The ArrayList of Task objects to be saved.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If an error occurs during file saving.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws SageException {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"                fw.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"            }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahulmllvrp"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahulmllvrp"},"content":"     * This is a private helper method.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahulmllvrp"},"content":"     * @param line The line string to parse.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A Task object corresponding to the parsed line.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahulmllvrp"},"content":"     * @throws SageException If the line format is corrupted or invalid.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahulmllvrp"},"content":"    private Task parseLineToTask(String line) throws SageException {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahulmllvrp"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahulmllvrp"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahulmllvrp"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahulmllvrp"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahulmllvrp"},"content":"        Task task;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahulmllvrp"},"content":"        switch (type) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahulmllvrp"},"content":"        case \"T\":","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahulmllvrp"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahulmllvrp"},"content":"            break;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahulmllvrp"},"content":"        case \"D\":","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahulmllvrp"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahulmllvrp"},"content":"            task \u003d new Deadline(description, by);","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahulmllvrp"},"content":"            break;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahulmllvrp"},"content":"        case \"E\":","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahulmllvrp"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[3]);","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahulmllvrp"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4]);","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahulmllvrp"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahulmllvrp"},"content":"            break;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahulmllvrp"},"content":"        default:","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahulmllvrp"},"content":"            throw new SageException(\"Corrupted data file.\");","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahulmllvrp"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahulmllvrp"},"content":"            task.markAsDone();","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahulmllvrp"},"content":"        return task;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":107}},{"path":"src/main/java/sage/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a Deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * A Deadline task has a description, a due date/time, and can be marked as done or not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a Deadline task with the given description and due date/time.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     * @param by The due date and time of the deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"        super(description);","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Deadline task, including its type icon and due date/time.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"     * The due date/time is formatted as \"MMM dd yyyy, h:mm a\".","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Deadline task suitable for saving to a file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"     * The format is: D | \u003cstatus\u003e | \u003cdescription\u003e | \u003cdue_date_time\u003e","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"     * The due date/time is saved in ISO 8601 format.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A file-formatted string representing the deadline task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":44}},{"path":"src/main/java/sage/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":" * Represents an Event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * An Event task has a description, a start time, an end time, and can be marked as done or not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"        super(description);","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Event task, including its type icon, start time, and end time.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * The dates and times are formatted as \"MMM dd yyyy, h:mm a\".","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) +","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\")) + \")\";","lastModifiedDate":"2025-08-30T16:55:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Event task suitable for saving to a file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"     * The format is: E | \u003cstatus\u003e | \u003cdescription\u003e | \u003cfrom_time\u003e | \u003cto_time\u003e","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"     * The dates and times are saved in ISO 8601 format.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A file-formatted string representing the event task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":48}},{"path":"src/main/java/sage/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a generic task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":" * This is an abstract class that provides common properties and behaviors for all task types.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"    protected String description;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * The task is initially not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"     * \u0027X\u0027 if the task is done, \u0027 \u0027 (space) if not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The status icon string.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"     * Get the description of the tasl","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:48:47","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"        return description;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the task suitable for saving to a file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"     * This is an abstract method to be implemented by concrete task types.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A file-formatted string representing the task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"    public abstract String toFileString();","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T11:59:30","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":66}},{"path":"src/main/java/sage/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a list of tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":" * Provides methods to add, delete, mark, unmark, and retrieve tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"public class TaskList {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"     * @param tasks The ArrayList of Task objects to initialize the list with.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.add(task);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"     * Deletes a task from the list at the specified index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to be deleted.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The Task object that was removed.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"        return tasks.remove(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to retrieve.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The Task object at the specified index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"    public int size() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns the underlying ArrayList of tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The ArrayList containing all tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"        return tasks;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a formatted string representation of all tasks in the list.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahulmllvrp"},"content":"     * Each task is numbered and displayed on a new line.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A string containing the numbered list of tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahulmllvrp"},"content":"    public String getTasksAsString() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahulmllvrp"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahulmllvrp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahulmllvrp"},"content":"            sb.append((i + 1) + \".\" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahulmllvrp"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks a task as done at the specified index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to mark as done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahulmllvrp"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rahulmllvrp"},"content":"     * Marks a task as not done at the specified index.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rahulmllvrp"},"content":"     * @param taskIndex The zero-based index of the task to mark as not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rahulmllvrp"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rahulmllvrp"},"content":"        tasks.get(taskIndex).unmarkAsDone();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rahulmllvrp"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rahulmllvrp"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rahulmllvrp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rahulmllvrp"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rahulmllvrp"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rahulmllvrp"},"content":"            }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rahulmllvrp"},"content":"        return matchingTasks;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":107}},{"path":"src/main/java/sage/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.task;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":" * Represents a Todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":" * A Todo task has a description and can be marked as done or not done.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"        super(description);","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Todo task, including its type icon.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"    public String toString() {","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"     * Returns a string representation of the Todo task suitable for saving to a file.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"     * The format is: T | \u003cstatus\u003e | \u003cdescription\u003e","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"     * @return A file-formatted string representing the todo task.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"    @Override","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    public String toFileString() {","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T16:36:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-21T12:06:03","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":35}},{"path":"src/main/java/sage/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"package sage.ui;","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-31T11:01:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"import sage.task.Task;","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"/**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":" * Handles displaying messages to the user and reading user input.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":" */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rahulmllvrp"},"content":"public class Ui {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rahulmllvrp"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rahulmllvrp"},"content":"     * Constructs a Ui object, initializing the Scanner to read from standard input.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rahulmllvrp"},"content":"    public Ui() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rahulmllvrp"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rahulmllvrp"},"content":"     * Reads a command line from the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"     * @return The full command string entered by the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rahulmllvrp"},"content":"    public String readCommand() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rahulmllvrp"},"content":"        return scanner.nextLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rahulmllvrp"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\" Hello! I\u0027m sage\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rahulmllvrp"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays a horizontal line separator.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rahulmllvrp"},"content":"    public void showLine() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rahulmllvrp"},"content":"     * @param message The error message to display.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rahulmllvrp"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays a generic error message for loading tasks.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rahulmllvrp"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rahulmllvrp"},"content":"        showError(\"Error loading tasks from file.\");","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rahulmllvrp"},"content":"","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rahulmllvrp"},"content":"    /**","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rahulmllvrp"},"content":"     * Displays a general message to the user, surrounded by lines.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rahulmllvrp"},"content":"     * @param message The message to display.","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rahulmllvrp"},"content":"     */","lastModifiedDate":"2025-08-31T14:06:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rahulmllvrp"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(message);","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rahulmllvrp"},"content":"  ","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rahulmllvrp"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rahulmllvrp"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rahulmllvrp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rahulmllvrp"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rahulmllvrp"},"content":"        }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rahulmllvrp"},"content":"        showLine();","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rahulmllvrp"},"content":"    }","lastModifiedDate":"2025-08-31T14:35:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rahulmllvrp"},"content":"}","lastModifiedDate":"2025-08-30T18:17:56","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rahulmllvrp"},"content":"todo read book","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rahulmllvrp"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rahulmllvrp"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rahulmllvrp"},"content":"list","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rahulmllvrp"},"content":"mark 1","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rahulmllvrp"},"content":"unmark 2","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rahulmllvrp"},"content":"mark 3","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rahulmllvrp"},"content":"list","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rahulmllvrp"},"content":"Sage says hello world","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rahulmllvrp"},"content":"bye","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false}],"authorContributionMap":{"rahulmllvrp":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rahulmllvrp"},"content":"java -classpath ../bin Sage \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rahulmllvrp"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2025-08-21T12:28:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":33,"rahulmllvrp":2}}]
