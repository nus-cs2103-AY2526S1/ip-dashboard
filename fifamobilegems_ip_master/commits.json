{"authorDailyContributionsMap":{"fifamobilegems":[{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"f9ff306c087bb9e612d1f4d0bf1f146aade73805","isMergeCommit":false,"messageTitle":"Rename chatbot, refactor code, add greet and exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1},"bat":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"2c425a516207b3262e0d13841f9eb09965b32f78","isMergeCommit":false,"messageTitle":"Add echo method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"149e33bb2af2ef603318100c5757045e938d8934","isMergeCommit":false,"messageTitle":"Remove outro string in main","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2025-08-24T00:00:00","commitResults":[{"hash":"bb7a06ca12f9b9e16753d06793cf74826a3d92ba","isMergeCommit":false,"messageTitle":"Add add and list methods","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":3}}},{"hash":"43157ac511529eb76159e6e12fa8e8869b525c62","isMergeCommit":false,"messageTitle":"Refactor code to use Task class, implement mark and unmark commands","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":4}}},{"hash":"6a91566d94027945329c7e5419873dd9bb53aee9","isMergeCommit":false,"messageTitle":"Add Todo, Event, Deadline classes","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":9}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"3cde917594ce4e1be9340297aea954dde6a6c679","isMergeCommit":false,"messageTitle":"Added automated unit testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":9,"deletions":7},"sh":{"insertions":1,"deletions":1}}},{"hash":"f6ff5e333d49be6059a67aa01f0d4f7a73d110b4","isMergeCommit":false,"messageTitle":"Fix: Removed unnecessary toString() calls","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"728c1aea69fdad420c579cb85bac2618cb8fc11f","isMergeCommit":false,"messageTitle":"Handle errors from wrong input and add new test cases","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":60,"deletions":20}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"0c2bb1a45f031fe18fa2664bd85048e8c4596508","isMergeCommit":false,"messageTitle":"Added support for deleting tasks from list and unit test cases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":24,"deletions":1}}},{"hash":"8f660962803ed7e46361e550f8c70443c4d0133a","isMergeCommit":false,"messageTitle":"Sorry prof/TA I did the iP before reading up on the week 2 topics.. I have not followed the guidelines for commits and commit messages and I will do so week 3 onwards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"31dba1513d25cb7c851fd25b48c77112ed7ee04d","isMergeCommit":false,"messageTitle":"Refactor: Reorganize code into packages for better structure and maintainability","messageBody":"Current code is flat with all commands in one file.\n\nThis makes navigation/readability and further development harder, and will complicate future maintenance.\n\nLet\u0027s refactor and separate code into packages, improve project structure and follow OOP principles\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":369,"deletions":170},"bat":{"insertions":2,"deletions":2},"md":{"insertions":3,"deletions":3}}},{"hash":"b5fc5c60c698d0614c69842f1221e18d1d2cf3ce","isMergeCommit":false,"messageTitle":"Feat: Load and updates data from txt file, saving tasks on the hard disk","messageBody":"Tasks exist only in memory and are lost once we exit from program. This makes These impractical as a task manager since we cannot save and resume tracking tasks.\n\nImplement persistence of tasks by saving tasks to data/tasks.txt after each command and loading them on startup. Handle cases where file/directory are missing.\n\nThis approach ensures tasks are saved across runs, with a simple and readable data format.\n","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":0}}},{"hash":"fefe229ec23bfc4499618309a40d8006f8a5caa7","isMergeCommit":false,"messageTitle":"Chore: Clear tasts.txt","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"c6677424d444f8b036fa05ed08e891b2d656e1e2","isMergeCommit":false,"messageTitle":"Refactor: Organize code into OOP structure, setting aside packages for parser, ui, tasklist and storage","messageBody":"These class handles input, output, task and file management all by itself. This makes code hard to expand, maintain and debug.\n\nLet\u0027s extract resposibilities into dedicated packages and classes\nui: Manages user interaction: intro, outro, user input, errors\nTaskList: maintain task array and id, manages task addition, deletion, and clearing of all tasks\nstorage: manages file saving, loading and updating\nparser: interprets user input and returns relevant Command\n\nThis refactor simplifies future development of code, and makes our system align with OOP principles.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":312,"deletions":193}}},{"hash":"90178a0a59804068b6b9ce0b9ed0f331f05f601f","isMergeCommit":false,"messageTitle":"Feat: Add clear command to reset tasks in memory and storage","messageBody":"There is no way to clear all tasks at once, this affects usability and makes it inconvenient for testing\n\nAdd a ClearCommand that replaces the task list with a new one and updates tasks.txt with that TaskList\n\nThis gives users a simple way to clear tasks while ensuring memory and storage data stays in sync\n","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"4d3d6a918853ec04543f77af66fc29aa5b487f31","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027 into main","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"b59d2e6a881690a840e50830e7cc272a6e010e1a","isMergeCommit":false,"messageTitle":"Refactor: Store Deadline /by and Event /from and /to fields as DateTime instead of String","messageBody":"Code currently stores task dates/deadlines in Strings. Without a standardized date format, we are unable to implement a proper filtering/sorting logic\n\nLet\u0027s replace String fields /by, /from and /to to DateTime and update the parsing logic and methods accordingly\n\nBy using Java\u0027s inbuilt DateTime package, we can ensure consistent formatting and safe and simple parsing of dates, making it easier for us to manipulate the fields.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":4},"java":{"insertions":55,"deletions":25}}},{"hash":"76d4ef24c451f572b1e59e2513538d9b240ebedc","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027 into master","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"7a5014eae5a6954c50feac46fb6b6097667145e4","isMergeCommit":false,"messageTitle":"Fix: Configure Gradle main class","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"069b4ae4d1c92a009a5fe0b7e9137e8440dace71","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"66710e5b2dfd14be1c7a0efc40cdab6a220be40b","isMergeCommit":false,"messageTitle":"Fix: Configure Gradle main class to app.These","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"c47f5cb273c4dbac4e19644624eae9223f3c9ee7","isMergeCommit":false,"messageTitle":"Test: Add JUnit tests for TaskList and Parser","messageBody":"The app currently lacks automated JUnit tests, making testing tedious\n\nLet\u0027s introduce JUnit classes TaskListTest and ParserTest to test add/delete/clear and parser functionality\n\nThese tests improve confidence in future code changes and provide a foundation for future test extensions\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":90,"deletions":0}}},{"hash":"dcbf6f45910c4437114b4d298faaa42396bb9149","isMergeCommit":false,"messageTitle":"Fix: Add archiveFileName field in build.gradle","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}}]},{"date":"2025-09-05T00:00:00","commitResults":[{"hash":"6e31037009228bb84d622d9fe331a4e96514ea44","isMergeCommit":false,"messageTitle":"Docs: Add JavaDoc comments to These class and all classes in command package","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":215,"deletions":1}}},{"hash":"bff163ac553611be8db812c0e56d4238d31efd41","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-07T00:00:00","commitResults":[{"hash":"1bd4069a28b87791d60ca8b1ace3b38c799ec6f9","isMergeCommit":false,"messageTitle":"Style: Move hardcoded task file directory to constant","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"7d59e8ea7fa400c264e1748243e99e5695c84e5f","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["Level-9","A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"5e3f7547e29d15ecfb704ffb5c0f0e66a2a064a8","isMergeCommit":false,"messageTitle":"Feat: Implement to FindCommand to search tasks with keyword","messageBody":"We lack a way to search and filter tasks via keywords, a function that is essential for users to find specific tasks.\n\nLet\u0027s implement a FindCommand class that expects user input in the form of \u0027find \u003ckeyword\u003e\u0027, searches through the existing task list and returns a new list of matching tasks. If there are no matching tasks found, the user is informed via a UI message too.\n\nOther fixes: Added UnknownCommand class for error handling when parser does not recognise command given\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":119,"deletions":3}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"9f355b2c1bace34e925222d70ba5cbd49212a3b6","isMergeCommit":false,"messageTitle":"Style: Improve code style for readability and consistency, mainly rearranging order of imports and changing variable names to follow Java standard","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":56,"deletions":55}}},{"hash":"54720caed572710aa8e9ff37de654a7980cea5a4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-12T00:00:00","commitResults":[{"hash":"d4377b3e3e4e051e61bcc1347ff8a18fe2f25149","isMergeCommit":false,"messageTitle":"Feat: Implement JavaFX GUI with chatbot style interface","messageBody":"Text based console interface limits user experience\n\nLet\u0027s implement:\n- A Main.java class with a scroll panel and text input controls\n- DialogBox component for user input and These response display\n- Capture command output for GUI integration with getResponse()\n\nHaving a new chat interface provides users with a familiar experience, using JavaFX ensure device compatibility across all platforms\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"txt":{"insertions":0,"deletions":1},"java":{"insertions":202,"deletions":1}}},{"hash":"a2db0283abe03b1df59e77c1cd917c4ebd0b45c5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-16T00:00:00","commitResults":[{"hash":"67731781a11f44a6b83932ce67161f4e4218733d","isMergeCommit":false,"messageTitle":"Feat: Added assertions to These and TaskCommand classes","messageBody":"Our These app initializes, parses and executes commands while making assumptions on invariants that are not explicitly checked at runtime.\n\nHidden logic errors can cause the program to fail should our assumptions on the program state be wrong\n\nLet\u0027s:\n- Assert non-null inputs in constructors and methods\n- Assert an initialized ui in getResponse\n- Assert a taskId variant (taskId should be greater than 1)\n- Assert that every fetched Task is non-null in our ListCommand\n\nThese assertions help us surface mistakes early and help us document assumptions made by developers as well.\n\n- Enable at runtime with: `java -ea app.These`\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"136490702cf492622a19ddc967cd712f9dc00832","isMergeCommit":false,"messageTitle":"refactor: Improve Code quality for Commands, Parser, Storage, TaskList and These","messageBody":"Core and Command classes have complex expressions and vague variable naming. This makes the code harder to read, maintain and reason about, causing affecting development and testing.\n\nLet\u0027s:\n- Introduce constants for values and expressions that are repeated\n- Add `final` modifier for fields that are not meant to be changed\n- Improve variable naming for clarity\n\nAdded some assertions for null input as well\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":87}}}]},{"date":"2025-09-22T00:00:00","commitResults":[{"hash":"402f78fe88634e1a4e266574879b464681dd7e78","isMergeCommit":false,"messageTitle":"Feat: Add in-app HelpCommand","messageBody":"Users interact with commands without any built-in guidance, there does not exist any way to refer to the syntax and required format of commands\nNew and returning users will struggle to recall command formats, causing errors and friction.\n\nLet\u0027s:\n- Add HelpCommand to print a concise help page and per-command usage with help \u003ccommand\u003e if required\n- Wire the HelpCommand into the Parser\n- Provide clear examples for each command available\n\nA dedicated command should be discoverable in both CLI and GUI modes, avoiding external docs and pages. Keeping the help guide within app\u0027s code ensures that it stays version-aligned with implemented commands.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":0}}},{"hash":"93847aa898cf8830efaa6badb7e2e5e9225c311e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"245e7bb7dcffddd2a43cda7e4e57daa7d7c04409","isMergeCommit":false,"messageTitle":"Docs: Added User Guide and product screenshot","messageBody":"The project lacks an in-repo User Guide; users must infer command syntax and behavior from code or error messages.\nWithout clear guidance, onboarding and correcting mistakes will be slower. A documented single source of truth improves usability\n\nLet\u0027s:\n- Update README.md with overview, setup guide and comprehensive quick-reference table for commands\n- Include product screenshot\n\nKeeping the guide alongside code ensures it evolves with features, is versioned, and is easy to find. Examples make behavior unambiguous and testable.\n","tags":["A-UserGuide","A-Release","A-FullCommitMessage","A-CodeQuality","A-Assertions"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"md":{"insertions":271,"deletions":13}}},{"hash":"729125845945a4938d3bbff0975a677ed9644142","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a42b67c75d706474a18de7e155e3bd60ebb6fd25","isMergeCommit":true,"messageTitle":"Merge pull request #3 from fifamobilegems/branch-A-CodeQuality","messageBody":"refactor: Improve Code quality for Commands, Parser, Storage, TaskLis…","fileTypesAndContributionMap":{}},{"hash":"3ebf6d723472997aca8a2d3a23349299516b81bd","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"26b07c7691a8ab9758fe89f83994660991ee378d","isMergeCommit":true,"messageTitle":"Merge pull request #2 from fifamobilegems/branch-A-Assertions","messageBody":"Feat: Added assertions to These and TaskCommand classes","fileTypesAndContributionMap":{}},{"hash":"63958bfc15cd1796a380f5cf88362f6fc2fcabba","isMergeCommit":true,"messageTitle":"Merge","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"fifamobilegems":{"java":1446,"md":269,"fxml":0,"sh":1,"bat":2,"gradle":22,"txt":27}},"authorContributionVariance":{"fifamobilegems":33604.76},"authorDisplayNameMap":{"fifamobilegems":"CS2103T-F13-1 MAX .. YAN"}}
