[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"    mainClass.set(\"daco.Daco.java\")","lastModifiedDate":"2025-08-29T02:47:47","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"    archiveBaseName \u003d \"daco\"","lastModifiedDate":"2025-08-29T02:47:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"yuanjasper":2,"-":39}},{"path":"src/main/java/daco/Daco.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T08:40:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Class that handle the start of entire programme","lastModifiedDate":"2025-08-29T08:40:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T08:40:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T08:40:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"public class Daco {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"     * Runs the program, initialises storage to retrieve previous to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"        Storage loadedfile \u003d new Storage();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        TaskList toDoList \u003d new TaskList(loadedfile.load());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"        while (true) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"                String userInput \u003d sc.nextLine();","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"                    loadedfile.save(toDoList.getList());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"                    ui.bye();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"                    break;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"                } else {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"                    ui.input(userInput, toDoList, sc);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"                }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":34}},{"path":"src/main/java/daco/DacoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" * An exception class made to handle common errors within Daco chatbot","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":" * Handles the different type, able to get the specific type","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class DacoException extends Exception {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    public enum ErrorType {DOES_NOT_EXIST, INVALID_COMMANDMARK, UNKNOWN_COMMAND, INVALID_NUMBER, EMPTY_TASK, EMPTY_DATE, INVALID_FORMAT_DELETE}","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    protected final ErrorType type;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     * Returns the constructor for DacoException class","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"     * @param type is of ErrorType","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    public DacoException(ErrorType type) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        super(\"\");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"     * Returns ErrorType of a DacoException object","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"    public ErrorType getType() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"        return this.type;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":29}},{"path":"src/main/java/daco/DateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" * Handles date and time formatting for tasks that are to be put inside the tasklist","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" *","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":" * Two main features are formatting the display date, and formatting the dates during save","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"public class DateAndTime {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"    private final LocalDateTime datetime;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"    private static final DateTimeFormatter[] INPUT_FORMATS \u003d new DateTimeFormatter[]{","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"), DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    };","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"     * Returns the constructor for DateAndTime class","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"     * @param datetime String format of the date and time input","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"    public DateAndTime(String datetime) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"        this.datetime \u003d formatDate(datetime);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"     * Returns LocalDateTime if the string input matches the enumerated INPUT_FORMATS","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"     * Otherwise, throws a DacoException indicating invalid command mark","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"     * @param input String format of the date and time input","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    public LocalDateTime formatDate(String input) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"        for (DateTimeFormatter formats : INPUT_FORMATS) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"            try {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"                return LocalDateTime.parse(input.trim(), formats);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"        throw new DacoException(DacoException.ErrorType.INVALID_COMMANDMARK);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"     * Returns String to be printed, similar to a toString method","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"    public String display() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"        return this.datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HHmm\"));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"     * Returns String to format date and time during saving of the to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"    public String saveFormat() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"        return this.datetime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":56}},{"path":"src/main/java/daco/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Extension of Task to be placed in a to do list, deadline represents by when to be completed","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" *","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" * handles formatting to be saved in file for entire row","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    protected DateAndTime deadline;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"     * Returns Deadline constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"     * @param deadline is to indicate the deadline of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException if the deadline is an of wrong format","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    public Deadline(String description, String deadline) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        super(description);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"        this.deadline \u003d new DateAndTime(deadline);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"     * Returns Deadline constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"     * @param isDone is to describe the task being marked off or on","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"     * @param deadline is to indicate the deadline of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"    public Deadline(String description, boolean isDone, DateAndTime deadline) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"     * Returns Deadline constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"     * @param isDone is to describe the task being marked off or on","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"     * @param deadline is to indicate the deadline of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException if the deadline is an of wrong format","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"    public Deadline(String description, boolean isDone, String deadline) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"        this.deadline \u003d new DateAndTime(deadline);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"        return super.toString();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be printed out","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"    public String display() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"        return \"[D]\" + super.display()  + \" (Due: \" + this.deadline.display() + \")\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Deadline object after being marked done","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"    public Deadline markAsDone() throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"        return new Deadline(this.description, true, this.deadline);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Deadline object after being unmarked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"    public Deadline markAsNotDone() throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"        return new Deadline(this.description, false, this.deadline);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be in during saving of the to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"    public String formatToSaveInFile() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"        return \"D | \" + (super.isDone() ? 1 : 0) + \" | \" + this.description + \" | \" + this.deadline.saveFormat() + \"\\n\";","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":74}},{"path":"src/main/java/daco/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/** Extension of Task to be placed in a to do list, event represents when the event starts","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" *","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" * handles formatting to be saved in file for entire row","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    protected DateAndTime duration;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"     * Returns Event constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"     * @param duration is to indicate the duration of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException if the duration is an of wrong format","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    public Event(String description, String duration) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        super(description);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        this.duration \u003d new DateAndTime(duration);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"     * Returns Event constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"     * @param duration is to indicate the duration of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException if the duration is an of wrong format","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"    public Event(String description, boolean isDone, String duration) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"        this.duration \u003d new DateAndTime(duration);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"     * Returns Event constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"     * @param duration is to indicate the duration of the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"    public Event(String description, boolean isDone, DateAndTime duration) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"        return super.toString();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be printed out","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"    public String display() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"        return \"[E]\" + super.display() + \" (\" + this.duration.display() + \")\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Event object after being marked done","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"    public Event markAsDone() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"        return new Event(this.description, true, this.duration);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Event object after being unmarked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"    public Event markAsNotDone() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"        return new Event(this.description, false, this.duration);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be in during saving of the to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"    public String formatToSaveInFile() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"        return \"E | \" + (super.isDone() ? 1 : 0) + \" | \" + this.description + \" | \" + this.duration.saveFormat() + \"\\n\";","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":71}},{"path":"src/main/java/daco/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Main class for handling proper logic for inadequate, incomplete commands","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"import java.util.Random;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    public final String[] sadfaces \u003d {\"（◞‸◟）\", \"(˘︹˘)\", \"( ;︵; )\", \"（；_・）\", \"(ノ_ヽ)\"};","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    public final String LINESEP \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"     * Checks that the input given has a non-empty date, otherwise throws the empty date exception","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"     * @param input String of user\u0027s input during typing their entire command","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException when is empty","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    public void verifyDate(String input) throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"            String[] temp \u003d input.split(\", \");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"            verifyTask(temp[0]);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"            verifyTask(temp[1]);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"            new DateAndTime(temp[1]);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(DacoException.ErrorType.EMPTY_DATE));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"        } catch(DacoException e) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(e.getType()));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"     * Checks that the input given has a non-empty task, otherwise throws the empty task exception","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"     * @param input String of user\u0027s input during typing their entire command","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException when is empty","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"    public void verifyTask(String input) throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"        String temp \u003d input.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"        if (temp.isEmpty()) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(DacoException.ErrorType.EMPTY_TASK));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"     * Checks that the input given has a non-empty task, otherwise throws the invalid format or invlaid number error","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"     * @param input String of user\u0027s input during typing their entire command","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException when is incorrect","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"    public String[] verifyDeleteFormat(String input) throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"        String[] command \u003d input.split(\" \");","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"        if (command.length !\u003d 2) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(DacoException.ErrorType.INVALID_FORMAT_DELETE));","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"            Integer.parseInt(command[1]);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"            return command;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(DacoException.ErrorType.INVALID_NUMBER));","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"        return command;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"     * Checks that the input given access a correct / available item","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"     * @param number adjusted to follow list numberings","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"     * @param list to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException when is empty","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"    public void existItem(int number, ArrayList\u003cTask\u003e list) throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"        if (number \u003c\u003d 0 || number \u003e list.size()) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"            this.errors(new DacoException(DacoException.ErrorType.DOES_NOT_EXIST));","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanjasper"},"content":"     * Prints the output for all errors","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanjasper"},"content":"     * @param e takes in the DacoException to check for the specific type before outputting message","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanjasper"},"content":"     * @throws DacoException","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanjasper"},"content":"    public void errors(DacoException e) throws DacoException {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.INVALID_NUMBER) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Please input a valid number.\" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.DOES_NOT_EXIST) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Nothing there... \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.INVALID_COMMANDMARK) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Hey buddy, think you typed it wrongly...\" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.UNKNOWN_COMMAND) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"That\u0027s a negative, I can\u0027t do that...yet \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.EMPTY_TASK) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Uh.. there\u0027s no task name... \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.EMPTY_DATE) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Missing date... \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanjasper"},"content":"        if (e.getType() \u003d\u003d DacoException.ErrorType.INVALID_FORMAT_DELETE) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Please input correctly, for example \u0027delete 2\u0027 to delete the second character! \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanjasper"},"content":"        throw new DacoException(e.getType());","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanjasper"},"content":"     * Prints the standard chatbot output","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanjasper"},"content":"     * @param input what you want the chatbot to say besides the design stuff","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanjasper"},"content":"    public void dacoResponse(String input) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanjasper"},"content":"        System.out.println(LINESEP + input + \"\\n\" + LINESEP);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanjasper"},"content":"     * Returns a String of a random response from an array of faces","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanjasper"},"content":"     * @param responses the array list of faces you wish to choose from","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanjasper"},"content":"    public String randomResponse(String[] responses) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanjasper"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanjasper"},"content":"        return responses[random.nextInt(responses.length)];","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":120}},{"path":"src/main/java/daco/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Class responsible for loading data, saving the data file\u0027s location and contents","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"    private final java.nio.file.Path filepath;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"     * Constructs the Storage class object, achieves the file path via paths","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    public Storage() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        this.filepath \u003d Paths.get(home,\"data\" + \"daco.txt\");","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"     * Loads the data from the file into the to do list of the current run","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"            File file \u003d new File(String.valueOf(this.filepath));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"                System.out.println(\"Created File at\" + String.valueOf(this.filepath));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"                return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"            else {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"                System.out.println(\"File already at\" + String.valueOf(this.filepath));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"                ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"                    String data \u003d sc.nextLine();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"                    String[] split \u003d data.split(\" \\\\| \");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"                    if (split[0].equals(\"T\")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"                        list.add(new ToDos(split[2], split[1].equals(\"1\")));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"                        continue;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"                    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"                    if (split[0].equals(\"D\")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"                        list.add(new Deadline(split[2], split[1].equals(\"1\"), split[3]));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"                        continue;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"                    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"                    if (split[0].equals(\"E\")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"                        list.add(new Event(split[2], split[1].equals(\"1\"), split[3] ));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"                    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"                }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"                return list;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"        } catch (IOException | DacoException e) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"     * Saves the to do list contents into the same file by rewriting the file","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"    public void save(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(this.filepath), false);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"            for (Task task : list) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"                writer.write(task.formatToSaveInFile());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"            writer.close();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":72}},{"path":"src/main/java/daco/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T08:39:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Most general class for items to be placed into the to do list","lastModifiedDate":"2025-08-29T08:39:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T08:39:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"public class Task {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"    protected String description;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"     * Returns Task constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"     * Returns Deadline constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"     * @param isDone is to indicate whether the task is marked or not","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"     * Returns a X if marked, nothing is not marked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"        return this.description;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be printed out","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"    public String display() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Task object after being marked done","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"    public Task markAsDone() throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"        return new Task(this.description, true);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Task object after being unmarked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"    public Task markAsNotDone() throws DacoException {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"        return new Task(this.description, false);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"     * Returns the state of the object\u0027s marked or unmarked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"        return this.isDone;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"     * Returns the string for when the task is saved to file","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"     * Code should not run at all time as Task object itself won\u0027t be saved","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"    public String formatToSaveInFile() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"        return \"Error\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanjasper"},"content":"     * Returns true false if the description of the object contains the input","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanjasper"},"content":"     * @param input something you are trying to find about the description of a task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanjasper"},"content":"    public boolean contains(String input) {","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanjasper"},"content":"        return this.description.contains(input);","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":81}},{"path":"src/main/java/daco/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Representation of the to do list, contains only Task class items","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" * Handles functions related to manipulation of data in the to do list.","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"import java.util.Random;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"public class TaskList {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"    public final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"    public final String LINESEP \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"    public final String[] neutralfaces \u003d {\"(´⌣`ʃƪ)\", \"| (• ◡•)|\", \"(◌˘◡˘◌)\", \"(￣▽￣)ノ\", \"(ㆆᴗㆆ)\", \"(⌒ω⌒)ﾉ\"};","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    public final String[] sadfaces \u003d {\"（◞‸◟）\", \"(˘︹˘)\", \"( ;︵; )\", \"（；_・）\", \"(ノ_ヽ)\"};","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"        return this.list;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"     * Prints out either two states of the list, empty or non-empty","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"    public void showList() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"List is empty!\" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"            return;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"        System.out.print(LINESEP + \"Here\u0027s your list!\\n\");","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"            System.out.println(\"Item #\" + (i + 1) + \": \" + this.list.get(i).display());","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"        System.out.println(randomResponse(neutralfaces) + \"\\n\" + LINESEP);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"     * Deletes the index of list, using Parser to handle invalid inputs","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"     * @param input list item number","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"    public void delete(String input) throws DacoException {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"            String[] command \u003d new Parser().verifyDeleteFormat(input);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"            int number \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"            new Parser().existItem(number, this.list);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"            Task removedtask \u003d this.list.get(number - 1);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"            this.list.remove(number-1);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Task removed! \" + randomResponse(neutralfaces) + \"\\n\" + removedtask.display() + \"\\n\" + this.itemsInList());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"        } catch (DacoException ignored) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"     * Marks or unmarks the item on the list using list item number","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"     * @param input list item number","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"     * @param isDone state of what the object should be in","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"    public boolean mark(String input, boolean isDone) throws DacoException {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"            String[] command \u003d new Parser().verifyDeleteFormat(input);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"            int number \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"            new Parser().existItem(number, this.list);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"            if (isDone) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"                this.list.set(number - 1, this.list.get(number - 1).markAsDone());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"                dacoResponse(\"Marked the task! \" + randomResponse(neutralfaces)","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"                        + \"\\n\" + this.list.get(number - 1).display() + \"\\nWould you like to delete the task? (Y/N)\");","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"            } else {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanjasper"},"content":"                this.list.set(number - 1, this.list.get(number - 1).markAsNotDone());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanjasper"},"content":"                dacoResponse(\"Unmarked the task! \" + randomResponse(neutralfaces) + \"\\n\" + this.list.get(number - 1).display());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanjasper"},"content":"            return true;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanjasper"},"content":"        } catch(DacoException ignored){","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanjasper"},"content":"            return false;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanjasper"},"content":"     * Prints the standard chatbot output","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanjasper"},"content":"     * @param input what you want the chatbot to say besides the design stuff","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanjasper"},"content":"    public void dacoResponse(String input) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanjasper"},"content":"        System.out.println(LINESEP + input + \"\\n\" + LINESEP);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanjasper"},"content":"     * Returns a String of what the bot should say based on the number of items there are in the list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanjasper"},"content":"    public String itemsInList() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanjasper"},"content":"        int counter \u003d this.list.size();","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanjasper"},"content":"        return \"\\nThere \" + (counter \u003d\u003d 1 ? \"is \" + counter + \" item\" : \"are \" + counter + \" items\") + \" in the list! \" + randomResponse(neutralfaces);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanjasper"},"content":"     * Returns a String of a random response from an array of faces","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanjasper"},"content":"     * @param responses the array list of faces you wish to choose from","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanjasper"},"content":"    public String randomResponse(String[] responses) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanjasper"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanjasper"},"content":"        return responses[random.nextInt(responses.length)];","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yuanjasper"},"content":"     * Adds task to the list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yuanjasper"},"content":"     * @param task the task that you want to add","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yuanjasper"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yuanjasper"},"content":"        this.list.add(task);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yuanjasper"},"content":"        dacoResponse(\"The following task has been added:\\n\" + this.getLast().display() + this.itemsInList());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yuanjasper"},"content":"    public Task getLast() {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yuanjasper"},"content":"        return this.list.get(this.list.size()-1);","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yuanjasper"},"content":"     * finds items based on common description given the input","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yuanjasper"},"content":"     * @param description what the user wants to search","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yuanjasper"},"content":"    public void findByDescription(String description) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yuanjasper"},"content":"        boolean isEmpty \u003d true;","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yuanjasper"},"content":"        String output \u003d \"\";","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yuanjasper"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yuanjasper"},"content":"            if (this.list.get(i).contains(description)) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yuanjasper"},"content":"                isEmpty \u003d false;","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yuanjasper"},"content":"                output \u003d output + \"\\n\" + \"Item #\" + (i + 1) + \": \" + this.list.get(i).display();","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yuanjasper"},"content":"        if (isEmpty) {","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Nothing matches your search...\");","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yuanjasper"},"content":"        } else {","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Here\u0027s what we got!\" + output);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false}],"authorContributionMap":{"yuanjasper":138}},{"path":"src/main/java/daco/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/** Extension of Task to be placed in a to do list, todos represents basic tasks","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" *","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" * handles formatting to be saved in file for entire row","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T03:07:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"public class ToDos extends Task {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"     * Returns ToDos constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"    public ToDos(String description) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"        super(description);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     * Returns Deadline constructor class, assisted by Task class constructor","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"     * @param description  is to describe the task","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"     * @param isDone is to indicate whether the task is marked or not","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"        super(description, isDone);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"    public String toString() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"        return super.toString();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be printed out","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"    public String display() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"        return \"[T]\" + super.display();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Todos object after being marked done","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"    public ToDos markAsDone() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"        return new ToDos(this.description, true);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"     * Returns new Todos object after being unmarked","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"    public ToDos markAsNotDone() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"        return new ToDos(this.description, false);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"     * Returns the format for the task to be in during saving of the to do list","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"    public String formatToSaveInFile() {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"        return \"T | \" + (super.isDone() ? 1 : 0) + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":53}},{"path":"src/main/java/daco/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"/**","lastModifiedDate":"2025-08-29T08:36:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":" * Handles the input from user but does not check whether a command is available or correct","lastModifiedDate":"2025-08-29T08:36:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":" * Programme does the responses for correct execution of input.","lastModifiedDate":"2025-08-29T08:36:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":" */","lastModifiedDate":"2025-08-29T08:36:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T08:36:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"import java.util.Random;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"    public final String LINESEP \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"    public final String[] neutralfaces \u003d {\"(´⌣`ʃƪ)\", \"| (• ◡•)|\", \"(◌˘◡˘◌)\", \"(￣▽￣)ノ\", \"(ㆆᴗㆆ)\", \"(⌒ω⌒)ﾉ\"};","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    public final String[] sadfaces \u003d {\"（◞‸◟）\", \"(˘︹˘)\", \"( ;︵; )\", \"（；_・）\", \"(ノ_ヽ)\"};","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"     * Shows the startup message of the bot","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    public Ui() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"        String logo \u003d \" ____                  \\n\" +","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"                \"|  _ \\\\  __ _  ___ ___  \\n\" +","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"                \"| | | |/ _` |/ __/ _ \\\\ \\n\" +","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"                \"| |_| | (_| | (_| (_) |\\n\" +","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"                \"|____/ \\\\__,_|\\\\___\\\\___/ \\n \\n\";","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"        dacoResponse(logo + \"Hi there, I\u0027m Daco! How can I help?\");","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"     * Prints the standard chatbot output","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yuanjasper"},"content":"     * @param input what you want the chatbot to say besides the design stuff","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yuanjasper"},"content":"    public void dacoResponse(String input) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yuanjasper"},"content":"        System.out.println(LINESEP + input + \"\\n\" + LINESEP);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yuanjasper"},"content":"     * Returns a String of a random response from an array of faces","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yuanjasper"},"content":"     *","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yuanjasper"},"content":"     * @param responses the array list of faces you wish to choose from","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yuanjasper"},"content":"    public String randomResponse(String[] responses) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yuanjasper"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yuanjasper"},"content":"        return responses[random.nextInt(responses.length)];","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yuanjasper"},"content":"     * Replies with goodbye","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yuanjasper"},"content":"    public void bye() {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yuanjasper"},"content":"            dacoResponse(\"Come back anytime. \" + randomResponse(sadfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yuanjasper"},"content":"    /**","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yuanjasper"},"content":"     * Picks the option to execute depending on the input variable","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yuanjasper"},"content":"     */","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yuanjasper"},"content":"    public void input(String userinput, TaskList todolist, Scanner sc) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yuanjasper"},"content":"            if (userinput.equals(\"list\")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yuanjasper"},"content":"                todolist.showList();","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"mark \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yuanjasper"},"content":"                if (todolist.mark(userinput, true)) {","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yuanjasper"},"content":"                    String option \u003d sc.nextLine();","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yuanjasper"},"content":"                    if (option.equals(\"Y\")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yuanjasper"},"content":"                        todolist.delete(userinput);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yuanjasper"},"content":"                    } else {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yuanjasper"},"content":"                        dacoResponse(\"Okay, I won\u0027t do anything! \" + randomResponse(neutralfaces));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yuanjasper"},"content":"                    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yuanjasper"},"content":"                }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-29T01:48:17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"unmark \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yuanjasper"},"content":"                todolist.mark(userinput, false);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"todo \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyTask(userinput.substring(5));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yuanjasper"},"content":"                todolist.add(new ToDos(userinput.substring(5)));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"deadline \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyDate(userinput.substring(9));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yuanjasper"},"content":"                String[] temp \u003d userinput.substring(9).split(\",\");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyTask(temp[0]);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yuanjasper"},"content":"                todolist.add(new Deadline(temp[0], temp[1]));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"event \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyDate(userinput.substring(6));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yuanjasper"},"content":"                String[] temp \u003d userinput.substring(6).split(\", \");","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyTask(temp[0]);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yuanjasper"},"content":"                todolist.add(new Event(temp[0], temp[1]));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"delete \")) {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yuanjasper"},"content":"                todolist.delete(userinput);","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yuanjasper"},"content":"            else if (userinput.startsWith(\"find \")) {","lastModifiedDate":"2025-08-29T03:30:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yuanjasper"},"content":"                String tasksToFind \u003d userinput.substring(5);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yuanjasper"},"content":"                new Parser().verifyTask(tasksToFind);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yuanjasper"},"content":"                todolist.findByDescription(tasksToFind);","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yuanjasper"},"content":"            }else {","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yuanjasper"},"content":"                new Parser().errors(new DacoException(DacoException.ErrorType.INVALID_COMMANDMARK));","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yuanjasper"},"content":"            }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yuanjasper"},"content":"        } catch (DacoException ignored) {","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-28T21:50:26","isFullCredit":false}],"authorContributionMap":{"yuanjasper":103}},{"path":"src/test/java/daco/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    public void validitemdate_moregaps() {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"            assertEquals(new String[] {\"1\"}, new Parser().verifyDeleteFormat(\"delete 3 5 1\"));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"            fail();","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"        } catch (DacoException e) {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"            assertEquals(1,1);","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"    public void validitemdate_emptystring() {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yuanjasper"},"content":"        try {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yuanjasper"},"content":"            assertEquals(new String[] {\"\"}, new Parser().verifyDeleteFormat(\"\"));","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"            fail();","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"        } catch (DacoException e) {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yuanjasper"},"content":"            assertEquals(1,1);","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yuanjasper"},"content":"        }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false}],"authorContributionMap":{"yuanjasper":29}},{"path":"src/test/java/daco/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"package daco;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yuanjasper"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yuanjasper"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yuanjasper"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yuanjasper"},"content":"public class ToDosTest {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yuanjasper"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yuanjasper"},"content":"    public void saveinfile_notdone() {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yuanjasper"},"content":"        ToDos t \u003d new ToDos(\"test\", false);","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yuanjasper"},"content":"        assertEquals(\"T | 0 | \" + \"test\" + \"\\n\", t.formatToSaveInFile());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yuanjasper"},"content":"    @Test","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yuanjasper"},"content":"    public void saveinfile_emptystring() {","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yuanjasper"},"content":"        ToDos t \u003d new ToDos(\"\", false);","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yuanjasper"},"content":"        assertEquals(\"T | 0 | \" + \"\" + \"\\n\", t.formatToSaveInFile());","lastModifiedDate":"2025-09-03T09:41:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"    }","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yuanjasper"},"content":"}","lastModifiedDate":"2025-08-29T02:37:55","isFullCredit":false}],"authorContributionMap":{"yuanjasper":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuanjasper"},"content":"todo test","lastModifiedDate":"2025-08-21T07:31:41","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yuanjasper"},"content":"list","lastModifiedDate":"2025-08-21T07:31:41","isFullCredit":false}],"authorContributionMap":{"yuanjasper":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yuanjasper"},"content":"java -classpath C:\\Users\\Jasper\\scoop\\apps\\git\\2.47.1\\my-projects\\ip\\bin Daco \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-21T07:31:41","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yuanjasper"},"content":"","lastModifiedDate":"2025-08-21T07:31:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yuanjasper"},"content":"pause","lastModifiedDate":"2025-08-21T07:31:41","isFullCredit":false}],"authorContributionMap":{"yuanjasper":3,"-":20}}]
