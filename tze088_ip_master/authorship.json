[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-09-05T13:49:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"    mainClass.set(\"bongo.Bongo\")","lastModifiedDate":"2025-09-02T14:52:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"    archiveBaseName \u003d \"bongo\"","lastModifiedDate":"2025-09-02T14:52:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"checkstyle {","lastModifiedDate":"2025-09-05T13:49:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"    toolVersion \u003d \u002711.0.0\u0027","lastModifiedDate":"2025-09-05T13:49:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-05T13:49:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:49:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"tze088":7,"-":39}},{"path":"src/main/java/bongo/Bongo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.task.Task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"import bongo.task.Event;","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import bongo.task.Deadline;","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":" * Bongo is a chatbot application for managing tasks.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":" * It allows the user to add, list, find, mark, unmark, and delete tasks through various commands.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"public class Bongo {","lastModifiedDate":"2025-08-23T14:22:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"    private final Ui UI;","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"    private final TaskList TASKS;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"    private Bongo() {","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"        UI \u003d new Ui();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"        TASKS \u003d Io.loadTaskList();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T14:44:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"    private void run() {","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"        bongoLoop: while (true) {","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"            String input \u003d UI.queryUser();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"            Command command \u003d Command.fromInput(input);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"            try {","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"                switch (command.getType()) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"                    // Simple commands","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"                    // These will execute if there are words following, e.g. \"bye bye\"","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"                    // Final desired behaviour TBD","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"                    case BYE -\u003e {","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"                        UI.print(\"Bye Bye!\");","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"                        break bongoLoop;","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"                    }","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"                    case LIST -\u003e {","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"                        if (TASKS.isEmpty()) {","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"                            UI.print(\"You\u0027ve got nothing to do except bother me, apparently\");","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"                        } else {","lastModifiedDate":"2025-08-23T15:07:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"                            UI.print(TASKS.toString());","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"                        }","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"                    }","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"                    // Compound commands","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"                    case FIND -\u003e {","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"                        String foundTasks \u003d TASKS.find(command.getArgs());","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"                        if (foundTasks.isBlank()) {","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"                            UI.print(\"Nada. And I\u0027m not checking again.\");","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"                        } else {","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"                            UI.print(\"You\u0027d better not lose track of them again, okay?\\n\"","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"                                    + foundTasks","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"                            );","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"                        }","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"                    }","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"                    case TODO, DEADLINE, EVENT -\u003e addTask(command);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"                    case MARK, UNMARK -\u003e handleMarkUnmark(command);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"                    case DELETE -\u003e UI.print(\"Get out of here!\\n  \" + TASKS.remove(command.getArgs()));","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"                    case UNKNOWN -\u003e UI.print(\"What are you going on about..?\");","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tze088"},"content":"                }","lastModifiedDate":"2025-08-23T15:07:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tze088"},"content":"            } catch (BongoException e) {","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tze088"},"content":"                UI.print(e.getMessage());","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tze088"},"content":"            }","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tze088"},"content":"        // Save task list on exit","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tze088"},"content":"        try {","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tze088"},"content":"            Io.saveTaskList(TASKS);","lastModifiedDate":"2025-09-01T14:37:06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tze088"},"content":"        } catch (BongoException e) {","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tze088"},"content":"            UI.print(e.getMessage());","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tze088"},"content":"     * Main method to start the Bongo chatbot.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tze088"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tze088"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tze088"},"content":"        new Bongo().run();","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tze088"},"content":"    private void addTask(Command command) throws BongoException {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tze088"},"content":"        String args \u003d command.getArgs();","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tze088"},"content":"        try {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tze088"},"content":"            Task task \u003d switch (command.getType()) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tze088"},"content":"                case TODO -\u003e new Task(args);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tze088"},"content":"                case DEADLINE -\u003e {","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tze088"},"content":"                    String[] taskParts \u003d args.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tze088"},"content":"                    yield new Deadline(taskParts[0], taskParts[1]);","lastModifiedDate":"2025-08-23T20:12:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tze088"},"content":"                }","lastModifiedDate":"2025-08-23T20:12:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tze088"},"content":"                case EVENT -\u003e {","lastModifiedDate":"2025-08-26T14:44:50","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tze088"},"content":"                    String[] taskParts \u003d args.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\", 3);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tze088"},"content":"                    yield new Event(taskParts[0], taskParts[1], taskParts[2]);","lastModifiedDate":"2025-08-23T20:12:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tze088"},"content":"                }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tze088"},"content":"                default -\u003e throw new BongoException(\"Unknown task type: \" + command.getType());","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tze088"},"content":"            };","lastModifiedDate":"2025-08-23T20:12:07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tze088"},"content":"            TASKS.add(task);","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tze088"},"content":"            UI.print(\"Great, another thing to keep track of:\\n  \" + task);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tze088"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tze088"},"content":"            throw new BongoException(\"Nice try, but I need the time too. This isn’t a guessing game.\");","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tze088"},"content":"    private void handleMarkUnmark(Command command) throws BongoException {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tze088"},"content":"        String args \u003d command.getArgs();","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tze088"},"content":"        Task task \u003d TASKS.get(args);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tze088"},"content":"        String msg \u003d switch (command.getType()) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tze088"},"content":"            case MARK -\u003e task.mark()","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tze088"},"content":"                    ? \"Finally done? I\u0027m not impressed...\"","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tze088"},"content":"                    : \"You already did that one...\";","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tze088"},"content":"            case UNMARK -\u003e task.unmark()","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tze088"},"content":"                    ? \"Made a mistake, did you?\"","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tze088"},"content":"                    : \"It wasn\u0027t even marked in the first place...\";","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tze088"},"content":"            default -\u003e throw new BongoException(\"Wrong input: \" + command);","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tze088"},"content":"        };","lastModifiedDate":"2025-08-26T15:20:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tze088"},"content":"        UI.print(msg + \"\\n  \" + task);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tze088"},"content":"     * Exception class for errors occurring in the Bongo application.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tze088"},"content":"    public static class BongoException extends Exception {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tze088"},"content":"        public BongoException(String msg) {","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tze088"},"content":"            super(msg);","lastModifiedDate":"2025-08-25T14:07:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-23T14:44:51","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T14:22:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-23T14:22:28","isFullCredit":false}],"authorContributionMap":{"tze088":131}},{"path":"src/main/java/bongo/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":" * Command represents a user input command, parsing and categorizing it into a specific type and arguments.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":" * It is used to interpret and handle different user commands such as TODO, DEADLINE, EVENT, etc.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"public class Command {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"     * Enum representing the different command types.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"    public enum CommandType {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"        LIST, FIND, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, UNKNOWN;","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"        private static CommandType from(String input) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"            return switch (input.toLowerCase()) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"                case \"list\" -\u003e LIST;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"                case \"find\" -\u003e FIND;","lastModifiedDate":"2025-09-02T15:35:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"                case \"todo\" -\u003e TODO;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"                case \"deadline\" -\u003e DEADLINE;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"                case \"event\" -\u003e EVENT;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"                case \"mark\" -\u003e MARK;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"                case \"unmark\" -\u003e UNMARK;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"                case \"delete\" -\u003e DELETE;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"                case \"bye\" -\u003e BYE;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"                default -\u003e UNKNOWN;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"            };","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"    private final CommandType type;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"    private final String args;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"    private Command(CommandType type, String args) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"        this.args \u003d args;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"     * Parses the user input into a Command object, identifying the command type and its arguments.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"     * @param input The raw user input.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"     * @return A Command object with the appropriate CommandType and arguments.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"    public static Command fromInput(String input) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"        CommandType type \u003d CommandType.from(parts[0]);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"        return new Command(type, args);","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"    public CommandType getType() {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"        return type;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"     * Returns the arguments associated with the command.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"     * @return The arguments string.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException if the command is missing necessary arguments.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tze088"},"content":"    public String getArgs() throws Bongo.BongoException {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tze088"},"content":"        // TODO: Ideally the command executor should handle missing arguments.","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tze088"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tze088"},"content":"            throw new Bongo.BongoException(\"I\u0027m missing a few vital details here...\");","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tze088"},"content":"        return args;","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false}],"authorContributionMap":{"tze088":69}},{"path":"src/main/java/bongo/Io.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.task.TaskList;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":" * The Io class handles the saving and loading of the task list to/from a file.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":" * It uses serialization to write and read the TaskList object to the filesystem.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"public class Io {","lastModifiedDate":"2025-09-01T14:37:06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"     * Saves the provided TaskList to a file using serialization.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"     * The task list is stored in the file \"./tasks.bongo\".","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"     * @param tasks The TaskList to be saved.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If an I/O error occurs during saving.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"    public static void saveTaskList(TaskList tasks) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"        try (FileOutputStream fos \u003d new FileOutputStream(\"./tasks.bongo\");","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"                ObjectOutputStream oos \u003d new ObjectOutputStream(fos)) {","lastModifiedDate":"2025-08-29T02:47:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"            // TODO: split into FileNotFound and IO error cases.","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"            throw new Bongo.BongoException(e.getMessage());","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"     * Loads a TaskList from the file \"./tasks.bongo\".","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"     * If the file does not exist or an error occurs during loading, an empty TaskList is returned.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"     * @return The loaded TaskList, or a new empty TaskList if loading fails.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"    public static TaskList loadTaskList() {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"        try (FileInputStream fis \u003d new FileInputStream(\"./tasks.bongo\");","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis)) {","lastModifiedDate":"2025-08-29T02:47:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"            return (TaskList) ois.readObject();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"            return new TaskList();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"        } catch (IOException | ClassNotFoundException | ClassCastException e) {","lastModifiedDate":"2025-08-29T02:47:41","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"            // TODO: Handle corrupted file (delete)?","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"            return new TaskList();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false}],"authorContributionMap":{"tze088":52}},{"path":"src/main/java/bongo/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":" * The Ui class handles user interactions in the Bongo chatbot.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":" * It displays messages and prompts the user for input.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"public class Ui {","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-05T13:56:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"     * Constructs a Ui object and prints an ASCII art greeting.","lastModifiedDate":"2025-09-05T13:56:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-05T13:56:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"    public Ui() {","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"        final String HELLO \u003d \"\"\"","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"            ","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"             /\\\\__/\\\\     ／ ‾ ‾ ‾ ‾","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"            （　´∀｀） ＜　 Oh, it\u0027s you. What is it now?","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"            （　　　） 　 ＼ ＿ ＿ ＿","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"             ｜ ｜　|","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"            （＿_)＿）","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"            \"\"\";","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"        System.out.println(HELLO);","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"     * Formats and prints a message to the user.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"     * @param msg The message to be printed.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"    public void print(String msg) {","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"        final String SEP \u003d \"════════════════════════════════════════════════════════════\\n\";","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"        sb.append(SEP);","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"        msg.lines().forEach(line -\u003e sb.append(\"    \").append(line).append(\u0027\\n\u0027));","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"        sb.append(SEP);","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"        System.out.print(sb);","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"     * Prompts the user for input and returns their response.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"     * @return The user\u0027s input, trimmed of leading/trailing whitespace.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"    public String queryUser() {","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-01T14:35:36","isFullCredit":false}],"authorContributionMap":{"tze088":53}},{"path":"src/main/java/bongo/task/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.Bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-29T02:56:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":" * The DateTime class represents a date in the dd/MM/yyyy format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":" * It provides functionality to parse a string into a LocalDate and format it for display.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"public class DateTime implements Serializable {","lastModifiedDate":"2025-08-29T02:56:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"    private LocalDate date;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"     * Constructs a DateTime object by parsing the provided date string.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"     * The date string must be in the format \"dd/MM/yyyy\".","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the date string does not match the required format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"    public DateTime(String date) throws Bongo.BongoException {","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"        try {","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"            this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"            throw new Bongo.BongoException(\"I only recognise the dd/MM/yyyy format.\");","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"    @Override","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"    public String toString() {","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLL yyyy\");","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"        return date.format(formatter);","lastModifiedDate":"2025-08-29T02:52:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false}],"authorContributionMap":{"tze088":37}},{"path":"src/main/java/bongo/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.Bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":" * Deadline represents a task with a specific due date.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":" * It extends the Task class and adds functionality for managing the due date.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"    private DateTime by;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"     * Constructs a Deadline with the specified description and due date.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"     * The due date must be in the \"dd/MM/yyyy\" format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"     * @param by The due date of the task, in the \"dd/MM/yyyy\" format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the date string is not in the correct format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"    public Deadline(String description, String by) throws Bongo.BongoException {","lastModifiedDate":"2025-08-29T02:02:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"        super(description);","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"        this.by \u003d new DateTime(by);","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"    @Override","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false}],"authorContributionMap":{"tze088":30}},{"path":"src/main/java/bongo/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.Bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":" * Event represents a task that occurs at a specific time range, with a start and end date.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":" * It extends the Task class and adds functionality for managing event dates.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"public class Event extends Task {","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"    private DateTime from;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"    private DateTime to;","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"     * Constructs an Event with the specified description, start date, and end date.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"     * The start and end dates must be in the \"dd/MM/yyyy\" format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"     * @param from The start date of the event, in the \"dd/MM/yyyy\" format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"     * @param to The end date of the event, in the \"dd/MM/yyyy\" format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the date strings are not in the correct format.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"    public Event(String description, String from, String to) throws Bongo.BongoException {","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"        super(description);","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"        this.from \u003d new DateTime(from);","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"        this.to \u003d new DateTime(to);","lastModifiedDate":"2025-08-29T02:16:13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"    @Override","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"        return super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-23T19:49:18","isFullCredit":false}],"authorContributionMap":{"tze088":32}},{"path":"src/main/java/bongo/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":" * Task represents a simple task with a description and completion status.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":" * It provides methods to mark a task as done or undone, and to display its status.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"public class Task implements Serializable {","lastModifiedDate":"2025-08-28T15:44:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"    private boolean isDone;","lastModifiedDate":"2025-09-02T14:17:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"     * Constructs a Task with the specified description, initially not marked as done.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"    public Task(String description) {","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-02T15:20:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"        return DESCRIPTION;","lastModifiedDate":"2025-09-02T15:20:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-02T15:20:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T15:20:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2025-09-02T14:17:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"     * @return true if the task was successfully marked as done, false if it was already done.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"    public boolean mark() {","lastModifiedDate":"2025-08-23T21:13:00","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"        if (isDone) {","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"            return false;","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"        return true;","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T16:26:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"     * @return true if the task was successfully unmarked, false if it was already not done.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"    public boolean unmark() {","lastModifiedDate":"2025-08-23T21:13:00","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"        if (!isDone) {","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"            return false;","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-08-27T16:46:01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-25T14:09:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"        return true;","lastModifiedDate":"2025-08-25T14:09:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"    @Override","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"    public String toString() {","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"        return getStatusIcon() + \" \" + DESCRIPTION;","lastModifiedDate":"2025-09-02T14:21:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-08-23T15:17:58","isFullCredit":false}],"authorContributionMap":{"tze088":61}},{"path":"src/main/java/bongo/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.Bongo;","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import java.io.Serializable;","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"/**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":" * TaskList manages a collection of Task objects.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":" */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"    private final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"     * Returns whether the task list is empty.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"        return TASKS.isEmpty();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"     * Returns the number of tasks in this list.","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"     * @return the number of tasks in this list","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"    public int size() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"        return TASKS.size();","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"    public void add(Task task) {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"        TASKS.add(task);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"     * Retrieves a task from the task list by index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the index is invalid.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"    public Task get(int index) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"        validateIndex(index);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"        return TASKS.get(index);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"     * Retrieves a task from the task list by string input, which is parsed to an index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"     * @param input The string input representing the task index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the input is not a valid index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"    public Task get(String input) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"        return get(parseIndex(input));","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tze088"},"content":"     * Removes a task from the task list by index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tze088"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tze088"},"content":"     * @return The removed task.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the index is invalid.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tze088"},"content":"    public Task remove(int index) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tze088"},"content":"        validateIndex(index);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tze088"},"content":"        return TASKS.remove(index);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tze088"},"content":"     * Removes a task from the task list by string input, which is parsed to an index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tze088"},"content":"     * @param input The string input representing the task index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tze088"},"content":"     * @return The removed task.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tze088"},"content":"     * @throws Bongo.BongoException If the input is not a valid index.","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-02T15:59:37","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tze088"},"content":"    public Task remove(String input) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tze088"},"content":"        return remove(parseIndex(input));","lastModifiedDate":"2025-09-02T14:15:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tze088"},"content":"    /**","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tze088"},"content":"     * Finds tasks containing a given substring, returning a String representation of","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tze088"},"content":"     * the list of found tasks.","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tze088"},"content":"     *","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tze088"},"content":"     * @param key The substring to search for.","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tze088"},"content":"     * @return A String","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tze088"},"content":"     */","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tze088"},"content":"    public String find(String key) {","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tze088"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tze088"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tze088"},"content":"        for (Task task : TASKS) {","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tze088"},"content":"            if (task.getDescription().contains(key)) {","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tze088"},"content":"                sb.append(i).append(\". \").append(task).append(\u0027\\n\u0027);","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tze088"},"content":"            }","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tze088"},"content":"            i++;","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tze088"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-04T17:10:36","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tze088"},"content":"    private int parseIndex(String input) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tze088"},"content":"        try {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tze088"},"content":"            return Integer.parseInt(input) - 1;","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tze088"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tze088"},"content":"            throw new Bongo.BongoException(\"\\\"\" + input + \"\\\" Isn\u0027t even a number!\");","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tze088"},"content":"    private void validateIndex(int index) throws Bongo.BongoException {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tze088"},"content":"        if (index \u003c 0 || index \u003e\u003d TASKS.size()) {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tze088"},"content":"            throw new Bongo.BongoException(\"Can\u0027t find that one...\");","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tze088"},"content":"    @Override","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tze088"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tze088"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tze088"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tze088"},"content":"        for (Task task : TASKS) {","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tze088"},"content":"            sb.append(i++).append(\". \").append(task).append(\u0027\\n\u0027);","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tze088"},"content":"        }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tze088"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-01T15:48:16","isFullCredit":false}],"authorContributionMap":{"tze088":129}},{"path":"src/test/java/bongo/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo;","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"class CommandTest {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"    void testFromInput_ValidCommandType() {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"        // Test for known command types","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"        Command command \u003d Command.fromInput(\"list\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.LIST, command.getType(), \"Command type should be LIST\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"todo Buy groceries\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.TODO, command.getType(), \"Command type should be TODO\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"deadline Submit report by tomorrow\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.DEADLINE, command.getType(), \"Command type should be DEADLINE\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"event Meeting with team\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.EVENT, command.getType(), \"Command type should be EVENT\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"mark 1\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.MARK, command.getType(), \"Command type should be MARK\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"unmark 2\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.UNMARK, command.getType(), \"Command type should be UNMARK\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"delete 3\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.DELETE, command.getType(), \"Command type should be DELETE\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"bye\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.BYE, command.getType(), \"Command type should be BYE\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"    void testFromInput_UnknownCommandType() {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"        // Test for an unknown command","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"        Command command \u003d Command.fromInput(\"hello\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.UNKNOWN, command.getType(), \"Command type should be UNKNOWN for an unknown command\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"    void testGetArgs_ValidArguments() throws Bongo.BongoException {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"        // Test for commands that have valid arguments","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"        Command command \u003d Command.fromInput(\"todo Buy groceries\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"        assertEquals(\"Buy groceries\", command.getArgs(), \"Command should return correct arguments\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"deadline Submit report by tomorrow\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"        assertEquals(\"Submit report by tomorrow\", command.getArgs(), \"Command should return correct arguments\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"event Meeting with team\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"        assertEquals(\"Meeting with team\", command.getArgs(), \"Command should return correct arguments\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"    void testGetArgs_MissingArguments() {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"        // Test for commands missing arguments (empty command string)","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"        Command command \u003d Command.fromInput(\"todo\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, command::getArgs, \"Should throw BongoException when arguments are missing\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"deadline\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, command::getArgs, \"Should throw BongoException when arguments are missing\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tze088"},"content":"        command \u003d Command.fromInput(\"event\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, command::getArgs, \"Should throw BongoException when arguments are missing\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tze088"},"content":"    void testFromInput_EmptyInput() {","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tze088"},"content":"        // Test for empty input","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tze088"},"content":"        Command command \u003d Command.fromInput(\"\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tze088"},"content":"        assertEquals(Command.CommandType.UNKNOWN, command.getType(), \"Command type should be UNKNOWN for empty input\");","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-05T13:32:49","isFullCredit":false}],"authorContributionMap":{"tze088":77}},{"path":"src/test/java/bongo/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"package bongo.task;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"import bongo.Bongo;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"class TaskListTest {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"    private TaskList taskList;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"    private Task task1;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"    private Task task2;","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"    void setUp() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"        task1 \u003d new Task(\"Test Task 1\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"        task2 \u003d new Task(\"Test Task 2\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"    void testIsEmpty_WhenListIsEmpty() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"        assertTrue(taskList.isEmpty(), \"Task list should be empty initially\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tze088"},"content":"    void testIsEmpty_WhenListHasTasks() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tze088"},"content":"        assertFalse(taskList.isEmpty(), \"Task list should not be empty after adding a task\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tze088"},"content":"    void testAdd_Task() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tze088"},"content":"        assertEquals(1, taskList.size(), \"Task list should contain 1 task after adding one task\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tze088"},"content":"    void testGet_TaskByIndex() throws Bongo.BongoException {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tze088"},"content":"        Task retrievedTask \u003d taskList.get(0);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tze088"},"content":"        assertEquals(task1, retrievedTask, \"Task should be retrieved by index\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tze088"},"content":"    void testGet_TaskByIndex_Invalid() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, () -\u003e taskList.get(1), \"Should throw exception for invalid index\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tze088"},"content":"    void testGet_TaskByStringInput() throws Bongo.BongoException {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tze088"},"content":"        Task retrievedTask \u003d taskList.get(\"1\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tze088"},"content":"        assertEquals(task1, retrievedTask, \"Task should be retrieved by string input\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tze088"},"content":"    void testGet_TaskByStringInput_Invalid() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, () -\u003e taskList.get(\"abc\"), \"Should throw exception for invalid string input\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tze088"},"content":"    void testRemove_TaskByIndex() throws Bongo.BongoException {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tze088"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tze088"},"content":"        assertEquals(task1, removedTask, \"Removed task should match the task that was added\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tze088"},"content":"        assertTrue(taskList.isEmpty(), \"Task list should be empty after removing the task\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tze088"},"content":"    void testRemove_TaskByIndex_Invalid() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, () -\u003e taskList.remove(1), \"Should throw exception for invalid index\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tze088"},"content":"    void testRemove_TaskByStringInput() throws Bongo.BongoException {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tze088"},"content":"        Task removedTask \u003d taskList.remove(\"1\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tze088"},"content":"        assertEquals(task1, removedTask, \"Removed task should match the task that was added\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tze088"},"content":"        assertTrue(taskList.isEmpty(), \"Task list should be empty after removing the task\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tze088"},"content":"    void testRemove_TaskByStringInput_Invalid() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tze088"},"content":"        assertThrows(Bongo.BongoException.class, () -\u003e taskList.remove(\"abc\"), \"Should throw exception for invalid string input\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tze088"},"content":"    @Test","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tze088"},"content":"    void testToString() {","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tze088"},"content":"        taskList.add(task1);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tze088"},"content":"        taskList.add(task2);","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tze088"},"content":"        String expected \u003d \"1. [ ] Test Task 1\\n2. [ ] Test Task 2\";","lastModifiedDate":"2025-09-05T13:34:53","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tze088"},"content":"        assertEquals(expected, taskList.toString(), \"toString should return the correct string representation of the task list\");","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tze088"},"content":"    }","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tze088"},"content":"}","lastModifiedDate":"2025-09-05T13:29:31","isFullCredit":false}],"authorContributionMap":{"tze088":103}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tze088"},"content":"list","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tze088"},"content":"todo","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"todo Buy groceries","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"deadline","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"deadline Submit report /by","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tze088"},"content":"deadline Submit report /by date","lastModifiedDate":"2025-08-29T02:54:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tze088"},"content":"deadline Submit report /by 01/09/2025","lastModifiedDate":"2025-08-29T02:54:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tze088"},"content":"event","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tze088"},"content":"event Team meeting /from","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tze088"},"content":"event Team meeting /from 01/09/2025 /to","lastModifiedDate":"2025-08-29T02:54:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tze088"},"content":"event Team meeting /from date /to date","lastModifiedDate":"2025-08-29T02:54:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"event Team meeting /from 01/09/2025 /to 10/9/2025","lastModifiedDate":"2025-08-29T02:54:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"list","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"mark","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tze088"},"content":"mark 2","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"mark 2","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tze088"},"content":"unmark","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tze088"},"content":"unmark 2","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tze088"},"content":"unmark 2","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tze088"},"content":"mark 10","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tze088"},"content":"unmark abc","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tze088"},"content":"delete","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tze088"},"content":"delete 3","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"delete 5","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tze088"},"content":"delete 1","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tze088"},"content":"list","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tze088"},"content":"unknowncommand","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tze088"},"content":"bye","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false}],"authorContributionMap":{"tze088":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tze088"},"content":"REM set code page to display UTF-8","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tze088"},"content":"chcp 65001 \u003e nul","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tze088"},"content":"REM delete saved task list if it exists","lastModifiedDate":"2025-08-29T02:48:50","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tze088"},"content":"if exist tasks.bongo del tasks.bongo","lastModifiedDate":"2025-08-29T02:48:50","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tze088"},"content":"","lastModifiedDate":"2025-08-29T02:48:50","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tze088"},"content":"javac -encoding UTF8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-08-26T16:45:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tze088"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin bongo.Bongo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-02T14:26:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"tze088":8,"-":19}}]
