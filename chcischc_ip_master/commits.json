{"authorDailyContributionsMap":{"chcischc":[{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"2c6ffebbd63ef837263f4f293c168d21120bd469","isMergeCommit":false,"messageTitle":"Implement level-0, greet and exit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}},{"hash":"7e61a947f5f590dc239ec0f3a9e32f9f6135e81d","isMergeCommit":false,"messageTitle":"Implement level-0, greet and exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":7}}},{"hash":"a189a8ba0cda615c212b4bbe5005bffef1290fbf","isMergeCommit":false,"messageTitle":"Implement level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":3}}},{"hash":"d43bbd99aa9f4f9a7275bcc03ebc258879f862e1","isMergeCommit":false,"messageTitle":"Implement level-2","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"28695e0e858e6ab4290b0ed4997fc309f9a41ffc","isMergeCommit":false,"messageTitle":"Implement level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":4}}},{"hash":"29e9dd89d6260c1e97eef8e5159485beb2d86ec2","isMergeCommit":false,"messageTitle":"Implement level-4","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":5}}},{"hash":"9f23848ea075fc32c444384f8d576136d02e6fb3","isMergeCommit":false,"messageTitle":"Implement TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"8530c6558620aa99045a58bbbc48047b077c9514","isMergeCommit":false,"messageTitle":"Implement level-5","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":25}}},{"hash":"edbb8dbd8f5c4b1ada84110e441d0650b21a98c7","isMergeCommit":false,"messageTitle":"Implement level-6","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"672a941d1a3893cb8c693bacc86892f46253e87b","isMergeCommit":false,"messageTitle":"Refactor to use Enums","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":150,"deletions":88}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"55c314df67ad650400f80b4fde8d43f8716bb12f","isMergeCommit":false,"messageTitle":"Add toFileString method for Task and subclasses","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":20,"deletions":0}}},{"hash":"31161a02c0d2538975cc404f5e17559c7c8eac1b","isMergeCommit":false,"messageTitle":"Implement save() and load() in Storage class","messageBody":"- Add save() to write tasks to ./Data/taskStorage.txt\n- Add load() to rebuild task list from file at startup\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":0}}}]},{"date":"2025-08-28T00:00:00","commitResults":[{"hash":"8e4420746cce791f1b7a36446248be35b0323fc3","isMergeCommit":false,"messageTitle":"Add method description for load() and save() in Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"3bd73032a4fcaf34454cf63ec85016171b14211c","isMergeCommit":false,"messageTitle":"Implement disk load and save logic in Capybara.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"040eefb5bd7adde1587c31e8c61f42bf0954b286","isMergeCommit":true,"messageTitle":"Merge Level-7 Save feature","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"a35d33c6b66b8c44d478ab681c56da025442d57a","isMergeCommit":false,"messageTitle":"Replace String time with java.time","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":18}}},{"hash":"47d0a1b086e9554ca66a9c3fa96f96a37e9c84e0","isMergeCommit":false,"messageTitle":"Refactor Capybara.java to deal with java.time","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":101,"deletions":7}}},{"hash":"cb0e5faedbe8e3e3dc025eb31697c950e8e8c605","isMergeCommit":false,"messageTitle":"Improve code format for Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"7e726b2ac0223dc5fce8ee2a882958f84e6a77c3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027  the commit.","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-30T00:00:00","commitResults":[{"hash":"7cda0112d09f7fa45c0193df23e1731071c45038","isMergeCommit":false,"messageTitle":"Implement showWelcome and showGoodBye in Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":18}}},{"hash":"edf812bbee98e47ece3d508f940d65395e2514a2","isMergeCommit":false,"messageTitle":"Implement Ui features","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}},{"hash":"41c8dce884308fc462b746bd8fef1682013455b5","isMergeCommit":false,"messageTitle":"Refactor to include more OOPs","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":484,"deletions":269}}},{"hash":"12091f3e51dc391ee1092f69d9b5ef6ee1cd944d","isMergeCommit":true,"messageTitle":"Merge branch_Oop_Packages","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}}]},{"date":"2025-08-31T00:00:00","commitResults":[{"hash":"4a5f4c8f5b562fd11a2222fa29515375a90f4a04","isMergeCommit":false,"messageTitle":"Refactor into packages capybara and command","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":7},"java":{"insertions":126,"deletions":91}}},{"hash":"67fbb72681e4f7d31a7c3f6dff1301bd458a5a04","isMergeCommit":true,"messageTitle":"Merge packages","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"7f4b735cce84f4a8bb4f4b801c30a9b218362b05","isMergeCommit":false,"messageTitle":"Stop tracking data/taskStorage.txt","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"2826100a91fc17298efa2ee63bcc0434d4d900c6","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"b807bd263216c7b1b07edfca735ef256b1b8fcfb","isMergeCommit":false,"messageTitle":"Implement Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"813f9a9f6aebd28039e328ab7d3ad894f8927fbd","isMergeCommit":false,"messageTitle":"Add ParserTest and TaskListTest","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":1}}},{"hash":"0e4fba7d8eaffb8d3a770f42988f8a65ac396e3a","isMergeCommit":false,"messageTitle":"Add four JUnit test files","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":187,"deletions":0}}},{"hash":"b82447031073bf4ea727fe4c98474bf79dea5743","isMergeCommit":false,"messageTitle":"Add Capybara.jar file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"3d28db4631394ce13b13fa44bc2184502000ab23","isMergeCommit":false,"messageTitle":"Delete CONTRIBUTORS.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":9}}},{"hash":"373274666b0601f9cfdf5c84964658c57b899190","isMergeCommit":false,"messageTitle":"Add header comments for Capybara.java, TaskList.java, Parser.java and Ui.java","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":14}}}]},{"date":"2025-09-02T00:00:00","commitResults":[{"hash":"b6f528784695407bb4c314988b1e8ed9bc0669da","isMergeCommit":false,"messageTitle":"Adhere to coding style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"087bcf2c98d3a62f19d0ef826cd8a4b651f5cd93","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027 Merge with branch-A-CodingStandard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"46b757f4737b57e481c1f3c5da7dba0b2a6f63b4","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"351a7c1923a30e5053a65868d8014c2330942dbd","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027 Merge with branch-Level-9","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-03T00:00:00","commitResults":[{"hash":"685330d51b2f23aea662403565c6aaad5a1f90d3","isMergeCommit":false,"messageTitle":"Docs: add Javadoc to TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"156ed0967a9e316340b704132c2da9053be0daca","isMergeCommit":false,"messageTitle":"Docs: add Javadoc for FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":0}}},{"hash":"91d33a870cf06c9cc7d7212ba4c35990d92f2bae","isMergeCommit":false,"messageTitle":"Docs: add Javadoc for ListCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":2}}},{"hash":"f1ceb2ad8302bd914e666368f552863e2b1e2bda","isMergeCommit":false,"messageTitle":"Docs: add Javadoc for DeleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"c9a314dd4c7cb8967a5746519cfd409d442f64e2","isMergeCommit":false,"messageTitle":"Docs: add Javadoc for Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":1}}}]},{"date":"2025-09-10T00:00:00","commitResults":[{"hash":"6f680410e578b812c6bbf0bbe0bc767eb6d36730","isMergeCommit":false,"messageTitle":"Implement Level-10: GUI with JavaFX","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":1},"fxml":{"insertions":37,"deletions":0},"java":{"insertions":249,"deletions":10}}}]},{"date":"2025-09-16T00:00:00","commitResults":[{"hash":"b740d729bc91498a88d04869bb683b9f64196a47","isMergeCommit":false,"messageTitle":"Parser: assert zero-based index is non-negative","messageBody":"The parseOneBasedIndex() method converts a user-supplied task number\ninto a zero-based index. The code implicitly assumes the resulting\nindex is always non-negative after validation.\n\nThis assumption is not documented, and if it were ever violated due\nto future changes, the error would surface only later when accessing\nthe task list.\n\nLet\u0027s add an assertion to check that the computed zero-based index\nis non-negative before returning it. This documents the invariant and\nensures such violations are caught early during development.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"22e2f83ffe9dd5ac1284342feff467e7691991a4","isMergeCommit":true,"messageTitle":"Merge pull request #2 from chcischc/branch-A-Assertions","messageBody":"Parser: assert zero-based index is non-negative","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"6164dc49239ee4df339696b7003f565a7cc05fdf","isMergeCommit":false,"messageTitle":"Parser: replace if-else chain with switch statement","messageBody":"The parse() method currently uses a long if-else chain to dispatch\ncommands based on the command word. While functionally correct,\nlong if-else chains reduce readability and make it harder to see the\nfull set of supported commands at a glance.\n\nUsing a switch statement expresses the intent of dispatching on a\nsingle variable more clearly, and avoids repetitive equality checks.\n\nLet\u0027s refactor the if-else chain into a switch statement. This makes\nthe parser easier to maintain and extend when adding new commands,\nwithout altering the behavior of existing commands.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":10}}},{"hash":"e125b3054c6d485357b7c175b976b3ca1a1ce767","isMergeCommit":false,"messageTitle":"Improve boolean variable naming in Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":15}}},{"hash":"cc74402e7b4adc2e572684e304a2edc2c8f1d4bb","isMergeCommit":false,"messageTitle":"Storage: refactor load() with helpers","messageBody":"The load() method in Storage is long and mixes file I/O, line parsing,\nand object construction. This reduces readability and makes future\nchanges risky.\n\nLong methods violate SLAP and make it harder to see the intent of each\nrecord type (T/D/E) at a glance.\n\nLet\u0027s refactor load() to delegate per-record handling to small helpers:\n* buildToDo(description, isDone)\n* parseDeadline(rawBy, description, isDone, DATE_FMT, DATETIME_FMT)\n* parseEvent(fromRaw, toRaw, description, isDone, DATE_FMT, DATETIME_FMT)\n\nAdditionally, use try-with-resources for the BufferedReader and simplify\nthe done-flag parsing.\n\nBehavior is unchanged: the same error messages are printed and the\nmethod still returns null early for malformed dates/times, matching the\noriginal semantics.\n","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":76}}},{"hash":"5e339e172917261139d65fb06122ec0ec2d7b98f","isMergeCommit":true,"messageTitle":"Merge pull request #3 from chcischc/branch-A-CodeQuality","messageBody":"Branch A Code Quality","fileTypesAndContributionMap":{}},{"hash":"11622eba6e6e06bb2691af90a515095382075fae","isMergeCommit":false,"messageTitle":"Storage: refactor load() with helpers","messageBody":"The load() method in Storage is long and mixes file I/O, line parsing,\nand object construction. This reduces readability and makes future\nchanges risky.\n\nLong methods violate SLAP and make it harder to see the intent of each\nrecord type (T/D/E) at a glance.\n\nLet\u0027s refactor load() to delegate per-record handling to small helpers:\n* buildToDo(description, isDone)\n* parseDeadline(rawBy, description, isDone, DATE_FMT, DATETIME_FMT)\n* parseEvent(fromRaw, toRaw, description, isDone, DATE_FMT, DATETIME_FMT)\n\nAdditionally, use try-with-resources for the BufferedReader and simplify\nthe done-flag parsing.\n\nBehavior is unchanged: the same error messages are printed and the\nmethod still returns null early for malformed dates/times, matching the\noriginal semantics.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"ffd1c53cfd9f60e800ddc942e391cb4640c53290","isMergeCommit":false,"messageTitle":"Implement alias command system for frienlier syntax","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":1}}},{"hash":"803bca480f7935abe08140edb0d322cbaf0c7bbf","isMergeCommit":true,"messageTitle":"Merge branch-C-FriendlierSyntax into master","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-19T00:00:00","commitResults":[{"hash":"dc3e88102b7a4a3f6126707a89fe61aa621169e8","isMergeCommit":false,"messageTitle":"Storage: Shorten load() with helper extraction","messageBody":"The load() method is long and mixes file I/O, record parsing, and task\nconstruction. This hurts readability and makes small changes risky.\n\nLong methods violate SLAP and increase the cognitive load required to\nunderstand control flow.\n\nLet\u0027s extract helpers to clarify intent and reduce method length:\n- initEmptyFile(...) handles first-run file creation\n- processRecord(...) parses a line and appends the Task\n- Reuse existing buildToDo/parseDeadline/parseEvent helpers\n- Use try-with-resources for the BufferedReader\n\nBehavior is preserved:\n- Same user-facing messages for bad dates (/from, /to, generic)\n- Same early-null return on malformed date/time\n- Empty lines skipped; unknown record types effectively ignored\n- Missing file creates parent dirs + empty file and returns an empty list\n- Done flag parsing unchanged (1 \u003d\u003e done)\n\n[AI-ASSISTED] Helper structure and wording suggested by ChatGPT; human\nreview verified identical behavior and style conformance.\n","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":63}}},{"hash":"552b1ba879052eb1bf07397d1e75d5b3c0da9943","isMergeCommit":true,"messageTitle":"Merge branch-A-AiAssisted into master","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}},{"hash":"8a7171f4ff5fb2184f9054d7ae8371d07c4138ab","isMergeCommit":false,"messageTitle":"Parser: Shorten parse() with helpers","messageBody":"The parse() method is long and intermixes tokenization, validation,\nand command dispatch, which hurts readability and makes changes risky.\n\nLong methods violate SLAP and increase cognitive load.\n\nLet\u0027s extract small helpers for each concern and add light assertions\nto document invariants, preserving behavior:\n- splitHeadArgs(...) for tokenization\n- argOrEmpty(...) for argument handling\n- dispatch(...) for command routing\n- same println + UnknownCommandException for unknown commands\n\n[AI-ASSISTED] Helper structure suggested by ChatGPT; human review\nverified identical behavior and style conformance.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":38}}},{"hash":"0bc91d5f8fc2398e6152ba38656f74020fa18cc0","isMergeCommit":true,"messageTitle":"Merge A-AiAssisted refactor for Parser into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6cefc7072d1869b8f5293c131e7c76bc7b2052d5","isMergeCommit":false,"messageTitle":"Add class header comments for Storage and Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":0}}},{"hash":"6421ef26803f2b8a2eb096883a0214149a53ff6b","isMergeCommit":false,"messageTitle":"Add header comments for all Exceptions and Deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":0}}},{"hash":"dbf0c64b746084b1ad88bd831043c46fb9475cf3","isMergeCommit":false,"messageTitle":"Add header comments for Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"2b8a1de8ec1c1436dbf74729df02908e62439696","isMergeCommit":false,"messageTitle":"Add header comments for Task and ToDo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":0}}},{"hash":"b3d500aede969553dd9d123ed189b2ee980ad2b6","isMergeCommit":false,"messageTitle":"Add header comments for BufferingUi","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":3}}},{"hash":"6aa3c1d74947518a654e70ed691543215ac65531","isMergeCommit":false,"messageTitle":"Add header comments for Capybara","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":4}}},{"hash":"6acd9912848201c71c3c002e7450fd02d0abc140","isMergeCommit":false,"messageTitle":"Add header comments for command package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":4}}},{"hash":"f3c868f513be8f3925793db16b3a288c61422ff9","isMergeCommit":false,"messageTitle":"Add assertion in Storage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"0468608946d4e1f80fffd58477b4916417ff8f87","isMergeCommit":false,"messageTitle":"docs: Add README user guide and Ui screenshot","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":163,"deletions":14}}},{"hash":"41fc6242f2e1a22c1101176216ad6a5424c90fe9","isMergeCommit":false,"messageTitle":"Improve welcome message in Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"8a6d62f4080437aad6ecbdf0581c6d9b43be54af","isMergeCommit":false,"messageTitle":"Update instructions in README user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"chcischc":{"java":2213,"md":155,"fxml":37,"sh":1,"bat":0,"gradle":17,"txt":6}},"authorContributionVariance":{"chcischc":41144.152},"authorDisplayNameMap":{"chcischc":"CS2103T-F15a-1 ZHAN..IANG"}}
