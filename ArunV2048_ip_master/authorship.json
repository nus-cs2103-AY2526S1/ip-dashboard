[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"# AI Assistance Notes","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"This iP used AI tools in the following ways:","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"- **JavaDoc \u0026 code quality**: Generated/edited JavaDoc comments and suggested small refactors","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"  (assertions, guard clauses) using ChatGPT.","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"- **Bug fixing**: Helped diagnose compile errors in some methods","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T05:28:37","isFullCredit":false}],"authorContributionMap":{"ArunV2048":9}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"# yuri.Yuri project template","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"1. After that, locate the `src/main/java/yuri.Yuri.java` file, right-click it, and choose `Run yuri.Yuri.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"ArunV2048":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2025-08-29T02:17:41","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"application {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"    mainClass.set(\"yuri.Launcher\")","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    // JavaFX 17.0.7 with OS-specific classifiers (from the SE-EDU tutorial)","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T02:17:41","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"shadowJar {","lastModifiedDate":"2025-08-29T02:17:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"    // nice, predictable name for your release upload","lastModifiedDate":"2025-08-29T02:17:41","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"    archiveFileName \u003d \u0027yuri.jar\u0027","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T02:17:41","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"checkstyle {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"    toolVersion \u003d \u002710.20.1\u0027","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"tasks.withType(Checkstyle).configureEach {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"    reports {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"        html.required \u003d true","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"        xml.required \u003d false","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"run {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":41,"-":15}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"E | 0 | book fair | 2019-12-10 | 2019-12-12","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"D | 0 | return book | 2025-12-01","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"T | 0 | have lunch","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"T | 0 | eat","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"T | 1 | bath","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"D | 0 | finish homework | 2025-09-11","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false}],"authorContributionMap":{"ArunV2048":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"# Yuri User Guide","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"![Product screenshot](Ui.png)","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"Yuri is a light weight tasks chatbot with a clean JavaFX UI. It supports **todos**, **deadlines**, and **events**, plus **list**, **find**, **mark/unmark**, and **delete**. Data is saved automatically to `data/duke.txt` (created on first run).","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"Adds a task with a due date (ISO format `yyyy-mm-dd`). The task appears in the list with a `[D]` tag and the date formatted (e.g., `Dec 2 2019`).","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"Example: `deadline return book /by 2019-12-02`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"Got it. I\u0027ve added this task:   ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"[D][ ] return book (by: Dec 2 2019)     ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"## Adding todos","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"Adds a task with only a description. The task appears with a `[T]` tag.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"Example: `todo read book`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"Got it. I\u0027ve added this task:   ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"[T][ ] read book        ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"Now you have 2 tasks in the list.   ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"## Adding events","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"Adds a task with a start and end date (ISO format). The task appears with an `[E]` tag and a `from ... to ...` range.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"Example: `event book fair /from 2019-12-10 /to 2019-12-12`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"Got it. I\u0027ve added this task:   ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"[E][ ] book fair (from: Dec 10 2019 to: Dec 12 2019)    ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"## Listing tasks","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"Shows all tasks in order, numbered from 1.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"Example: `list`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"Here are the tasks in your list:    ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"1.[E][ ] book fair (from: Dec 10 2019 to: Dec 12 2019)  ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"2.[T][ ] read book  ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"3.[D][ ] return book (by: Dec 2 2019)","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"## Marking tasks","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"Marks a task as done using its number from `list`.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"Example: `mark 2`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"Nice! I\u0027ve marked this task as done:    ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"[T][X] read book","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"## Unmarking tasks","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"Marks a task as not done.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"Example: `unmark 2`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"OK, I\u0027ve marked this task as not done yet:  ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"[T][ ] read book","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"## Deleting a task","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"Removes a task by its number.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"Example: `delete 3`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"Noted. I\u0027ve removed this task:  ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"[D][ ] return book (by: Dec 2 2019)     ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"## Finding tasks","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"Searches for tasks whose descriptions contain a keyword (case-insensitive).","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"Example: `find book`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"Here are the matching tasks in your list:   ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"1.[E][ ] book fair (from: Dec 10 2019 to: Dec 12 2019)  ","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"2.[T][ ] read book","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ArunV2048"},"content":"## Exiting the app","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ArunV2048"},"content":"Closes Yuri.","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ArunV2048"},"content":"Example: `bye`","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ArunV2048"},"content":"**Expected output**","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ArunV2048"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ArunV2048"},"content":"---","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ArunV2048"},"content":"## Running the app","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ArunV2048"},"content":"Requires Java 17 and the fat JAR (`yuri.jar`).","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ArunV2048"},"content":"Example:","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ArunV2048"},"content":"java -jar yuri.jar","lastModifiedDate":"2025-09-19T10:45:13","isFullCredit":false}],"authorContributionMap":{"ArunV2048":130,"-":15}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2025-08-29T00:20:10","isFullCredit":false}],"authorContributionMap":{"ArunV2048":1}},{"path":"src/main/java/yuri/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":" * Entry point that launches JavaFX without tripping up classloader/module issues.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"public class Launcher {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"     * @param args CLI args","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"        yuri.gui.Main.main(args);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":15}},{"path":"src/main/java/yuri/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":" * Utility methods for interpreting raw user input lines.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":" * Provides helpers to detect commands, slice arguments, and validate indices.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"public class Parser {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"     * Returns true if {@code line} starts with the whole word {@code word} (case-insensitive).","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"     * Accepts either an exact match or a leading word followed by a space.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"     * @param line full user input","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"     * @param word command word to match","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"     * @return true if the first word matches; false otherwise","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    public boolean startsWithWord(String line, String word) {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"        assert line !\u003d null \u0026\u0026 word !\u003d null : \"Null inputs to startsWithWord\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"        String lw \u003d line.toLowerCase();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"        String ww \u003d word.toLowerCase();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"        boolean result \u003d lw.equals(ww) || lw.startsWith(ww + \" \");","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"        assert (result || !lw.startsWith(word)) || lw.startsWith(ww) : \"Case-insensitive check should align\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"        return result;","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"     * Returns the substring of {@code line} after the head command word.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"     * Trims surrounding whitespace; returns empty string if nothing remains.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"     * @param line     full user input","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"     * @param headWord the leading command word","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"     * @return the argument substring after the command word (trimmed), or empty string","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"    public String sliceAfter(String line, String headWord) {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"        assert line !\u003d null \u0026\u0026 headWord !\u003d null : \"Null inputs to sliceAfter\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        String trimmed \u003d line.trim();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"        if (trimmed.length() \u003c\u003d headWord.length()) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"            return \"\";","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"        String out \u003d trimmed.substring(headWord.length()).trim();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        assert out !\u003d null : \"sliceAfter: result should not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"        return out;","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"     * Splits {@code s} once around the first occurrence of {@code token}.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"     * Returns a 2-element array {@code [left, right]} with {@code right} trimmed.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"     * @param s      the string to split","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"     * @param token  the delimiter token (case-insensitive, as implemented)","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"     * @param errMsg error message to use if the token is not found","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"     * @return two parts: left of the token, and right of the token (trimmed)","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"     * @throws yuri.Yuri.YuriException if the token cannot be found","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"    public String[] splitOnceOrThrow(String s, String token, String errMsg) throws Yuri.YuriException {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"        assert s !\u003d null \u0026\u0026 token !\u003d null \u0026\u0026 errMsg !\u003d null : \"Null inputs to splitOnceOrThrow\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"        int pos \u003d indexOfToken(s, token);","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"        if (pos \u003c 0) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"            throw new Yuri.YuriException(errMsg);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"        String left \u003d s.substring(0, pos);","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"        String right \u003d s.substring(pos + token.length()).trim();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"        assert left !\u003d null \u0026\u0026 right !\u003d null : \"Split parts should be non-null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"        return new String[]{left, right};","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"     * Finds {@code token} in {@code s} case-insensitively; tolerates a leading space before token.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"     * @param s     the string to search","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"     * @param token the token","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"     * @return index of match, or -1 if not found","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"    public int indexOfToken(String s, String token) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"        assert s !\u003d null \u0026\u0026 token !\u003d null : \"Null inputs to indexOfToken\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"        String low \u003d s.toLowerCase();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"        String t \u003d token.toLowerCase();","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"        int i \u003d low.indexOf(t);","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"        if (i \u003e\u003d 0) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"            assert s.regionMatches(true, i, token, 0, token.length()) : \"Case-insensitive match must align\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"            return i;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"        i \u003d low.indexOf(\" \" + t);","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"        if (i \u003e\u003d 0) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"            assert s.regionMatches(true, j, token, 0, token.length()) : \"Case-insensitive match must align (spaced)\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"            return j;","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"        return -1;","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"     * Parses and returns a 1-based index from a command of the form {@code \"\u003ccmd\u003e \u003cnumber\u003e\"}.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"     * Must have exactly one numeric argument.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"     * @param line the full command line","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"     * @param cmd  the command word (used only for error messages)","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"     * @return the parsed positive index (1-based)","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"     * @throws yuri.Yuri.YuriException if format is wrong or the number is not a positive integer","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"    public int parseIndexOrThrow(String line, String cmd) throws Yuri.YuriException {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"        assert line !\u003d null \u0026\u0026 cmd !\u003d null : \"Null inputs to parseIndexOrThrow\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"        String[] parts \u003d line.split(\"\\\\s+\");","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"            throw new Yuri.YuriException(\"Use: \u0027\" + cmd + \" \u003cnumber\u003e\u0027 with exactly one number.\");","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"        try {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"            int idx \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"            assert idx \u003e 0 : \"Parsed index must be positive\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"            if (idx \u003c\u003d 0) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"            return idx;","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"            throw new Yuri.YuriException(\"Index must be a positive number. Example: \u0027\" + cmd + \" 2\u0027.\");","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-28T20:43:54","isFullCredit":false}],"authorContributionMap":{"ArunV2048":121}},{"path":"src/main/java/yuri/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import java.io.File;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":" * Handles persistence of tasks to and from the save file on disk.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":" * The file format is the simple pipe-separated format produced by each task\u0027s {@code toSaveFormat()}.","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"public class Storage {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"    private final String filePath;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"     * Creates a {@code Storage} that reads/writes to the given path.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"     * @param filePath path of the save file, e.g. {@code data/duke.txt}","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"        assert filePath !\u003d null : \"Storage filePath must not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"     * Loads tasks from disk.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"     * \u003cp\u003eIf the file does not exist, it is created and an empty list is returned.\u003c/p\u003e","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"     * @return list of tasks loaded from disk (possibly empty)","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"     * @throws IOException if an I/O error occurs while creating/reading the file","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"    public ArrayList\u003cYuri.Task\u003e load() throws IOException {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        ArrayList\u003cYuri.Task\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"        assert file !\u003d null : \"File ref must not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"            File parent \u003d file.getParentFile();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"            if (parent !\u003d null) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"                parent.mkdirs();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"            boolean created \u003d file.createNewFile();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"            assert file.exists() || created : \"File should exist or be created\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"            return tasks;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"        try (Scanner sc \u003d new Scanner(file)) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"                assert line !\u003d null : \"Read line should not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"                Yuri.Task task \u003d parseTask(line);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"                // task may be null for malformed lines by design","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"                    tasks.add(task);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"                }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"        assert tasks !\u003d null : \"Loaded task list should not be null\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"        return tasks;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"     * Saves the given tasks to disk, overwriting any existing content.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"     * @param tasks tasks to persist","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"     * @throws IOException if an I/O error occurs while writing","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"    public void save(List\u003cYuri.Task\u003e tasks) throws IOException {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"        assert tasks !\u003d null : \"Tasks to save must not be null\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"            for (Yuri.Task task : tasks) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"                assert task !\u003d null : \"Individual task must not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"                String line \u003d task.toSaveFormat();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"                assert line !\u003d null : \"toSaveFormat must not return null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"                fw.write(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"    /* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"       Internal: parse a task line","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"       \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"    private Yuri.Task parseTask(String line) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"        assert line !\u003d null : \"parseTask input line must not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"        // Expected formats:","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"        // T | 0/1 | description","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"        // D | 0/1 | description | yyyy-MM-dd","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"        // E | 0/1 | description | yyyy-MM-dd | yyyy-MM-dd","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"        String[] p \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"        if (p.length \u003c 3) return null;","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"        String type \u003d p[0];","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"        assert type !\u003d null \u0026\u0026 !type.isEmpty() : \"Task type must be present\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"        boolean done \u003d \"1\".equals(p[1]);","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T15:15:26","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"        switch (type) {","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"            case \"T\":","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"                t \u003d new Yuri.Todo(p[2]);","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"                break;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"            case \"D\":","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"                assert p.length \u003e\u003d 4 : \"Deadline requires date part\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"                t \u003d new Yuri.Deadline(p[2], p[3]);","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"                break;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"            case \"E\":","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"                assert p.length \u003e\u003d 5 : \"Event requires start and end dates\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"                t \u003d new Yuri.Event(p[2], p[3], p[4]);","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"                break;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"            default:","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"                return null;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"        assert t !\u003d null : \"Constructed task should not be null\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"        if (done) t.mark();","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"        return t;","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-28T20:18:18","isFullCredit":false}],"authorContributionMap":{"ArunV2048":122}},{"path":"src/main/java/yuri/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import java.util.Collections;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":" * Holds and manages the list of tasks in memory.","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":" * Provides basic operations such as add, remove, mark, and unmark.","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"public class TaskList {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"    private final List\u003cYuri.Task\u003e tasks;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    public TaskList() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"     * Constructs a task list initialized with the given tasks.","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"    public TaskList(List\u003cYuri.Task\u003e initial) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"        assert initial !\u003d null : \"Initial task list must not be null\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(initial);","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"     * @param t task to add","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"    public void add(Yuri.Task t) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"     * Returns the task at the given zero-based index.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"     * @param idx0 zero-based index of the task","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"     * @return the task at {@code idx0}","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"     * @throws IndexOutOfBoundsException if {@code idx0} is out of range","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"    public Yuri.Task get(int idx0) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"        assert idx0 \u003e\u003d 0 \u0026\u0026 idx0 \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"        return tasks.get(idx0);","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"     * Removes and returns the task at the given zero-based index.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"     * @param idx0 zero-based index of the task to remove","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"     * @return the removed task","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"     * @throws IndexOutOfBoundsException if {@code idx0} is out of range","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"    public Yuri.Task remove(int idx0) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"        assert idx0 \u003e\u003d 0 \u0026\u0026 idx0 \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2025-09-12T04:15:33","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"        return tasks.remove(idx0);","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"     * Marks the task at the given zero-based index as done.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"     * @param idx0 zero-based index of the task to mark","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"     * @throws IndexOutOfBoundsException if {@code idx0} is out of range","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"    public void mark(int idx0) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"        tasks.get(idx0).mark();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"     * Marks the task at the given zero-based index as not done.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"     * @param idx0 zero-based index of the task to unmark","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"     * @throws IndexOutOfBoundsException if {@code idx0} is out of range","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"    public void unmark(int idx0) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"        tasks.get(idx0).unmark();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"     * Returns all tasks whose description contains the given keyword (case-insensitive).","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"     * @param keyword keyword to search for","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"     * @return list of matching tasks (possibly empty)","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"     * @throws IllegalArgumentException if keyword is null or blank","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"    public java.util.List\u003cYuri.Task\u003e find(String keyword) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"            throw new IllegalArgumentException(\"Keyword cannot be empty.\");","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"        String needle \u003d keyword.toLowerCase();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"        java.util.List\u003cYuri.Task\u003e results \u003d new java.util.ArrayList\u003c\u003e();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"        for (Yuri.Task t : tasks) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"            String desc \u003d t.getDescription();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"            if (desc !\u003d null \u0026\u0026 desc.toLowerCase().contains(needle)) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"                results.add(t);","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"        return results;","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"     * Returns the number of tasks currently in the list.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"     * @return task count","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"    public int size() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"        return tasks.size();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"     * Returns an unmodifiable view of the tasks.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"     * @return unmodifiable list view of tasks","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:17:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"    public List\u003cYuri.Task\u003e all() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false}],"authorContributionMap":{"ArunV2048":122}},{"path":"src/main/java/yuri/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import java.util.List;","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":" * Handles all user-facing output for the CLI: greeting, lists, confirmations, and errors.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":" * Centralizes formatting so core logic remains clean.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"public class Ui {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"    private static final String BOT_NAME \u003d \"yuri.Yuri\";","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"    private static final String HLINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"    private void line() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(HLINE);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"     * Prints tasks that matched a find query. Shows an empty state if none matched.","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"     * @param matches tasks that matched the query","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"    public void showFindResults(java.util.List\u003cYuri.Task\u003e matches) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"            System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"            line();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"            return;","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"        for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + matches.get(i));","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"    /** Prints the greeting header shown at program start. */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Hello! I\u0027m \" + BOT_NAME);","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" (Tip: type anything to add; \u0027list\u0027 to see; \u0027mark n\u0027/\u0027unmark n\u0027; \u0027bye\u0027 to exit.)\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"    /** Prints the farewell message and closing line. */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"    public void showFarewell() {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" That was fun—high five for productivity!\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"     * Prints a formatted error message in a consistent style.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"     * @param message error details to show","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"     * Prints a confirmation that a task was added, and shows the new list size.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"     * @param task    the task that was added","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"     * @param newSize resulting size of the task list","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"    public void showAdded(Yuri.Task task, int newSize) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"     * Prints a confirmation that a task was deleted, and shows the new list size.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"     * @param task    the task that was removed","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"     * @param newSize resulting size of the task list","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"    public void showDeleted(Yuri.Task task, int newSize) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"     * Prints a confirmation that a task was marked done.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"     * @param t the task that was marked","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"    public void showMark(Yuri.Task t) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\"   \" + t);","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"     * Prints a confirmation that a task was marked not done.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"     * @param t the task that was unmarked","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"    public void showUnmark(Yuri.Task t) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\"   \" + t);","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"     * Prints the current list of tasks with 1-based numbering.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"     * @param tasks list view of tasks to display","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ArunV2048"},"content":"    public void showList(List\u003cYuri.Task\u003e tasks) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ArunV2048"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ArunV2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ArunV2048"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ArunV2048"},"content":"        line();","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-28T19:32:15","isFullCredit":false}],"authorContributionMap":{"ArunV2048":130}},{"path":"src/main/java/yuri/Yuri.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import java.io.IOException;","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":" * Entry point and main control loop for the application.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":" * Wires together {@link Ui}, {@link Storage}, and {@link TaskList},","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":" * then processes user commands until exit.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"public class Yuri {","lastModifiedDate":"2025-08-22T03:08:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    private final Storage storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T06:08:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"    public String getGreeting() {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"        return \"Hello! I\u0027m Yuri\\nWhat can I do for you?\\n\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"                + \"(Tip: type \u0027help\u0027 to see all commands)\";","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"    /* Handles one user input and returns the response text for the GUI. */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"     * Produces a single reply for one line of user input (used by GUI).","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"     * Also persists changes where relevant.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"    //HELPERS","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"    private static final String HELP \u003d String.join(\"\\n\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"            \"Commands:\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"            \"  list\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"            \"  todo \u003cdesc\u003e\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"            \"  deadline \u003cdesc\u003e /by \u003cyyyy-mm-dd\u003e\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"            \"  event \u003cdesc\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"            \"  mark \u003cn\u003e     | unmark \u003cn\u003e | delete \u003cn\u003e\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"            \"  find \u003ckeyword\u003e\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"            \"  help\",","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"            \"  bye\"","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"    );","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"    private static final DateTimeFormatter DATE_FMT \u003d","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"        String line \u003d input \u003d\u003d null ? \"\" : input.trim();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"        if (line.isEmpty()) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"            return \"\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"        try {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"            String cmd \u003d line.split(\"\\\\s+\", 2)[0].toLowerCase();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"            switch (cmd) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"                case \"list\":     return handleList(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"                case \"bye\":      return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"                case \"help\":     return HELP;","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"                case \"find\":     return handleFind(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"                case \"mark\":     return handleMark(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"                case \"unmark\":   return handleUnmark(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"                case \"delete\":   return handleDelete(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"                case \"todo\":     return handleTodo(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"                case \"deadline\": return handleDeadline(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"                case \"event\":    return handleEvent(line);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"                default:         return \"I don’t recognize that command.\\n\" + HELP;","lastModifiedDate":"2025-09-12T15:55:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"        } catch (YuriException e) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"            // Convert domain errors into a user-friendly message","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"            return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"    private String handleList(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"        if (line.strip().contains(\" \")) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"            throw new YuriException(\"Just type \u0027list\u0027 with no extra words.\");","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"        return renderList();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ArunV2048"},"content":"    private String handleFind(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ArunV2048"},"content":"        String keyword \u003d parser.sliceAfter(line, \"find\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ArunV2048"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ArunV2048"},"content":"            throw new YuriException(\"Please provide a keyword. Example: find book\");","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ArunV2048"},"content":"        return renderFind(keyword);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ArunV2048"},"content":"    private String handleMark(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ArunV2048"},"content":"        int idx \u003d parser.parseIndexOrThrow(line, \"mark\") - 1;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ArunV2048"},"content":"        requireValidIndex(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ArunV2048"},"content":"        tasks.mark(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ArunV2048"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n   \" + tasks.get(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ArunV2048"},"content":"    private String handleUnmark(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ArunV2048"},"content":"        int idx \u003d parser.parseIndexOrThrow(line, \"unmark\") - 1;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ArunV2048"},"content":"        requireValidIndex(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ArunV2048"},"content":"        tasks.unmark(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ArunV2048"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n   \" + tasks.get(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ArunV2048"},"content":"    private String handleDelete(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ArunV2048"},"content":"        int idx \u003d parser.parseIndexOrThrow(line, \"delete\") - 1;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ArunV2048"},"content":"        requireValidIndex(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ArunV2048"},"content":"        Task removed \u003d tasks.remove(idx);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ArunV2048"},"content":"        return \"Noted. I\u0027ve removed this task:\\n   \" + removed","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ArunV2048"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ArunV2048"},"content":"    private String handleTodo(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ArunV2048"},"content":"        String desc \u003d parser.sliceAfter(line, \"todo\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ArunV2048"},"content":"        if (desc.isBlank()) throw new YuriException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ArunV2048"},"content":"        Task t \u003d new Todo(desc);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ArunV2048"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" + t","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ArunV2048"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ArunV2048"},"content":"    private String handleDeadline(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ArunV2048"},"content":"        String payload \u003d parser.sliceAfter(line, \"deadline\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ArunV2048"},"content":"        String[] parts \u003d parser.splitOnceOrThrow(payload, \"/by\",","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ArunV2048"},"content":"                \"Deadline needs \u0027/by \u003cwhen\u003e\u0027. Example: deadline return book /by 2019-12-02\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ArunV2048"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ArunV2048"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ArunV2048"},"content":"        if (desc.isEmpty()) throw new YuriException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ArunV2048"},"content":"        if (by.isEmpty()) throw new YuriException(\"Please specify when the deadline is due after \u0027/by\u0027.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ArunV2048"},"content":"        Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ArunV2048"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" + t","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ArunV2048"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ArunV2048"},"content":"    private String handleEvent(String line) throws YuriException {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ArunV2048"},"content":"        String payload \u003d parser.sliceAfter(line, \"event\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ArunV2048"},"content":"        String[] pFrom \u003d parser.splitOnceOrThrow(payload, \"/from\",","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ArunV2048"},"content":"                \"Event needs \u0027/from \u003cstart\u003e\u0027. Example: event meeting /from 2019-12-10 /to 2019-12-12\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ArunV2048"},"content":"        String desc \u003d pFrom[0].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ArunV2048"},"content":"        String rest \u003d pFrom[1].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ArunV2048"},"content":"        String[] pTo \u003d parser.splitOnceOrThrow(rest, \"/to\",","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ArunV2048"},"content":"                \"Event needs \u0027/to \u003cend\u003e\u0027. Example: event meeting /from 2019-12-10 /to 2019-12-12\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ArunV2048"},"content":"        String from \u003d pTo[0].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ArunV2048"},"content":"        String to \u003d pTo[1].trim();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ArunV2048"},"content":"        if (desc.isEmpty()) throw new YuriException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ArunV2048"},"content":"        if (from.isEmpty()) throw new YuriException(\"Please specify the event start after \u0027/from\u0027.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ArunV2048"},"content":"        if (to.isEmpty()) throw new YuriException(\"Please specify the event end after \u0027/to\u0027.\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ArunV2048"},"content":"        Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ArunV2048"},"content":"        persist();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ArunV2048"},"content":"        return \"Got it. I\u0027ve added this task:\\n   \" + t","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ArunV2048"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ArunV2048"},"content":"    /** Builds the numbered task list output (used by \u0027list\u0027). */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ArunV2048"},"content":"    private String renderList() {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ArunV2048"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ArunV2048"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ArunV2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ArunV2048"},"content":"            sb.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ArunV2048"},"content":"        return sb.toString().stripTrailing();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ArunV2048"},"content":"    /** Builds the \u0027find\u0027 output. */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ArunV2048"},"content":"    private String renderFind(String keyword) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ArunV2048"},"content":"        String kw \u003d keyword.toLowerCase();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ArunV2048"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ArunV2048"},"content":"        int shown \u003d 0;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ArunV2048"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ArunV2048"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ArunV2048"},"content":"            String d \u003d t.getDescription();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ArunV2048"},"content":"            if (d !\u003d null \u0026\u0026 d.toLowerCase().contains(kw)) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ArunV2048"},"content":"                sb.append(\" \").append(i + 1).append(\".\").append(t).append(\"\\n\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ArunV2048"},"content":"                shown++;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ArunV2048"},"content":"        return shown \u003d\u003d 0 ? \"No tasks match: \" + keyword : sb.toString().stripTrailing();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ArunV2048"},"content":"    /** Constructs the app, loading tasks from storage if available. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ArunV2048"},"content":"    public Yuri() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ArunV2048"},"content":"        TaskList loaded;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ArunV2048"},"content":"        try {","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ArunV2048"},"content":"            loaded \u003d new TaskList(storage.load());","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ArunV2048"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ArunV2048"},"content":"            ui.showError(\"Error loading save file: \" + e.getMessage());","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ArunV2048"},"content":"            loaded \u003d new TaskList();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ArunV2048"},"content":"        this.tasks \u003d loaded;","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ArunV2048"},"content":"     * Program entry point.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ArunV2048"},"content":"     * @param args command-line arguments (unused)","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ArunV2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ArunV2048"},"content":"        new Yuri().run();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ArunV2048"},"content":"     * Runs the interactive command loop: reads a line, parses it, mutates state,","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ArunV2048"},"content":"     * persists when necessary, and renders output via {@link Ui}. Exits on {@code bye} or EOF.","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ArunV2048"},"content":"    public void run() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ArunV2048"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ArunV2048"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ArunV2048"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ArunV2048"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ArunV2048"},"content":"                if (input \u003d\u003d null) break;","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ArunV2048"},"content":"                String reply \u003d getResponse(input);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ArunV2048"},"content":"                // Reuse existing Ui formatting to print reply lines","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ArunV2048"},"content":"                // (or simply System.out.println with your preferred wrapper)","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ArunV2048"},"content":"                System.out.println(reply);","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ArunV2048"},"content":"                if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ArunV2048"},"content":"                    ui.showFarewell();","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ArunV2048"},"content":"                    break;","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ArunV2048"},"content":"                }","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ArunV2048"},"content":"            }","lastModifiedDate":"2025-08-22T04:41:20","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T03:08:07","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ArunV2048"},"content":"     * Ensures the given zero-based index refers to an existing task.","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ArunV2048"},"content":"     * @param i zero-based index to check","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ArunV2048"},"content":"     * @throws YuriException if the index is invalid","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-08-29T03:28:14","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ArunV2048"},"content":"    private void requireValidIndex(int i) throws YuriException {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ArunV2048"},"content":"        assert i \u003e\u003d -1 : \"index sanity check (unexpected negative bug)\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ArunV2048"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ArunV2048"},"content":"            throw new YuriException(\"That task number doesn\u0027t exist yet. Try \u0027list\u0027 to see valid numbers.\");","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ArunV2048"},"content":"    /** Persists the current task list to storage, reporting any I/O errors via {@link Ui}. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ArunV2048"},"content":"    private void persist() {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ArunV2048"},"content":"        assert tasks !\u003d null : \"tasks must be initialized before persisting\";","lastModifiedDate":"2025-09-12T06:28:44","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ArunV2048"},"content":"        try {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ArunV2048"},"content":"            storage.save(tasks.all());","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ArunV2048"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ArunV2048"},"content":"            ui.showError(\"Failed to save: \" + e.getMessage());","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ArunV2048"},"content":"    /* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ArunV2048"},"content":"       Task model + subclasses","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ArunV2048"},"content":"       \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T21:37:31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ArunV2048"},"content":"    /** Represents a generic task with a description and done state. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ArunV2048"},"content":"    static class Task {","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ArunV2048"},"content":"        protected final String description;","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ArunV2048"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"ArunV2048"},"content":"        Task(String description) {","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"ArunV2048"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"ArunV2048"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"ArunV2048"},"content":"        void mark() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"ArunV2048"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"ArunV2048"},"content":"        void unmark() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"ArunV2048"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"ArunV2048"},"content":"        String getStatusIcon() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"ArunV2048"},"content":"            return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"ArunV2048"},"content":"        /** Returns the description of this task. */","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"ArunV2048"},"content":"        public String getDescription() {","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"ArunV2048"},"content":"            return description;","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"ArunV2048"},"content":"        public String toString() {","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"ArunV2048"},"content":"            return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"ArunV2048"},"content":"        /** Returns the save format, defaulting to a Todo-like encoding. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"ArunV2048"},"content":"        public String toSaveFormat() {","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"ArunV2048"},"content":"            return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T05:53:06","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"ArunV2048"},"content":"    /** A Todo task with only a description. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"ArunV2048"},"content":"    static class Todo extends Task {","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"ArunV2048"},"content":"        Todo(String description) {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"ArunV2048"},"content":"            super(description);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"ArunV2048"},"content":"        public String toString() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"ArunV2048"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"ArunV2048"},"content":"        public String toSaveFormat() {","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"ArunV2048"},"content":"            return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"ArunV2048"},"content":"    /** A Deadline task with a due date (yyyy-MM-dd). */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"ArunV2048"},"content":"    static class Deadline extends Task {","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"ArunV2048"},"content":"        private final LocalDate by;","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"ArunV2048"},"content":"        Deadline(String description, String by) {","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"ArunV2048"},"content":"            super(description);","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"ArunV2048"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"ArunV2048"},"content":"        public String toString() {","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"ArunV2048"},"content":"            return \"[D]\" + super.toString()","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"ArunV2048"},"content":"                    + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"ArunV2048"},"content":"        public String toSaveFormat() {","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"ArunV2048"},"content":"            return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"ArunV2048"},"content":"    /** An Event task with start and end dates (yyyy-MM-dd). */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"ArunV2048"},"content":"    static class Event extends Task {","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"ArunV2048"},"content":"        private final LocalDate from;","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"ArunV2048"},"content":"        private final LocalDate to;","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"ArunV2048"},"content":"        Event(String description, String from, String to) {","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"ArunV2048"},"content":"            super(description);","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"ArunV2048"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"ArunV2048"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"ArunV2048"},"content":"        public String toString() {","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"ArunV2048"},"content":"            return \"[E]\" + super.toString()","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"ArunV2048"},"content":"                    + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"ArunV2048"},"content":"                    + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"ArunV2048"},"content":"        @Override","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"ArunV2048"},"content":"        public String toSaveFormat() {","lastModifiedDate":"2025-08-28T10:56:06","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"ArunV2048"},"content":"            return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T06:32:57","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"ArunV2048"},"content":"    /** Dedicated checked exception for user-facing errors. */","lastModifiedDate":"2025-08-29T05:11:02","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"ArunV2048"},"content":"    static class YuriException extends Exception {","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"ArunV2048"},"content":"        YuriException(String message) {","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"ArunV2048"},"content":"            super(message);","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-22T11:50:29","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-28T03:59:09","isFullCredit":false}],"authorContributionMap":{"ArunV2048":367}},{"path":"src/main/java/yuri/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri.gui;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import java.io.InputStream;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":" * Dialog bubble with a circular avatar image and a text label.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":" * Left-aligned for Yuri, right-aligned for the user.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"    private static final double AVATAR_SIZE \u003d 36.0;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"    private static final Image USER_AVATAR \u003d loadImage(\"/view/user.png\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    private static final Image YURI_AVATAR \u003d loadImage(\"/view/yuri.png\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    private static Image loadImage(String path) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        InputStream is \u003d DialogBox.class.getResourceAsStream(path);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"        if (is \u003d\u003d null) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"            // Fail fast with a clear message so asset issues are obvious during dev","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"            throw new IllegalStateException(\"Missing required image on classpath: \" + path);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"        return new Image(is);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"    private DialogBox(String text, Image avatar, boolean isUser) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"        setAlignment(isUser ? Pos.TOP_RIGHT : Pos.TOP_LEFT);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"        setSpacing(8);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        setPadding(new Insets(6));","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"        ImageView imageView \u003d new ImageView(avatar);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"        imageView.setFitWidth(AVATAR_SIZE);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"        imageView.setFitHeight(AVATAR_SIZE);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        imageView.setPreserveRatio(true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"        imageView.setSmooth(true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"        Circle clip \u003d new Circle(AVATAR_SIZE / 2, AVATAR_SIZE / 2, AVATAR_SIZE / 2);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"        imageView.setClip(clip);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"        Label label \u003d new Label(text);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"        label.setWrapText(true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"        label.setPadding(new Insets(8, 12, 8, 12));","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"        label.setStyle(isUser","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"                ? \"-fx-background-color: #dbeafe; -fx-background-radius: 10; -fx-font-size: 13px;\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"                : \"-fx-background-color: #f1f3f5; -fx-background-radius: 10; -fx-font-size: 13px;\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"        if (isUser) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"            // Right side: label then avatar (RTL trick not needed with ordering)","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"            getChildren().addAll(label, imageView);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"        } else {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"            // Left side: avatar then label","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ArunV2048"},"content":"            getChildren().addAll(imageView, label);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ArunV2048"},"content":"     * Returns a dialog styled as a user message (right-aligned).","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ArunV2048"},"content":"     * @param text message text","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ArunV2048"},"content":"     * @return dialog node","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ArunV2048"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ArunV2048"},"content":"        return new DialogBox(text, USER_AVATAR, true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ArunV2048"},"content":"    /**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ArunV2048"},"content":"     * Returns a dialog styled as a Yuri message (left-aligned).","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ArunV2048"},"content":"     *","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ArunV2048"},"content":"     * @param text message text","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ArunV2048"},"content":"     * @return dialog node","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ArunV2048"},"content":"     */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ArunV2048"},"content":"    public static DialogBox getYuriDialog(String text) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ArunV2048"},"content":"        return new DialogBox(text, YURI_AVATAR, false);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":82}},{"path":"src/main/java/yuri/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri.gui;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"import yuri.Yuri;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"    @Override","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"        FXMLLoader loader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"        Scene scene \u003d new Scene(loader.load());","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"        MainWindow controller \u003d loader.getController();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"        controller.setYuri(new Yuri()); // \u003c-- inject backend here","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"        stage.setTitle(\"Yuri\");","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"        stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/view/app-icon.png\")));","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"        stage.setScene(scene);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"        stage.show();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        launch(args);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":27}},{"path":"src/main/java/yuri/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri.gui;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"import yuri.Yuri;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"/**","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":" * Controller for MainWindow. Wires the UI to the Yuri backend.","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":" */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"public class MainWindow {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"    @FXML private VBox dialogContainer;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    @FXML private TextField userInput;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    @FXML private Button sendButton;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"    private Yuri yuri;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    /** Initializes auto-scroll. */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"    @FXML","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    /** Injects the backend instance. Call this from Main after FXML load. */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"    public void setYuri(Yuri yuri) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"        this.yuri \u003d yuri;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"        // greeting bubble","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"                DialogBox.getYuriDialog(yuri.getGreeting())","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"        );","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"    /** Handles one round of user input. */","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"    @FXML","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"            return;","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"        String response \u003d yuri.getResponse(input);  // \u003c- step 2 adds this","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"                DialogBox.getUserDialog(input),","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"                DialogBox.getYuriDialog(response)","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"        );","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"        }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":58}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"            fx:controller\u003d\"yuri.gui.MainWindow\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"            prefWidth\u003d\"420.0\" prefHeight\u003d\"600.0\"\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"60.0\"\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"6.0\" fillWidth\u003d\"true\" prefWidth\u003d\"400.0\"/\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"        \u003cHBox spacing\u003d\"6.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"              AnchorPane.bottomAnchor\u003d\"0.0\" prefHeight\u003d\"60.0\" style\u003d\"-fx-padding: 8;\"\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Type a command, e.g. todo read book\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"                \u003cButton fx:id\u003d\"sendButton\" text\u003d\"Send\" onAction\u003d\"#handleUserInput\"/\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"            \u003c/children\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-05T13:30:05","isFullCredit":false}],"authorContributionMap":{"ArunV2048":27}},{"path":"src/test/java/yuri/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"public class DeadlineTest {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"    void toString_formatsDate_nicely() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Deadline d \u003d new Yuri.Deadline(\"return book\", \"2019-12-02\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"        String s \u003d d.toString();","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(s.contains(\"return book\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(s.contains(\"Dec 2 2019\")); // matches your DateTimeFormatter \"MMM d yyyy\"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"    void toSaveFormat_serializesInIso() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Deadline d \u003d new Yuri.Deadline(\"finish\", \"2020-01-05\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"        String s \u003d d.toSaveFormat();","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(s.contains(\"D | 0 | finish | 2020-01-05\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false}],"authorContributionMap":{"ArunV2048":23}},{"path":"src/test/java/yuri/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"public class ParserTest {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"    void startsWithWord_exactMatch_true() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(parser.startsWithWord(\"list\", \"list\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    void startsWithWord_prefixWordOnly_true() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(parser.startsWithWord(\"list all\", \"list\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"    void startsWithWord_partialWord_false() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"        assertFalse(parser.startsWithWord(\"listener\", \"list\")); // not a whole word","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"    void parseIndexOrThrow_validNumber_ok() throws Yuri.YuriException {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"        int idx \u003d parser.parseIndexOrThrow(\"mark 3\", \"mark\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"        assertEquals(3, idx);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"    void parseIndexOrThrow_missingNumber_throws() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"        Yuri.YuriException ex \u003d assertThrows(Yuri.YuriException.class,","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"                () -\u003e parser.parseIndexOrThrow(\"mark\", \"mark\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(ex.getMessage().contains(\"exactly one number\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"    void parseIndexOrThrow_nonPositive_throws() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        assertThrows(Yuri.YuriException.class,","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"                () -\u003e parser.parseIndexOrThrow(\"mark 0\", \"mark\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"        assertThrows(Yuri.YuriException.class,","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"                () -\u003e parser.parseIndexOrThrow(\"mark -2\", \"mark\"));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false}],"authorContributionMap":{"ArunV2048":46}},{"path":"src/test/java/yuri/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"package yuri;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"import java.util.List;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"public class TaskListTest {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"    @BeforeEach","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"    void setup() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"    void add_and_get_increasesSize_andStoresTask() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t \u003d new Yuri.Todo(\"read book\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ArunV2048"},"content":"        assertSame(t, tasks.get(0));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"    void remove_returnsRemoved_andShrinks() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t1 \u003d new Yuri.Todo(\"A\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t2 \u003d new Yuri.Todo(\"B\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t1);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t2);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task removed \u003d tasks.remove(0);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"        assertSame(t1, removed);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"        assertSame(t2, tasks.get(0));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"    void mark_unmark_toggleStatus() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t \u003d new Yuri.Todo(\"Task\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"        tasks.mark(0);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ArunV2048"},"content":"        assertTrue(tasks.get(0).isDone);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ArunV2048"},"content":"        tasks.unmark(0);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ArunV2048"},"content":"        assertFalse(tasks.get(0).isDone);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ArunV2048"},"content":"    @Test","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ArunV2048"},"content":"    void all_returnsUnmodifiableView() {","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ArunV2048"},"content":"        Yuri.Task t \u003d new Yuri.Todo(\"X\");","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ArunV2048"},"content":"        tasks.add(t);","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ArunV2048"},"content":"        List\u003cYuri.Task\u003e view \u003d tasks.all();","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ArunV2048"},"content":"        assertEquals(1, view.size());","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ArunV2048"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e view.add(t));","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ArunV2048"},"content":"    }","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ArunV2048"},"content":"}","lastModifiedDate":"2025-08-29T01:25:33","isFullCredit":false}],"authorContributionMap":{"ArunV2048":57}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ArunV2048"},"content":"todo read book","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"deadline return book /by 2019-12-02","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"event book fair /from 2019-12-10 /to 2019-12-12","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ArunV2048"},"content":"find book","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"bye","lastModifiedDate":"2025-08-22T11:02:26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false}],"authorContributionMap":{"ArunV2048":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"java -classpath ..\\bin yuri.Yuri \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-28T22:12:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ArunV2048":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ArunV2048"},"content":"# Text UI test harness for Yuri (package: yuri)","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ArunV2048"},"content":"# Run from repo root:  bash text-ui-test/runtest.sh","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ArunV2048"},"content":"set -e","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ArunV2048"},"content":"SCRIPT_DIR\u003d\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" \u0026\u0026 pwd)\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ArunV2048"},"content":"ROOT_DIR\u003d\"$(cd \"$SCRIPT_DIR/..\" \u0026\u0026 pwd)\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ArunV2048"},"content":"SRC_DIR\u003d\"$ROOT_DIR/src/main/java\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ArunV2048"},"content":"BIN_DIR\u003d\"$ROOT_DIR/bin\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ArunV2048"},"content":"INPUT\u003d\"$SCRIPT_DIR/input.txt\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ArunV2048"},"content":"EXPECTED\u003d\"$SCRIPT_DIR/EXPECTED.TXT\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ArunV2048"},"content":"ACTUAL\u003d\"$SCRIPT_DIR/ACTUAL.TXT\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ArunV2048"},"content":"# 1) Clean bin","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ArunV2048"},"content":"rm -rf \"$BIN_DIR\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ArunV2048"},"content":"mkdir -p \"$BIN_DIR\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ArunV2048"},"content":"# 2) Compile all Java sources","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ArunV2048"},"content":"find \"$SRC_DIR\" -name \"*.java\" \u003e \"$SCRIPT_DIR/sources.list\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ArunV2048"},"content":"echo \"********** COMPILING **********\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ArunV2048"},"content":"javac -encoding UTF-8 -Xlint:unchecked -d \"$BIN_DIR\" @\"$SCRIPT_DIR/sources.list\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ArunV2048"},"content":"# 2.5) Reset save file so tests start clean","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ArunV2048"},"content":"SAVE_FILE\u003d\"$ROOT_DIR/data/duke.txt\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ArunV2048"},"content":"rm -f \"$SAVE_FILE\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ArunV2048"},"content":"mkdir -p \"$(dirname \"$SAVE_FILE\")\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ArunV2048"},"content":": \u003e \"$SAVE_FILE\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ArunV2048"},"content":"# 3) Run the program","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ArunV2048"},"content":"echo \"********** RUNNING **********\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ArunV2048"},"content":"java -classpath \"$BIN_DIR\" yuri.Yuri \u003c \"$INPUT\" \u003e \"$ACTUAL\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ArunV2048"},"content":"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ArunV2048"},"content":"# 4) Compare ACTUAL vs EXPECTED","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ArunV2048"},"content":"echo \"********** DIFF **********\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ArunV2048"},"content":"if diff -u \"$EXPECTED\" \"$ACTUAL\"; then","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ArunV2048"},"content":"  echo \"********** TEST RESULT: PASSED **********\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ArunV2048"},"content":"  exit 0","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ArunV2048"},"content":"  echo \"********** TEST RESULT: FAILED **********\"","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ArunV2048"},"content":"  exit 1","lastModifiedDate":"2025-08-29T05:48:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"ArunV2048":35,"-":9}}]
