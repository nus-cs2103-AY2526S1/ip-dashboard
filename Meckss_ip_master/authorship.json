[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05T15:24:02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.14.2\u0027","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:5.14.2\u0027","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    ","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"    mainClass.set(\"hope.gui.GuiLauncher\")","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"    archiveBaseName \u003d \"hope\"","lastModifiedDate":"2025-08-28T23:18:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25T00:58:18","isFullCredit":false}],"authorContributionMap":{"-":39,"Meckss":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"# Hope Chatbot User Guide","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"Hope is a to-do list chatbot designed to help you manage tasks efficiently. This guide provides an overview of the ","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"available commands, their usage, and examples to get you started.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"## Overview","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"Hope allows you to create, manage, and track tasks through a simple text-based interface. It supports various task types, including to-dos, deadlines, events, and fixed-duration tasks. Tasks are persisted using a storage system, and you can list, mark, unmark, delete, or search for tasks with ease.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"Commands","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"## Quick Start","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"Mac users: Ensure you have the precise JDK version prescribed [here](https://se-education.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"   org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"2. Download the latest .jar file.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"3. Copy the file to the folder you want to use as the home folder for Hope.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar hope.jar command ","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"to run the application.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-17T20:37:39","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-09-17T20:37:39","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"![img.png](sampleimg.png)","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"5. Type the command in the command box and press Enter to execute it. Refer below for the list of commands","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"## Commands","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"Below is a list of all supported commands, their descriptions, syntax, and examples.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"### 1. bye","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"Description: Exits the chatbot.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"Syntax: bye","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"Example:bye","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"Output: The chatbot terminates with a farewell message.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"### 2. list","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"Description: Displays all tasks in the to-do list.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"Syntax: list","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"Example:list","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"Output: A numbered list of all tasks, showing their status and details.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"### 3. mark","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"Description: Marks a task as completed.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"Syntax: mark \u003ctask_number\u003e","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"Example:mark 1","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"Output: Marks the task at index 1 as completed and updates the storage.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"### 4. unmark","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"Description: Marks a task as not completed.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"Syntax: unmark \u003ctask_number\u003e","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"Example:unmark 1","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"Output: Marks the task at index 1 as not completed and updates the storage.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"### 5. todo","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"Description: Adds a simple to-do task to the list.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"Syntax: todo \u003ctask_description\u003e","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"Example:todo Buy groceries","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"Output: Adds a to-do task \"Buy groceries\" to the list and saves it.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"### 6. deadline","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"Description: Adds a task with a deadline.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"Syntax: deadline \u003ctask_description\u003e /by \u003cdeadline\u003e","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"Example:deadline Submit report /by 2025-10-01","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"Output: Adds a deadline task \"Submit report\" with the specified deadline and saves it.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"### 7. event","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"Description: Adds an event with a start and end time.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"Syntax: event \u003cevent_description\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"Example:event Team meeting /from 2025-10-02 14","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"## FAQ","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"*Q*: How do I transfer my data to another Computer?","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains ","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"the data of your previous AddressBook home folder.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"## Hope Chatbot Command Summary","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"This is a concise summary of all commands supported by the **Hope** chatbot for managing tasks.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"| Command    | Syntax                                                        | Description                                          |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"|------------|---------------------------------------------------------------|------------------------------------------------------|","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"| `bye`      | `bye`                                                         | Exits the chatbot.                                   |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"| `list`     | `list`                                                        | Lists all tasks in the to-do list.                   |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"| `mark`     | `mark \u003ctask_number\u003e`                                          | Marks a task as completed.                           |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"| `unmark`   | `unmark \u003ctask_number\u003e`                                        | Marks a task as not completed.                       |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"| `todo`     | `todo \u003ctask_description\u003e`                                     | Adds a to-do task.                                   |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"| `deadline` | `deadline \u003ctask_description\u003e /by \u003cdeadline\u003e`                  | Adds a task with a deadline (MM-DD-YYYY).            |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"| `event`    | `event \u003cevent_description\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e` | Adds an event with start and end times (MM-DD-YYYY). |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"| `delete`   | `delete \u003ctask_number\u003e`                                        | Deletes a task from the list.                        |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"| `find`     | `find \u003ckeyword\u003e`                                              | Searches for tasks containing the keyword.           |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"| `fdt`      | `fdt \u003ctask_description\u003e /duration \u003cduration\u003e`                 | Adds a fixed-duration task.                          |","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Meckss"},"content":"**Notes**:","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Meckss"},"content":"- Task numbers (for `mark`, `unmark`, `delete`) start from 1, as shown in the `list` output.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Meckss"},"content":"- Commands are case-sensitive.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Meckss"},"content":"- Invalid commands trigger an error message.","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Meckss"},"content":"## Credits","lastModifiedDate":"2025-09-17T20:11:29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Meckss"},"content":"- Credits for most of the chatbots responses: https://anythingtranslate.com/translators/don-quixote-limbus-company-translator/","lastModifiedDate":"2025-09-17T20:39:02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Meckss"},"content":"- Credits to grok for generation of javadoc comments and helping with junit","lastModifiedDate":"2025-09-17T20:39:02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Meckss"},"content":"- Credits for Don Quixote image goes to bean_dobe: https://x.com/bean_dobe?lang\u003den","lastModifiedDate":"2025-09-17T20:39:02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Meckss"},"content":"- Credits for Dante image goes to Sansti24: https://www.reddit.com/r/limbuscompany/comments/16zy6uf/dante_chibi/","lastModifiedDate":"2025-09-17T20:39:02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Meckss"},"content":"- Credits for background photo goes to Project Moon","lastModifiedDate":"2025-09-17T20:39:02","isFullCredit":false}],"authorContributionMap":{"-":16,"Meckss":106}},{"path":"src/main/java/hope/Hope.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.io.File;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import hope.parser.Parser;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T17:56:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * A chatbot application named Hope that manages a to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * The {@code Hope} class initializes the chatbot\u0027s components, including the user interface,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" * task storage, and parser, and handles user interactions through a command-line interface.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":" * It loads tasks from a file, processes user input, and persists tasks to storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":" * The chatbot runs in a loop until an exit command is received.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"public class Hope {","lastModifiedDate":"2025-08-22T15:54:26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    /** The file where tasks are stored. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    private final File data;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    /** The storage system for managing task persistence. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    /** Indicates whether the chatbot is running. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    private boolean isOnline;","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    /** The to-do list containing the user\u0027s tasks. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T19:23:19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    /** The parser for interpreting user input and executing commands. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    private Parser parser;","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T18:40:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code Hope} chatbot instance.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * Initializes the user interface, task storage, to-do list, and parser.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * Creates a data file (Hope.txt) in the ./data directory if it does not exist.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * If file creation fails, an error message is displayed via the user interface.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"    public Hope() throws IOException {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"        this.data \u003d new File(\"./data/HopeData.txt\");","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d new TaskStorage(data);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        this.isOnline \u003d true;","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d new ToDoList(taskStorage.toList());","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"        this.parser \u003d new Parser(taskStorage, toDoList);","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T18:40:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        try {","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"            File parentDir \u003d data.getParentFile();","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"            if (parentDir.exists() \u0026\u0026 parentDir.isDirectory()) {","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"                if (!data.exists()) {","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                    data.createNewFile();","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"                }","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"            } else {","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                parentDir.mkdirs();","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                data.createNewFile();","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"            throw e;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"     * Display startup message","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"    public String showStartupMessage() {","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"        return \"Greetings, fair wanderer!\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"                + \"I am Hope, your humble companion.\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                + \"How might I assist thee on this grand quest?\";","lastModifiedDate":"2025-09-17T15:47:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:58:38","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"        return parser.parse(input);","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T17:56:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T17:56:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-22T15:54:26","isFullCredit":false}],"authorContributionMap":{"Meckss":73}},{"path":"src/main/java/hope/commands/AddDeadlineTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.tasks.DeadlineTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" *  Adds a new {@link DeadlineTask} to storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" *  This class implements the {@link Command} interface and processes user input to create a {@link DeadlineTask}","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" *  with a description and a deadline. It validates the input and adds the task to the provided {@link ToDoList} and","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" *  updates the {@link TaskStorage}. Invalid inputs are handled within the class.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"public class AddDeadlineTaskCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     * Creates a {@link AddDeadlineTaskCommand} with the specified to-do list and task storage","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"     * @param toDoList the {@link ToDoList} that {@link DeadlineTask} will be added to","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} that will be updated","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    public AddDeadlineTaskCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     * Executes the command to add a deadline task based on the provided input and return a string.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     * The input string is expected to contain a task description and a deadline, separated by \"/by\".","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"     * If the input is invalid (e.g., missing description or deadline), an error message is printed,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"     * and no task is added. Otherwise, a {@link DeadlineTask} is created, added to the to-do list,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * storage updated, and a confirmation message printed along with the updated task count.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * @param o the input expected to be a {@code String} containing the task description","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     *          and deadline in the format \"description /by deadline\"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        String input \u003d (String) o;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"            return (\"Thou hast overlooked the noble task of bestowing a worthy description upon this \"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"                    + \"endeavor!\")","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"                    + (\"(Looks like you forgot to input a description and a deadline! Try again)\\n\");","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        String[] info \u003d input.split(\"/by\");","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        if (info.length !\u003d 2 || info[0].isEmpty()) {","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"            return \"Verily, thou hast erred in thy response; endeavor once more, brave soul!\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                    + \"(Incorrect input, please try again)\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"        DeadlineTask temp \u003d new DeadlineTask(info[0].trim(), info[1].trim());","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        toDoList.add(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"        taskStorage.append(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"        return \"Behold, this quest hath been entrusted!\\n\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"                + temp.toString()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"                + \"\\n\\nLo! Thou art now bestowed with \"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"                + toDoList.size()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                + \" noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                + \"(You now have \" + toDoList.size() + \" tasks in the list)\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":63}},{"path":"src/main/java/hope/commands/AddEventTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.tasks.EventTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * A command that adds an event task to a to-do list and persists it to storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and processes user input to create","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * an {@link EventTask} with a description, start time, and end time. It validates the input,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * adds the task to the provided {@link ToDoList}, and appends it to the {@link TaskStorage}.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * If the input is invalid, appropriate error messages are displayed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"public class AddEventTaskCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /** The to-do list to which the event task will be added. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    /** The storage system for persisting the event task. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"     * Constructs an {@code AddEventTaskCommand} with the specified to-do list and task storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * @param toDoList   the {@link ToDoList} to which the event task will be added","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} where the event task will be persisted","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"    public AddEventTaskCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * Executes the command to add an event task based on the provided input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * The input string is expected to contain a task description, start time, and end time,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * separated by \"/from\" and \"/to\" (e.g., \"description /from start /to end\").","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * If the input is invalid (e.g., missing description, start, or end time), an error message","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * is printed, and no task is added. Otherwise, an {@link EventTask} is created, added to","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * the to-do list, persisted to storage, and a confirmation message is displayed along with","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * the updated task count.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a {@code String} containing the task description,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     *          start time, and end time in the format \"description /from start /to end\"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        assert(o instanceof String);","lastModifiedDate":"2025-09-10T13:54:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        String input \u003d (String) o;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"        if (input.equals(\"event\")) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"            return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"                    Thou hast overlooked the noble task of bestowing a worthy description upon this \\","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"                    endeavor!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                    (Looks like you forgot to input description, from and to! Try again)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                    \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"        String[] info \u003d input.split(\"/from\");","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"        if (info.length !\u003d 2 || info[0].isEmpty()) {","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"            return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                    Alas, fair traveler, thy input bears a flaw; kindly make haste and attempt anew!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                    (Incorrect input, please try again)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"                    \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"        String[] toAndFrom \u003d info[1].split(\"/to\");","lastModifiedDate":"2025-09-04T01:04:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"        if (toAndFrom.length !\u003d 2) {","lastModifiedDate":"2025-09-04T01:12:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"            return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                    Alas, fair traveler, thy input bears a flaw; kindly make haste and attempt anew!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"                    (Incorrect input, please try again)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"                    \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"        EventTask temp \u003d new EventTask(info[0].trim(), toAndFrom[0].trim(), toAndFrom[1].trim());","lastModifiedDate":"2025-09-04T01:04:27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"        toDoList.add(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        taskStorage.append(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"        return \"Behold, this quest hath been entrusted!:\\n\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"                + temp.toString()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"                + \"\\n\\nLo! Thou art now bestowed with \"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                + toDoList.size()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"                + \" noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"                + \"(You now have \" + toDoList.size() + \" tasks in the to do list)\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":80}},{"path":"src/main/java/hope/commands/AddFixedDurationTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.tasks.DeadlineTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import hope.tasks.FixedDurationTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"public class AddFixedDurationTaskCommand implements Command {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     * Creates a {@link AddDeadlineTaskCommand} with the specified to-do list and task storage","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     * @param toDoList the {@link ToDoList} that {@link DeadlineTask} will be added to","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} that will be updated","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    public AddFixedDurationTaskCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     * Executes the command to add a deadline task based on the provided input and return a string.","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * The input string is expected to contain a task description and a deadline, separated by \"/by\".","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * If the input is invalid (e.g., missing description or deadline), an error message is printed,","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * and no task is added. Otherwise, a {@link DeadlineTask} is created, added to the to-do list,","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     * storage updated, and a confirmation message printed along with the updated task count.","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     * @param o the input expected to be a {@code String} containing the task description","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     *          and deadline in the format \"description /by deadline\"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        String input \u003d (String) o;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"            return (\"Thou hast overlooked the noble task of bestowing a worthy description upon this \"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"                    + \"endeavor!\")","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"                    + (\"(Looks like you forgot to input a description and a deadline! Try again)\\n\");","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        String[] info \u003d input.split(\"/needs\");","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"            return \"Verily, thou hast erred in thy response; endeavor once more, brave soul!\"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"                    + \"(Incorrect input, please try again)\\n\";","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        FixedDurationTask temp \u003d new FixedDurationTask(info[0].trim(), info[1].trim());","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        toDoList.add(temp);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        taskStorage.append(temp);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"        return \"Behold, this quest hath been entrusted!\\n\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                + temp.toString()","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"                + \"\\n\\nLo! Thou art now bestowed with \"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"                + toDoList.size()","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                + \" noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                + \"(You now have \" + toDoList.size() + \" tasks in the list)\\n\";","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false}],"authorContributionMap":{"Meckss":56}},{"path":"src/main/java/hope/commands/AddToDoTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.tasks.ToDoTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * A command that adds a to-do task to a to-do list and persists it to storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and processes user input to create","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * a {@link ToDoTask} with a description. It validates the input, adds the task to the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * provided {@link ToDoList}, and appends it to the {@link TaskStorage}. If the input is","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * invalid, appropriate error messages are displayed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"public class AddToDoTaskCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /** The to-do list to which the to-do task will be added. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    private final ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    /** The storage system for persisting the to-do task. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    private final TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"     * Constructs an {@code AddToDoTaskCommand} with the specified to-do list and task storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * @param toDoList    the {@link ToDoList} to which the to-do task will be added","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} where the to-do task will be persisted","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"    public AddToDoTaskCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * Executes the command to add a to-do task based on the provided input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * The input string is expected to contain a task description. If the input is empty","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * or equals \"todo\", an error message is printed, and no task is added. Otherwise, a","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * {@link ToDoTask} is created, added to the to-do list, persisted to storage, and a","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * confirmation message is displayed along with the updated task count.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a {@code String} containing the task description","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"        assert(o instanceof String);","lastModifiedDate":"2025-09-10T13:54:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        String input \u003d (String) o;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        if (input.isEmpty() || input.equals(\"todo\")) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"            return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"                    Thou hast overlooked the noble task of bestowing a worthy description upon this \\","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"                    endeavor!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                    (Empty input detected, please try again)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"                    \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        ToDoTask temp \u003d new ToDoTask(input);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"        toDoList.add(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"        taskStorage.append(temp);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"        return \"Behold, this quest hath been entrusted!\\n\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"                + temp.toString()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"                + \"\\n\\nLo! Thou art now bestowed with \"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                + toDoList.size()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                + \" noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"                + \"(You now have \" + toDoList.size() + \" tasks in the list)\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":64}},{"path":"src/main/java/hope/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":" * An interface defining a command that can be executed with a given input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":" * Implementing classes must provide the logic for the execute method.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"public interface Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"     * Executes the command with the specified input, returning a string","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"     * @param input the input object to be processed by the command","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"    String execute(Object input);","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":15}},{"path":"src/main/java/hope/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * A command that deletes a task from a to-do list and updates the storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and processes user input to remove","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * a task identified by its index from the {@link ToDoList}. It validates the input,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * removes the task, updates the {@link TaskStorage}, and displays appropriate messages.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * If the input is invalid, error messages are printed, and no task is removed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    /** The to-do list from which the task will be removed. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    /** The storage system for updating the persisted tasks. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code DeleteCommand} with the specified to-do list and task storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     * @param toDoList    the {@link ToDoList} from which the task will be removed","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} to be updated after task removal","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    public DeleteCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"     * Executes the command to delete a task based on the provided input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * The input is expected to be a {@code String} representing a numeric index (1-based)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * of the task to delete. If the input is not a valid number, exceeds the list size,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * or is less than 1, an error message is printed, and no task is removed. Otherwise,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * the task at the specified index is removed from the {@link ToDoList}, the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * {@link TaskStorage} is updated, and a confirmation message is displayed along with","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * the updated task count.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a {@code String} containing the 1-based index","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     *          of the task to delete","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        if (o instanceof String) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"            int input;","lastModifiedDate":"2025-09-04T01:04:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"                input \u003d Integer.parseInt((String) o);","lastModifiedDate":"2025-09-04T01:04:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"                        Pray, employ the noble digits as thy guiding input!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                        (Please use numerics as input only)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"            if (input \u003e toDoList.size()) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"                        Thy request doth stray beyond the hallowed limits.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                        (The number you have input is greater than the number of tasks you currently have)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"            if (input \u003c 1) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"                        Doth this be a jest, good sir?","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"                        (0 and negative numbers are not accepted as input)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"            String temporary \u003d \"Heed this decree! This noble quest hath been cast aside.\\n\\n\"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"                    + toDoList.get(input - 1).toString();","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"            toDoList.remove(input - 1);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"            taskStorage.update(toDoList);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"            return temporary + \"\\n\\nLo! Thou art now bestowed with \"","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"                    + toDoList.size()","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"                    + \" noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                    + \"(You now have \" + toDoList.size() + \" tasks in the to do list)\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"        return \"Something went wrong :(\"; // should never come to this as parser ensures string input","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":80}},{"path":"src/main/java/hope/commands/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":" * A command that signals the termination of the Hope chatbot.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and is used to indicate that the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * chatbot should exit its main interaction loop. The {@code execute} method is intentionally","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * empty, as the command\u0027s purpose is solely to trigger the shutdown process handled by the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * calling context.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"public class EndCommand implements Command {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     * Executes the command to signal the termination of the chatbot.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     * This method is intentionally empty, as the command\u0027s role is to indicate the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     * end of the chatbot\u0027s operation, with the actual shutdown logic handled externally.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     * @param o the input object (unused in this implementation)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"        return \"Fare thee well, noble friend!\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false}],"authorContributionMap":{"Meckss":23}},{"path":"src/main/java/hope/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * Represents a command to search for tasks in a ToDoList that contain a specified keyword","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * in their description. This command filters tasks from the provided ToDoList and","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * displays matching tasks or a message if no matches are found.","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     * Constructs a FindCommand with the specified ToDoList.","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     * @param toDoList the ToDoList to search through for matching tasks","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    public FindCommand(ToDoList toDoList) {","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * Executes the find command by searching for tasks in the ToDoList whose descriptions","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * contain the specified input string. Prints matching tasks or a message if no tasks","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * are found.","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a String representing the keyword to search for","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T01:31:31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        ToDoList tempToDoList \u003d new ToDoList(new ArrayList\u003c\u003e());","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"        if (o instanceof String) {","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"            String input \u003d (String) o;","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"            for (int i \u003d 0; i \u003c toDoList.size(); i++) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"                if (toDoList.get(i).getDescription().contains(input)) {","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"                    tempToDoList.add(toDoList.get(i));","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"                }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"            if (tempToDoList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"                return \"Hark! No quest aligns with thine inquiry, a barren landscape of endeavor doth \"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"                        + \"meet thy gaze.\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"            return \"Hark, these are the fruits of thy inquiry.\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"                    + tempToDoList.toString();","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        return \"Something went wrong :(\"; // should never come to this as parser ensures string input","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false}],"authorContributionMap":{"Meckss":50}},{"path":"src/main/java/hope/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * A command that displays all tasks in a to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and is responsible for printing","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * the contents of the provided {@link ToDoList}. If the list is empty, an appropriate","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * message is displayed; otherwise, all tasks are listed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"    /** The to-do list containing the tasks to be displayed. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"    private static ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code ListCommand} with the specified to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     * @param toDoList the {@link ToDoList} whose tasks will be displayed","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    public ListCommand(ToDoList toDoList) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * Executes the command to display the tasks in the to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * If the {@link ToDoList} is empty, a message indicating no tasks is printed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     * Otherwise, a header message is displayed followed by the string representation","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     * of the to-do list, which includes all tasks.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     * @param o the input object (unused in this implementation)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        if (toDoList.size() \u003d\u003d 0) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"            return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"                    Thou art unburdened by quests in this moment, dear knight.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"                    (There are currently no tasks in your to do list)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"                    \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        return \"Hark! Behold the noble quests that grace thy scroll of undertakings!\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"                + toDoList.toString();","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":44}},{"path":"src/main/java/hope/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.customexceptions.RedundantStateChangeException;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * A command that marks a task as done in a to-do list and updates the storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and processes user input to mark","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * a task identified by its index as completed in the {@link ToDoList}. It validates the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * input, updates the task\u0027s status, and persists the changes to the {@link TaskStorage}.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * If the input is invalid or the task is already marked, appropriate error messages are displayed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /** The to-do list containing the task to be marked as done. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    /** The storage system for updating the persisted tasks. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code MarkCommand} with the specified to-do list and task storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * @param toDoList    the {@link ToDoList} containing the task to be marked","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} to be updated after marking the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"    public MarkCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"     * Executes the command to mark a task as done based on the provided input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * The input is expected to be a {@code String} representing a numeric index (1-based)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * of the task to mark. If the input is not a valid number, exceeds the list size,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * or is less than 1, an error message is printed, and no task is marked. If the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * is already marked as done, a {@link RedundantStateChangeException} is caught, and","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * an error message is displayed. Otherwise, the task is marked as done, the","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * {@link TaskStorage} is updated, and a confirmation message is printed along with","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     * the task details.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a {@code String} containing the 1-based index","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"     *          of the task to mark as done","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        if (o instanceof String) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                int input \u003d Integer.parseInt((String) o);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                        Pray, employ the noble digits as thy guiding input!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                        (Please use numerics as input only)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"            int input \u003d Integer.parseInt((String) o);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"            if (input \u003e toDoList.size()) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                        Thy request doth stray beyond the hallowed limits.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"                        (The number you have input is greater than the number of tasks you currently have)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"            if (input \u003c 1) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                        Doth this be a jest, good sir?","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"                        (Negative numbers are not accepted as input)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"                toDoList.get(input - 1).markAsDone();","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"            } catch (RedundantStateChangeException e) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"                        Verily, the noble quest was marked from the very outset; hath thy memory slipped\\","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"                         away like a fleeting shadow?","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                        (The task was already marked to begin with)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"            taskStorage.update(toDoList);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"            return \"Hark, I declare the #\" + input + \" noble endeavor accomplished!\\n\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"                    + toDoList.get(input - 1) + \"\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"        return \"Something went wrong :(\"; // should never come to this as parser ensures string input","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":85}},{"path":"src/main/java/hope/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.commands;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.customexceptions.RedundantStateChangeException;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" * A command that unmarks a task as not done in a to-do list and updates the storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * This class implements the {@link Command} interface and processes user input to unmark","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * a task identified by its index in the {@link ToDoList}. It validates the input, updates","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" * the task\u0027s status to not done, and persists the changes to the {@link TaskStorage}.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * If the input is invalid or the task is already unmarked, appropriate error messages are displayed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /** The to-do list containing the task to be unmarked. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    /** The storage system for updating the persisted tasks. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     * Constructs an {@code UnmarkCommand} with the specified to-do list and task storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * @param toDoList    the {@link ToDoList} containing the task to be unmarked","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} to be updated after unmarking the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    public UnmarkCommand(ToDoList toDoList, TaskStorage taskStorage) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * Executes the command to unmark a task as not done based on the provided input.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * The input is expected to be a {@code String} representing a numeric index (1-based)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * of the task to unmark. If the input is not a valid number, exceeds the list size,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * or is less than 1, an error message is printed, and no task is unmarked. If the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * is already unmarked, a {@link RedundantStateChangeException} is caught, and an error","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * message is displayed. Otherwise, the task is unmarked, the {@link TaskStorage} is","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     * updated, and a confirmation message is printed along with the task details.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     * @param o the input object, expected to be a {@code String} containing the 1-based index","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"     *          of the task to unmark","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"    public String execute(Object o) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        if (o instanceof String) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                int input \u003d Integer.parseInt((String) o);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"                        Pray, employ the noble digits as thy guiding input!","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"                        (Please use numerics as input only)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"            int input \u003d Integer.parseInt((String) o);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"            if (input \u003e toDoList.size()) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                        Thy request doth stray beyond the hallowed limits.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"                        (The number you have input is greater than the number of tasks you currently have)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"            if (input \u003c 1) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                        Doth this be a jest, good sir?","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"                        (Negative numbers are not accepted as input)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"                toDoList.get(input - 1).unmark();","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"            } catch (RedundantStateChangeException e) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"                return \"\"\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"                        Verily, the noble quest was unmarked from the very outset; hath thy memory \\","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"                        slipped away like a fleeting shadow?","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                        (The task was already unmarked to begin with)","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"            taskStorage.update(toDoList);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"            return \"Lo! The noble quest, task #\" + input","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"                    + \" , doth still beckon thy valorous attention!\"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"                    + toDoList.get(input - 1) + \"\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"        return \"Something went wrong :(\"; // should never come to this as parser ensures string input","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":86}},{"path":"src/main/java/hope/common/MaybeDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.common;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import java.util.List;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * A utility class for parsing and representing a date or a description string.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" * The {@code MaybeDate} class attempts to parse an input string as a date using multiple supported","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":" * date formats. If parsing succeeds, it stores the date as a {@link Temporal} object; otherwise, it","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":" * stores the input as a description string. The class supports formatting dates for output and","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":" * provides a string representation of either the parsed date or the description.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"public class MaybeDate {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    /** A list of supported date formats for parsing input strings. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    private static final List\u003cDateTimeFormatter\u003e SUPPORTED_FORMATS \u003d List.of(","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"            DateTimeFormatter.ofPattern(\"M/dd/yyyy\"),","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"            DateTimeFormatter.ofPattern(\"MM/d/yyyy\"),","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"            DateTimeFormatter.ofPattern(\"M/d/yyyy\")","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    );","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    /** The formatter for outputting dates in the format \"MMM dd yyyy\". */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    /** The formatter for outputting date-times in the format \"MMM dd yyyy HHmm\". */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2025-08-29T01:03:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"    /** The description string, used if the input cannot be parsed as a date. */","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"    private String description;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"    /** The parsed date, represented as a {@link Temporal} object, or null if parsing fails. */","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"    private Temporal date;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code MaybeDate} instance with the specified date and description.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"     * @param date        the parsed date as a {@link Temporal} object, or null if no date is parsed","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"     * @param description the description string, used if no date is parsed","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"    private MaybeDate(Temporal date, String description) {","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"     * Parses an input string to create a {@code MaybeDate} instance.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"     * Attempts to parse the input as a date using supported formats (e.g., \"yyyy-MM-dd\", \"MM/dd/yyyy\")","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"     * with optional time components (\"HH:mm\" or \"HHmm\"). If parsing succeeds, a {@code MaybeDate}","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"     * with the parsed {@link LocalDateTime} is returned. If parsing fails, a {@code MaybeDate} with","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"     * the input as a description is returned.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"     * @param input the input string to parse as a date or store as a description","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"     * @return a {@code MaybeDate} instance containing either a parsed date or the input description","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"    @SuppressWarnings(\"checkstyle:EmptyCatchBlock\")","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"    public static MaybeDate parse(String input) {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"        LocalDateTime temp \u003d null;","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"        DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"        for (DateTimeFormatter format : SUPPORTED_FORMATS) {","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"            dateTimeFormatterBuilder.appendOptional(format);","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T17:41:16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"        dateTimeFormatterBuilder.optionalStart()","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\" HH:mm\"))","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\" HHmm\"))","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"                .optionalEnd();","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"        try {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(input, dateTimeFormatterBuilder.toFormatter());","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"            return new MaybeDate(dateTime, null);","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"            try {","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"                LocalDate date \u003d LocalDate.parse(input, dateTimeFormatterBuilder.toFormatter());","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"                return new MaybeDate(date, null);","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"            } catch (DateTimeParseException ignored2) {","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"                //purposefully empty","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-09-04T01:22:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"        return new MaybeDate(null, input);","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"     * Returns a string representation of the {@code MaybeDate}.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"     * If a date is present, it is formatted using {@link #OUTPUT_DATE_FORMAT} for {@link LocalDate}","lastModifiedDate":"2025-08-29T01:03:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"     * or {@link #OUTPUT_DATE_TIME_FORMAT} for {@link LocalDateTime}. If no date is present, the","lastModifiedDate":"2025-08-29T01:03:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"     * description string is returned.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"     * @return a formatted date string or the description","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"            return description;","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"            if (date instanceof LocalDate) {","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"                return OUTPUT_DATE_FORMAT.format(date);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"            if (date instanceof LocalDateTime) {","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"                return OUTPUT_DATE_TIME_FORMAT.format(date);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"        return description;","lastModifiedDate":"2025-08-26T18:28:12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false}],"authorContributionMap":{"Meckss":110}},{"path":"src/main/java/hope/customexceptions/RedundantStateChangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.customexceptions;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":" * An exception thrown when attempting to change the state of a task redundantly.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":" * This exception is used in the Hope chatbot to indicate that a task\u0027s state (e.g., marked as done or not done)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * is already in the requested state, preventing unnecessary state changes.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"public class RedundantStateChangeException extends RuntimeException {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code RedundantStateChangeException} with the specified detail message.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     * @param msg the detail message explaining the reason for the exception","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    public RedundantStateChangeException(String msg) {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"        super(msg);","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false}],"authorContributionMap":{"Meckss":19}},{"path":"src/main/java/hope/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.gui;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    private Label dialog;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"        try {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    private void flip() {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"    public static DialogBox getHopeDialog(String text, Image img) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"        db.flip();","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"        return db;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false}],"authorContributionMap":{"Meckss":62}},{"path":"src/main/java/hope/gui/GuiLauncher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.gui;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"public class GuiLauncher {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false}],"authorContributionMap":{"Meckss":12}},{"path":"src/main/java/hope/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.gui;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.Hope;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"public class Main extends Application {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"        try {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"            Hope hope \u003d new Hope();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-09-17T14:41:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-09-17T14:41:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(hope);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"            stage.setTitle(\"Hope\");","lastModifiedDate":"2025-09-17T16:02:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"            stage.show();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false}],"authorContributionMap":{"Meckss":34}},{"path":"src/main/java/hope/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.gui;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.Hope;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    private TextField userInput;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    private Button sendButton;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    private Hope hope;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dante.jpeg\"));","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    private Image hopeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/donquixote.jpeg\"));","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    public void initialize() {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"    public void setDuke(Hope d) {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"        hope \u003d d;","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        dialogContainer.getChildren().add(DialogBox.getHopeDialog(d.showStartupMessage(), hopeImage));","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    @FXML","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        String response \u003d hope.getResponse(input);","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                DialogBox.getHopeDialog(response, hopeImage)","lastModifiedDate":"2025-09-17T15:45:33","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"        );","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"        userInput.clear();","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false}],"authorContributionMap":{"Meckss":54}},{"path":"src/main/java/hope/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.parser;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.util.HashMap;","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import java.util.Set;","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import hope.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import hope.commands.AddEventTaskCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import hope.commands.AddFixedDurationTaskCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import hope.commands.AddToDoTaskCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import hope.commands.Command;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"import hope.commands.DeleteCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"import hope.commands.EndCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"import hope.commands.FindCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"import hope.commands.ListCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"import hope.commands.MarkCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"import hope.commands.UnmarkCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":" * A parser that interprets user input and dispatches corresponding commands for the Hope chatbot.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":" * The {@code Parser} class processes input strings, identifies valid commands, and executes them","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":" * using the appropriate {@link Command} implementation. It maintains a set of supported commands","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":" * and a mapping of commands to their respective {@link Command} objects. If an invalid command","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":" * is provided, an error message is displayed, and the list command is executed by default.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"public class Parser {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    /** A set of valid command names recognized by the parser. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"    private static final Set\u003cString\u003e COMMANDS \u003d Set.of(","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"            \"bye\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"            \"list\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"            \"mark\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"            \"unmark\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"            \"todo\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"            \"deadline\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"            \"event\",","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"            \"delete\",","lastModifiedDate":"2025-08-29T01:28:01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"            \"find\",","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"            \"fdt\"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"    );","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    /** A mapping of command names to their corresponding {@link Command} implementations. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    private static HashMap\u003cString, Command\u003e GET_COMMAND \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"    /** The to-do list used by commands to manage tasks. */","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"    /** The storage system for persisting tasks. */","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code Parser} with the specified task storage and to-do list.","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"     * Initializes the command mapping by calling {@link #initialize()}.","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"     * @param taskStorage the {@link TaskStorage} for persisting tasks","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"     * @param toDoList    the {@link ToDoList} for managing tasks","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"    public Parser(TaskStorage taskStorage, ToDoList toDoList) {","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        this.toDoList \u003d toDoList;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"        this.initialize();","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"     * Initializes the command mapping by associating command names with their respective","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"     * {@link Command} implementations.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"    private void initialize() {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"bye\", new EndCommand());","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"list\", new ListCommand(toDoList));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"mark\", new MarkCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"unmark\", new UnmarkCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"todo\", new AddToDoTaskCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"deadline\", new AddDeadlineTaskCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"event\", new AddEventTaskCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"delete\", new DeleteCommand(toDoList, taskStorage));","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"find\", new FindCommand(toDoList));","lastModifiedDate":"2025-08-29T01:29:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"        GET_COMMAND.put(\"fdt\", new AddFixedDurationTaskCommand(toDoList, taskStorage));","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"    public String parse(String input) {","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"        String[] instructions \u003d input.split(\" \", 2);","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"        String inputCommand \u003d instructions[0];","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"        String argument \u003d instructions.length \u003d\u003d 2 ? instructions[1] : input;","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"        if (COMMANDS.contains(inputCommand)) {","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"            return GET_COMMAND.get(inputCommand).execute(argument.trim());","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"        return \"Pardon me, noble companion, but what dost thou mean to convey?\\n\";","lastModifiedDate":"2025-09-04T00:55:15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-27T15:09:29","isFullCredit":false}],"authorContributionMap":{"Meckss":93}},{"path":"src/main/java/hope/storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.storage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.io.File;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import hope.tasks.DeadlineTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"import hope.tasks.EventTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"import hope.tasks.FixedDurationTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"import hope.tasks.Task;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"import hope.tasks.ToDoTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":" * A utility class for managing the persistence of tasks in a file.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":" * The {@code TaskStorage} class handles reading tasks from a file and writing tasks to it,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":" * supporting the storage of {@link ToDoTask}, {@link DeadlineTask}, and {@link EventTask} objects.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":" * Tasks are stored in a specific format and can be appended, updated, or loaded into a list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"public class TaskStorage {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    /** The file used for storing tasks. */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    private File file;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     * Constructs a {@code TaskStorage} instance with the specified file.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     * @param file the {@link File} where tasks are stored","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    public TaskStorage(File file) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        this.file \u003d file;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     * Appends a task to the storage file.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * The task is formatted using its {@link Task#format()} method and written to the file","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * with a newline character. If an error occurs during writing, a {@link RuntimeException}","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * is thrown.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * @param t the {@link Task} to append to the file","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     * @throws RuntimeException if an error occurs during file writing","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    public void append(Task t) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, true);) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"            fileWriter.append(t.format()).append(\"\\n\");","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"     * Updates the storage file with the contents of the provided to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"     * Writes the formatted representation of each task in the {@link ToDoList} to the file,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"     * overwriting its previous contents. Tasks are separated by newlines, except for the last task.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"     * If an {@link IOException} occurs, the method silently returns without updating the file.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"     * @param list the {@link ToDoList} containing tasks to write to the file","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"    public void update(ToDoList list) {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file);) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"                if (i \u003d\u003d list.size() - 1) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"                    sb.append(list.get(i).format());","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"                    break;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"                }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"                sb.append(list.get(i).format()).append(\"\\n\");","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"            fileWriter.write(sb.toString());","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"            return;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"     * Loads tasks from the storage file into a list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"     * Reads the file line by line, parsing each line into a {@link Task} object based on its type","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"     * (\"T\" for {@link ToDoTask}, \"D\" for {@link DeadlineTask}, \"E\" for {@link EventTask}).","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"     * Tasks are marked as done if indicated in the file. If the file is not found, an empty","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"     * list is returned.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"     * @return an {@link ArrayList} of {@link Task} objects loaded from the file","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"    @SuppressWarnings(\"checkstyle:MissingSwitchDefault\")","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"    public ArrayList\u003cTask\u003e toList() {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"        ArrayList\u003cTask\u003e ans \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"        try (Scanner s \u003d new Scanner(file);) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"            int length \u003d 0;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"                String tempRawData \u003d s.nextLine();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"                String[] tempData \u003d tempRawData.split(\"\\\\|\");","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"                String dataType \u003d tempData[0];","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"                switch (dataType) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"                case(\"T\"):","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"                    Task t \u003d new ToDoTask(tempData[2]);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"                    if (tempData[1].equals(\"1\")) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"                        t.markAsDone();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"                    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"                    ans.add(t);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"                    break;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"                case(\"D\"):","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"                    Task t1 \u003d new DeadlineTask(tempData[2], tempData[3]);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"                    if (tempData[1].equals(\"1\")) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"                        t1.markAsDone();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"                    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"                    ans.add(t1);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"                    break;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Meckss"},"content":"                case(\"E\"):","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Meckss"},"content":"                    Task t2 \u003d new EventTask(tempData[2], tempData[3], tempData[4]);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Meckss"},"content":"                    if (tempData[1].equals(\"1\")) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Meckss"},"content":"                        t2.markAsDone();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Meckss"},"content":"                    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Meckss"},"content":"                    ans.add(t2);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Meckss"},"content":"                    break;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Meckss"},"content":"                case(\"FD\"):","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Meckss"},"content":"                    Task t3 \u003d new FixedDurationTask(tempData[2], tempData[3]);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Meckss"},"content":"                    if (tempData[1].equals(\"1\")) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Meckss"},"content":"                        t3.markAsDone();","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Meckss"},"content":"                    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Meckss"},"content":"                    ans.add(t3);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Meckss"},"content":"                    break;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Meckss"},"content":"                default:","lastModifiedDate":"2025-09-10T14:09:20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Meckss"},"content":"                    throw new IllegalStateException(\"Something went wrong in \"","lastModifiedDate":"2025-09-10T14:09:20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Meckss"},"content":"                            + \"TaskStorage.toList(), unexpected data type:  \" + dataType);","lastModifiedDate":"2025-09-10T14:09:41","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Meckss"},"content":"                }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Meckss"},"content":"            }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Meckss"},"content":"            return ans;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Meckss"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Meckss"},"content":"            return ans;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false}],"authorContributionMap":{"Meckss":136}},{"path":"src/main/java/hope/storage/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.storage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.tasks.Task;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":" * A class representing a to-do list that stores and manages a collection of tasks.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":" * The tasks are stored in an ArrayList and can be added, retrieved, removed, and displayed.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"public class ToDoList {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     * Constructs a ToDoList with the specified list of tasks.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     * @param list the ArrayList of Task objects to initialize the to-do list","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    public ToDoList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"        this.list \u003d list;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * Adds a task to the to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     * @param t the Task object to be added to the list","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        list.add(t);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"     * Retrieves a task from the to-do list at the specified index.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"     * The index is 1-based for user convenience, but internally adjusted to 0-based.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"     * @param i the 1-based index of the task to retrieve","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * @return the Task object at the specified index","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"        return list.get(i);","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"     * Returns the number of tasks in the to-do list.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"    public int size() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"        return list.size();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"     * Removes a task from the to-do list at the specified index.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"     * @param t the 0-based index of the task to remove","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"    public void remove(int t) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        list.remove(t);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"            return \"\";","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"            sb.append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"    };","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false}],"authorContributionMap":{"Meckss":77}},{"path":"src/main/java/hope/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.tasks;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.common.MaybeDate;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * A class representing a task with a deadline, extending the Task class.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * It includes a description, a task type (D for deadline), and a deadline date.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    private MaybeDate deadline;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     * Constructs a DeadlineTask with the specified description and deadline.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     * @param deadline the deadline of the task as a string, parsed into a MaybeDate object","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"        super(description, Task.TaskType.D);","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"        this.deadline \u003d MaybeDate.parse(deadline);","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"     * Formats the task into a string representation suitable for storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"     * The format includes the task type, status (1 for done, 0 for not done), description, and deadline.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * @return a formatted string representing the task for storage","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    public String format() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        int status;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"            status \u003d 1;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"            status \u003d 0;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"        sb.append(type).append(\"|\").append(status).append(\"|\")","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"                .append(description).append(\"|\").append(deadline);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        sb.append(this.getTaskType()).append(\" [\").append(this.getStatusIcon())","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"                .append(\"] \").append(this.description).append(\" (by: \")","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"                .append(deadline).append(\")\");","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false}],"authorContributionMap":{"Meckss":54}},{"path":"src/main/java/hope/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.tasks;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.common.MaybeDate;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * A class representing an event task with a start and end date, extending the Task class.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * It includes a description, a task type (E for event), and start and end dates.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"public class EventTask extends Task {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    private MaybeDate from;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"    private MaybeDate to;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     * Constructs an EventTask with the specified description, start date, and end date.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     * @param description the description of the event task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"     * @param from the start date of the event as a string, parsed into a MaybeDate object","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     * @param to the end date of the event as a string, parsed into a MaybeDate object","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    public EventTask(String description, String from, String to) {","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"        super(description, Task.TaskType.E);","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"        this.from \u003d MaybeDate.parse(from);","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"        this.to \u003d MaybeDate.parse(to);","lastModifiedDate":"2025-08-26T17:16:20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * Formats the event task into a string representation suitable for storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     * The format includes the task type, status (1 for done, 0 for not done), description,","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     * start date, and end date.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     * @return a formatted string representing the event task for storage","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    public String format() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        int status;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"            status \u003d 1;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"            status \u003d 0;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"        sb.append(type).append(\"|\").append(status)","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(description)","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(from)","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(to);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"        sb.append(this.getTaskType()).append(\" [\").append(this.getStatusIcon())","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"                .append(\"] \").append(this.description).append(\" (from: \")","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"                .append(from).append(\" to: \").append(to).append(\")\");","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T16:12:37","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:52:30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false}],"authorContributionMap":{"Meckss":61}},{"path":"src/main/java/hope/tasks/FixedDurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.tasks;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":" * Represents a task with a fixed duration, extending the {@link Task} class.","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":" * This class includes a duration attribute to specify the time required to complete the task.","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * It provides methods to format the task for storage and to display the task as a string.","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"public class FixedDurationTask extends Task {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"    private String duration;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"     * Constructs a new {@code FixedDurationTask} with the specified description and duration.","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     * @param duration    the duration required to complete the task","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-09-10T14:45:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    public FixedDurationTask(String description, String duration) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"        super(description, TaskType.FD);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    public String format() {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"        int status;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"            status \u003d 1;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"            status \u003d 0;","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        sb.append(type).append(\"|\").append(status)","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(description)","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(duration);","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        sb.append(this.getTaskType()).append(\" [\").append(this.getStatusIcon())","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"                .append(\"] \").append(this.description).append(\" (needs: \")","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"                .append(duration).append(\")\");","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false}],"authorContributionMap":{"Meckss":48}},{"path":"src/main/java/hope/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.tasks;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.customexceptions.RedundantStateChangeException;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" * An abstract class representing a generic task with a description, completion status, and type.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":" * This class serves as the base for specific task types such as ToDoTask, DeadlineTask, and EventTask.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"public abstract class Task {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    protected String description;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"     * An enumeration representing the possible types of tasks.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"     * T represents a to-do task, D represents a deadline task, and E represents an event task.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    protected enum TaskType {","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"        T,","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"        D,","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"        E,","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"        FD","lastModifiedDate":"2025-09-10T14:41:38","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    protected TaskType type;","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"     * Constructs a Task with the specified description and task type.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"     * @param type the type of the task (T, D, or E)","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"        this.type \u003d type;","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"     * An \"X\" indicates the task is done, while a space indicates it is not done.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"     * @return the status icon as a string","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"     * Returns the task type as a string, formatted with square brackets.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"     * @return the task type as a string (e.g., \"[T]\", \"[D]\", or \"[E]\")","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"        return \"[\" + type + \"]\";","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"     * @throws RedundantStateChangeException if the task is already marked as done","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"    public void markAsDone() throws RedundantStateChangeException {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"            throw new RedundantStateChangeException(\"\");","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"    public String getDescription() {","lastModifiedDate":"2025-08-29T01:29:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"        return this.description;","lastModifiedDate":"2025-08-29T01:29:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-29T01:29:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T01:29:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"     * Marks the task as not done.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"     * @throws RedundantStateChangeException if the task is already marked as not done","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"    public void unmark() throws RedundantStateChangeException {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"        if (!this.isDone) {","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"            throw new RedundantStateChangeException(\"\");","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-22T23:32:17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"     * Formats the task into a string representation suitable for storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"     * The format includes the task type, status (1 for done, 0 for not done), and description.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"     * @return a formatted string representing the task for storage","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"    public String format() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"        int status;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"            status \u003d 1;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"            status \u003d 0;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"        sb.append(type).append(\"|\").append(status).append(\"|\").append(description);","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"    public String toString() {","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"        sb.append(this.getTaskType()).append(\" [\")","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"                .append(this.getStatusIcon()).append(\"] \")","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Meckss"},"content":"                .append(this.description);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-22T20:02:05","isFullCredit":false}],"authorContributionMap":{"Meckss":115}},{"path":"src/main/java/hope/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package hope.tasks;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"/**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":" * A class representing a simple to-do task, extending the Task class.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":" * It includes a description and a task type (T for to-do).","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":" */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-08-27T15:39:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"     * Constructs a ToDoTask with the specified description.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"        super(description, TaskType.T);","lastModifiedDate":"2025-08-22T20:33:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    /**","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"     * Formats the task into a string representation suitable for storage.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"     * The format includes the task type, status (1 for done, 0 for not done), and description.","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"     *","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"     * @return a formatted string representing the task for storage","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"     */","lastModifiedDate":"2025-08-29T00:22:14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    @Override","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    public String format() {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"        int status;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"        if (this.isDone) {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"            status \u003d 1;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        } else {","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"            status \u003d 0;","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"        sb.append(type).append(\"|\").append(status)","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"                .append(\"|\").append(description);","lastModifiedDate":"2025-08-29T00:56:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"        return sb.toString();","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-26T15:58:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-22T20:17:37","isFullCredit":false}],"authorContributionMap":{"Meckss":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false}],"authorContributionMap":{"Meckss":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"            prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"hope.gui.MainWindow\"\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-09-17T15:21:34","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-09-17T14:27:58","isFullCredit":false}],"authorContributionMap":{"Meckss":20}},{"path":"src/test/java/commands/AddDeadlineTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package commands;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.commands.AddDeadlineTaskCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import hope.tasks.DeadlineTask;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import java.io.PrintStream;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"public class AddDeadlineTaskCommandTest {","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"    private AddDeadlineTaskCommand command;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    void setUp() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"        // Create mock objects for ToDoList and TaskStorage","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"        toDoList \u003d mock(ToDoList.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"        taskStorage \u003d mock(TaskStorage.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        command \u003d new AddDeadlineTaskCommand(toDoList, taskStorage);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"    void testExecute_EmptyInput_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"Thou hast overlooked the noble task of bestowing a worthy description upon this \"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"                + \"endeavor!(Looks like you forgot to input a description and a deadline! Try again)\\n\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).add(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).append(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"    void testExecute_InvalidInputNoDescription_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"/by tomorrow\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"Verily, thou hast erred in thy response; endeavor once more, brave soul!\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                + \"(Incorrect input, please try again)\\n\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).add(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).append(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"    void testExecute_InvalidInputNoDeadline_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"task description /by\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"Verily, thou hast erred in thy response; endeavor once more, brave soul!\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                + \"(Incorrect input, please try again)\\n\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).add(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).append(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"    void testExecute_ValidInput_AddsTaskAndReturnsSuccessMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"Complete homework /by tomorrow\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"        when(toDoList.size()).thenReturn(1); // Mock size to return 1 after adding task","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"        DeadlineTask mockTask \u003d mock(DeadlineTask.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"        when(mockTask.toString()).thenReturn(\"[D][ ] Complete homework (by: tomorrow)\");","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"        // Create a real DeadlineTask for testing","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"        try {","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"            DeadlineTask realTask \u003d new DeadlineTask(\"Complete homework\", \"tomorrow\");","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"            // If constructor doesn\u0027t throw, proceed with mocking","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"            when(toDoList.size()).thenReturn(1);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"            fail(\"DeadlineTask constructor threw an unexpected exception: \" + e.getMessage());","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"        }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"Behold, this quest hath been entrusted!\\n\\n\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"                + \"[D][ ] Complete homework (by: tomorrow)\\n\\n\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"                + \"Lo! Thou art now bestowed with 1 noble quests upon thy parchment of duties.\\n\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"                + \"(You now have 1 tasks in the list)\\n\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"        assertTrue(result.contains(\"Behold, this quest hath been entrusted!\"));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"        assertTrue(result.contains(\"(You now have 1 tasks in the list)\"));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, times(1)).add(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, times(1)).append(any(DeadlineTask.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false}],"authorContributionMap":{"Meckss":112}},{"path":"src/test/java/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"package commands;","lastModifiedDate":"2025-09-03T01:08:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"import hope.commands.DeleteCommand;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"import hope.storage.TaskStorage;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"import hope.storage.ToDoList;","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"import hope.tasks.Task;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Meckss"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Meckss"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Meckss"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Meckss"},"content":"    private ToDoList toDoList;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Meckss"},"content":"    private DeleteCommand command;","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Meckss"},"content":"    @BeforeEach","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Meckss"},"content":"    void setUp() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"        // Create mock objects for ToDoList and TaskStorage","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Meckss"},"content":"        toDoList \u003d mock(ToDoList.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Meckss"},"content":"        taskStorage \u003d mock(TaskStorage.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Meckss"},"content":"        command \u003d new DeleteCommand(toDoList, taskStorage);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Meckss"},"content":"    void testExecute_NonNumericInput_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"abc\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Meckss"},"content":"                        Pray, employ the noble digits as thy guiding input!","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Meckss"},"content":"                        (Please use numerics as input only)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).remove(anyInt());","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).update(any(ToDoList.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Meckss"},"content":"    void testExecute_InputExceedsListSize_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"5\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Meckss"},"content":"        when(toDoList.size()).thenReturn(3); // List has 3 tasks","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Meckss"},"content":"                        Thy request doth stray beyond the hallowed limits.","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Meckss"},"content":"                        (The number you have input is greater than the number of tasks you currently have)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).remove(anyInt());","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).update(any(ToDoList.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Meckss"},"content":"    void testExecute_ZeroOrNegativeInput_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"0\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Meckss"},"content":"                        Doth this be a jest, good sir?","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Meckss"},"content":"                        (0 and negative numbers are not accepted as input)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).remove(anyInt());","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).update(any(ToDoList.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Meckss"},"content":"    void testExecute_ValidInput_DeletesTaskAndReturnsSuccessMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"2\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Meckss"},"content":"        Task mockTask \u003d mock(Task.class);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Meckss"},"content":"        when(toDoList.size()).thenReturn(3).thenReturn(2); // Size before and after deletion","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Meckss"},"content":"        when(toDoList.get(1)).thenReturn(mockTask); // Index 1 (input \"2\" is 1-based)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Meckss"},"content":"        when(mockTask.toString()).thenReturn(\"[T][ ] Sample Task\");","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Meckss"},"content":"                        Heed this decree! This noble quest hath been cast aside.","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Meckss"},"content":"                        [T][ ] Sample Task","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Meckss"},"content":"                        Lo! Thou art now bestowed with 2 noble quests upon thy parchment of duties.","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Meckss"},"content":"                        (You now have 2 tasks in the to do list)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, times(1)).remove(1); // Verify remove called with index 1","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, times(1)).update(toDoList);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Meckss"},"content":"    @Test","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Meckss"},"content":"    void testExecute_NegativeInput_ReturnsErrorMessage() {","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Meckss"},"content":"        // Arrange","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Meckss"},"content":"        String input \u003d \"-1\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Meckss"},"content":"        // Act","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Meckss"},"content":"        String result \u003d command.execute(input);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Meckss"},"content":"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Meckss"},"content":"        // Assert","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Meckss"},"content":"        String expected \u003d \"\"\"","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Meckss"},"content":"                        Doth this be a jest, good sir?","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Meckss"},"content":"                        (0 and negative numbers are not accepted as input)","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Meckss"},"content":"                        \"\"\";","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Meckss"},"content":"        assertEquals(expected, result);","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Meckss"},"content":"        verify(toDoList, never()).remove(anyInt());","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Meckss"},"content":"        verify(taskStorage, never()).update(any(ToDoList.class));","lastModifiedDate":"2025-09-17T15:57:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Meckss"},"content":"    }","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Meckss"},"content":"}","lastModifiedDate":"2025-08-28T23:07:30","isFullCredit":false}],"authorContributionMap":{"Meckss":127}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Meckss"},"content":"todo dishes","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Meckss"},"content":"deadline homework /by today","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Meckss"},"content":"mark 2","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Meckss"},"content":"list","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Meckss"},"content":"event CCA /from monday 2pm /to monday 4pm","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Meckss"},"content":"mark 3","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Meckss"},"content":"unmark 2","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Meckss"},"content":"blah","lastModifiedDate":"2025-08-22T23:34:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Meckss"},"content":"todo","lastModifiedDate":"2025-08-22T23:34:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Meckss"},"content":"bye","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false}],"authorContributionMap":{"Meckss":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Meckss"},"content":"java -classpath ..\\bin hope \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-13T19:46:49","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"Meckss":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Meckss"},"content":"java -classpath ../bin Hope \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-22T21:31:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":37,"Meckss":1}}]
